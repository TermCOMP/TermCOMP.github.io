NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l3, (arg1 > 0) /\ (arg2 > 0) /\ ((arg1 + arg2) < 100), par{arg1 -> arg2, arg2 -> arg1}>
<l2, l3, true, par{arg1 -> 17, arg2 -> 13}>
<l1, l2, true, par{arg1 -> undef5, arg2 -> undef6}>

Fresh variables:
undef5, undef6, 

Undef variables:
undef5, undef6, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 17) /\ (arg2 = 13)>
<l3, l3, (arg1 > 0) /\ (arg2 > 0) /\ ((arg1 + arg2) < 100), par{arg1 -> arg2, arg2 -> arg1}>

Fresh variables:
undef5, undef6, 

Undef variables:
undef5, undef6, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 99, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, arg1 = 17 /\ arg2 = 13, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.06626

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000436s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001105s
Trying to remove transition: <l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 99, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005879s
Time used: 0.005788
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.028756s
Time used: 0.028488
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020619s
Time used: 4.0002
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006991s
Time used: 1.00018
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.294271s
Time used: 0.291406
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, arg1 = 17 /\ arg2 = 13, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, arg1 = 17 /\ arg2 = 13, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000915s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 99, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 100 <= arg1 + arg2 /\ 1 <= arg1 /\ 1 <= arg2, {all remain the same}>
<l3, end, arg2 <= 0 /\ 1 <= arg1, {all remain the same}>
<l3, end, arg1 <= 0 /\ 1 <= arg2, {all remain the same}>
<l3, end, arg1 <= 0 /\ arg2 <= 0 /\ arg1 + arg2 <= 99, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004127s
Time used: 0.004014
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.009092s
Time used: 0.009053

LOG: SAT solveNonLinear - Elapsed time: 0.013219s
Cost: 3; Total time: 0.013067
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 2
Strengthening exit transition (result): 
<l3, end, 100 <= arg1 + arg2 /\ 1 <= arg1 /\ 1 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, arg1 <= 0 /\ 1 <= arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 99, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 100 <= arg1 + arg2 /\ 1 <= arg1 /\ 1 <= arg2, {all remain the same}>
<l3, end, arg1 <= 0 /\ 1 <= arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002671s
Time used: 0.002571
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.004635s
Time used: 0.004607

LOG: SAT solveNonLinear - Elapsed time: 0.007306s
Cost: 1; Total time: 0.007178
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 1 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1
Strengthening exit transition (result): 
<l3, end, 100 <= arg1 + arg2 /\ 1 <= arg1 /\ 1 <= arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 99, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 100 <= arg1 + arg2 /\ 1 <= arg1 /\ 1 <= arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007793s
Time used: 0.007707

LOG: SAT solveNonLinear - Elapsed time: 0.007793s
Cost: 0; Total time: 0.007707
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + arg2 <= 30[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 30, {arg1 -> arg2, arg2 -> arg1, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 1 <= arg2, 1 <= arg1, arg1 + arg2 <= 30, 
OPEN EXITS: 
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ arg1 + arg2 <= 30, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, arg1 = 17 /\ arg2 = 13, {all remain the same}>
Conditions: 1 <= arg1, 1 <= arg2, arg1 + arg2 <= 30, 
OPEN EXITS: 
<l0, l3, arg1 + arg2 <= 30 /\ arg1 = 17 /\ arg2 = 13, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

