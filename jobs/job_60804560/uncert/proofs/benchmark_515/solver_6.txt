YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l8, true>
<l1, l2, (101 <= (0 + Index2^0)), par{Sorted5^0 -> 0, i8^0 -> 1}>
<l1, l9, ((0 + Index2^0) <= 100), par{Index2^0 -> (1 + Index2^0)}>
<l9, l1, true>
<l10, l11, true>
<l12, l10, true>
<l13, l14, true>
<l14, l2, ((0 + Sorted5^0) <= 0) /\ (0 <= (0 + Sorted5^0)), par{i8^0 -> (1 + i8^0)}>
<l14, l12, (1 <= (0 + Sorted5^0))>
<l14, l12, ((1 + Sorted5^0) <= 0)>
<l15, l16, true, par{Index7^0 -> (1 + Index7^0)}>
<l2, l3, true>
<l4, l15, (undef81 = undef81), par{Sorted5^0 -> 0, Temp6^0 -> undef81}>
<l4, l15, true>
<l5, l4, ((0 + Index7^0) <= (100 + (~(1) * i8^0)))>
<l5, l13, ((101 + (~(1) * i8^0)) <= (0 + Index7^0))>
<l6, l13, (100 <= (0 + Index7^0))>
<l6, l5, ((0 + Index7^0) <= 99)>
<l16, l6, true>
<l3, l10, (100 <= (0 + i8^0))>
<l3, l16, ((0 + i8^0) <= 99), par{Index7^0 -> 1, Sorted5^0 -> 1}>
<l7, l9, (undef146 = ~(1)), par{Index2^0 -> 1, fact3^0 -> (0 + undef146), factor^0 -> undef146}>
<l8, l7, true>

Fresh variables:
undef81, undef146, 

Undef variables:
undef81, undef146, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l9, (Index2^0 = 1) /\ (undef146 = ~(1))>
<l9, l16, (101 <= (0 + Index2^0)) /\ ((0 + 1) <= 99), par{Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> 1}>
<l9, l9, ((0 + Index2^0) <= 100), par{Index2^0 -> (1 + Index2^0)}>
<l16, l11, (100 <= (0 + Index7^0)) /\ ((0 + Sorted5^0) <= 0) /\ (0 <= (0 + Sorted5^0)) /\ (100 <= (0 + (1 + i8^0))), par{i8^0 -> (1 + i8^0)}>
<l16, l16, (100 <= (0 + Index7^0)) /\ ((0 + Sorted5^0) <= 0) /\ (0 <= (0 + Sorted5^0)) /\ ((0 + (1 + i8^0)) <= 99), par{Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> (1 + i8^0)}>
<l16, l11, (100 <= (0 + Index7^0)) /\ (1 <= (0 + Sorted5^0))>
<l16, l11, (100 <= (0 + Index7^0)) /\ ((1 + Sorted5^0) <= 0)>
<l16, l16, ((0 + Index7^0) <= 99) /\ ((0 + Index7^0) <= (100 + (~(1) * i8^0))) /\ (undef81 = undef81), par{Index7^0 -> (1 + Index7^0), Sorted5^0 -> 0}>
<l16, l16, ((0 + Index7^0) <= 99) /\ ((0 + Index7^0) <= (100 + (~(1) * i8^0))), par{Index7^0 -> (1 + Index7^0)}>
<l16, l11, ((0 + Index7^0) <= 99) /\ ((101 + (~(1) * i8^0)) <= (0 + Index7^0)) /\ ((0 + Sorted5^0) <= 0) /\ (0 <= (0 + Sorted5^0)) /\ (100 <= (0 + (1 + i8^0))), par{i8^0 -> (1 + i8^0)}>
<l16, l16, ((0 + Index7^0) <= 99) /\ ((101 + (~(1) * i8^0)) <= (0 + Index7^0)) /\ ((0 + Sorted5^0) <= 0) /\ (0 <= (0 + Sorted5^0)) /\ ((0 + (1 + i8^0)) <= 99), par{Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> (1 + i8^0)}>
<l16, l11, ((0 + Index7^0) <= 99) /\ ((101 + (~(1) * i8^0)) <= (0 + Index7^0)) /\ (1 <= (0 + Sorted5^0))>
<l16, l11, ((0 + Index7^0) <= 99) /\ ((101 + (~(1) * i8^0)) <= (0 + Index7^0)) /\ ((1 + Sorted5^0) <= 0)>

Fresh variables:
undef81, undef146, 

Undef variables:
undef81, undef146, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l9, l9, Index2^0 <= 100, {Index2^0 -> 1 + Index2^0, rest remain the same}>
Variables:
Index2^0

Graph 2:
Transitions:
<l16, l16, 100 <= Index7^0 /\ i8^0 <= 98 /\ Sorted5^0 = 0, {Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> 1 + i8^0, rest remain the same}>
<l16, l16, Index7^0 + i8^0 <= 100 /\ Index7^0 <= 99, {Index7^0 -> 1 + Index7^0, Sorted5^0 -> 0, rest remain the same}>
<l16, l16, Index7^0 + i8^0 <= 100 /\ Index7^0 <= 99, {Index7^0 -> 1 + Index7^0, rest remain the same}>
<l16, l16, 101 <= Index7^0 + i8^0 /\ i8^0 <= 98 /\ Index7^0 <= 99 /\ Sorted5^0 = 0, {Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> 1 + i8^0, rest remain the same}>
Variables:
Index7^0, Sorted5^0, i8^0

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l9, 1 + undef146 = 0 /\ Index2^0 = 1, {all remain the same}>

Graph 2
<l9, l16, 101 <= Index2^0, {Index7^0 -> 1, Sorted5^0 -> 1, i8^0 -> 1, rest remain the same}>

Graph 3
<l16, l11, 100 <= Index7^0 /\ 99 <= i8^0 /\ Sorted5^0 = 0, {i8^0 -> 1 + i8^0, rest remain the same}>
<l16, l11, 1 <= Sorted5^0 /\ 100 <= Index7^0, {all remain the same}>
<l16, l11, 1 + Sorted5^0 <= 0 /\ 100 <= Index7^0, {all remain the same}>
<l16, l11, 101 <= Index7^0 + i8^0 /\ 99 <= i8^0 /\ Index7^0 <= 99 /\ Sorted5^0 = 0, {i8^0 -> 1 + i8^0, rest remain the same}>
<l16, l11, 101 <= Index7^0 + i8^0 /\ 1 <= Sorted5^0 /\ Index7^0 <= 99, {all remain the same}>
<l16, l11, 101 <= Index7^0 + i8^0 /\ 1 + Sorted5^0 <= 0 /\ Index7^0 <= 99, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 9 , 1 )
( 11 , 3 )
( 16 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000759

Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000285s
[33mRanking function: [36m100 - Index2^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.450309

Checking conditional termination of SCC {l16}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007726s
[33mRanking function: [36m196 - 2*i8^0[0m
New Graphs: 
Transitions:
<l16, l16, Index7^0 + i8^0 <= 100 /\ Index7^0 <= 99, {Index7^0 -> 1 + Index7^0, Sorted5^0 -> 0, rest remain the same}>
<l16, l16, Index7^0 + i8^0 <= 100 /\ Index7^0 <= 99, {Index7^0 -> 1 + Index7^0, rest remain the same}>
Variables:
Index7^0, Sorted5^0, i8^0
Checking conditional termination of SCC {l16}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000573s
[33mRanking function: [36m99 - Index7^0[0m
New Graphs: 
Proving termination of subgraph 3
Analyzing SCC {l11}...
No cycles found.

[32mProgram Terminates[0m

