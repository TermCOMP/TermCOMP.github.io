YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l8, true>
<l1, l2, (((0 + (~(1) * x_5^0)) + y_6^0) <= 0) /\ (undef1 = undef1), par{Result_4^0 -> undef1}>
<l1, l3, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef6 = undef6) /\ ((0 + undef6) <= 0) /\ (0 <= (0 + undef6)), par{tmp_7^0 -> undef6, y_6^0 -> (~(1) + y_6^0)}>
<l3, l1, true>
<l1, l5, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14), par{tmp_7^0 -> undef14}>
<l5, l6, ((1 + tmp_7^0) <= 0)>
<l5, l6, (1 <= (0 + tmp_7^0))>
<l6, l4, true, par{x_5^0 -> (1 + x_5^0)}>
<l4, l1, true>
<l7, l1, true>
<l8, l7, true>

Fresh variables:
undef1, undef6, undef14, 

Undef variables:
undef1, undef6, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, true>
<l1, l2, (((0 + (~(1) * x_5^0)) + y_6^0) <= 0) /\ (undef1 = undef1)>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef6 = undef6) /\ ((0 + undef6) <= 0) /\ (0 <= (0 + undef6)), par{y_6^0 -> (~(1) + y_6^0)}>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14) /\ ((1 + undef14) <= 0), par{x_5^0 -> (1 + x_5^0)}>
<l1, l1, (0 <= ((~(1) + (~(1) * x_5^0)) + y_6^0)) /\ (undef14 = undef14) /\ (1 <= (0 + undef14)), par{x_5^0 -> (1 + x_5^0)}>

Fresh variables:
undef1, undef6, undef14, 

Undef variables:
undef1, undef6, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + x_5^0 <= y_6^0 /\ undef6 = 0, {y_6^0 -> -1 + y_6^0, rest remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 + undef14 <= 0, {x_5^0 -> 1 + x_5^0, rest remain the same}>
<l1, l1, 1 + x_5^0 <= y_6^0 /\ 1 <= undef14, {x_5^0 -> 1 + x_5^0, rest remain the same}>
Variables:
x_5^0, y_6^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, true, {all remain the same}>

Graph 2
<l1, l2, y_6^0 <= x_5^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 2 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002351

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000764s
[33mRanking function: [36m-1 - x_5^0 + y_6^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

