YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (undef1 <= arg1) /\ (arg2 > ~(1)) /\ (arg1 > 0) /\ (undef1 > 0), par{arg1 -> undef1, arg2 -> 0, arg3 -> (arg2 - 1), arg4 -> arg2}>
<l3, l3, (arg3 > arg2) /\ (arg2 < arg4) /\ (arg4 > ~(1)) /\ (undef5 <= arg1) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> (arg2 + 1), arg3 -> (arg4 - 1)}>
<l3, l4, (arg3 <= arg2) /\ (arg4 > ~(1)) /\ (arg1 >= undef9) /\ (arg1 > 0) /\ (undef9 > 0), par{arg1 -> undef9, arg2 -> 0, arg3 -> (arg4 - 1)}>
<l4, l5, (arg2 > ~(1)) /\ (arg3 > arg2) /\ (undef14 <= arg1) /\ (arg1 > 0) /\ (undef14 > 0), par{arg1 -> arg2, arg2 -> undef14, arg3 -> (arg2 + 1)}>
<l5, l4, (arg4 > ~(1)) /\ (arg4 <= arg3) /\ (undef17 <= arg2) /\ (arg2 > 0) /\ (undef17 > 0), par{arg1 -> undef17, arg2 -> (arg1 + 1), arg3 -> (arg4 - 1)}>
<l4, l6, (arg3 <= arg2) /\ (arg4 > ~(1)) /\ (undef21 <= arg1) /\ (arg1 > 0) /\ (undef21 > 0), par{arg1 -> undef21, arg2 -> 0, arg3 -> (arg4 - 1)}>
<l6, l6, (arg4 > ~(1)) /\ (arg3 > arg2) /\ (undef25 <= arg1) /\ (arg1 > 0) /\ (undef25 > 0), par{arg1 -> undef25, arg2 -> (arg2 + 1), arg3 -> (arg4 - 1)}>
<l5, l5, (arg4 > arg3) /\ (arg4 > arg1) /\ (undef33 >= undef34) /\ (undef30 <= arg2) /\ (arg2 > 0) /\ (undef30 > 0), par{arg2 -> undef30, arg3 -> (arg3 + 1)}>
<l5, l5, (arg4 > arg3) /\ (arg4 > arg1) /\ (undef39 < undef40) /\ (undef36 <= arg2) /\ (arg2 > 0) /\ (undef36 > 0), par{arg2 -> undef36, arg3 -> (arg3 + 1)}>
<l1, l2, true, par{arg1 -> undef41, arg2 -> undef42, arg3 -> undef43, arg4 -> undef44}>

Fresh variables:
undef1, undef5, undef9, undef14, undef17, undef21, undef25, undef30, undef33, undef34, undef36, undef39, undef40, undef41, undef42, undef43, undef44, 

Undef variables:
undef1, undef5, undef9, undef14, undef17, undef21, undef25, undef30, undef33, undef34, undef36, undef39, undef40, undef41, undef42, undef43, undef44, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef1) /\ (arg2 = 0) /\ (arg3 = (undef42 - 1)) /\ (arg4 = undef42) /\ (undef1 <= undef41) /\ (undef42 > ~(1)) /\ (undef41 > 0) /\ (undef1 > 0)>
<l3, l3, (arg3 > arg2) /\ (arg2 < arg4) /\ (arg4 > ~(1)) /\ (undef5 <= arg1) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> (arg2 + 1), arg3 -> (arg4 - 1)}>
<l3, l5, (arg3 <= arg2) /\ (arg4 > ~(1)) /\ (arg1 >= undef9) /\ (arg1 > 0) /\ (undef9 > 0) /\ (0 > ~(1)) /\ ((arg4 - 1) > 0) /\ (undef14 <= undef9) /\ (undef9 > 0) /\ (undef14 > 0), par{arg1 -> 0, arg2 -> undef14, arg3 -> (0 + 1)}>
<l3, l6, (arg3 <= arg2) /\ (arg4 > ~(1)) /\ (arg1 >= undef9) /\ (arg1 > 0) /\ (undef9 > 0) /\ ((arg4 - 1) <= 0) /\ (arg4 > ~(1)) /\ (undef21 <= undef9) /\ (undef9 > 0) /\ (undef21 > 0), par{arg1 -> undef21, arg2 -> 0, arg3 -> (arg4 - 1)}>
<l5, l5, (arg4 > ~(1)) /\ (arg4 <= arg3) /\ (undef17 <= arg2) /\ (arg2 > 0) /\ (undef17 > 0) /\ ((arg1 + 1) > ~(1)) /\ ((arg4 - 1) > (arg1 + 1)) /\ (undef14 <= undef17) /\ (undef17 > 0) /\ (undef14 > 0), par{arg1 -> (arg1 + 1), arg2 -> undef14, arg3 -> ((arg1 + 1) + 1)}>
<l5, l6, (arg4 > ~(1)) /\ (arg4 <= arg3) /\ (undef17 <= arg2) /\ (arg2 > 0) /\ (undef17 > 0) /\ ((arg4 - 1) <= (arg1 + 1)) /\ (arg4 > ~(1)) /\ (undef21 <= undef17) /\ (undef17 > 0) /\ (undef21 > 0), par{arg1 -> undef21, arg2 -> 0, arg3 -> (arg4 - 1)}>
<l5, l5, (arg4 > arg3) /\ (arg4 > arg1) /\ (undef33 >= undef34) /\ (undef30 <= arg2) /\ (arg2 > 0) /\ (undef30 > 0), par{arg2 -> undef30, arg3 -> (arg3 + 1)}>
<l5, l5, (arg4 > arg3) /\ (arg4 > arg1) /\ (undef39 < undef40) /\ (undef36 <= arg2) /\ (arg2 > 0) /\ (undef36 > 0), par{arg2 -> undef36, arg3 -> (arg3 + 1)}>
<l6, l6, (arg4 > ~(1)) /\ (arg3 > arg2) /\ (undef25 <= arg1) /\ (arg1 > 0) /\ (undef25 > 0), par{arg1 -> undef25, arg2 -> (arg2 + 1), arg3 -> (arg4 - 1)}>

Fresh variables:
undef1, undef5, undef9, undef14, undef17, undef21, undef25, undef30, undef33, undef34, undef36, undef39, undef40, undef41, undef42, undef43, undef44, 

Undef variables:
undef1, undef5, undef9, undef14, undef17, undef21, undef25, undef30, undef33, undef34, undef36, undef39, undef40, undef41, undef42, undef43, undef44, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 + arg2 <= arg4 /\ 1 <= undef5 /\ undef5 <= arg1 /\ 0 <= arg4, {arg1 -> undef5, arg2 -> 1 + arg2, arg3 -> -1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 2:
Transitions:
<l5, l5, 1 <= arg2 /\ 1 <= undef14 /\ 1 <= undef17 /\ 0 <= 1 + arg1 /\ undef17 <= arg2 /\ arg4 <= arg3 /\ 0 <= arg4 /\ undef14 <= undef17 /\ 3 + arg1 <= arg4, {arg1 -> 1 + arg1, arg2 -> undef14, arg3 -> 2 + arg1, rest remain the same}>
<l5, l5, 1 + arg1 <= arg4 /\ 1 <= arg2 /\ 1 + arg3 <= arg4 /\ 1 <= undef30 /\ undef30 <= arg2 /\ undef34 <= undef33, {arg2 -> undef30, arg3 -> 1 + arg3, rest remain the same}>
<l5, l5, 1 + arg1 <= arg4 /\ 1 <= arg2 /\ 1 + arg3 <= arg4 /\ 1 <= undef36 /\ 1 + undef39 <= undef40 /\ undef36 <= arg2, {arg2 -> undef36, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 3:
Transitions:
<l6, l6, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= undef25 /\ undef25 <= arg1 /\ 0 <= arg4, {arg1 -> undef25, arg2 -> 1 + arg2, arg3 -> -1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef1 /\ 1 <= undef41 /\ undef1 <= undef41 /\ 0 <= undef42 /\ 1 + arg3 = undef42 /\ arg1 = undef1 /\ arg2 = 0 /\ arg4 = undef42, {all remain the same}>

Graph 2
<l3, l5, 1 <= arg1 /\ 1 <= undef9 /\ 1 <= undef14 /\ undef9 <= arg1 /\ arg3 <= arg2 /\ undef14 <= undef9 /\ 2 <= arg4, {arg1 -> 0, arg2 -> undef14, arg3 -> 1, rest remain the same}>

Graph 3
<l3, l6, 1 <= arg1 /\ 1 <= undef9 /\ 1 <= undef21 /\ arg4 <= 1 /\ undef9 <= arg1 /\ arg3 <= arg2 /\ 0 <= arg4 /\ undef21 <= undef9, {arg1 -> undef21, arg2 -> 0, arg3 -> -1 + arg4, rest remain the same}>
<l5, l6, 1 <= arg2 /\ 1 <= undef17 /\ 1 <= undef21 /\ undef17 <= arg2 /\ arg4 <= arg3 /\ 0 <= arg4 /\ undef21 <= undef17 /\ arg4 <= 2 + arg1, {arg1 -> undef21, arg2 -> 0, arg3 -> -1 + arg4, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 5 , 2 )
( 6 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002203

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000673s
[33mRanking function: [36m-1 - arg2 + arg4[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.080064

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002289s
[33mRanking function: [36m(~(15) / 2) + (~(5) / 2)*arg1 + (5 / 2)*arg4[0m
New Graphs: 
Transitions:
<l5, l5, 1 + arg1 <= arg4 /\ 1 <= arg2 /\ 1 + arg3 <= arg4 /\ 1 <= undef30 /\ undef30 <= arg2 /\ undef34 <= undef33, {arg2 -> undef30, arg3 -> 1 + arg3, rest remain the same}>
<l5, l5, 1 + arg1 <= arg4 /\ 1 <= arg2 /\ 1 + arg3 <= arg4 /\ 1 <= undef36 /\ 1 + undef39 <= undef40 /\ undef36 <= arg2, {arg2 -> undef36, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001059s
[33mRanking function: [36m-1 - arg3 + arg4[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.002207

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000501s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001899s
Trying to remove transition: <l6, l6, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= undef25 /\ undef25 <= arg1 /\ 0 <= arg4, {arg1 -> undef25, arg2 -> 1 + arg2, arg3 -> -1 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006145s
Time used: 0.005997
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006056s
Time used: 0.005753

LOG: SAT solveNonLinear - Elapsed time: 0.006056s
Cost: 0; Total time: 0.005753
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l6: arg3 <= arg4[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= undef25 /\ undef25 <= arg1 /\ arg3 <= arg4 /\ 0 <= arg4, {arg1 -> undef25, arg2 -> 1 + arg2, arg3 -> -1 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= undef25 /\ undef25 <= arg1 /\ arg3 <= arg4 /\ 0 <= arg4, {arg1 -> undef25, arg2 -> 1 + arg2, arg3 -> -1 + arg4, rest remain the same}>
[33mRanking function: [36m-arg2 + arg4[0m
New Graphs: 
INVARIANTS: 
6: arg3 <= arg4 , 
Quasi-INVARIANTS to narrow Graph: 
6: 
[32mProgram Terminates[0m

