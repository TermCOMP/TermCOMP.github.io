YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l4, (undef8 > ~(1)) /\ (arg2 > 1) /\ (undef1 > ~(1)) /\ (undef9 > undef2) /\ (undef9 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5, arg6 -> undef6, arg7 -> undef7}>
<l3, l4, (undef17 > ~(1)) /\ (arg2 > 1) /\ (undef11 < 1) /\ (undef10 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef10, arg2 -> undef11, arg3 -> undef12, arg4 -> undef13, arg5 -> undef14, arg6 -> undef15, arg7 -> undef16}>
<l4, l5, (arg2 > 0), par{arg2 -> 0, arg3 -> arg2, arg4 -> arg2, arg5 -> 0, arg6 -> arg2, arg7 -> arg2}>
<l5, l6, (undef32 > 0) /\ (arg4 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef33 > arg6) /\ (arg6 < arg3) /\ (undef32 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef34 < arg4) /\ (arg7 < arg4) /\ ((arg1 - (2 * undef35)) = 0) /\ (undef32 > undef36) /\ (undef33 > 0) /\ (arg2 > 0) /\ (arg1 >= undef37) /\ (undef38 < arg5)>
<l6, l5, (undef46 > 0) /\ (arg4 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef47 > arg6) /\ (arg6 < arg3) /\ (undef46 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef42 < arg4) /\ (arg7 < arg4) /\ ((arg1 - (2 * undef48)) = 0) /\ (undef46 > undef45) /\ (undef47 > 0) /\ (arg2 > 0) /\ (undef43 < arg5) /\ (arg1 >= undef39) /\ ((arg1 - (2 * undef48)) >= 0) /\ ((arg1 - (2 * undef48)) < 2) /\ ((arg1 - (2 * undef39)) < 2) /\ ((arg1 - (2 * undef39)) >= 0), par{arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45}>
<l5, l6, (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef56 > arg6) /\ (arg6 < arg3) /\ (undef56 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef57)) = 0) /\ (undef58 < arg3) /\ (undef56 > undef59) /\ (undef56 > ~(1)) /\ (arg1 >= undef60) /\ (arg3 = arg4), par{arg4 -> arg3}>
<l6, l5, (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef68 > arg6) /\ (arg6 < arg3) /\ (undef68 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef69)) = 0) /\ (undef64 < arg3) /\ (undef68 > undef65) /\ (arg1 >= undef61) /\ (undef68 > ~(1)) /\ ((arg1 - (2 * undef69)) >= 0) /\ ((arg1 - (2 * undef69)) < 2) /\ ((arg1 - (2 * undef61)) < 2) /\ ((arg1 - (2 * undef61)) >= 0) /\ (arg3 = arg4), par{arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65}>
<l3, l2, (undef77 > ~(1)) /\ (arg2 > 1) /\ (undef78 > ~(1)) /\ (arg1 > 0), par{arg1 -> (undef78 - 1), arg2 -> undef71, arg3 -> undef72, arg4 -> undef73, arg5 -> undef74, arg6 -> undef75, arg7 -> undef76}>
<l2, l2, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef80, arg3 -> undef81, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84, arg7 -> undef85}>
<l1, l3, true, par{arg1 -> undef86, arg2 -> undef87, arg3 -> undef88, arg4 -> undef89, arg5 -> undef90, arg6 -> undef91, arg7 -> undef92}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef42, undef43, undef45, undef46, undef47, undef48, undef56, undef57, undef58, undef59, undef60, undef61, undef63, undef64, undef65, undef68, undef69, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef42, undef43, undef45, undef46, undef47, undef48, undef56, undef57, undef58, undef59, undef60, undef61, undef63, undef64, undef65, undef68, undef69, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (undef8 > ~(1)) /\ (undef87 > 1) /\ (undef1 > ~(1)) /\ (undef9 > undef2) /\ (undef9 > ~(1)) /\ (undef86 > 0) /\ (undef2 > 0), par{arg1 -> undef1, arg2 -> 0, arg3 -> undef2, arg4 -> undef2, arg5 -> 0, arg6 -> undef2, arg7 -> undef2}>
<l0, l2, (undef77 > ~(1)) /\ (undef87 > 1) /\ (undef78 > ~(1)) /\ (undef86 > 0), par{arg1 -> (undef78 - 1), arg2 -> undef71, arg3 -> undef72, arg4 -> undef73, arg5 -> undef74, arg6 -> undef75, arg7 -> undef76}>
<l2, l2, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef80, arg3 -> undef81, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84, arg7 -> undef85}>
<l5, l5, (undef32 > 0) /\ (arg4 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef33 > arg6) /\ (arg6 < arg3) /\ (undef32 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef34 < arg4) /\ (arg7 < arg4) /\ ((arg1 - (2 * undef35)) = 0) /\ (undef32 > undef36) /\ (undef33 > 0) /\ (arg2 > 0) /\ (arg1 >= undef37) /\ (undef38 < arg5) /\ (undef46 > 0) /\ (arg4 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef47 > arg6) /\ (arg6 < arg3) /\ (undef46 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef42 < arg4) /\ (arg7 < arg4) /\ ((arg1 - (2 * undef48)) = 0) /\ (undef46 > undef45) /\ (undef47 > 0) /\ (arg2 > 0) /\ (undef43 < arg5) /\ (arg1 >= undef39) /\ ((arg1 - (2 * undef48)) >= 0) /\ ((arg1 - (2 * undef48)) < 2) /\ ((arg1 - (2 * undef39)) < 2) /\ ((arg1 - (2 * undef39)) >= 0), par{arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45}>
<l5, l5, (undef32 > 0) /\ (arg4 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef33 > arg6) /\ (arg6 < arg3) /\ (undef32 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef34 < arg4) /\ (arg7 < arg4) /\ ((arg1 - (2 * undef35)) = 0) /\ (undef32 > undef36) /\ (undef33 > 0) /\ (arg2 > 0) /\ (arg1 >= undef37) /\ (undef38 < arg5) /\ (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef68 > arg6) /\ (arg6 < arg3) /\ (undef68 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef69)) = 0) /\ (undef64 < arg3) /\ (undef68 > undef65) /\ (arg1 >= undef61) /\ (undef68 > ~(1)) /\ ((arg1 - (2 * undef69)) >= 0) /\ ((arg1 - (2 * undef69)) < 2) /\ ((arg1 - (2 * undef61)) < 2) /\ ((arg1 - (2 * undef61)) >= 0) /\ (arg3 = arg4), par{arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65}>
<l5, l5, (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef56 > arg6) /\ (arg6 < arg3) /\ (undef56 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef57)) = 0) /\ (undef58 < arg3) /\ (undef56 > undef59) /\ (undef56 > ~(1)) /\ (arg1 >= undef60) /\ (arg3 = arg4) /\ (undef46 > 0) /\ (arg3 > 0) /\ (arg5 > 0) /\ (arg6 > ~(1)) /\ (arg6 < arg2) /\ (undef47 > arg6) /\ (arg6 < arg3) /\ (undef46 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (undef42 < arg3) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef48)) = 0) /\ (undef46 > undef45) /\ (undef47 > 0) /\ (arg2 > 0) /\ (undef43 < arg5) /\ (arg1 >= undef39) /\ ((arg1 - (2 * undef48)) >= 0) /\ ((arg1 - (2 * undef48)) < 2) /\ ((arg1 - (2 * undef39)) < 2) /\ ((arg1 - (2 * undef39)) >= 0), par{arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45}>
<l5, l5, (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef56 > arg6) /\ (arg6 < arg3) /\ (undef56 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef57)) = 0) /\ (undef58 < arg3) /\ (undef56 > undef59) /\ (undef56 > ~(1)) /\ (arg1 >= undef60) /\ (arg3 = arg4) /\ (arg6 > ~(1)) /\ (arg3 > 0) /\ (arg6 < arg2) /\ (undef68 > arg6) /\ (arg6 < arg3) /\ (undef68 > arg7) /\ (arg7 > ~(1)) /\ (arg7 < arg5) /\ (arg7 < arg3) /\ ((arg1 - (2 * undef69)) = 0) /\ (undef64 < arg3) /\ (undef68 > undef65) /\ (arg1 >= undef61) /\ (undef68 > ~(1)) /\ ((arg1 - (2 * undef69)) >= 0) /\ ((arg1 - (2 * undef69)) < 2) /\ ((arg1 - (2 * undef61)) < 2) /\ ((arg1 - (2 * undef61)) >= 0) /\ (arg3 = arg3), par{arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef42, undef43, undef45, undef46, undef47, undef48, undef56, undef57, undef58, undef59, undef60, undef61, undef63, undef64, undef65, undef68, undef69, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef32, undef33, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef42, undef43, undef45, undef46, undef47, undef48, undef56, undef57, undef58, undef59, undef60, undef61, undef63, undef64, undef65, undef68, undef69, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef80, arg3 -> undef81, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84, arg7 -> undef85, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6, arg7

Graph 2:
Transitions:
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 + arg6 <= arg3 /\ 1 <= arg4 /\ 1 + arg7 <= arg4 /\ 1 + undef34 <= arg4 /\ 1 + undef42 <= arg4 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef38 <= arg5 /\ 1 + undef43 <= arg5 /\ 1 + arg6 <= undef33 /\ 1 + arg6 <= undef47 /\ 1 + arg7 <= undef32 /\ 1 + arg7 <= undef46 /\ 1 <= undef32 /\ 1 + undef36 <= undef32 /\ 1 <= undef33 /\ 1 + undef45 <= undef46 /\ 1 <= undef46 /\ 1 <= undef47 /\ arg1 <= 1 + 2*undef39 /\ undef37 <= arg1 /\ undef39 <= arg1 /\ 2*undef39 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ arg1 = 2*undef35 /\ arg1 = 2*undef48, {arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef64 <= arg3 /\ 1 <= arg4 /\ 1 + arg7 <= arg4 /\ 1 + undef34 <= arg4 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef38 <= arg5 /\ 1 + arg6 <= undef33 /\ 1 + arg6 <= undef68 /\ 1 + arg7 <= undef32 /\ 1 + arg7 <= undef68 /\ 1 <= undef32 /\ 1 + undef36 <= undef32 /\ 1 <= undef33 /\ 1 + undef65 <= undef68 /\ arg1 <= 1 + 2*undef61 /\ undef37 <= arg1 /\ undef61 <= arg1 /\ 2*undef61 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef68 /\ arg1 = 2*undef35 /\ arg1 = 2*undef69 /\ arg3 = arg4, {arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65, rest remain the same}>
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 + undef58 <= arg3 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef43 <= arg5 /\ 1 + arg6 <= undef47 /\ 1 + arg6 <= undef56 /\ 1 + arg7 <= undef46 /\ 1 + arg7 <= undef56 /\ 1 + undef45 <= undef46 /\ 1 <= undef46 /\ 1 <= undef47 /\ 1 + undef59 <= undef56 /\ arg1 <= 1 + 2*undef39 /\ undef39 <= arg1 /\ 2*undef39 <= arg1 /\ undef60 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef56 /\ arg1 = 2*undef48 /\ arg1 = 2*undef57 /\ arg3 = arg4, {arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45, rest remain the same}>
<l5, l5, 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef58 <= arg3 /\ 1 + undef64 <= arg3 /\ 1 + arg7 <= arg5 /\ 1 + arg6 <= undef56 /\ 1 + arg6 <= undef68 /\ 1 + arg7 <= undef56 /\ 1 + arg7 <= undef68 /\ 1 + undef59 <= undef56 /\ 1 + undef65 <= undef68 /\ arg1 <= 1 + 2*undef61 /\ undef60 <= arg1 /\ undef61 <= arg1 /\ 2*undef61 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef56 /\ 0 <= undef68 /\ arg1 = 2*undef57 /\ arg1 = 2*undef69 /\ arg3 = arg4, {arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6, arg7

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef86 /\ 0 <= undef77 /\ 0 <= undef78 /\ 2 <= undef87, {arg1 -> -1 + undef78, arg2 -> undef71, arg3 -> undef72, arg4 -> undef73, arg5 -> undef74, arg6 -> undef75, arg7 -> undef76, rest remain the same}>

Graph 2
<l0, l5, 1 + undef2 <= undef9 /\ 1 <= undef2 /\ 1 <= undef86 /\ 0 <= undef1 /\ 0 <= undef8 /\ 0 <= undef9 /\ 2 <= undef87, {arg1 -> undef1, arg2 -> 0, arg3 -> undef2, arg4 -> undef2, arg5 -> 0, arg6 -> undef2, arg7 -> undef2, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 5 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001997

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000504s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.018252
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l5: arg5 <= 0[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef64 <= arg3 /\ 1 <= arg4 /\ 1 + arg7 <= arg4 /\ 1 + undef34 <= arg4 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef38 <= arg5 /\ 1 + arg6 <= undef33 /\ 1 + arg6 <= undef68 /\ 1 + arg7 <= undef32 /\ 1 + arg7 <= undef68 /\ 1 <= undef32 /\ 1 + undef36 <= undef32 /\ 1 <= undef33 /\ 1 + undef65 <= undef68 /\ arg1 <= 1 + 2*undef61 /\ undef37 <= arg1 /\ undef61 <= arg1 /\ 2*undef61 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef68 /\ arg1 = 2*undef35 /\ arg1 = 2*undef69 /\ arg3 = arg4, {arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65, rest remain the same}>
> It's unfeasible. Removing transition: 
<l5, l5, 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef58 <= arg3 /\ 1 + undef64 <= arg3 /\ 1 + arg7 <= arg5 /\ 1 + arg6 <= undef56 /\ 1 + arg6 <= undef68 /\ 1 + arg7 <= undef56 /\ 1 + arg7 <= undef68 /\ 1 + undef59 <= undef56 /\ 1 + undef65 <= undef68 /\ arg1 <= 1 + 2*undef61 /\ undef60 <= arg1 /\ undef61 <= arg1 /\ 2*undef61 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef56 /\ 0 <= undef68 /\ arg1 = 2*undef57 /\ arg1 = 2*undef69 /\ arg3 = arg4, {arg1 -> undef61, arg2 -> 1, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> 0, arg7 -> undef65, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 + arg6 <= arg3 /\ 1 <= arg4 /\ 1 + arg7 <= arg4 /\ 1 + undef34 <= arg4 /\ 1 + undef42 <= arg4 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef38 <= arg5 /\ 1 + undef43 <= arg5 /\ 1 + arg6 <= undef33 /\ 1 + arg6 <= undef47 /\ 1 + arg7 <= undef32 /\ 1 + arg7 <= undef46 /\ 1 <= undef32 /\ 1 + undef36 <= undef32 /\ 1 <= undef33 /\ 1 + undef45 <= undef46 /\ 1 <= undef46 /\ 1 <= undef47 /\ arg1 <= 1 + 2*undef39 /\ undef37 <= arg1 /\ undef39 <= arg1 /\ 2*undef39 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ arg1 = 2*undef35 /\ arg1 = 2*undef48, {arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l5, l5, 1 <= arg2 /\ 1 + arg6 <= arg2 /\ 1 <= arg3 /\ 1 + arg6 <= arg3 /\ 1 + arg7 <= arg3 /\ 1 + undef42 <= arg3 /\ 1 + undef58 <= arg3 /\ 1 <= arg5 /\ 1 + arg7 <= arg5 /\ 1 + undef43 <= arg5 /\ 1 + arg6 <= undef47 /\ 1 + arg6 <= undef56 /\ 1 + arg7 <= undef46 /\ 1 + arg7 <= undef56 /\ 1 + undef45 <= undef46 /\ 1 <= undef46 /\ 1 <= undef47 /\ 1 + undef59 <= undef56 /\ arg1 <= 1 + 2*undef39 /\ undef39 <= arg1 /\ 2*undef39 <= arg1 /\ undef60 <= arg1 /\ 0 <= arg6 /\ 0 <= arg7 /\ 0 <= undef56 /\ arg1 = 2*undef48 /\ arg1 = 2*undef57 /\ arg3 = arg4, {arg1 -> undef39, arg2 -> undef40, arg4 -> undef42, arg5 -> undef43, arg6 -> arg2, arg7 -> undef45, rest remain the same}>
Checking unfeasibility...
Time used: 2e-05

Analyzing SCC {l5}...
No cycles found.

[32mProgram Terminates[0m

