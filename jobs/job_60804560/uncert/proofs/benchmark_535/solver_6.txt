YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, (undef2 = (0 + x_5^0)) /\ (undef8 = (0 + undef2)) /\ (undef1 = undef1), par{Result_4^0 -> undef1, ___cil_tmp2_6^0 -> undef2, selected_11^0 -> (0 + undef8)}>
<l3, l4, (undef10 = (0 + x_5^0)) /\ (undef16 = (0 + undef10)) /\ (undef9 = undef9), par{Result_4^0 -> undef9, ___cil_tmp2_6^0 -> undef10, retryCount_10^0 -> (1 + retryCount_10^0), selected_11^0 -> (0 + undef16)}>
<l4, l6, ((1 + selected_11^0) <= 0)>
<l4, l6, (1 <= (0 + selected_11^0))>
<l6, l5, (undef33 = (0 + selected_11^0)), par{Result_4^0 -> (0 + undef33), ___cil_tmp6_12^0 -> undef33}>
<l4, l7, ((0 + selected_11^0) <= 0) /\ (0 <= (0 + selected_11^0)) /\ (((0 + maxRetries_9^0) + (~(1) * retryCount_10^0)) <= 0) /\ (undef40 = (0 + selected_11^0)), par{Result_4^0 -> (0 + undef40), ___cil_tmp6_12^0 -> undef40}>
<l4, l2, ((0 + selected_11^0) <= 0) /\ (0 <= (0 + selected_11^0)) /\ (0 <= ((~(1) + maxRetries_9^0) + (~(1) * retryCount_10^0))) /\ (undef46 = (0 + x_5^0)) /\ (undef52 = (0 + undef46)) /\ (undef45 = undef45), par{Result_4^0 -> undef45, ___cil_tmp2_6^0 -> undef46, selected_11^0 -> (0 + undef52)}>
<l2, l4, true, par{retryCount_10^0 -> (1 + retryCount_10^0)}>
<l8, l4, true, par{maxRetries_9^0 -> 400, retryCount_10^0 -> 0, selected_11^0 -> 0}>
<l9, l8, true>

Fresh variables:
undef1, undef2, undef8, undef9, undef10, undef16, undef33, undef40, undef45, undef46, undef52, 

Undef variables:
undef1, undef2, undef8, undef9, undef10, undef16, undef33, undef40, undef45, undef46, undef52, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (400 = 400) /\ (retryCount_10^0 = 0) /\ (selected_11^0 = 0)>
<l4, l5, ((1 + selected_11^0) <= 0) /\ (undef33 = (0 + selected_11^0))>
<l4, l5, (1 <= (0 + selected_11^0)) /\ (undef33 = (0 + selected_11^0))>
<l4, l7, ((0 + selected_11^0) <= 0) /\ (0 <= (0 + selected_11^0)) /\ (((0 + 400) + (~(1) * retryCount_10^0)) <= 0) /\ (undef40 = (0 + selected_11^0))>
<l4, l4, ((0 + selected_11^0) <= 0) /\ (0 <= (0 + selected_11^0)) /\ (0 <= ((~(1) + 400) + (~(1) * retryCount_10^0))) /\ (undef46 = (0 + x_5^0)) /\ (undef52 = (0 + undef46)) /\ (undef45 = undef45), par{retryCount_10^0 -> (1 + retryCount_10^0), selected_11^0 -> (0 + undef52)}>

Fresh variables:
undef1, undef2, undef8, undef9, undef10, undef16, undef33, undef40, undef45, undef46, undef52, 

Undef variables:
undef1, undef2, undef8, undef9, undef10, undef16, undef33, undef40, undef45, undef46, undef52, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, retryCount_10^0 <= 399 /\ selected_11^0 = 0 /\ x_5^0 = undef46 /\ undef46 = undef52, {retryCount_10^0 -> 1 + retryCount_10^0, selected_11^0 -> undef52, rest remain the same}>
Variables:
retryCount_10^0, selected_11^0, x_5^0

Graph 2:
Transitions:
Variables:

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, retryCount_10^0 = 0 /\ selected_11^0 = 0, {all remain the same}>

Graph 2
<l4, l7, 400 <= retryCount_10^0 /\ selected_11^0 = 0 /\ selected_11^0 = undef40, {all remain the same}>

Graph 3
<l4, l5, 1 + selected_11^0 <= 0 /\ selected_11^0 = undef33, {all remain the same}>
<l4, l5, 1 <= selected_11^0 /\ selected_11^0 = undef33, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 5 , 3 )
( 7 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.0012

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000441s
[33mRanking function: [36m399 - retryCount_10^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l7}...
No cycles found.

Proving termination of subgraph 3
Analyzing SCC {l5}...
No cycles found.

[32mProgram Terminates[0m

