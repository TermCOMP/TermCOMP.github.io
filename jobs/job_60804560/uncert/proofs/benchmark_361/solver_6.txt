NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2}>
<l3, l3, (arg1 < 2) /\ (arg1 < ~(5)) /\ (arg1 < 0), par{arg1 -> ((~(1) * arg1) + 1), arg2 -> undef4}>
<l3, l3, (arg1 < 2) /\ (arg1 < ~(5)) /\ (arg1 > 0), par{arg1 -> ((~(1) * arg1) + 1), arg2 -> undef6}>
<l3, l3, (arg1 < 6) /\ (arg1 > ~(6)) /\ (arg1 < 0), par{arg1 -> 0, arg2 -> undef8}>
<l3, l3, (arg1 < 6) /\ (arg1 > 0), par{arg1 -> 0, arg2 -> undef10}>
<l3, l3, (arg1 > 5), par{arg1 -> ((~(1) * arg1) - 1), arg2 -> undef12}>
<l1, l2, true, par{arg1 -> undef13, arg2 -> undef14}>

Fresh variables:
undef2, undef4, undef6, undef8, undef10, undef12, undef13, undef14, 

Undef variables:
undef2, undef4, undef6, undef8, undef10, undef12, undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef14) /\ (undef13 > 0) /\ (undef14 > ~(1))>
<l3, l3, (arg1 < 2) /\ (arg1 < ~(5)) /\ (arg1 < 0), par{arg1 -> ((~(1) * arg1) + 1)}>
<l3, l3, (arg1 < 6) /\ (arg1 > ~(6)) /\ (arg1 < 0), par{arg1 -> 0}>
<l3, l3, (arg1 < 6) /\ (arg1 > 0), par{arg1 -> 0}>
<l3, l3, (arg1 > 5), par{arg1 -> ((~(1) * arg1) - 1)}>

Fresh variables:
undef2, undef4, undef6, undef8, undef10, undef12, undef13, undef14, 

Undef variables:
undef2, undef4, undef6, undef8, undef10, undef12, undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
<l3, l3, 1 + arg1 <= 0 /\ 0 <= 5 + arg1, {arg1 -> 0, rest remain the same}>
<l3, l3, 1 <= arg1 /\ arg1 <= 5, {arg1 -> 0, rest remain the same}>
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003008

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000687s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.042253s
Trying to remove transition: <l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005346s
Time used: 0.005168
Trying to remove transition: <l3, l3, 1 <= arg1 /\ arg1 <= 5, {arg1 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004729s
Time used: 0.004366
Trying to remove transition: <l3, l3, 1 + arg1 <= 0 /\ 0 <= 5 + arg1, {arg1 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004223s
Time used: 0.003917
Trying to remove transition: <l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004233s
Time used: 0.003928
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010295s
Time used: 0.009967
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.037230s
Time used: 0.036383
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.244541s
Time used: 0.241708

LOG: SAT solveNonLinear - Elapsed time: 0.281771s
Cost: 1; Total time: 0.278091
[31mFailed at location 3: arg1 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 0[0m
[36mQuasi-invariant at l3: 0 <= 1 + arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024739s
Remaining time after improvement: 0.998398
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 0[0m
[36mQuasi-invariant at l3: 0 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg1 = 0, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 <= arg1 /\ arg1 <= 5, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg1 = 0, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 1 <= arg1 /\ arg1 <= 5, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
New Graphs: 
Transitions:
<l3, l3, 1 + arg1 = 0, {arg1 -> 0, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000285s
[33mRanking function: [36m-1 - arg1[0m
New Graphs: 
Calling Safety with literal arg1 <= 0 and entry <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>
* Postcondition  : arg1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000239s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000267s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 <= 0 , 0 <= 1 + arg1 , 
Narrowing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
It's unfeasible. Removing transition: 
<l3, l3, 1 + arg1 <= 0 /\ 0 <= 5 + arg1, {arg1 -> 0, rest remain the same}>
It's unfeasible. Removing transition: 
<l3, l3, 1 <= arg1 /\ arg1 <= 5, {arg1 -> 0, rest remain the same}>
Narrowing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000325s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004340s
Trying to remove transition: <l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002984s
Time used: 0.002897
Trying to remove transition: <l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002663s
Time used: 0.002538
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004810s
Time used: 0.00468
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010518s
Time used: 0.010143
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.041024s
Time used: 0.040857

LOG: SAT solveNonLinear - Elapsed time: 0.051543s
Cost: 1; Total time: 0.051
[31mFailed at location 3: arg1 <= 1[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 1[0m
[36mQuasi-invariant at l3: 0 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007421s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000873s
Remaining time after improvement: 0.998075
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 2[0m
[36mQuasi-invariant at l3: 1 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 2 and entry <l0, l3, 0 <= undef14 /\ 1 <= arg1 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 <= 2 - Process 2
* Exit transition: <l0, l3, 0 <= undef14 /\ 1 <= arg1 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>
* Postcondition  : arg1 <= 2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000282s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000319s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: 1 <= arg1 , arg1 <= 2 , 
Narrowing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000337s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004346s
Trying to remove transition: <l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002946s
Time used: 0.002866
Trying to remove transition: <l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002702s
Time used: 0.002583
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004281s
Time used: 0.004154
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.035457s
Time used: 0.034978
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.045894s
Time used: 0.045702

LOG: SAT solveNonLinear - Elapsed time: 0.081351s
Cost: 1; Total time: 0.08068
[31mFailed at location 3: arg1 <= 5[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 5[0m
[36mQuasi-invariant at l3: 0 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008060s
Remaining time after improvement: 0.999096
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 5[0m
[36mQuasi-invariant at l3: 0 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 5 and entry <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ 3 <= arg1 /\ arg1 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 <= 5 - Process 3
* Exit transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ 3 <= arg1 /\ arg1 = undef14, {all remain the same}>
* Postcondition  : arg1 <= 5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000357s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000390s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: 0 <= arg1 , arg1 <= 5 , 
Narrowing transition: 
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000353s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004416s
Trying to remove transition: <l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003015s
Time used: 0.002933
Trying to remove transition: <l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002736s
Time used: 0.002621
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004352s
Time used: 0.004233
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018065s
Time used: 4.00049
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015580s
Time used: 1.00039
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011321s
Time used: 0.004454

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 6 + arg1 <= 0, {arg1 -> 1 - arg1, rest remain the same}>
<l3, l3, 6 <= arg1, {arg1 -> -1 - arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002485s
Time used: 0.002427
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.023558s
Time used: 5.00099
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.032352s
Time used: 5.00091
> Checking if the negation of the conditions of every pending exit is quasi-invariant... YES
Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 6 <= arg1, 0 <= 5 + arg1, 
Transition: <l3, end, true, {all remain the same}>
Conditions: arg1 <= 5, 6 + arg1 <= 0, 
OPEN EXITS: 
<l3, end, 6 <= arg1, {all remain the same}>
<l3, end, 6 + arg1 <= 0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>
Conditions: 6 <= arg1, 
Transition: <l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14, {all remain the same}>
Conditions: 6 + arg1 <= 0, 
OPEN EXITS: 
<l0, l3, 0 <= undef14 /\ 1 <= undef13 /\ 6 <= arg1 /\ arg1 = undef14, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

