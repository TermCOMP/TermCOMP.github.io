NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, true, par{arg1 -> 3}>
<l3, l3, (arg1 > 5), par{arg1 -> (arg1 + 3)}>
<l3, l3, (arg1 < 11) /\ (arg1 < 6) /\ (arg1 > 2), par{arg1 -> (arg1 + 1)}>
<l1, l2, true, par{arg1 -> undef4}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 3)>
<l3, l3, (arg1 > 5), par{arg1 -> (arg1 + 3)}>
<l3, l3, (arg1 < 11) /\ (arg1 < 6) /\ (arg1 > 2), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
<l3, l3, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l3, arg1 = 3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.129434

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000721s
[33mRanking function: [36m6 - arg1[0m
New Graphs: 
Transitions:
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000171s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000554s
Trying to remove transition: <l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002146s
Time used: 0.002076
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.039528s
Time used: 4.01973
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017826s
Time used: 4.00061
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.014123s
Time used: 1.0004
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009048s
Time used: 0.004147
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004385s
Time used: 1.00051

LOG: SAT solveNonLinear - Elapsed time: 1.013434s
Cost: 1; Total time: 1.00466
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l3: 0 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l3, l3, 50001 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000209s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000598s
Trying to remove transition: <l3, l3, 50001 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002351s
Time used: 0.002285
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.016305s
Time used: 4.00093
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.019049s
Time used: 4.00074
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.016396s
Time used: 1.00068
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021944s
Time used: 4.00067
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, arg1 = 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, arg1 = 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.017408s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.017443s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
<l3, l3, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg1 <= 2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004635s
Time used: 0.004566

LOG: SAT solveNonLinear - Elapsed time: 0.004635s
Cost: 0; Total time: 0.004566
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 3 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l3, end, 3 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, arg1 = 3, {all remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l0, l3, arg1 = 3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

