YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> (arg2 - 1), arg3 -> 0, arg4 -> undef4}>
<l2, l2, (arg2 > 0) /\ (undef7 > arg3) /\ (arg3 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef7, arg4 -> undef8}>
<l2, l2, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> 1, arg4 -> undef12}>
<l2, l4, (arg2 < 1) /\ (arg3 > 0), par{arg1 -> 0, arg2 -> arg3, arg4 -> 0}>
<l4, l4, (arg1 > 0) /\ (arg4 > 0) /\ (arg3 > 0) /\ (undef17 > arg1) /\ (arg2 > arg1) /\ (undef19 < arg3) /\ (undef20 < arg4) /\ (undef21 > arg1), par{arg1 -> undef17, arg3 -> undef19, arg4 -> undef20}>
<l4, l4, (undef24 < arg2) /\ (arg2 > 0) /\ (undef26 > undef25) /\ (undef26 > ~(1)) /\ (arg2 = arg3), par{arg1 -> 1, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25}>
<l1, l3, true, par{arg1 -> undef27, arg2 -> undef28, arg3 -> undef29, arg4 -> undef30}>

Fresh variables:
undef4, undef7, undef8, undef12, undef17, undef19, undef20, undef21, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, 

Undef variables:
undef4, undef7, undef8, undef12, undef17, undef19, undef20, undef21, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = (undef28 - 1)) /\ (arg2 = undef28) /\ (arg3 = 0) /\ (arg4 = undef4) /\ (undef27 > 0) /\ (undef28 > ~(1))>
<l2, l2, (arg2 > 0) /\ (undef7 > arg3) /\ (arg3 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef7, arg4 -> undef8}>
<l2, l2, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> 1, arg4 -> undef12}>
<l2, l4, (arg2 < 1) /\ (arg3 > 0), par{arg1 -> 0, arg2 -> arg3, arg4 -> 0}>
<l4, l4, (arg1 > 0) /\ (arg4 > 0) /\ (arg3 > 0) /\ (undef17 > arg1) /\ (arg2 > arg1) /\ (undef19 < arg3) /\ (undef20 < arg4) /\ (undef21 > arg1), par{arg1 -> undef17, arg3 -> undef19, arg4 -> undef20}>
<l4, l4, (undef24 < arg2) /\ (arg2 > 0) /\ (undef26 > undef25) /\ (undef26 > ~(1)) /\ (arg2 = arg3), par{arg1 -> 1, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25}>

Fresh variables:
undef4, undef7, undef8, undef12, undef17, undef19, undef20, undef21, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, 

Undef variables:
undef4, undef7, undef8, undef12, undef17, undef19, undef20, undef21, undef23, undef24, undef25, undef26, undef27, undef28, undef29, undef30, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg2 /\ 1 + arg3 <= undef7 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef7, arg4 -> undef8, rest remain the same}>
<l2, l2, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, arg4 -> undef12, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 2:
Transitions:
<l4, l4, 1 + arg1 <= arg2 /\ 1 + arg1 <= undef17 /\ 1 + arg1 <= undef21 /\ 1 <= arg1 /\ 1 <= arg3 /\ 1 + undef19 <= arg3 /\ 1 <= arg4 /\ 1 + undef20 <= arg4, {arg1 -> undef17, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
<l4, l4, 0 <= undef26 /\ 1 <= arg2 /\ 1 + undef24 <= arg2 /\ 1 + undef25 <= undef26 /\ arg2 = arg3, {arg1 -> 1, arg2 -> undef23, arg3 -> undef24, arg4 -> undef25, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef28 /\ 1 <= undef27 /\ arg2 = undef28 /\ arg3 = 0 /\ arg4 = undef4 /\ 1 + arg1 = undef28, {all remain the same}>

Graph 2
<l2, l4, arg2 <= 0 /\ 1 <= arg3, {arg1 -> 0, arg2 -> arg3, arg4 -> 0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003746

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000620s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002349s
Trying to remove transition: <l2, l2, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, arg4 -> undef12, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007096s
Time used: 0.006976
Trying to remove transition: <l2, l2, 1 <= arg2 /\ 1 + arg3 <= undef7 /\ 1 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef7, arg4 -> undef8, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007881s
Time used: 0.007331
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.015073s
Time used: 0.014582

LOG: SAT solveNonLinear - Elapsed time: 0.015073s
Cost: 0; Total time: 0.014582
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg2 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg2 /\ 1 + arg3 <= undef7 /\ 1 <= arg3 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, arg4 -> undef12, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg2 /\ 1 + arg3 <= undef7 /\ 1 <= arg3 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> 1, arg4 -> undef12, rest remain the same}>
[33mRanking function: [36marg1[0m
New Graphs: 
INVARIANTS: 
2: arg2 <= 1 + arg1 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.003787

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001284s
[33mRanking function: [36m-1 + arg3[0m
New Graphs: 
[32mProgram Terminates[0m

