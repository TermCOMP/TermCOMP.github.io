YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, (undef5 = 0) /\ (0 <= (0 + undef5)) /\ ((0 + undef5) <= 0) /\ (0 <= (0 + undef5)) /\ ((0 + undef5) <= 0) /\ ((1 + undef5) <= 10) /\ (undef6 = (1 + undef5)) /\ (1 <= (0 + undef6)) /\ ((0 + undef6) <= 1) /\ (1 <= (0 + undef6)) /\ ((0 + undef6) <= 1) /\ ((1 + undef6) <= 10) /\ (undef1 = (1 + undef6)) /\ (2 <= (0 + undef1)) /\ ((0 + undef1) <= 2), par{i!14^0 -> undef1}>
<l2, l3, (10 <= (0 + i!14^0)), par{result!12^0 -> (0 + temp0!15^0)}>
<l2, l4, ((1 + i!14^0) <= 10) /\ (undef11 = (1 + i!14^0)) /\ ((0 + undef11) <= (1 + i!22^0)) /\ ((1 + i!22^0) <= (0 + undef11)) /\ ((1 + i!22^0) <= 10), par{i!14^0 -> undef11}>
<l4, l2, true>
<l5, l1, true>

Fresh variables:
undef1, undef5, undef6, undef11, 

Undef variables:
undef1, undef5, undef6, undef11, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (i!14^0 = undef1) /\ (undef5 = 0) /\ (0 <= (0 + undef5)) /\ ((0 + undef5) <= 0) /\ (0 <= (0 + undef5)) /\ ((0 + undef5) <= 0) /\ ((1 + undef5) <= 10) /\ (undef6 = (1 + undef5)) /\ (1 <= (0 + undef6)) /\ ((0 + undef6) <= 1) /\ (1 <= (0 + undef6)) /\ ((0 + undef6) <= 1) /\ ((1 + undef6) <= 10) /\ (undef1 = (1 + undef6)) /\ (2 <= (0 + undef1)) /\ ((0 + undef1) <= 2)>
<l2, l3, (10 <= (0 + i!14^0))>
<l2, l2, ((1 + i!14^0) <= 10) /\ (undef11 = (1 + i!14^0)) /\ ((0 + undef11) <= (1 + i!22^0)) /\ ((1 + i!22^0) <= (0 + undef11)) /\ ((1 + i!22^0) <= 10), par{i!14^0 -> undef11}>

Fresh variables:
undef1, undef5, undef6, undef11, 

Undef variables:
undef1, undef5, undef6, undef11, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, i!14^0 <= 9 /\ i!22^0 <= 9 /\ 1 + i!14^0 = undef11 /\ 1 + i!22^0 = undef11, {i!14^0 -> undef11, rest remain the same}>
Variables:
i!14^0, i!22^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, i!14^0 = undef1 /\ undef5 = 0 /\ 1 + undef5 = undef6 /\ undef1 = 1 + undef6 /\ undef6 = 1 /\ undef1 = 2, {all remain the same}>

Graph 2
<l2, l3, 10 <= i!14^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 3 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002113

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000443s
[33mRanking function: [36m-i!14^0 + i!22^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l3}...
No cycles found.

[32mProgram Terminates[0m

