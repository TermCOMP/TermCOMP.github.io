NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, true, par{arg1 -> 1, arg2 -> 2, arg3 -> 3}>
<l3, l3, (arg3 < 5), par{arg1 -> (((arg1 - arg2) + arg2) - (arg1 - arg2)), arg2 -> ((arg1 - arg2) + arg2), arg3 -> ((((arg1 - arg2) + arg2) - (arg1 - arg2)) + ((arg1 - arg2) + arg2))}>
<l1, l2, true, par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>

Fresh variables:
undef7, undef8, undef9, 

Undef variables:
undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 1) /\ (arg2 = 2) /\ (arg3 = 3)>
<l3, l3, (arg3 < 5), par{arg1 -> (((arg1 - arg2) + arg2) - (arg1 - arg2)), arg2 -> ((arg1 - arg2) + arg2), arg3 -> ((((arg1 - arg2) + arg2) - (arg1 - arg2)) + ((arg1 - arg2) + arg2))}>

Fresh variables:
undef7, undef8, undef9, 

Undef variables:
undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l3, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003638

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000333s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000823s
Trying to remove transition: <l3, l3, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.002894s
Time used: 0.002819
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.040113s
Time used: 0.039679
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.942896s
Time used: 1.93003
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.007090s
Time used: 1.00019
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.037474s
Time used: 0.034468
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000623s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000658s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 5 <= arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003695s
Time used: 0.003622
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020425s
Time used: 0.020038
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.024553s
Time used: 0.02444

LOG: SAT solveNonLinear - Elapsed time: 0.044979s
Cost: 0; Total time: 0.044478
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + arg2 <= 3[0m
[36mQuasi-invariant at l3: arg3 <= 3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 + arg2 <= 3 /\ arg3 <= 3, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: arg1 + arg2 <= 3, arg3 <= 3, 
OPEN EXITS: 
<l3, end, arg1 + arg2 <= 3 /\ arg3 <= 3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>
Conditions: arg1 + arg2 <= 3, arg3 <= 3, 
OPEN EXITS: 
<l0, l3, arg1 + arg2 <= 3 /\ arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

