YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l11, true>
<l1, l2, (100 <= (0 + i^0)), par{j^0 -> (~(2) + i^0)}>
<l1, l12, ((1 + i^0) <= 100), par{i^0 -> (1 + i^0)}>
<l13, l14, true>
<l12, l1, true>
<l15, l16, true>
<l17, l15, true, par{j10^0 -> (1 + j10^0)}>
<l18, l17, true>
<l18, l15, true>
<l18, l17, true>
<l19, l13, (undef68 = (0 + j10^0)), par{j^0 -> (0 + undef68), ret_check12^0 -> undef68}>
<l19, l18, true>
<l3, l4, true>
<l5, l16, true, par{j10^0 -> (0 + j^0)}>
<l6, l5, true>
<l6, l13, true>
<l6, l5, true>
<l7, l3, true>
<l8, l7, true, par{j6^0 -> (1 + j6^0)}>
<l16, l19, true>
<l9, l8, true>
<l9, l7, true>
<l9, l8, true>
<l4, l6, (undef160 = (0 + j6^0)) /\ (undef161 = undef161), par{j^0 -> (0 + undef160), ret_check8^0 -> undef160, tmp^0 -> undef161}>
<l4, l9, true>
<l2, l3, ((1 + i^0) <= 0), par{j6^0 -> (0 + j^0)}>
<l2, l14, (0 <= (0 + i^0))>
<l10, l12, true, par{i^0 -> 0}>
<l11, l10, true>

Fresh variables:
undef68, undef160, undef161, 

Undef variables:
undef68, undef160, undef161, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l12, (i^0 = 0)>
<l12, l14, (100 <= (0 + i^0)) /\ (0 <= (0 + i^0))>
<l12, l12, ((1 + i^0) <= 100), par{i^0 -> (1 + i^0)}>

Fresh variables:
undef68, undef160, undef161, 

Undef variables:
undef68, undef160, undef161, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l12, l12, i^0 <= 99, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l12, i^0 = 0, {all remain the same}>

Graph 2
<l12, l14, 100 <= i^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 12 , 1 )
( 14 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000677

Checking conditional termination of SCC {l12}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000288s
[33mRanking function: [36m99 - i^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l14}...
No cycles found.

[32mProgram Terminates[0m

