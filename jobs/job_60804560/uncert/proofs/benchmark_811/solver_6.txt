YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l2, ((0 + x^0) <= 0), par{x^0 -> 1}>
<l1, l2, (1 <= (0 + x^0)), par{x^0 -> (1 + x^0)}>
<l3, l4, (4 <= (0 + x^0))>
<l3, l1, ((1 + x^0) <= 4)>
<l2, l3, true>
<l5, l2, (undef7 = 5) /\ (undef6 = undef6), par{x^0 -> undef6}>
<l6, l5, true>

Fresh variables:
undef6, undef7, 

Undef variables:
undef6, undef7, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (x^0 = undef6) /\ (undef7 = 5) /\ (undef6 = undef6)>
<l2, l4, (4 <= (0 + x^0))>
<l2, l2, ((1 + x^0) <= 4) /\ ((0 + x^0) <= 0), par{x^0 -> 1}>
<l2, l2, ((1 + x^0) <= 4) /\ (1 <= (0 + x^0)), par{x^0 -> (1 + x^0)}>

Fresh variables:
undef6, undef7, 

Undef variables:
undef6, undef7, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, x^0 <= 0, {x^0 -> 1, rest remain the same}>
<l2, l2, 1 <= x^0 /\ x^0 <= 3, {x^0 -> 1 + x^0, rest remain the same}>
Variables:
x^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, x^0 = undef6 /\ undef7 = 5, {all remain the same}>

Graph 2
<l2, l4, 4 <= x^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001283

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000433s
[33mRanking function: [36m-4*x^0[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= x^0 /\ x^0 <= 3, {x^0 -> 1 + x^0, rest remain the same}>
Variables:
x^0
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000248s
[33mRanking function: [36m3 - x^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

