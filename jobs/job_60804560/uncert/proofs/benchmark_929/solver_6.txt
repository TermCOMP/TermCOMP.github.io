YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l19, true>
<l1, l2, (undef1 = (0 + x0^0)) /\ (undef8 = (0 + x1^0)) /\ (undef9 = (0 + x2^0)) /\ (undef15 = undef15) /\ (undef16 = undef16) /\ (undef2 = undef2) /\ (undef3 = undef3) /\ (undef4 = undef4), par{oldX0^0 -> undef1, oldX10^0 -> undef2, oldX11^0 -> undef3, oldX12^0 -> undef4, oldX1^0 -> undef8, oldX2^0 -> undef9, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef15, oldX9^0 -> undef16, x0^0 -> (0 + undef1), x1^0 -> (0 + undef8), x2^0 -> (1 + undef9), x3^0 -> (0 + undef15), x4^0 -> (0 + undef16), x5^0 -> (0 + undef2), x6^0 -> (0 + undef3), x7^0 -> (0 + undef4)}>
<l13, l20, (undef25 = (0 + x0^0)) /\ (undef32 = (0 + x1^0)) /\ (undef39 = undef39) /\ (undef40 = undef40) /\ (undef26 = undef26) /\ (undef27 = undef27) /\ (undef28 = undef28) /\ (undef29 = undef29), par{oldX0^0 -> undef25, oldX10^0 -> undef26, oldX11^0 -> undef27, oldX12^0 -> undef28, oldX13^0 -> undef29, oldX1^0 -> undef32, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef39, oldX9^0 -> undef40, x0^0 -> (0 + undef25), x1^0 -> (1 + undef32), x2^0 -> (0 + undef39), x3^0 -> (0 + undef40), x4^0 -> (0 + undef26), x5^0 -> (0 + undef27), x6^0 -> (0 + undef28), x7^0 -> (0 + undef29)}>
<l21, l22, (undef49 = (0 + x0^0)) /\ (undef56 = (0 + x1^0)) /\ (undef57 = (0 + x2^0)) /\ (undef63 = undef63) /\ (undef64 = undef64) /\ (undef50 = undef50) /\ (undef51 = undef51) /\ (undef52 = undef52), par{oldX0^0 -> undef49, oldX10^0 -> undef50, oldX11^0 -> undef51, oldX12^0 -> undef52, oldX1^0 -> undef56, oldX2^0 -> undef57, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef63, oldX9^0 -> undef64, x0^0 -> (0 + undef49), x1^0 -> (0 + undef56), x2^0 -> (1 + undef57), x3^0 -> (0 + undef63), x4^0 -> (0 + undef64), x5^0 -> (0 + undef50), x6^0 -> (0 + undef51), x7^0 -> (0 + undef52)}>
<l22, l13, (undef73 = (0 + x0^0)) /\ (undef80 = (0 + x1^0)) /\ (undef81 = (0 + x2^0)) /\ (undef87 = undef87) /\ (undef88 = undef88) /\ (undef74 = undef74) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ ((2 + undef73) <= (0 + undef81)), par{oldX0^0 -> undef73, oldX10^0 -> undef74, oldX11^0 -> undef75, oldX12^0 -> undef76, oldX1^0 -> undef80, oldX2^0 -> undef81, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef87, oldX9^0 -> undef88, x0^0 -> (0 + undef73), x1^0 -> (0 + undef80), x2^0 -> (0 + undef81), x3^0 -> (0 + undef87), x4^0 -> (0 + undef88), x5^0 -> (0 + undef74), x6^0 -> (0 + undef75), x7^0 -> (0 + undef76)}>
<l22, l21, (undef97 = (0 + x0^0)) /\ (undef104 = (0 + x1^0)) /\ (undef105 = (0 + x2^0)) /\ (undef111 = undef111) /\ (undef112 = undef112) /\ (undef98 = undef98) /\ (undef99 = undef99) /\ (undef100 = undef100) /\ ((0 + undef105) <= (1 + undef97)), par{oldX0^0 -> undef97, oldX10^0 -> undef98, oldX11^0 -> undef99, oldX12^0 -> undef100, oldX1^0 -> undef104, oldX2^0 -> undef105, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef111, oldX9^0 -> undef112, x0^0 -> (0 + undef97), x1^0 -> (0 + undef104), x2^0 -> (0 + undef105), x3^0 -> (0 + undef111), x4^0 -> (0 + undef112), x5^0 -> (0 + undef98), x6^0 -> (0 + undef99), x7^0 -> (0 + undef100)}>
<l2, l23, (undef121 = (0 + x0^0)) /\ (undef128 = (0 + x1^0)) /\ (undef129 = (0 + x2^0)) /\ (undef135 = undef135) /\ (undef136 = undef136) /\ (undef122 = undef122) /\ (undef123 = undef123) /\ ((1 + undef121) <= (0 + undef129)), par{oldX0^0 -> undef121, oldX10^0 -> undef122, oldX11^0 -> undef123, oldX1^0 -> undef128, oldX2^0 -> undef129, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef135, oldX9^0 -> undef136, x0^0 -> (0 + undef121), x1^0 -> (0 + undef128), x2^0 -> (0 + undef129), x3^0 -> 1, x4^0 -> (0 + undef135), x5^0 -> (0 + undef136), x6^0 -> (0 + undef122), x7^0 -> (0 + undef123)}>
<l2, l1, (undef145 = (0 + x0^0)) /\ (undef152 = (0 + x1^0)) /\ (undef153 = (0 + x2^0)) /\ (undef159 = undef159) /\ (undef160 = undef160) /\ (undef146 = undef146) /\ (undef147 = undef147) /\ (undef148 = undef148) /\ ((0 + undef153) <= (0 + undef145)), par{oldX0^0 -> undef145, oldX10^0 -> undef146, oldX11^0 -> undef147, oldX12^0 -> undef148, oldX1^0 -> undef152, oldX2^0 -> undef153, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef159, oldX9^0 -> undef160, x0^0 -> (0 + undef145), x1^0 -> (0 + undef152), x2^0 -> (0 + undef153), x3^0 -> (0 + undef159), x4^0 -> (0 + undef160), x5^0 -> (0 + undef146), x6^0 -> (0 + undef147), x7^0 -> (0 + undef148)}>
<l24, l22, (undef169 = (0 + x0^0)) /\ (undef176 = (0 + x1^0)) /\ (undef183 = undef183) /\ (undef184 = undef184) /\ (undef170 = undef170) /\ (undef171 = undef171) /\ (undef172 = undef172), par{oldX0^0 -> undef169, oldX10^0 -> undef170, oldX11^0 -> undef171, oldX12^0 -> undef172, oldX1^0 -> undef176, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef183, oldX9^0 -> undef184, x0^0 -> (0 + undef169), x1^0 -> (0 + undef176), x2^0 -> (1 + undef176), x3^0 -> (0 + undef183), x4^0 -> (0 + undef184), x5^0 -> (0 + undef170), x6^0 -> (0 + undef171), x7^0 -> (0 + undef172)}>
<l20, l2, (undef193 = (0 + x0^0)) /\ (undef200 = (0 + x1^0)) /\ (undef207 = undef207) /\ (undef208 = undef208) /\ (undef194 = undef194) /\ (undef195 = undef195) /\ (undef196 = undef196) /\ ((1 + undef193) <= (0 + undef200)), par{oldX0^0 -> undef193, oldX10^0 -> undef194, oldX11^0 -> undef195, oldX12^0 -> undef196, oldX1^0 -> undef200, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef207, oldX9^0 -> undef208, x0^0 -> (0 + undef193), x1^0 -> (0 + undef200), x2^0 -> 1, x3^0 -> (0 + undef207), x4^0 -> (0 + undef208), x5^0 -> (0 + undef194), x6^0 -> (0 + undef195), x7^0 -> (0 + undef196)}>
<l20, l24, (undef217 = (0 + x0^0)) /\ (undef224 = (0 + x1^0)) /\ (undef231 = undef231) /\ (undef232 = undef232) /\ (undef218 = undef218) /\ (undef219 = undef219) /\ (undef220 = undef220) /\ (undef221 = undef221) /\ ((0 + undef224) <= (0 + undef217)), par{oldX0^0 -> undef217, oldX10^0 -> undef218, oldX11^0 -> undef219, oldX12^0 -> undef220, oldX13^0 -> undef221, oldX1^0 -> undef224, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef231, oldX9^0 -> undef232, x0^0 -> (0 + undef217), x1^0 -> (0 + undef224), x2^0 -> (0 + undef231), x3^0 -> (0 + undef232), x4^0 -> (0 + undef218), x5^0 -> (0 + undef219), x6^0 -> (0 + undef220), x7^0 -> (0 + undef221)}>
<l25, l26, (undef241 = (0 + x0^0)) /\ (undef248 = (0 + x1^0)) /\ (undef249 = (0 + x2^0)) /\ (undef250 = (0 + x3^0)) /\ (undef251 = (0 + x4^0)) /\ (undef252 = (0 + x5^0)) /\ (undef255 = undef255) /\ (undef256 = undef256), par{oldX0^0 -> undef241, oldX1^0 -> undef248, oldX2^0 -> undef249, oldX3^0 -> undef250, oldX4^0 -> undef251, oldX5^0 -> undef252, oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef255, oldX9^0 -> undef256, x0^0 -> (0 + undef241), x1^0 -> (0 + undef248), x2^0 -> (0 + undef249), x3^0 -> (0 + undef250), x4^0 -> (0 + undef251), x5^0 -> (1 + undef252), x6^0 -> (0 + undef255), x7^0 -> (0 + undef256)}>
<l3, l4, (undef265 = (0 + x0^0)) /\ (undef272 = (0 + x1^0)) /\ (undef273 = (0 + x2^0)) /\ (undef274 = (0 + x3^0)) /\ (undef275 = (0 + x4^0)) /\ (undef276 = (0 + x5^0)) /\ (undef277 = (0 + x6^0)) /\ (undef278 = (0 + x7^0)), par{oldX0^0 -> undef265, oldX1^0 -> undef272, oldX2^0 -> undef273, oldX3^0 -> undef274, oldX4^0 -> undef275, oldX5^0 -> undef276, oldX6^0 -> undef277, oldX7^0 -> undef278, x0^0 -> (0 + undef265), x1^0 -> (0 + undef272), x2^0 -> (0 + undef273), x3^0 -> (0 + undef274), x4^0 -> (0 + undef275), x5^0 -> (0 + undef276), x6^0 -> (0 + undef277), x7^0 -> (1 + undef278)}>
<l4, l25, (undef289 = (0 + x0^0)) /\ (undef296 = (0 + x1^0)) /\ (undef297 = (0 + x2^0)) /\ (undef298 = (0 + x3^0)) /\ (undef299 = (0 + x4^0)) /\ (undef300 = (0 + x5^0)) /\ (undef301 = (0 + x6^0)) /\ (undef302 = (0 + x7^0)) /\ (((1 + undef299) + undef300) <= (0 + undef302)), par{oldX0^0 -> undef289, oldX1^0 -> undef296, oldX2^0 -> undef297, oldX3^0 -> undef298, oldX4^0 -> undef299, oldX5^0 -> undef300, oldX6^0 -> undef301, oldX7^0 -> undef302, x0^0 -> (0 + undef289), x1^0 -> (0 + undef296), x2^0 -> (0 + undef297), x3^0 -> (0 + undef298), x4^0 -> (0 + undef299), x5^0 -> (0 + undef300), x6^0 -> (0 + undef301), x7^0 -> (0 + undef302)}>
<l4, l3, (undef313 = (0 + x0^0)) /\ (undef320 = (0 + x1^0)) /\ (undef321 = (0 + x2^0)) /\ (undef322 = (0 + x3^0)) /\ (undef323 = (0 + x4^0)) /\ (undef324 = (0 + x5^0)) /\ (undef325 = (0 + x6^0)) /\ (undef326 = (0 + x7^0)) /\ ((0 + undef326) <= ((0 + undef323) + undef324)), par{oldX0^0 -> undef313, oldX1^0 -> undef320, oldX2^0 -> undef321, oldX3^0 -> undef322, oldX4^0 -> undef323, oldX5^0 -> undef324, oldX6^0 -> undef325, oldX7^0 -> undef326, x0^0 -> (0 + undef313), x1^0 -> (0 + undef320), x2^0 -> (0 + undef321), x3^0 -> (0 + undef322), x4^0 -> (0 + undef323), x5^0 -> (0 + undef324), x6^0 -> (0 + undef325), x7^0 -> (0 + undef326)}>
<l5, l6, (undef337 = (0 + x0^0)) /\ (undef344 = (0 + x1^0)) /\ (undef345 = (0 + x2^0)) /\ (undef346 = (0 + x3^0)) /\ (undef347 = (0 + x4^0)) /\ (undef348 = (0 + x5^0)) /\ (undef349 = (0 + x6^0)) /\ (undef351 = undef351), par{oldX0^0 -> undef337, oldX1^0 -> undef344, oldX2^0 -> undef345, oldX3^0 -> undef346, oldX4^0 -> undef347, oldX5^0 -> undef348, oldX6^0 -> undef349, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef351, x0^0 -> (0 + undef337), x1^0 -> (0 + undef344), x2^0 -> (0 + undef345), x3^0 -> (0 + undef346), x4^0 -> (0 + undef347), x5^0 -> (0 + undef348), x6^0 -> (1 + undef349), x7^0 -> (0 + undef351)}>
<l7, l5, (undef361 = (0 + x0^0)) /\ (undef368 = (0 + x1^0)) /\ (undef369 = (0 + x2^0)) /\ (undef370 = (0 + x3^0)) /\ (undef371 = (0 + x4^0)) /\ (undef372 = (0 + x5^0)) /\ (undef373 = (0 + x6^0)) /\ (undef375 = undef375), par{oldX0^0 -> undef361, oldX1^0 -> undef368, oldX2^0 -> undef369, oldX3^0 -> undef370, oldX4^0 -> undef371, oldX5^0 -> undef372, oldX6^0 -> undef373, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef375, x0^0 -> (0 + undef361), x1^0 -> (0 + undef368), x2^0 -> (0 + undef369), x3^0 -> (0 + undef370), x4^0 -> (0 + undef371), x5^0 -> (0 + undef372), x6^0 -> (0 + undef373), x7^0 -> (0 + undef375)}>
<l8, l20, (undef385 = (0 + x0^0)) /\ (undef399 = undef399) /\ (undef400 = undef400) /\ (undef386 = undef386) /\ (undef387 = undef387) /\ (undef388 = undef388) /\ (undef389 = undef389), par{oldX0^0 -> undef385, oldX10^0 -> undef386, oldX11^0 -> undef387, oldX12^0 -> undef388, oldX13^0 -> undef389, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef399, oldX9^0 -> undef400, x0^0 -> (0 + undef385), x1^0 -> 1, x2^0 -> (0 + undef399), x3^0 -> (0 + undef400), x4^0 -> (0 + undef386), x5^0 -> (0 + undef387), x6^0 -> (0 + undef388), x7^0 -> (0 + undef389)}>
<l9, l4, (undef409 = (0 + x0^0)) /\ (undef416 = (0 + x1^0)) /\ (undef417 = (0 + x2^0)) /\ (undef418 = (0 + x3^0)) /\ (undef419 = (0 + x4^0)) /\ (undef420 = (0 + x5^0)) /\ (undef421 = (0 + x6^0)), par{oldX0^0 -> undef409, oldX1^0 -> undef416, oldX2^0 -> undef417, oldX3^0 -> undef418, oldX4^0 -> undef419, oldX5^0 -> undef420, oldX6^0 -> undef421, oldX7^0 -> (0 + x7^0), x0^0 -> (0 + undef409), x1^0 -> (0 + undef416), x2^0 -> (0 + undef417), x3^0 -> (0 + undef418), x4^0 -> (0 + undef419), x5^0 -> (0 + undef420), x6^0 -> (0 + undef421), x7^0 -> (0 + undef420)}>
<l10, l5, (undef433 = (0 + x0^0)) /\ (undef440 = (0 + x1^0)) /\ (undef441 = (0 + x2^0)) /\ (undef442 = (0 + x3^0)) /\ (undef443 = (0 + x4^0)) /\ (undef444 = (0 + x5^0)) /\ (undef445 = (0 + x6^0)) /\ (undef447 = undef447) /\ (undef448 = undef448) /\ (undef434 = undef434) /\ (undef435 = undef435) /\ ((0 + undef448) <= ((0 + undef434) + undef435)), par{oldX0^0 -> undef433, oldX10^0 -> undef434, oldX11^0 -> undef435, oldX1^0 -> undef440, oldX2^0 -> undef441, oldX3^0 -> undef442, oldX4^0 -> undef443, oldX5^0 -> undef444, oldX6^0 -> undef445, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef447, oldX9^0 -> undef448, x0^0 -> (0 + undef433), x1^0 -> (0 + undef440), x2^0 -> (0 + undef441), x3^0 -> (0 + undef442), x4^0 -> (0 + undef443), x5^0 -> (0 + undef444), x6^0 -> (0 + undef445), x7^0 -> (0 + undef447)}>
<l10, l7, (undef457 = (0 + x0^0)) /\ (undef464 = (0 + x1^0)) /\ (undef465 = (0 + x2^0)) /\ (undef466 = (0 + x3^0)) /\ (undef467 = (0 + x4^0)) /\ (undef468 = (0 + x5^0)) /\ (undef469 = (0 + x6^0)) /\ (undef471 = undef471) /\ (undef472 = undef472) /\ (undef458 = undef458) /\ (undef459 = undef459) /\ (((1 + undef458) + undef459) <= (0 + undef472)), par{oldX0^0 -> undef457, oldX10^0 -> undef458, oldX11^0 -> undef459, oldX1^0 -> undef464, oldX2^0 -> undef465, oldX3^0 -> undef466, oldX4^0 -> undef467, oldX5^0 -> undef468, oldX6^0 -> undef469, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef471, oldX9^0 -> undef472, x0^0 -> (0 + undef457), x1^0 -> (0 + undef464), x2^0 -> (0 + undef465), x3^0 -> (0 + undef466), x4^0 -> (0 + undef467), x5^0 -> (0 + undef468), x6^0 -> (0 + undef469), x7^0 -> (0 + undef471)}>
<l6, l9, (undef481 = (0 + x0^0)) /\ (undef488 = (0 + x1^0)) /\ (undef489 = (0 + x2^0)) /\ (undef490 = (0 + x3^0)) /\ (undef491 = (0 + x4^0)) /\ (undef492 = (0 + x5^0)) /\ (undef493 = (0 + x6^0)) /\ (undef495 = undef495) /\ (((1 + undef491) + undef492) <= (0 + undef493)), par{oldX0^0 -> undef481, oldX1^0 -> undef488, oldX2^0 -> undef489, oldX3^0 -> undef490, oldX4^0 -> undef491, oldX5^0 -> undef492, oldX6^0 -> undef493, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef495, x0^0 -> (0 + undef481), x1^0 -> (0 + undef488), x2^0 -> (0 + undef489), x3^0 -> (0 + undef490), x4^0 -> (0 + undef491), x5^0 -> (0 + undef492), x6^0 -> (0 + undef493), x7^0 -> (0 + undef495)}>
<l6, l10, (undef505 = (0 + x0^0)) /\ (undef512 = (0 + x1^0)) /\ (undef513 = (0 + x2^0)) /\ (undef514 = (0 + x3^0)) /\ (undef515 = (0 + x4^0)) /\ (undef516 = (0 + x5^0)) /\ (undef517 = (0 + x6^0)) /\ (undef519 = undef519) /\ ((0 + undef517) <= ((0 + undef515) + undef516)), par{oldX0^0 -> undef505, oldX1^0 -> undef512, oldX2^0 -> undef513, oldX3^0 -> undef514, oldX4^0 -> undef515, oldX5^0 -> undef516, oldX6^0 -> undef517, oldX7^0 -> (0 + x7^0), oldX8^0 -> undef519, x0^0 -> (0 + undef505), x1^0 -> (0 + undef512), x2^0 -> (0 + undef513), x3^0 -> (0 + undef514), x4^0 -> (0 + undef515), x5^0 -> (0 + undef516), x6^0 -> (0 + undef517), x7^0 -> (0 + undef519)}>
<l11, l12, (undef529 = (0 + x0^0)) /\ (undef536 = (0 + x1^0)) /\ (undef537 = (0 + x2^0)) /\ (undef538 = (0 + x3^0)) /\ (undef539 = (0 + x4^0)) /\ (undef543 = undef543) /\ (undef544 = undef544) /\ (undef530 = undef530), par{oldX0^0 -> undef529, oldX10^0 -> undef530, oldX1^0 -> undef536, oldX2^0 -> undef537, oldX3^0 -> undef538, oldX4^0 -> undef539, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef543, oldX9^0 -> undef544, x0^0 -> (0 + undef529), x1^0 -> (0 + undef536), x2^0 -> (0 + undef537), x3^0 -> (0 + undef538), x4^0 -> (1 + undef539), x5^0 -> (0 + undef543), x6^0 -> (0 + undef544), x7^0 -> (0 + undef530)}>
<l14, l6, (undef553 = (0 + x0^0)) /\ (undef560 = (0 + x1^0)) /\ (undef561 = (0 + x2^0)) /\ (undef562 = (0 + x3^0)) /\ (undef563 = (0 + x4^0)) /\ (undef564 = (0 + x5^0)) /\ (undef567 = undef567), par{oldX0^0 -> undef553, oldX1^0 -> undef560, oldX2^0 -> undef561, oldX3^0 -> undef562, oldX4^0 -> undef563, oldX5^0 -> undef564, oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef567, x0^0 -> (0 + undef553), x1^0 -> (0 + undef560), x2^0 -> (0 + undef561), x3^0 -> (0 + undef562), x4^0 -> (0 + undef563), x5^0 -> (0 + undef564), x6^0 -> (0 + undef564), x7^0 -> (0 + undef567)}>
<l15, l16, (undef591 = undef591) /\ (undef592 = undef592) /\ (undef578 = undef578) /\ (undef579 = undef579) /\ (undef580 = undef580) /\ (undef581 = undef581) /\ (undef582 = undef582) /\ (undef583 = undef583), par{oldX0^0 -> (0 + x0^0), oldX10^0 -> undef578, oldX11^0 -> undef579, oldX12^0 -> undef580, oldX13^0 -> undef581, oldX14^0 -> undef582, oldX15^0 -> undef583, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef591, oldX9^0 -> undef592, x0^0 -> (0 + undef591), x1^0 -> (0 + undef592), x2^0 -> (0 + undef578), x3^0 -> (0 + undef579), x4^0 -> (0 + undef580), x5^0 -> (0 + undef581), x6^0 -> (0 + undef582), x7^0 -> (0 + undef583)}>
<l26, l11, (undef601 = (0 + x0^0)) /\ (undef608 = (0 + x1^0)) /\ (undef609 = (0 + x2^0)) /\ (undef610 = (0 + x3^0)) /\ (undef611 = (0 + x4^0)) /\ (undef612 = (0 + x5^0)) /\ (undef615 = undef615) /\ (undef616 = undef616) /\ (((1 + undef601) + (~(1) * undef611)) <= (0 + undef612)), par{oldX0^0 -> undef601, oldX1^0 -> undef608, oldX2^0 -> undef609, oldX3^0 -> undef610, oldX4^0 -> undef611, oldX5^0 -> undef612, oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef615, oldX9^0 -> undef616, x0^0 -> (0 + undef601), x1^0 -> (0 + undef608), x2^0 -> (0 + undef609), x3^0 -> (0 + undef610), x4^0 -> (0 + undef611), x5^0 -> (0 + undef612), x6^0 -> (0 + undef615), x7^0 -> (0 + undef616)}>
<l26, l14, (undef625 = (0 + x0^0)) /\ (undef632 = (0 + x1^0)) /\ (undef633 = (0 + x2^0)) /\ (undef634 = (0 + x3^0)) /\ (undef635 = (0 + x4^0)) /\ (undef636 = (0 + x5^0)) /\ (undef639 = undef639) /\ (undef640 = undef640) /\ ((0 + undef636) <= ((0 + undef625) + (~(1) * undef635))), par{oldX0^0 -> undef625, oldX1^0 -> undef632, oldX2^0 -> undef633, oldX3^0 -> undef634, oldX4^0 -> undef635, oldX5^0 -> undef636, oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef639, oldX9^0 -> undef640, x0^0 -> (0 + undef625), x1^0 -> (0 + undef632), x2^0 -> (0 + undef633), x3^0 -> (0 + undef634), x4^0 -> (0 + undef635), x5^0 -> (0 + undef636), x6^0 -> (0 + undef639), x7^0 -> (0 + undef640)}>
<l12, l15, (undef649 = (0 + x0^0)) /\ (undef656 = (0 + x1^0)) /\ (undef657 = (0 + x2^0)) /\ (undef658 = (0 + x3^0)) /\ (undef659 = (0 + x4^0)) /\ (undef663 = undef663) /\ (undef664 = undef664) /\ (undef650 = undef650) /\ ((0 + undef649) <= (0 + undef659)), par{oldX0^0 -> undef649, oldX10^0 -> undef650, oldX1^0 -> undef656, oldX2^0 -> undef657, oldX3^0 -> undef658, oldX4^0 -> undef659, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef663, oldX9^0 -> undef664, x0^0 -> (0 + undef649), x1^0 -> (0 + undef656), x2^0 -> (0 + undef657), x3^0 -> (0 + undef658), x4^0 -> (0 + undef659), x5^0 -> (0 + undef663), x6^0 -> (0 + undef664), x7^0 -> (0 + undef650)}>
<l12, l26, (undef673 = (0 + x0^0)) /\ (undef680 = (0 + x1^0)) /\ (undef681 = (0 + x2^0)) /\ (undef682 = (0 + x3^0)) /\ (undef683 = (0 + x4^0)) /\ (undef687 = undef687) /\ (undef688 = undef688) /\ ((0 + undef683) <= (~(1) + undef673)), par{oldX0^0 -> undef673, oldX1^0 -> undef680, oldX2^0 -> undef681, oldX3^0 -> undef682, oldX4^0 -> undef683, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef687, oldX9^0 -> undef688, x0^0 -> (0 + undef673), x1^0 -> (0 + undef680), x2^0 -> (0 + undef681), x3^0 -> (0 + undef682), x4^0 -> (0 + undef683), x5^0 -> 1, x6^0 -> (0 + undef687), x7^0 -> (0 + undef688)}>
<l17, l23, (undef697 = (0 + x0^0)) /\ (undef704 = (0 + x1^0)) /\ (undef705 = (0 + x2^0)) /\ (undef706 = (0 + x3^0)) /\ (undef711 = undef711) /\ (undef712 = undef712) /\ (undef698 = undef698) /\ (undef699 = undef699), par{oldX0^0 -> undef697, oldX10^0 -> undef698, oldX11^0 -> undef699, oldX1^0 -> undef704, oldX2^0 -> undef705, oldX3^0 -> undef706, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef711, oldX9^0 -> undef712, x0^0 -> (0 + undef697), x1^0 -> (0 + undef704), x2^0 -> (0 + undef705), x3^0 -> (1 + undef706), x4^0 -> (0 + undef711), x5^0 -> (0 + undef712), x6^0 -> (0 + undef698), x7^0 -> (0 + undef699)}>
<l23, l12, (undef721 = (0 + x0^0)) /\ (undef728 = (0 + x1^0)) /\ (undef729 = (0 + x2^0)) /\ (undef730 = (0 + x3^0)) /\ (undef735 = undef735) /\ (undef736 = undef736) /\ (undef722 = undef722) /\ ((2 + undef721) <= (0 + undef730)), par{oldX0^0 -> undef721, oldX10^0 -> undef722, oldX1^0 -> undef728, oldX2^0 -> undef729, oldX3^0 -> undef730, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef735, oldX9^0 -> undef736, x0^0 -> (0 + undef721), x1^0 -> (0 + undef728), x2^0 -> (0 + undef729), x3^0 -> (0 + undef730), x4^0 -> 1, x5^0 -> (0 + undef735), x6^0 -> (0 + undef736), x7^0 -> (0 + undef722)}>
<l23, l17, (undef745 = (0 + x0^0)) /\ (undef752 = (0 + x1^0)) /\ (undef753 = (0 + x2^0)) /\ (undef754 = (0 + x3^0)) /\ (undef759 = undef759) /\ (undef760 = undef760) /\ (undef746 = undef746) /\ (undef747 = undef747) /\ ((0 + undef754) <= (1 + undef745)), par{oldX0^0 -> undef745, oldX10^0 -> undef746, oldX11^0 -> undef747, oldX1^0 -> undef752, oldX2^0 -> undef753, oldX3^0 -> undef754, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef759, oldX9^0 -> undef760, x0^0 -> (0 + undef745), x1^0 -> (0 + undef752), x2^0 -> (0 + undef753), x3^0 -> (0 + undef754), x4^0 -> (0 + undef759), x5^0 -> (0 + undef760), x6^0 -> (0 + undef746), x7^0 -> (0 + undef747)}>
<l18, l8, (undef769 = (0 + x0^0)) /\ (undef783 = undef783) /\ (undef784 = undef784) /\ (undef770 = undef770) /\ (undef771 = undef771) /\ (undef772 = undef772) /\ (undef773 = undef773) /\ (undef774 = undef774), par{oldX0^0 -> undef769, oldX10^0 -> undef770, oldX11^0 -> undef771, oldX12^0 -> undef772, oldX13^0 -> undef773, oldX14^0 -> undef774, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> (0 + x7^0), oldX8^0 -> undef783, oldX9^0 -> undef784, x0^0 -> (0 + undef769), x1^0 -> (0 + undef783), x2^0 -> (0 + undef784), x3^0 -> (0 + undef770), x4^0 -> (0 + undef771), x5^0 -> (0 + undef772), x6^0 -> (0 + undef773), x7^0 -> (0 + undef774)}>
<l18, l1, true>
<l18, l13, true>
<l18, l21, true>
<l18, l22, true>
<l18, l2, true>
<l18, l24, true>
<l18, l20, true>
<l18, l16, true>
<l18, l25, true>
<l18, l3, true>
<l18, l4, true>
<l18, l5, true>
<l18, l7, true>
<l18, l8, true>
<l18, l9, true>
<l18, l10, true>
<l18, l6, true>
<l18, l11, true>
<l18, l14, true>
<l18, l15, true>
<l18, l26, true>
<l18, l12, true>
<l18, l17, true>
<l18, l23, true>
<l19, l18, true>

Fresh variables:
undef1, undef2, undef3, undef4, undef8, undef9, undef15, undef16, undef25, undef26, undef27, undef28, undef29, undef32, undef39, undef40, undef49, undef50, undef51, undef52, undef56, undef57, undef63, undef64, undef73, undef74, undef75, undef76, undef80, undef81, undef87, undef88, undef97, undef98, undef99, undef100, undef104, undef105, undef111, undef112, undef121, undef122, undef123, undef128, undef129, undef135, undef136, undef145, undef146, undef147, undef148, undef152, undef153, undef159, undef160, undef169, undef170, undef171, undef172, undef176, undef183, undef184, undef193, undef194, undef195, undef196, undef200, undef207, undef208, undef217, undef218, undef219, undef220, undef221, undef224, undef231, undef232, undef241, undef248, undef249, undef250, undef251, undef252, undef255, undef256, undef265, undef272, undef273, undef274, undef275, undef276, undef277, undef278, undef289, undef296, undef297, undef298, undef299, undef300, undef301, undef302, undef313, undef320, undef321, undef322, undef323, undef324, undef325, undef326, undef337, undef344, undef345, undef346, undef347, undef348, undef349, undef351, undef361, undef368, undef369, undef370, undef371, undef372, undef373, undef375, undef385, undef386, undef387, undef388, undef389, undef399, undef400, undef409, undef416, undef417, undef418, undef419, undef420, undef421, undef433, undef434, undef435, undef440, undef441, undef442, undef443, undef444, undef445, undef447, undef448, undef457, undef458, undef459, undef464, undef465, undef466, undef467, undef468, undef469, undef471, undef472, undef481, undef488, undef489, undef490, undef491, undef492, undef493, undef495, undef505, undef512, undef513, undef514, undef515, undef516, undef517, undef519, undef529, undef530, undef536, undef537, undef538, undef539, undef543, undef544, undef553, undef560, undef561, undef562, undef563, undef564, undef567, undef578, undef579, undef580, undef581, undef582, undef583, undef591, undef592, undef601, undef608, undef609, undef610, undef611, undef612, undef615, undef616, undef625, undef632, undef633, undef634, undef635, undef636, undef639, undef640, undef649, undef650, undef656, undef657, undef658, undef659, undef663, undef664, undef673, undef680, undef681, undef682, undef683, undef687, undef688, undef697, undef698, undef699, undef704, undef705, undef706, undef711, undef712, undef721, undef722, undef728, undef729, undef730, undef735, undef736, undef745, undef746, undef747, undef752, undef753, undef754, undef759, undef760, undef769, undef770, undef771, undef772, undef773, undef774, undef783, undef784, 

Undef variables:
undef1, undef2, undef3, undef4, undef8, undef9, undef15, undef16, undef25, undef26, undef27, undef28, undef29, undef32, undef39, undef40, undef49, undef50, undef51, undef52, undef56, undef57, undef63, undef64, undef73, undef74, undef75, undef76, undef80, undef81, undef87, undef88, undef97, undef98, undef99, undef100, undef104, undef105, undef111, undef112, undef121, undef122, undef123, undef128, undef129, undef135, undef136, undef145, undef146, undef147, undef148, undef152, undef153, undef159, undef160, undef169, undef170, undef171, undef172, undef176, undef183, undef184, undef193, undef194, undef195, undef196, undef200, undef207, undef208, undef217, undef218, undef219, undef220, undef221, undef224, undef231, undef232, undef241, undef248, undef249, undef250, undef251, undef252, undef255, undef256, undef265, undef272, undef273, undef274, undef275, undef276, undef277, undef278, undef289, undef296, undef297, undef298, undef299, undef300, undef301, undef302, undef313, undef320, undef321, undef322, undef323, undef324, undef325, undef326, undef337, undef344, undef345, undef346, undef347, undef348, undef349, undef351, undef361, undef368, undef369, undef370, undef371, undef372, undef373, undef375, undef385, undef386, undef387, undef388, undef389, undef399, undef400, undef409, undef416, undef417, undef418, undef419, undef420, undef421, undef433, undef434, undef435, undef440, undef441, undef442, undef443, undef444, undef445, undef447, undef448, undef457, undef458, undef459, undef464, undef465, undef466, undef467, undef468, undef469, undef471, undef472, undef481, undef488, undef489, undef490, undef491, undef492, undef493, undef495, undef505, undef512, undef513, undef514, undef515, undef516, undef517, undef519, undef529, undef530, undef536, undef537, undef538, undef539, undef543, undef544, undef553, undef560, undef561, undef562, undef563, undef564, undef567, undef578, undef579, undef580, undef581, undef582, undef583, undef591, undef592, undef601, undef608, undef609, undef610, undef611, undef612, undef615, undef616, undef625, undef632, undef633, undef634, undef635, undef636, undef639, undef640, undef649, undef650, undef656, undef657, undef658, undef659, undef663, undef664, undef673, undef680, undef681, undef682, undef683, undef687, undef688, undef697, undef698, undef699, undef704, undef705, undef706, undef711, undef712, undef721, undef722, undef728, undef729, undef730, undef735, undef736, undef745, undef746, undef747, undef752, undef753, undef754, undef759, undef760, undef769, undef770, undef771, undef772, undef773, undef774, undef783, undef784, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l20, (undef769 = (0 + x0^0)) /\ (undef783 = undef783) /\ (undef784 = undef784) /\ (undef770 = undef770) /\ (undef771 = undef771) /\ (undef772 = undef772) /\ (undef773 = undef773) /\ (undef774 = undef774) /\ (undef385 = (0 + (0 + undef769))) /\ (undef399 = undef399) /\ (undef400 = undef400) /\ (undef386 = undef386) /\ (undef387 = undef387) /\ (undef388 = undef388) /\ (undef389 = undef389), par{x0^0 -> (0 + undef385), x1^0 -> 1, x2^0 -> (0 + undef399), x3^0 -> (0 + undef400), x4^0 -> (0 + undef386), x5^0 -> (0 + undef387), x6^0 -> (0 + undef388), x7^0 -> (0 + undef389)}>
<l0, l1, true>
<l0, l20, (undef25 = (0 + x0^0)) /\ (undef32 = (0 + x1^0)) /\ (undef39 = undef39) /\ (undef40 = undef40) /\ (undef26 = undef26) /\ (undef27 = undef27) /\ (undef28 = undef28) /\ (undef29 = undef29), par{x0^0 -> (0 + undef25), x1^0 -> (1 + undef32), x2^0 -> (0 + undef39), x3^0 -> (0 + undef40), x4^0 -> (0 + undef26), x5^0 -> (0 + undef27), x6^0 -> (0 + undef28), x7^0 -> (0 + undef29)}>
<l0, l22, (undef49 = (0 + x0^0)) /\ (undef56 = (0 + x1^0)) /\ (undef57 = (0 + x2^0)) /\ (undef63 = undef63) /\ (undef64 = undef64) /\ (undef50 = undef50) /\ (undef51 = undef51) /\ (undef52 = undef52), par{x0^0 -> (0 + undef49), x1^0 -> (0 + undef56), x2^0 -> (1 + undef57), x3^0 -> (0 + undef63), x4^0 -> (0 + undef64), x5^0 -> (0 + undef50), x6^0 -> (0 + undef51), x7^0 -> (0 + undef52)}>
<l0, l22, true>
<l0, l2, true>
<l0, l22, (undef169 = (0 + x0^0)) /\ (undef176 = (0 + x1^0)) /\ (undef183 = undef183) /\ (undef184 = undef184) /\ (undef170 = undef170) /\ (undef171 = undef171) /\ (undef172 = undef172), par{x0^0 -> (0 + undef169), x1^0 -> (0 + undef176), x2^0 -> (1 + undef176), x3^0 -> (0 + undef183), x4^0 -> (0 + undef184), x5^0 -> (0 + undef170), x6^0 -> (0 + undef171), x7^0 -> (0 + undef172)}>
<l0, l20, true>
<l0, l16, true>
<l0, l26, (undef241 = (0 + x0^0)) /\ (undef248 = (0 + x1^0)) /\ (undef249 = (0 + x2^0)) /\ (undef250 = (0 + x3^0)) /\ (undef251 = (0 + x4^0)) /\ (undef252 = (0 + x5^0)) /\ (undef255 = undef255) /\ (undef256 = undef256), par{x0^0 -> (0 + undef241), x1^0 -> (0 + undef248), x2^0 -> (0 + undef249), x3^0 -> (0 + undef250), x4^0 -> (0 + undef251), x5^0 -> (1 + undef252), x6^0 -> (0 + undef255), x7^0 -> (0 + undef256)}>
<l0, l4, (undef265 = (0 + x0^0)) /\ (undef272 = (0 + x1^0)) /\ (undef273 = (0 + x2^0)) /\ (undef274 = (0 + x3^0)) /\ (undef275 = (0 + x4^0)) /\ (undef276 = (0 + x5^0)) /\ (undef277 = (0 + x6^0)) /\ (undef278 = (0 + x7^0)), par{x0^0 -> (0 + undef265), x1^0 -> (0 + undef272), x2^0 -> (0 + undef273), x3^0 -> (0 + undef274), x4^0 -> (0 + undef275), x5^0 -> (0 + undef276), x6^0 -> (0 + undef277), x7^0 -> (1 + undef278)}>
<l0, l4, true>
<l0, l6, (undef337 = (0 + x0^0)) /\ (undef344 = (0 + x1^0)) /\ (undef345 = (0 + x2^0)) /\ (undef346 = (0 + x3^0)) /\ (undef347 = (0 + x4^0)) /\ (undef348 = (0 + x5^0)) /\ (undef349 = (0 + x6^0)) /\ (undef351 = undef351), par{x0^0 -> (0 + undef337), x1^0 -> (0 + undef344), x2^0 -> (0 + undef345), x3^0 -> (0 + undef346), x4^0 -> (0 + undef347), x5^0 -> (0 + undef348), x6^0 -> (1 + undef349), x7^0 -> (0 + undef351)}>
<l0, l6, (undef361 = (0 + x0^0)) /\ (undef368 = (0 + x1^0)) /\ (undef369 = (0 + x2^0)) /\ (undef370 = (0 + x3^0)) /\ (undef371 = (0 + x4^0)) /\ (undef372 = (0 + x5^0)) /\ (undef373 = (0 + x6^0)) /\ (undef375 = undef375) /\ (undef337 = (0 + (0 + undef361))) /\ (undef344 = (0 + (0 + undef368))) /\ (undef345 = (0 + (0 + undef369))) /\ (undef346 = (0 + (0 + undef370))) /\ (undef347 = (0 + (0 + undef371))) /\ (undef348 = (0 + (0 + undef372))) /\ (undef349 = (0 + (0 + undef373))) /\ (undef351 = undef351), par{x0^0 -> (0 + undef337), x1^0 -> (0 + undef344), x2^0 -> (0 + undef345), x3^0 -> (0 + undef346), x4^0 -> (0 + undef347), x5^0 -> (0 + undef348), x6^0 -> (1 + undef349), x7^0 -> (0 + undef351)}>
<l0, l20, (undef385 = (0 + x0^0)) /\ (undef399 = undef399) /\ (undef400 = undef400) /\ (undef386 = undef386) /\ (undef387 = undef387) /\ (undef388 = undef388) /\ (undef389 = undef389), par{x0^0 -> (0 + undef385), x1^0 -> 1, x2^0 -> (0 + undef399), x3^0 -> (0 + undef400), x4^0 -> (0 + undef386), x5^0 -> (0 + undef387), x6^0 -> (0 + undef388), x7^0 -> (0 + undef389)}>
<l0, l4, (undef409 = (0 + x0^0)) /\ (undef416 = (0 + x1^0)) /\ (undef417 = (0 + x2^0)) /\ (undef418 = (0 + x3^0)) /\ (undef419 = (0 + x4^0)) /\ (undef420 = (0 + x5^0)) /\ (undef421 = (0 + x6^0)), par{x0^0 -> (0 + undef409), x1^0 -> (0 + undef416), x2^0 -> (0 + undef417), x3^0 -> (0 + undef418), x4^0 -> (0 + undef419), x5^0 -> (0 + undef420), x6^0 -> (0 + undef421), x7^0 -> (0 + undef420)}>
<l0, l10, true>
<l0, l6, true>
<l0, l12, (undef529 = (0 + x0^0)) /\ (undef536 = (0 + x1^0)) /\ (undef537 = (0 + x2^0)) /\ (undef538 = (0 + x3^0)) /\ (undef539 = (0 + x4^0)) /\ (undef543 = undef543) /\ (undef544 = undef544) /\ (undef530 = undef530), par{x0^0 -> (0 + undef529), x1^0 -> (0 + undef536), x2^0 -> (0 + undef537), x3^0 -> (0 + undef538), x4^0 -> (1 + undef539), x5^0 -> (0 + undef543), x6^0 -> (0 + undef544), x7^0 -> (0 + undef530)}>
<l0, l6, (undef553 = (0 + x0^0)) /\ (undef560 = (0 + x1^0)) /\ (undef561 = (0 + x2^0)) /\ (undef562 = (0 + x3^0)) /\ (undef563 = (0 + x4^0)) /\ (undef564 = (0 + x5^0)) /\ (undef567 = undef567), par{x0^0 -> (0 + undef553), x1^0 -> (0 + undef560), x2^0 -> (0 + undef561), x3^0 -> (0 + undef562), x4^0 -> (0 + undef563), x5^0 -> (0 + undef564), x6^0 -> (0 + undef564), x7^0 -> (0 + undef567)}>
<l0, l16, (undef591 = undef591) /\ (undef592 = undef592) /\ (undef578 = undef578) /\ (undef579 = undef579) /\ (undef580 = undef580) /\ (undef581 = undef581) /\ (undef582 = undef582) /\ (undef583 = undef583), par{x0^0 -> (0 + undef591), x1^0 -> (0 + undef592), x2^0 -> (0 + undef578), x3^0 -> (0 + undef579), x4^0 -> (0 + undef580), x5^0 -> (0 + undef581), x6^0 -> (0 + undef582), x7^0 -> (0 + undef583)}>
<l0, l26, true>
<l0, l12, true>
<l0, l23, (undef697 = (0 + x0^0)) /\ (undef704 = (0 + x1^0)) /\ (undef705 = (0 + x2^0)) /\ (undef706 = (0 + x3^0)) /\ (undef711 = undef711) /\ (undef712 = undef712) /\ (undef698 = undef698) /\ (undef699 = undef699), par{x0^0 -> (0 + undef697), x1^0 -> (0 + undef704), x2^0 -> (0 + undef705), x3^0 -> (1 + undef706), x4^0 -> (0 + undef711), x5^0 -> (0 + undef712), x6^0 -> (0 + undef698), x7^0 -> (0 + undef699)}>
<l0, l23, true>
<l1, l2, (undef1 = (0 + x0^0)) /\ (undef8 = (0 + x1^0)) /\ (undef9 = (0 + x2^0)) /\ (undef15 = undef15) /\ (undef16 = undef16) /\ (undef2 = undef2) /\ (undef3 = undef3) /\ (undef4 = undef4), par{x0^0 -> (0 + undef1), x1^0 -> (0 + undef8), x2^0 -> (1 + undef9), x3^0 -> (0 + undef15), x4^0 -> (0 + undef16), x5^0 -> (0 + undef2), x6^0 -> (0 + undef3), x7^0 -> (0 + undef4)}>
<l2, l23, (undef121 = (0 + x0^0)) /\ (undef128 = (0 + x1^0)) /\ (undef129 = (0 + x2^0)) /\ (undef135 = undef135) /\ (undef136 = undef136) /\ (undef122 = undef122) /\ (undef123 = undef123) /\ ((1 + undef121) <= (0 + undef129)), par{x0^0 -> (0 + undef121), x1^0 -> (0 + undef128), x2^0 -> (0 + undef129), x3^0 -> 1, x4^0 -> (0 + undef135), x5^0 -> (0 + undef136), x6^0 -> (0 + undef122), x7^0 -> (0 + undef123)}>
<l2, l1, (undef145 = (0 + x0^0)) /\ (undef152 = (0 + x1^0)) /\ (undef153 = (0 + x2^0)) /\ (undef159 = undef159) /\ (undef160 = undef160) /\ (undef146 = undef146) /\ (undef147 = undef147) /\ (undef148 = undef148) /\ ((0 + undef153) <= (0 + undef145)), par{x0^0 -> (0 + undef145), x1^0 -> (0 + undef152), x2^0 -> (0 + undef153), x3^0 -> (0 + undef159), x4^0 -> (0 + undef160), x5^0 -> (0 + undef146), x6^0 -> (0 + undef147), x7^0 -> (0 + undef148)}>
<l4, l26, (undef289 = (0 + x0^0)) /\ (undef296 = (0 + x1^0)) /\ (undef297 = (0 + x2^0)) /\ (undef298 = (0 + x3^0)) /\ (undef299 = (0 + x4^0)) /\ (undef300 = (0 + x5^0)) /\ (undef301 = (0 + x6^0)) /\ (undef302 = (0 + x7^0)) /\ (((1 + undef299) + undef300) <= (0 + undef302)) /\ (undef241 = (0 + (0 + undef289))) /\ (undef248 = (0 + (0 + undef296))) /\ (undef249 = (0 + (0 + undef297))) /\ (undef250 = (0 + (0 + undef298))) /\ (undef251 = (0 + (0 + undef299))) /\ (undef252 = (0 + (0 + undef300))) /\ (undef255 = undef255) /\ (undef256 = undef256), par{x0^0 -> (0 + undef241), x1^0 -> (0 + undef248), x2^0 -> (0 + undef249), x3^0 -> (0 + undef250), x4^0 -> (0 + undef251), x5^0 -> (1 + undef252), x6^0 -> (0 + undef255), x7^0 -> (0 + undef256)}>
<l4, l4, (undef313 = (0 + x0^0)) /\ (undef320 = (0 + x1^0)) /\ (undef321 = (0 + x2^0)) /\ (undef322 = (0 + x3^0)) /\ (undef323 = (0 + x4^0)) /\ (undef324 = (0 + x5^0)) /\ (undef325 = (0 + x6^0)) /\ (undef326 = (0 + x7^0)) /\ ((0 + undef326) <= ((0 + undef323) + undef324)) /\ (undef265 = (0 + (0 + undef313))) /\ (undef272 = (0 + (0 + undef320))) /\ (undef273 = (0 + (0 + undef321))) /\ (undef274 = (0 + (0 + undef322))) /\ (undef275 = (0 + (0 + undef323))) /\ (undef276 = (0 + (0 + undef324))) /\ (undef277 = (0 + (0 + undef325))) /\ (undef278 = (0 + (0 + undef326))), par{x0^0 -> (0 + undef265), x1^0 -> (0 + undef272), x2^0 -> (0 + undef273), x3^0 -> (0 + undef274), x4^0 -> (0 + undef275), x5^0 -> (0 + undef276), x6^0 -> (0 + undef277), x7^0 -> (1 + undef278)}>
<l6, l4, (undef481 = (0 + x0^0)) /\ (undef488 = (0 + x1^0)) /\ (undef489 = (0 + x2^0)) /\ (undef490 = (0 + x3^0)) /\ (undef491 = (0 + x4^0)) /\ (undef492 = (0 + x5^0)) /\ (undef493 = (0 + x6^0)) /\ (undef495 = undef495) /\ (((1 + undef491) + undef492) <= (0 + undef493)) /\ (undef409 = (0 + (0 + undef481))) /\ (undef416 = (0 + (0 + undef488))) /\ (undef417 = (0 + (0 + undef489))) /\ (undef418 = (0 + (0 + undef490))) /\ (undef419 = (0 + (0 + undef491))) /\ (undef420 = (0 + (0 + undef492))) /\ (undef421 = (0 + (0 + undef493))), par{x0^0 -> (0 + undef409), x1^0 -> (0 + undef416), x2^0 -> (0 + undef417), x3^0 -> (0 + undef418), x4^0 -> (0 + undef419), x5^0 -> (0 + undef420), x6^0 -> (0 + undef421), x7^0 -> (0 + undef420)}>
<l6, l10, (undef505 = (0 + x0^0)) /\ (undef512 = (0 + x1^0)) /\ (undef513 = (0 + x2^0)) /\ (undef514 = (0 + x3^0)) /\ (undef515 = (0 + x4^0)) /\ (undef516 = (0 + x5^0)) /\ (undef517 = (0 + x6^0)) /\ (undef519 = undef519) /\ ((0 + undef517) <= ((0 + undef515) + undef516)), par{x0^0 -> (0 + undef505), x1^0 -> (0 + undef512), x2^0 -> (0 + undef513), x3^0 -> (0 + undef514), x4^0 -> (0 + undef515), x5^0 -> (0 + undef516), x6^0 -> (0 + undef517), x7^0 -> (0 + undef519)}>
<l10, l6, (undef433 = (0 + x0^0)) /\ (undef440 = (0 + x1^0)) /\ (undef441 = (0 + x2^0)) /\ (undef442 = (0 + x3^0)) /\ (undef443 = (0 + x4^0)) /\ (undef444 = (0 + x5^0)) /\ (undef445 = (0 + x6^0)) /\ (undef447 = undef447) /\ (undef448 = undef448) /\ (undef434 = undef434) /\ (undef435 = undef435) /\ ((0 + undef448) <= ((0 + undef434) + undef435)) /\ (undef337 = (0 + (0 + undef433))) /\ (undef344 = (0 + (0 + undef440))) /\ (undef345 = (0 + (0 + undef441))) /\ (undef346 = (0 + (0 + undef442))) /\ (undef347 = (0 + (0 + undef443))) /\ (undef348 = (0 + (0 + undef444))) /\ (undef349 = (0 + (0 + undef445))) /\ (undef351 = undef351), par{x0^0 -> (0 + undef337), x1^0 -> (0 + undef344), x2^0 -> (0 + undef345), x3^0 -> (0 + undef346), x4^0 -> (0 + undef347), x5^0 -> (0 + undef348), x6^0 -> (1 + undef349), x7^0 -> (0 + undef351)}>
<l10, l6, (undef457 = (0 + x0^0)) /\ (undef464 = (0 + x1^0)) /\ (undef465 = (0 + x2^0)) /\ (undef466 = (0 + x3^0)) /\ (undef467 = (0 + x4^0)) /\ (undef468 = (0 + x5^0)) /\ (undef469 = (0 + x6^0)) /\ (undef471 = undef471) /\ (undef472 = undef472) /\ (undef458 = undef458) /\ (undef459 = undef459) /\ (((1 + undef458) + undef459) <= (0 + undef472)) /\ (undef361 = (0 + (0 + undef457))) /\ (undef368 = (0 + (0 + undef464))) /\ (undef369 = (0 + (0 + undef465))) /\ (undef370 = (0 + (0 + undef466))) /\ (undef371 = (0 + (0 + undef467))) /\ (undef372 = (0 + (0 + undef468))) /\ (undef373 = (0 + (0 + undef469))) /\ (undef375 = undef375) /\ (undef337 = (0 + (0 + undef361))) /\ (undef344 = (0 + (0 + undef368))) /\ (undef345 = (0 + (0 + undef369))) /\ (undef346 = (0 + (0 + undef370))) /\ (undef347 = (0 + (0 + undef371))) /\ (undef348 = (0 + (0 + undef372))) /\ (undef349 = (0 + (0 + undef373))) /\ (undef351 = undef351), par{x0^0 -> (0 + undef337), x1^0 -> (0 + undef344), x2^0 -> (0 + undef345), x3^0 -> (0 + undef346), x4^0 -> (0 + undef347), x5^0 -> (0 + undef348), x6^0 -> (1 + undef349), x7^0 -> (0 + undef351)}>
<l12, l16, (undef649 = (0 + x0^0)) /\ (undef656 = (0 + x1^0)) /\ (undef657 = (0 + x2^0)) /\ (undef658 = (0 + x3^0)) /\ (undef659 = (0 + x4^0)) /\ (undef663 = undef663) /\ (undef664 = undef664) /\ (undef650 = undef650) /\ ((0 + undef649) <= (0 + undef659)) /\ (undef591 = undef591) /\ (undef592 = undef592) /\ (undef578 = undef578) /\ (undef579 = undef579) /\ (undef580 = undef580) /\ (undef581 = undef581) /\ (undef582 = undef582) /\ (undef583 = undef583), par{x0^0 -> (0 + undef591), x1^0 -> (0 + undef592), x2^0 -> (0 + undef578), x3^0 -> (0 + undef579), x4^0 -> (0 + undef580), x5^0 -> (0 + undef581), x6^0 -> (0 + undef582), x7^0 -> (0 + undef583)}>
<l12, l26, (undef673 = (0 + x0^0)) /\ (undef680 = (0 + x1^0)) /\ (undef681 = (0 + x2^0)) /\ (undef682 = (0 + x3^0)) /\ (undef683 = (0 + x4^0)) /\ (undef687 = undef687) /\ (undef688 = undef688) /\ ((0 + undef683) <= (~(1) + undef673)), par{x0^0 -> (0 + undef673), x1^0 -> (0 + undef680), x2^0 -> (0 + undef681), x3^0 -> (0 + undef682), x4^0 -> (0 + undef683), x5^0 -> 1, x6^0 -> (0 + undef687), x7^0 -> (0 + undef688)}>
<l20, l2, (undef193 = (0 + x0^0)) /\ (undef200 = (0 + x1^0)) /\ (undef207 = undef207) /\ (undef208 = undef208) /\ (undef194 = undef194) /\ (undef195 = undef195) /\ (undef196 = undef196) /\ ((1 + undef193) <= (0 + undef200)), par{x0^0 -> (0 + undef193), x1^0 -> (0 + undef200), x2^0 -> 1, x3^0 -> (0 + undef207), x4^0 -> (0 + undef208), x5^0 -> (0 + undef194), x6^0 -> (0 + undef195), x7^0 -> (0 + undef196)}>
<l20, l22, (undef217 = (0 + x0^0)) /\ (undef224 = (0 + x1^0)) /\ (undef231 = undef231) /\ (undef232 = undef232) /\ (undef218 = undef218) /\ (undef219 = undef219) /\ (undef220 = undef220) /\ (undef221 = undef221) /\ ((0 + undef224) <= (0 + undef217)) /\ (undef169 = (0 + (0 + undef217))) /\ (undef176 = (0 + (0 + undef224))) /\ (undef183 = undef183) /\ (undef184 = undef184) /\ (undef170 = undef170) /\ (undef171 = undef171) /\ (undef172 = undef172), par{x0^0 -> (0 + undef169), x1^0 -> (0 + undef176), x2^0 -> (1 + undef176), x3^0 -> (0 + undef183), x4^0 -> (0 + undef184), x5^0 -> (0 + undef170), x6^0 -> (0 + undef171), x7^0 -> (0 + undef172)}>
<l22, l20, (undef73 = (0 + x0^0)) /\ (undef80 = (0 + x1^0)) /\ (undef81 = (0 + x2^0)) /\ (undef87 = undef87) /\ (undef88 = undef88) /\ (undef74 = undef74) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ ((2 + undef73) <= (0 + undef81)) /\ (undef25 = (0 + (0 + undef73))) /\ (undef32 = (0 + (0 + undef80))) /\ (undef39 = undef39) /\ (undef40 = undef40) /\ (undef26 = undef26) /\ (undef27 = undef27) /\ (undef28 = undef28) /\ (undef29 = undef29), par{x0^0 -> (0 + undef25), x1^0 -> (1 + undef32), x2^0 -> (0 + undef39), x3^0 -> (0 + undef40), x4^0 -> (0 + undef26), x5^0 -> (0 + undef27), x6^0 -> (0 + undef28), x7^0 -> (0 + undef29)}>
<l22, l22, (undef97 = (0 + x0^0)) /\ (undef104 = (0 + x1^0)) /\ (undef105 = (0 + x2^0)) /\ (undef111 = undef111) /\ (undef112 = undef112) /\ (undef98 = undef98) /\ (undef99 = undef99) /\ (undef100 = undef100) /\ ((0 + undef105) <= (1 + undef97)) /\ (undef49 = (0 + (0 + undef97))) /\ (undef56 = (0 + (0 + undef104))) /\ (undef57 = (0 + (0 + undef105))) /\ (undef63 = undef63) /\ (undef64 = undef64) /\ (undef50 = undef50) /\ (undef51 = undef51) /\ (undef52 = undef52), par{x0^0 -> (0 + undef49), x1^0 -> (0 + undef56), x2^0 -> (1 + undef57), x3^0 -> (0 + undef63), x4^0 -> (0 + undef64), x5^0 -> (0 + undef50), x6^0 -> (0 + undef51), x7^0 -> (0 + undef52)}>
<l23, l12, (undef721 = (0 + x0^0)) /\ (undef728 = (0 + x1^0)) /\ (undef729 = (0 + x2^0)) /\ (undef730 = (0 + x3^0)) /\ (undef735 = undef735) /\ (undef736 = undef736) /\ (undef722 = undef722) /\ ((2 + undef721) <= (0 + undef730)), par{x0^0 -> (0 + undef721), x1^0 -> (0 + undef728), x2^0 -> (0 + undef729), x3^0 -> (0 + undef730), x4^0 -> 1, x5^0 -> (0 + undef735), x6^0 -> (0 + undef736), x7^0 -> (0 + undef722)}>
<l23, l23, (undef745 = (0 + x0^0)) /\ (undef752 = (0 + x1^0)) /\ (undef753 = (0 + x2^0)) /\ (undef754 = (0 + x3^0)) /\ (undef759 = undef759) /\ (undef760 = undef760) /\ (undef746 = undef746) /\ (undef747 = undef747) /\ ((0 + undef754) <= (1 + undef745)) /\ (undef697 = (0 + (0 + undef745))) /\ (undef704 = (0 + (0 + undef752))) /\ (undef705 = (0 + (0 + undef753))) /\ (undef706 = (0 + (0 + undef754))) /\ (undef711 = undef711) /\ (undef712 = undef712) /\ (undef698 = undef698) /\ (undef699 = undef699), par{x0^0 -> (0 + undef697), x1^0 -> (0 + undef704), x2^0 -> (0 + undef705), x3^0 -> (1 + undef706), x4^0 -> (0 + undef711), x5^0 -> (0 + undef712), x6^0 -> (0 + undef698), x7^0 -> (0 + undef699)}>
<l26, l12, (undef601 = (0 + x0^0)) /\ (undef608 = (0 + x1^0)) /\ (undef609 = (0 + x2^0)) /\ (undef610 = (0 + x3^0)) /\ (undef611 = (0 + x4^0)) /\ (undef612 = (0 + x5^0)) /\ (undef615 = undef615) /\ (undef616 = undef616) /\ (((1 + undef601) + (~(1) * undef611)) <= (0 + undef612)) /\ (undef529 = (0 + (0 + undef601))) /\ (undef536 = (0 + (0 + undef608))) /\ (undef537 = (0 + (0 + undef609))) /\ (undef538 = (0 + (0 + undef610))) /\ (undef539 = (0 + (0 + undef611))) /\ (undef543 = undef543) /\ (undef544 = undef544) /\ (undef530 = undef530), par{x0^0 -> (0 + undef529), x1^0 -> (0 + undef536), x2^0 -> (0 + undef537), x3^0 -> (0 + undef538), x4^0 -> (1 + undef539), x5^0 -> (0 + undef543), x6^0 -> (0 + undef544), x7^0 -> (0 + undef530)}>
<l26, l6, (undef625 = (0 + x0^0)) /\ (undef632 = (0 + x1^0)) /\ (undef633 = (0 + x2^0)) /\ (undef634 = (0 + x3^0)) /\ (undef635 = (0 + x4^0)) /\ (undef636 = (0 + x5^0)) /\ (undef639 = undef639) /\ (undef640 = undef640) /\ ((0 + undef636) <= ((0 + undef625) + (~(1) * undef635))) /\ (undef553 = (0 + (0 + undef625))) /\ (undef560 = (0 + (0 + undef632))) /\ (undef561 = (0 + (0 + undef633))) /\ (undef562 = (0 + (0 + undef634))) /\ (undef563 = (0 + (0 + undef635))) /\ (undef564 = (0 + (0 + undef636))) /\ (undef567 = undef567), par{x0^0 -> (0 + undef553), x1^0 -> (0 + undef560), x2^0 -> (0 + undef561), x3^0 -> (0 + undef562), x4^0 -> (0 + undef563), x5^0 -> (0 + undef564), x6^0 -> (0 + undef564), x7^0 -> (0 + undef567)}>

Fresh variables:
undef1, undef2, undef3, undef4, undef8, undef9, undef15, undef16, undef25, undef26, undef27, undef28, undef29, undef32, undef39, undef40, undef49, undef50, undef51, undef52, undef56, undef57, undef63, undef64, undef73, undef74, undef75, undef76, undef80, undef81, undef87, undef88, undef97, undef98, undef99, undef100, undef104, undef105, undef111, undef112, undef121, undef122, undef123, undef128, undef129, undef135, undef136, undef145, undef146, undef147, undef148, undef152, undef153, undef159, undef160, undef169, undef170, undef171, undef172, undef176, undef183, undef184, undef193, undef194, undef195, undef196, undef200, undef207, undef208, undef217, undef218, undef219, undef220, undef221, undef224, undef231, undef232, undef241, undef248, undef249, undef250, undef251, undef252, undef255, undef256, undef265, undef272, undef273, undef274, undef275, undef276, undef277, undef278, undef289, undef296, undef297, undef298, undef299, undef300, undef301, undef302, undef313, undef320, undef321, undef322, undef323, undef324, undef325, undef326, undef337, undef344, undef345, undef346, undef347, undef348, undef349, undef351, undef361, undef368, undef369, undef370, undef371, undef372, undef373, undef375, undef385, undef386, undef387, undef388, undef389, undef399, undef400, undef409, undef416, undef417, undef418, undef419, undef420, undef421, undef433, undef434, undef435, undef440, undef441, undef442, undef443, undef444, undef445, undef447, undef448, undef457, undef458, undef459, undef464, undef465, undef466, undef467, undef468, undef469, undef471, undef472, undef481, undef488, undef489, undef490, undef491, undef492, undef493, undef495, undef505, undef512, undef513, undef514, undef515, undef516, undef517, undef519, undef529, undef530, undef536, undef537, undef538, undef539, undef543, undef544, undef553, undef560, undef561, undef562, undef563, undef564, undef567, undef578, undef579, undef580, undef581, undef582, undef583, undef591, undef592, undef601, undef608, undef609, undef610, undef611, undef612, undef615, undef616, undef625, undef632, undef633, undef634, undef635, undef636, undef639, undef640, undef649, undef650, undef656, undef657, undef658, undef659, undef663, undef664, undef673, undef680, undef681, undef682, undef683, undef687, undef688, undef697, undef698, undef699, undef704, undef705, undef706, undef711, undef712, undef721, undef722, undef728, undef729, undef730, undef735, undef736, undef745, undef746, undef747, undef752, undef753, undef754, undef759, undef760, undef769, undef770, undef771, undef772, undef773, undef774, undef783, undef784, 

Undef variables:
undef1, undef2, undef3, undef4, undef8, undef9, undef15, undef16, undef25, undef26, undef27, undef28, undef29, undef32, undef39, undef40, undef49, undef50, undef51, undef52, undef56, undef57, undef63, undef64, undef73, undef74, undef75, undef76, undef80, undef81, undef87, undef88, undef97, undef98, undef99, undef100, undef104, undef105, undef111, undef112, undef121, undef122, undef123, undef128, undef129, undef135, undef136, undef145, undef146, undef147, undef148, undef152, undef153, undef159, undef160, undef169, undef170, undef171, undef172, undef176, undef183, undef184, undef193, undef194, undef195, undef196, undef200, undef207, undef208, undef217, undef218, undef219, undef220, undef221, undef224, undef231, undef232, undef241, undef248, undef249, undef250, undef251, undef252, undef255, undef256, undef265, undef272, undef273, undef274, undef275, undef276, undef277, undef278, undef289, undef296, undef297, undef298, undef299, undef300, undef301, undef302, undef313, undef320, undef321, undef322, undef323, undef324, undef325, undef326, undef337, undef344, undef345, undef346, undef347, undef348, undef349, undef351, undef361, undef368, undef369, undef370, undef371, undef372, undef373, undef375, undef385, undef386, undef387, undef388, undef389, undef399, undef400, undef409, undef416, undef417, undef418, undef419, undef420, undef421, undef433, undef434, undef435, undef440, undef441, undef442, undef443, undef444, undef445, undef447, undef448, undef457, undef458, undef459, undef464, undef465, undef466, undef467, undef468, undef469, undef471, undef472, undef481, undef488, undef489, undef490, undef491, undef492, undef493, undef495, undef505, undef512, undef513, undef514, undef515, undef516, undef517, undef519, undef529, undef530, undef536, undef537, undef538, undef539, undef543, undef544, undef553, undef560, undef561, undef562, undef563, undef564, undef567, undef578, undef579, undef580, undef581, undef582, undef583, undef591, undef592, undef601, undef608, undef609, undef610, undef611, undef612, undef615, undef616, undef625, undef632, undef633, undef634, undef635, undef636, undef639, undef640, undef649, undef650, undef656, undef657, undef658, undef659, undef663, undef664, undef673, undef680, undef681, undef682, undef683, undef687, undef688, undef697, undef698, undef699, undef704, undef705, undef706, undef711, undef712, undef721, undef722, undef728, undef729, undef730, undef735, undef736, undef745, undef746, undef747, undef752, undef753, undef754, undef759, undef760, undef769, undef770, undef771, undef772, undef773, undef774, undef783, undef784, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l20, l22, undef224 <= undef217 /\ x0^0 = undef217 /\ x1^0 = undef224 /\ undef169 = undef217 /\ undef176 = undef224, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>
<l22, l20, 2 + undef73 <= undef81 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>
<l22, l22, undef105 <= 1 + undef97 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0

Graph 2:
Transitions:
<l1, l2, x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>
<l2, l1, undef153 <= undef145 /\ x0^0 = undef145 /\ x1^0 = undef152 /\ x2^0 = undef153, {x0^0 -> undef145, x1^0 -> undef152, x2^0 -> undef153, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef146, x6^0 -> undef147, x7^0 -> undef148, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0

Graph 3:
Transitions:
<l23, l23, undef754 <= 1 + undef745 /\ x0^0 = undef745 /\ x1^0 = undef752 /\ x2^0 = undef753 /\ x3^0 = undef754 /\ undef697 = undef745 /\ undef704 = undef752 /\ undef705 = undef753 /\ undef706 = undef754, {x0^0 -> undef697, x1^0 -> undef704, x2^0 -> undef705, x3^0 -> 1 + undef706, x4^0 -> undef711, x5^0 -> undef712, x6^0 -> undef698, x7^0 -> undef699, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0

Graph 4:
Transitions:
<l4, l26, 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>
<l4, l4, undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
<l6, l4, 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
<l6, l10, undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>
<l10, l6, undef448 <= undef434 + undef435 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l10, l6, 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l12, l26, 1 + undef683 <= undef673 /\ x0^0 = undef673 /\ x1^0 = undef680 /\ x2^0 = undef681 /\ x3^0 = undef682 /\ x4^0 = undef683, {x0^0 -> undef673, x1^0 -> undef680, x2^0 -> undef681, x3^0 -> undef682, x4^0 -> undef683, x5^0 -> 1, x6^0 -> undef687, x7^0 -> undef688, rest remain the same}>
<l26, l12, 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>
<l26, l6, undef635 + undef636 <= undef625 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0

Graph 5:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l20, x0^0 = undef769 /\ undef385 = undef769, {x0^0 -> undef385, x1^0 -> 1, x2^0 -> undef399, x3^0 -> undef400, x4^0 -> undef386, x5^0 -> undef387, x6^0 -> undef388, x7^0 -> undef389, rest remain the same}>
<l0, l20, x0^0 = undef25 /\ x1^0 = undef32, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>
<l0, l22, x0^0 = undef49 /\ x1^0 = undef56 /\ x2^0 = undef57, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
<l0, l22, true, {all remain the same}>
<l0, l22, x0^0 = undef169 /\ x1^0 = undef176, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>
<l0, l20, true, {all remain the same}>
<l0, l20, x0^0 = undef385, {x0^0 -> undef385, x1^0 -> 1, x2^0 -> undef399, x3^0 -> undef400, x4^0 -> undef386, x5^0 -> undef387, x6^0 -> undef388, x7^0 -> undef389, rest remain the same}>

Graph 2
<l0, l1, true, {all remain the same}>
<l0, l2, true, {all remain the same}>
<l20, l2, 1 + undef193 <= undef200 /\ x0^0 = undef193 /\ x1^0 = undef200, {x0^0 -> undef193, x1^0 -> undef200, x2^0 -> 1, x3^0 -> undef207, x4^0 -> undef208, x5^0 -> undef194, x6^0 -> undef195, x7^0 -> undef196, rest remain the same}>

Graph 3
<l0, l23, x0^0 = undef697 /\ x1^0 = undef704 /\ x2^0 = undef705 /\ x3^0 = undef706, {x0^0 -> undef697, x1^0 -> undef704, x2^0 -> undef705, x3^0 -> 1 + undef706, x4^0 -> undef711, x5^0 -> undef712, x6^0 -> undef698, x7^0 -> undef699, rest remain the same}>
<l0, l23, true, {all remain the same}>
<l2, l23, 1 + undef121 <= undef129 /\ x0^0 = undef121 /\ x1^0 = undef128 /\ x2^0 = undef129, {x0^0 -> undef121, x1^0 -> undef128, x2^0 -> undef129, x3^0 -> 1, x4^0 -> undef135, x5^0 -> undef136, x6^0 -> undef122, x7^0 -> undef123, rest remain the same}>

Graph 4
<l0, l26, x0^0 = undef241 /\ x1^0 = undef248 /\ x2^0 = undef249 /\ x3^0 = undef250 /\ x4^0 = undef251 /\ x5^0 = undef252, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>
<l0, l4, x0^0 = undef265 /\ x1^0 = undef272 /\ x2^0 = undef273 /\ x3^0 = undef274 /\ x4^0 = undef275 /\ x5^0 = undef276 /\ x6^0 = undef277 /\ x7^0 = undef278, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
<l0, l4, true, {all remain the same}>
<l0, l6, x0^0 = undef337 /\ x1^0 = undef344 /\ x2^0 = undef345 /\ x3^0 = undef346 /\ x4^0 = undef347 /\ x5^0 = undef348 /\ x6^0 = undef349, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l0, l6, x0^0 = undef361 /\ x1^0 = undef368 /\ x2^0 = undef369 /\ x3^0 = undef370 /\ x4^0 = undef371 /\ x5^0 = undef372 /\ x6^0 = undef373 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l0, l4, x0^0 = undef409 /\ x1^0 = undef416 /\ x2^0 = undef417 /\ x3^0 = undef418 /\ x4^0 = undef419 /\ x5^0 = undef420 /\ x6^0 = undef421, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
<l0, l10, true, {all remain the same}>
<l0, l6, true, {all remain the same}>
<l0, l12, x0^0 = undef529 /\ x1^0 = undef536 /\ x2^0 = undef537 /\ x3^0 = undef538 /\ x4^0 = undef539, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>
<l0, l6, x0^0 = undef553 /\ x1^0 = undef560 /\ x2^0 = undef561 /\ x3^0 = undef562 /\ x4^0 = undef563 /\ x5^0 = undef564, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
<l0, l26, true, {all remain the same}>
<l0, l12, true, {all remain the same}>
<l23, l12, 2 + undef721 <= undef730 /\ x0^0 = undef721 /\ x1^0 = undef728 /\ x2^0 = undef729 /\ x3^0 = undef730, {x0^0 -> undef721, x1^0 -> undef728, x2^0 -> undef729, x3^0 -> undef730, x4^0 -> 1, x5^0 -> undef735, x6^0 -> undef736, x7^0 -> undef722, rest remain the same}>

Graph 5
<l0, l16, true, {all remain the same}>
<l0, l16, true, {x0^0 -> undef591, x1^0 -> undef592, x2^0 -> undef578, x3^0 -> undef579, x4^0 -> undef580, x5^0 -> undef581, x6^0 -> undef582, x7^0 -> undef583, rest remain the same}>
<l12, l16, undef649 <= undef659 /\ x0^0 = undef649 /\ x1^0 = undef656 /\ x2^0 = undef657 /\ x3^0 = undef658 /\ x4^0 = undef659, {x0^0 -> undef591, x1^0 -> undef592, x2^0 -> undef578, x3^0 -> undef579, x4^0 -> undef580, x5^0 -> undef581, x6^0 -> undef582, x7^0 -> undef583, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 2 )
( 2 , 2 )
( 4 , 4 )
( 6 , 4 )
( 10 , 4 )
( 12 , 4 )
( 16 , 5 )
( 20 , 1 )
( 22 , 1 )
( 23 , 3 )
( 26 , 4 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.008085

Checking conditional termination of SCC {l20, l22}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001730s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007025s
Trying to remove transition: <l22, l22, undef105 <= 1 + undef97 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.016529s
Time used: 0.015675
Trying to remove transition: <l22, l20, 2 + undef73 <= undef81 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018436s
Time used: 0.016374
Trying to remove transition: <l20, l22, undef224 <= undef217 /\ x0^0 = undef217 /\ x1^0 = undef224 /\ undef169 = undef217 /\ undef176 = undef224, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010510s
Time used: 0.008617
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.054328s
Time used: 0.052148
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.076201s
Time used: 0.074824

LOG: SAT solveNonLinear - Elapsed time: 0.130529s
Cost: 3; Total time: 0.126972
[31mFailed at location 22: x1^0 <= x0^0[0m
[31mFailed at location 22: x1^0 <= x0^0[0m
[31mFailed at location 22: x1^0 <= x0^0[0m
Before Improving: 
[36mQuasi-invariant at l22: x1^0 <= x0^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.017050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004223s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003969s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003945s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003954s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003923s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003935s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003927s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003931s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003947s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003940s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003933s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003941s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003947s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003954s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003945s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003951s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003957s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003963s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003970s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003970s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003985s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003947s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003960s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003989s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003962s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003959s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003985s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003973s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003979s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003965s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004002s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003988s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003993s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003975s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003994s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003991s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004035s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003988s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004038s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003996s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004024s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004008s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003979s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004001s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003992s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004000s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004020s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003995s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004002s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004008s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004023s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004022s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004004s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004014s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004011s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004010s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004006s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004004s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004020s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004012s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004033s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004028s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004008s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004014s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004016s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004005s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004023s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004035s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004076s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004044s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004038s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004045s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004033s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004034s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004032s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004040s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004043s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004044s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004051s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004068s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004056s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004053s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004048s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004056s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004038s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004053s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004052s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004052s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004047s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004045s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004052s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004040s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004055s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004043s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004042s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004054s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004089s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004055s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004054s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004071s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004073s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004071s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004064s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004071s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004087s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004070s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004060s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004085s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004099s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004069s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004074s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004073s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004064s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004073s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004057s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004099s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004080s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004081s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004081s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004078s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004073s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004096s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004089s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004074s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004106s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004104s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004086s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004096s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004084s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004100s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004080s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004101s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004093s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004096s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004111s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004105s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004100s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004101s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004120s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004100s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004118s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004111s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004111s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004108s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004124s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004102s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004116s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004101s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004113s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004102s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004128s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004143s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004141s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004114s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004121s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004133s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004120s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004131s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004121s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004122s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004131s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004139s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004155s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004142s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004127s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004117s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004151s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004138s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004124s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004137s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004126s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004148s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004148s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004132s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004133s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004155s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004123s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004167s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004137s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004139s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004147s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004143s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004143s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004146s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004169s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004142s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004156s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004151s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004150s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004152s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004164s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004152s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004153s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004151s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004171s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004165s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004164s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004181s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004183s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004161s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004164s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004153s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004176s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004145s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004153s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004160s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004166s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004157s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004171s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004180s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004183s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004167s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004193s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004172s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004182s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004172s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004164s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004163s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004174s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004175s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004177s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004191s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004206s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004173s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004173s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004179s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004180s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004195s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004189s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004179s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004170s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004202s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004193s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004200s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004193s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003188s
Remaining time after improvement: -2e-06
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l22: x1^0 <= 280 + x0^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l20, 2 + undef73 <= undef81 /\ x1^0 <= 280 + x0^0 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l22, undef105 <= 1 + undef97 /\ x1^0 <= 280 + x0^0 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l20, 2 + undef73 <= undef81 /\ x1^0 <= 280 + x0^0 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l22, undef105 <= 1 + undef97 /\ x1^0 <= 280 + x0^0 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
[33mRanking function: [36m280 + x0^0 - x1^0[0m
New Graphs: 
Transitions:
<l22, l22, undef105 <= 1 + undef97 /\ x1^0 <= 280 + x0^0 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l22}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000994s
[33mRanking function: [36m1 + x0^0 - x2^0[0m
New Graphs: 
Calling Safety with literal x1^0 <= 280 + x0^0 and entry <l0, l22, x0^0 = undef49 /\ x1^0 = undef56 /\ x2^0 = undef57, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>

LOG: CALL check - Post:x1^0 <= 280 + x0^0 - Process 1
* Exit transition: <l0, l22, x0^0 = undef49 /\ x1^0 = undef56 /\ x2^0 = undef57, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
* Postcondition  : x1^0 <= 280 + x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000667s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000716s
Calling Safety with literal x1^0 <= 280 + x0^0 and entry <l0, l22, true, {all remain the same}>

LOG: CALL check - Post:x1^0 <= 280 + x0^0 - Process 2
* Exit transition: <l0, l22, true, {all remain the same}>
* Postcondition  : x1^0 <= 280 + x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000493s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000511s
Calling Safety with literal x1^0 <= 280 + x0^0 and entry <l0, l22, x0^0 = undef169 /\ x1^0 = undef176, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>

LOG: CALL check - Post:x1^0 <= 280 + x0^0 - Process 3
* Exit transition: <l0, l22, x0^0 = undef169 /\ x1^0 = undef176, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>
* Postcondition  : x1^0 <= 280 + x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000558s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000593s
INVARIANTS: 
22: 
Quasi-INVARIANTS to narrow Graph: 
22: x1^0 <= 280 + x0^0 , 
It's unfeasible. Removing transition: 
<l20, l22, undef224 <= undef217 /\ x0^0 = undef217 /\ x1^0 = undef224 /\ undef169 = undef217 /\ undef176 = undef224, {x0^0 -> undef169, x1^0 -> undef176, x2^0 -> 1 + undef176, x3^0 -> undef183, x4^0 -> undef184, x5^0 -> undef170, x6^0 -> undef171, x7^0 -> undef172, rest remain the same}>
Narrowing transition: 
<l22, l20, 2 + undef73 <= undef81 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l22, l22, undef105 <= 1 + undef97 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l22, l20, 2 + undef73 <= undef81 /\ 281 + x0^0 <= x1^0 /\ x0^0 = undef73 /\ x1^0 = undef80 /\ x2^0 = undef81 /\ undef25 = undef73 /\ undef32 = undef80, {x0^0 -> undef25, x1^0 -> 1 + undef32, x2^0 -> undef39, x3^0 -> undef40, x4^0 -> undef26, x5^0 -> undef27, x6^0 -> undef28, x7^0 -> undef29, rest remain the same}>
<l22, l22, undef105 <= 1 + undef97 /\ 281 + x0^0 <= x1^0 /\ x0^0 = undef97 /\ x1^0 = undef104 /\ x2^0 = undef105 /\ undef49 = undef97 /\ undef56 = undef104 /\ undef57 = undef105, {x0^0 -> undef49, x1^0 -> undef56, x2^0 -> 1 + undef57, x3^0 -> undef63, x4^0 -> undef64, x5^0 -> undef50, x6^0 -> undef51, x7^0 -> undef52, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l22}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001024s
[33mRanking function: [36m1 + x0^0 - x2^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.003631

Checking conditional termination of SCC {l1, l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000992s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002794s
Trying to remove transition: <l2, l1, undef153 <= undef145 /\ x0^0 = undef145 /\ x1^0 = undef152 /\ x2^0 = undef153, {x0^0 -> undef145, x1^0 -> undef152, x2^0 -> undef153, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef146, x6^0 -> undef147, x7^0 -> undef148, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006823s
Time used: 0.006524
Trying to remove transition: <l1, l2, x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008039s
Time used: 0.006799
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.019316s
Time used: 0.018027
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.021639s
Time used: 0.021578

LOG: SAT solveNonLinear - Elapsed time: 0.040955s
Cost: 1; Total time: 0.039605
[31mFailed at location 1: x2^0 <= 1 + x0^0[0m
Before Improving: 
[36mQuasi-invariant at l1: x2^0 <= 1 + x0^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007675s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002602s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002385s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002361s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002366s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002325s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002339s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002344s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002375s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002333s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002357s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002347s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002345s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002333s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002375s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002336s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002376s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002319s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002374s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002353s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002353s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002356s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002363s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002339s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002358s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002336s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002366s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002352s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002363s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002349s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002374s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002332s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002365s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002349s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002374s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002389s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002386s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002345s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002378s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002359s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002382s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002344s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002391s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002353s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002360s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002368s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002393s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002347s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002377s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002400s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002370s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002386s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002377s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002384s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002376s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002393s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002369s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002400s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002378s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002423s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002378s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002388s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002382s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002394s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002364s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002387s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002359s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002381s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002410s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002381s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002406s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002402s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002378s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002395s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002387s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002416s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002395s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002407s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002384s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002391s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002400s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002389s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002395s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002375s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002420s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002375s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002419s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002381s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002401s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002375s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002393s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002413s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002398s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002420s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002384s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002434s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002393s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002407s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002393s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002418s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002415s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002391s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002413s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002387s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002409s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002392s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002396s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002421s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002402s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002415s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002410s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002423s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002402s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002400s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002427s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002394s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002433s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002418s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002429s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002406s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002438s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002420s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002510s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002458s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002485s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002477s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002473s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002417s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002439s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002442s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002430s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002438s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002410s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002406s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002439s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002410s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002435s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002421s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002426s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002408s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002441s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002419s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002442s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002410s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002432s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002412s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002423s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002444s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002435s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002456s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002421s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002445s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002415s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002431s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002429s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002435s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002454s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002417s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002451s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002422s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002435s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002423s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002453s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002459s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002449s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002411s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002452s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002439s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002448s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002427s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002443s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002405s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002449s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002428s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002430s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002434s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002448s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002417s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002452s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003452s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002472s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002460s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002442s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002459s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002428s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002456s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002425s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002451s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002421s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002462s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002435s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002453s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002455s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002446s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002443s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002449s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002452s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002445s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002451s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002460s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002438s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002443s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002462s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002444s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002467s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002438s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002472s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002441s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002466s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002438s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002459s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002424s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002464s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002453s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002432s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002463s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002465s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002460s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002449s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002441s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002459s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002445s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002458s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002430s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002477s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002446s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002463s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002446s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002471s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002446s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002471s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002442s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002502s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002468s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002465s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002440s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002467s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002443s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002479s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002454s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002446s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002478s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002462s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002472s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002482s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002487s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002460s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002479s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002448s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002485s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002476s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002467s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002497s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002467s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002469s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002448s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002477s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002465s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002466s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002485s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002457s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002466s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002468s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002497s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002460s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002473s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002477s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002474s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002485s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002506s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002491s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002486s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002508s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002484s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002495s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002478s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002498s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002482s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002484s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002490s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002480s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002475s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002497s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002504s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002526s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002484s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002489s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002485s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002507s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002495s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002504s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002492s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002495s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002511s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002499s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002504s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002506s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002506s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002503s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002504s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002505s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002496s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002516s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002499s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002500s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002513s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002500s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002507s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002508s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002518s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002493s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002519s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002510s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002514s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002511s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002517s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002529s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002522s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002532s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002502s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002531s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002508s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002518s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002512s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002513s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002522s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002519s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002537s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002508s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002518s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002515s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002530s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002514s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002510s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002533s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002517s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002546s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002520s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002544s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002533s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002535s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002519s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002538s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002541s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002531s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002536s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002530s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002540s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002536s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002555s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002531s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002554s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002529s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002547s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002534s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002547s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002529s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002550s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002530s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002557s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002551s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002562s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002556s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002552s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002538s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002559s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002541s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002557s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002543s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002572s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002537s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002561s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002544s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001593s
Remaining time after improvement: -0.000762
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l1: x2^0 <= 437 + x0^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l1, l2, x2^0 <= 437 + x0^0 /\ x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l1, l2, x2^0 <= 437 + x0^0 /\ x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[33mRanking function: [36m437 + x0^0 - x2^0[0m
New Graphs: 
Calling Safety with literal x2^0 <= 437 + x0^0 and entry <l0, l1, true, {all remain the same}>

LOG: CALL check - Post:x2^0 <= 437 + x0^0 - Process 4
* Exit transition: <l0, l1, true, {all remain the same}>
* Postcondition  : x2^0 <= 437 + x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000656s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000675s
INVARIANTS: 
1: 
Quasi-INVARIANTS to narrow Graph: 
1: x2^0 <= 437 + x0^0 , 
Narrowing transition: 
<l1, l2, x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l2, l1, undef153 <= undef145 /\ x0^0 = undef145 /\ x1^0 = undef152 /\ x2^0 = undef153, {x0^0 -> undef145, x1^0 -> undef152, x2^0 -> undef153, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef146, x6^0 -> undef147, x7^0 -> undef148, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l1, l2, 438 + x0^0 <= x2^0 /\ x0^0 = undef1 /\ x1^0 = undef8 /\ x2^0 = undef9, {x0^0 -> undef1, x1^0 -> undef8, x2^0 -> 1 + undef9, x3^0 -> undef15, x4^0 -> undef16, x5^0 -> undef2, x6^0 -> undef3, x7^0 -> undef4, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.002437

Checking conditional termination of SCC {l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001363s
[33mRanking function: [36m1 + x0^0 - x3^0[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.026885

Checking conditional termination of SCC {l4, l6, l10, l12, l26}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.015240s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.036872s
Trying to remove transition: <l26, l6, undef635 + undef636 <= undef625 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.065915s
Time used: 0.064802
Trying to remove transition: <l26, l12, 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.059499s
Time used: 0.041678
Trying to remove transition: <l12, l26, 1 + undef683 <= undef673 /\ x0^0 = undef673 /\ x1^0 = undef680 /\ x2^0 = undef681 /\ x3^0 = undef682 /\ x4^0 = undef683, {x0^0 -> undef673, x1^0 -> undef680, x2^0 -> undef681, x3^0 -> undef682, x4^0 -> undef683, x5^0 -> 1, x6^0 -> undef687, x7^0 -> undef688, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.063684s
Time used: 0.045902
Trying to remove transition: <l10, l6, 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.063367s
Time used: 0.046261
Trying to remove transition: <l10, l6, undef448 <= undef434 + undef435 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.065447s
Time used: 0.046943
Trying to remove transition: <l6, l10, undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.058585s
Time used: 0.040654
Trying to remove transition: <l6, l4, 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.059642s
Time used: 0.042409
Trying to remove transition: <l4, l4, undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.059506s
Time used: 0.041655
Trying to remove transition: <l4, l26, 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.070371s
Time used: 0.052352
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.270860s
Time used: 0.249802
Improving Solution with cost 10 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.004167s
Time used: 1.00155

LOG: SAT solveNonLinear - Elapsed time: 1.275027s
Cost: 10; Total time: 1.25135
[31mFailed at location 4: 1 + x4^0 <= x0^0[0m
[31mFailed at location 4: 1 + x4^0 <= x0^0[0m
[31mFailed at location 4: 1 + x4^0 <= x0^0[0m
[31mFailed at location 6: 1 + x4^0 <= x0^0[0m
[31mFailed at location 6: 1 + x4^0 <= x0^0[0m
[31mFailed at location 6: 1 + x4^0 <= x0^0[0m
[31mFailed at location 6: 1 + x4^0 <= x0^0[0m
[31mFailed at location 10: 1 + x4^0 <= x0^0[0m
[31mFailed at location 26: 1 + x4^0 <= x0^0[0m
[31mFailed at location 26: 1 + x4^0 <= x0^0[0m
Before Improving: 
[36mQuasi-invariant at l4: 1 + x4^0 <= x0^0[0m
[36mQuasi-invariant at l6: 1 + x4^0 <= x0^0[0m
[36mQuasi-invariant at l10: 1 + x4^0 <= x0^0[0m
[36mQuasi-invariant at l26: 1 + x4^0 <= x0^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.032474s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.981884s
Remaining time after improvement: -3e-05
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: x4^0 <= x0^0[0m
[36mQuasi-invariant at l6: x4^0 <= x0^0[0m
[36mQuasi-invariant at l10: x4^0 <= x0^0[0m
[36mQuasi-invariant at l26: x4^0 <= x0^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l26, x4^0 <= x0^0 /\ 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, x4^0 <= x0^0 /\ undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l4, x4^0 <= x0^0 /\ 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l10, x4^0 <= x0^0 /\ undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l6, x4^0 <= x0^0 /\ undef448 <= undef434 + undef435 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l6, x4^0 <= x0^0 /\ 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l26, l12, x4^0 <= x0^0 /\ 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l26, l6, x4^0 <= x0^0 /\ undef635 + undef636 <= undef625 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l26, x4^0 <= x0^0 /\ 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, x4^0 <= x0^0 /\ undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l4, x4^0 <= x0^0 /\ 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l10, x4^0 <= x0^0 /\ undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l6, x4^0 <= x0^0 /\ undef448 <= undef434 + undef435 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l6, x4^0 <= x0^0 /\ 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l26, l12, x4^0 <= x0^0 /\ 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l26, l6, x4^0 <= x0^0 /\ undef635 + undef636 <= undef625 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
[33mRanking function: [36mx0^0 - x4^0[0m
New Graphs: 
Transitions:
<l4, l6, x4^0 <= x0^0 /\ undef251 <= undef241 /\ undef635 + undef636 <= undef625 /\ 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef241 = undef625 /\ undef248 = undef296 /\ undef248 = undef632 /\ undef249 = undef297 /\ undef249 = undef633 /\ undef250 = undef298 /\ undef250 = undef634 /\ undef251 = undef299 /\ undef251 = undef635 /\ undef252 = undef300 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636 /\ 1 + undef252 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
<l4, l4, x4^0 <= x0^0 /\ undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
<l6, l4, x4^0 <= x0^0 /\ 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
<l6, l6, x4^0 <= x0^0 /\ undef448 <= undef434 + undef435 /\ undef515 <= undef505 /\ undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445 /\ undef433 = undef505 /\ undef440 = undef512 /\ undef441 = undef513 /\ undef442 = undef514 /\ undef443 = undef515 /\ undef444 = undef516 /\ undef445 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l6, l6, x4^0 <= x0^0 /\ undef515 <= undef505 /\ undef517 <= undef515 + undef516 /\ 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469 /\ undef457 = undef505 /\ undef464 = undef512 /\ undef465 = undef513 /\ undef466 = undef514 /\ undef467 = undef515 /\ undef468 = undef516 /\ undef469 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l4, l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010515s
[33mRanking function: [36m-2 + 10*x0^0 - 10*x4^0 - 10*x5^0[0m
New Graphs: 
Transitions:
<l6, l6, x4^0 <= x0^0 /\ undef448 <= undef434 + undef435 /\ undef515 <= undef505 /\ undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445 /\ undef433 = undef505 /\ undef440 = undef512 /\ undef441 = undef513 /\ undef442 = undef514 /\ undef443 = undef515 /\ undef444 = undef516 /\ undef445 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l6, l6, x4^0 <= x0^0 /\ undef515 <= undef505 /\ undef517 <= undef515 + undef516 /\ 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469 /\ undef457 = undef505 /\ undef464 = undef512 /\ undef465 = undef513 /\ undef466 = undef514 /\ undef467 = undef515 /\ undef468 = undef516 /\ undef469 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Transitions:
<l4, l4, x4^0 <= x0^0 /\ undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005003s
[33mRanking function: [36mx4^0 + x5^0 - x6^0[0m
New Graphs: 
Transitions:
<l4, l4, x4^0 <= x0^0 /\ undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002397s
[33mRanking function: [36mx4^0 + x5^0 - x7^0[0m
New Graphs: 
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l26, x0^0 = undef241 /\ x1^0 = undef248 /\ x2^0 = undef249 /\ x3^0 = undef250 /\ x4^0 = undef251 /\ x5^0 = undef252, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 5
* Exit transition: <l0, l26, x0^0 = undef241 /\ x1^0 = undef248 /\ x2^0 = undef249 /\ x3^0 = undef250 /\ x4^0 = undef251 /\ x5^0 = undef252, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001613s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001662s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l4, x0^0 = undef265 /\ x1^0 = undef272 /\ x2^0 = undef273 /\ x3^0 = undef274 /\ x4^0 = undef275 /\ x5^0 = undef276 /\ x6^0 = undef277 /\ x7^0 = undef278, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 6
* Exit transition: <l0, l4, x0^0 = undef265 /\ x1^0 = undef272 /\ x2^0 = undef273 /\ x3^0 = undef274 /\ x4^0 = undef275 /\ x5^0 = undef276 /\ x6^0 = undef277 /\ x7^0 = undef278, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001565s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001619s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l4, true, {all remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 7
* Exit transition: <l0, l4, true, {all remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001389s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001407s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l6, x0^0 = undef337 /\ x1^0 = undef344 /\ x2^0 = undef345 /\ x3^0 = undef346 /\ x4^0 = undef347 /\ x5^0 = undef348 /\ x6^0 = undef349, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 8
* Exit transition: <l0, l6, x0^0 = undef337 /\ x1^0 = undef344 /\ x2^0 = undef345 /\ x3^0 = undef346 /\ x4^0 = undef347 /\ x5^0 = undef348 /\ x6^0 = undef349, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001520s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001570s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l6, x0^0 = undef361 /\ x1^0 = undef368 /\ x2^0 = undef369 /\ x3^0 = undef370 /\ x4^0 = undef371 /\ x5^0 = undef372 /\ x6^0 = undef373 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 9
* Exit transition: <l0, l6, x0^0 = undef361 /\ x1^0 = undef368 /\ x2^0 = undef369 /\ x3^0 = undef370 /\ x4^0 = undef371 /\ x5^0 = undef372 /\ x6^0 = undef373 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001787s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001863s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l4, x0^0 = undef409 /\ x1^0 = undef416 /\ x2^0 = undef417 /\ x3^0 = undef418 /\ x4^0 = undef419 /\ x5^0 = undef420 /\ x6^0 = undef421, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 10
* Exit transition: <l0, l4, x0^0 = undef409 /\ x1^0 = undef416 /\ x2^0 = undef417 /\ x3^0 = undef418 /\ x4^0 = undef419 /\ x5^0 = undef420 /\ x6^0 = undef421, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001548s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001601s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l10, true, {all remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 11
* Exit transition: <l0, l10, true, {all remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001391s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001409s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l6, true, {all remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 12
* Exit transition: <l0, l6, true, {all remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001321s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001338s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l6, x0^0 = undef553 /\ x1^0 = undef560 /\ x2^0 = undef561 /\ x3^0 = undef562 /\ x4^0 = undef563 /\ x5^0 = undef564, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 13
* Exit transition: <l0, l6, x0^0 = undef553 /\ x1^0 = undef560 /\ x2^0 = undef561 /\ x3^0 = undef562 /\ x4^0 = undef563 /\ x5^0 = undef564, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001553s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001600s
Calling Safety with literal x4^0 <= x0^0 and entry <l0, l26, true, {all remain the same}>

LOG: CALL check - Post:x4^0 <= x0^0 - Process 14
* Exit transition: <l0, l26, true, {all remain the same}>
* Postcondition  : x4^0 <= x0^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001323s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001340s
INVARIANTS: 
4: 
6: 
10: 
26: 
Quasi-INVARIANTS to narrow Graph: 
4: x4^0 <= x0^0 , 
6: x4^0 <= x0^0 , 
10: x4^0 <= x0^0 , 
26: x4^0 <= x0^0 , 
Narrowing transition: 
<l4, l26, 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l4, l4, undef326 <= undef323 + undef324 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l6, l4, 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l6, l10, undef517 <= undef515 + undef516 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l6, undef448 <= undef434 + undef435 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l6, 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l12, l26, 1 + undef683 <= undef673 /\ x0^0 = undef673 /\ x1^0 = undef680 /\ x2^0 = undef681 /\ x3^0 = undef682 /\ x4^0 = undef683, {x0^0 -> undef673, x1^0 -> undef680, x2^0 -> undef681, x3^0 -> undef682, x4^0 -> undef683, x5^0 -> 1, x6^0 -> undef687, x7^0 -> undef688, rest remain the same}>
Narrowing transition: 
<l26, l12, 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l26, l6, undef635 + undef636 <= undef625 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l4, l26, 1 + x0^0 <= x4^0 /\ 1 + undef299 + undef300 <= undef302 /\ x0^0 = undef289 /\ x1^0 = undef296 /\ x2^0 = undef297 /\ x3^0 = undef298 /\ x4^0 = undef299 /\ x5^0 = undef300 /\ x6^0 = undef301 /\ x7^0 = undef302 /\ undef241 = undef289 /\ undef248 = undef296 /\ undef249 = undef297 /\ undef250 = undef298 /\ undef251 = undef299 /\ undef252 = undef300, {x0^0 -> undef241, x1^0 -> undef248, x2^0 -> undef249, x3^0 -> undef250, x4^0 -> undef251, x5^0 -> 1 + undef252, x6^0 -> undef255, x7^0 -> undef256, rest remain the same}>
<l4, l4, undef326 <= undef323 + undef324 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
<l6, l4, 1 + x0^0 <= x4^0 /\ 1 + undef491 + undef492 <= undef493 /\ x0^0 = undef481 /\ x1^0 = undef488 /\ x2^0 = undef489 /\ x3^0 = undef490 /\ x4^0 = undef491 /\ x5^0 = undef492 /\ x6^0 = undef493 /\ undef409 = undef481 /\ undef416 = undef488 /\ undef417 = undef489 /\ undef418 = undef490 /\ undef419 = undef491 /\ undef420 = undef492 /\ undef421 = undef493, {x0^0 -> undef409, x1^0 -> undef416, x2^0 -> undef417, x3^0 -> undef418, x4^0 -> undef419, x5^0 -> undef420, x6^0 -> undef421, x7^0 -> undef420, rest remain the same}>
<l6, l10, undef517 <= undef515 + undef516 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517, {x0^0 -> undef505, x1^0 -> undef512, x2^0 -> undef513, x3^0 -> undef514, x4^0 -> undef515, x5^0 -> undef516, x6^0 -> undef517, x7^0 -> undef519, rest remain the same}>
<l10, l6, undef448 <= undef434 + undef435 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef433 /\ x1^0 = undef440 /\ x2^0 = undef441 /\ x3^0 = undef442 /\ x4^0 = undef443 /\ x5^0 = undef444 /\ x6^0 = undef445 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l10, l6, 1 + x0^0 <= x4^0 /\ 1 + undef458 + undef459 <= undef472 /\ x0^0 = undef457 /\ x1^0 = undef464 /\ x2^0 = undef465 /\ x3^0 = undef466 /\ x4^0 = undef467 /\ x5^0 = undef468 /\ x6^0 = undef469 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l26, l12, 1 + x0^0 <= x4^0 /\ 1 + undef601 <= undef611 + undef612 /\ x0^0 = undef601 /\ x1^0 = undef608 /\ x2^0 = undef609 /\ x3^0 = undef610 /\ x4^0 = undef611 /\ x5^0 = undef612 /\ undef529 = undef601 /\ undef536 = undef608 /\ undef537 = undef609 /\ undef538 = undef610 /\ undef539 = undef611, {x0^0 -> undef529, x1^0 -> undef536, x2^0 -> undef537, x3^0 -> undef538, x4^0 -> 1 + undef539, x5^0 -> undef543, x6^0 -> undef544, x7^0 -> undef530, rest remain the same}>
<l26, l6, undef635 + undef636 <= undef625 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef625 /\ x1^0 = undef632 /\ x2^0 = undef633 /\ x3^0 = undef634 /\ x4^0 = undef635 /\ x5^0 = undef636 /\ undef553 = undef625 /\ undef560 = undef632 /\ undef561 = undef633 /\ undef562 = undef634 /\ undef563 = undef635 /\ undef564 = undef636, {x0^0 -> undef553, x1^0 -> undef560, x2^0 -> undef561, x3^0 -> undef562, x4^0 -> undef563, x5^0 -> undef564, x6^0 -> undef564, x7^0 -> undef567, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l4, l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010247s
[33mRanking function: [36m12*x0^0 - 12*x4^0 - 12*x5^0[0m
New Graphs: 
Transitions:
<l6, l6, undef448 <= undef434 + undef435 /\ undef517 <= undef515 + undef516 /\ 1 + x0^0 <= x4^0 /\ 1 + undef505 <= undef515 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef433 /\ undef344 = undef440 /\ undef345 = undef441 /\ undef346 = undef442 /\ undef347 = undef443 /\ undef348 = undef444 /\ undef349 = undef445 /\ undef433 = undef505 /\ undef440 = undef512 /\ undef441 = undef513 /\ undef442 = undef514 /\ undef443 = undef515 /\ undef444 = undef516 /\ undef445 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
<l6, l6, undef517 <= undef515 + undef516 /\ 1 + x0^0 <= x4^0 /\ 1 + undef458 + undef459 <= undef472 /\ 1 + undef505 <= undef515 /\ x0^0 = undef505 /\ x1^0 = undef512 /\ x2^0 = undef513 /\ x3^0 = undef514 /\ x4^0 = undef515 /\ x5^0 = undef516 /\ x6^0 = undef517 /\ undef337 = undef361 /\ undef344 = undef368 /\ undef345 = undef369 /\ undef346 = undef370 /\ undef347 = undef371 /\ undef348 = undef372 /\ undef349 = undef373 /\ undef361 = undef457 /\ undef368 = undef464 /\ undef369 = undef465 /\ undef370 = undef466 /\ undef371 = undef467 /\ undef372 = undef468 /\ undef373 = undef469 /\ undef457 = undef505 /\ undef464 = undef512 /\ undef465 = undef513 /\ undef466 = undef514 /\ undef467 = undef515 /\ undef468 = undef516 /\ undef469 = undef517, {x0^0 -> undef337, x1^0 -> undef344, x2^0 -> undef345, x3^0 -> undef346, x4^0 -> undef347, x5^0 -> undef348, x6^0 -> 1 + undef349, x7^0 -> undef351, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Transitions:
<l4, l4, undef326 <= undef323 + undef324 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005065s
[33mRanking function: [36mx4^0 + x5^0 - x6^0[0m
New Graphs: 
Transitions:
<l4, l4, undef326 <= undef323 + undef324 /\ 1 + x0^0 <= x4^0 /\ x0^0 = undef313 /\ x1^0 = undef320 /\ x2^0 = undef321 /\ x3^0 = undef322 /\ x4^0 = undef323 /\ x5^0 = undef324 /\ x6^0 = undef325 /\ x7^0 = undef326 /\ undef265 = undef313 /\ undef272 = undef320 /\ undef273 = undef321 /\ undef274 = undef322 /\ undef275 = undef323 /\ undef276 = undef324 /\ undef277 = undef325 /\ undef278 = undef326, {x0^0 -> undef265, x1^0 -> undef272, x2^0 -> undef273, x3^0 -> undef274, x4^0 -> undef275, x5^0 -> undef276, x6^0 -> undef277, x7^0 -> 1 + undef278, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0, x7^0
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002456s
[33mRanking function: [36mx4^0 + x5^0 - x7^0[0m
New Graphs: 
Proving termination of subgraph 5
Analyzing SCC {l16}...
No cycles found.

[32mProgram Terminates[0m

