YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (3 <= (0 + a^0))>
<l1, l2, ((1 + a^0) <= 2)>
<l1, l3, ((0 + a^0) <= 2) /\ (2 <= (0 + a^0)), par{tmp^0 -> 1}>
<l3, l4, true>
<l5, l1, (2 <= (0 + a^0))>
<l5, l1, ((1 + a^0) <= 1)>
<l5, l3, ((0 + a^0) <= 1) /\ (1 <= (0 + a^0)), par{tmp^0 -> 1}>
<l2, l3, true, par{tmp^0 -> 0}>
<l6, l5, (undef28 = ~(1)) /\ (undef26 = 1), par{a^0 -> (0 + undef26), ret_returnOne3^0 -> undef26}>
<l7, l6, true>

Fresh variables:
undef26, undef28, 

Undef variables:
undef26, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (undef28 = ~(1)) /\ (undef26 = 1) /\ ((0 + (0 + undef26)) <= 1) /\ (1 <= (0 + (0 + undef26)))>

Fresh variables:
undef26, undef28, 

Undef variables:
undef26, undef28, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, 1 + undef28 = 0 /\ undef26 = 1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

