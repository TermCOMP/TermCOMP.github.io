YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, true>
<l3, l4, ((0 + n12^0) <= (0 + i13^0))>
<l3, l5, ((1 + i13^0) <= (0 + n12^0)), par{i13^0 -> (1 + i13^0)}>
<l5, l3, true>
<l2, l5, ((0 + n9^0) <= (0 + i10^0)) /\ (undef35 = undef35), par{i13^0 -> 0, n12^0 -> (0 + n^0), tmp___0^0 -> undef35}>
<l2, l1, ((1 + i10^0) <= (0 + n9^0)), par{i10^0 -> (1 + i10^0)}>
<l6, l1, (undef47 = undef47) /\ (undef48 = undef48) /\ (undef46 = undef46), par{i10^0 -> 0, n9^0 -> undef46, n^0 -> undef47, tmp^0 -> undef48}>
<l7, l6, true>

Fresh variables:
undef35, undef46, undef47, undef48, 

Undef variables:
undef35, undef46, undef47, undef48, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (i10^0 = 0) /\ (n9^0 = undef46) /\ (n^0 = undef47) /\ (undef47 = undef47) /\ (undef48 = undef48) /\ (undef46 = undef46)>
<l1, l5, ((0 + n9^0) <= (0 + i10^0)) /\ (undef35 = undef35), par{i13^0 -> 0, n12^0 -> (0 + n^0)}>
<l1, l1, ((1 + i10^0) <= (0 + n9^0)), par{i10^0 -> (1 + i10^0)}>
<l5, l4, ((0 + n12^0) <= (0 + i13^0))>
<l5, l5, ((1 + i13^0) <= (0 + n12^0)), par{i13^0 -> (1 + i13^0)}>

Fresh variables:
undef35, undef46, undef47, undef48, 

Undef variables:
undef35, undef46, undef47, undef48, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + i10^0 <= n9^0, {i10^0 -> 1 + i10^0, rest remain the same}>
Variables:
i10^0, n9^0

Graph 2:
Transitions:
<l5, l5, 1 + i13^0 <= n12^0, {i13^0 -> 1 + i13^0, rest remain the same}>
Variables:
i13^0, n12^0

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, i10^0 = 0 /\ n9^0 = undef46 /\ n^0 = undef47, {all remain the same}>

Graph 2
<l1, l5, n9^0 <= i10^0, {i13^0 -> 0, n12^0 -> n^0, rest remain the same}>

Graph 3
<l5, l4, n12^0 <= i13^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 4 , 3 )
( 5 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001042

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000422s
[33mRanking function: [36m-1 - i10^0 + n9^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000793

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000381s
[33mRanking function: [36m-1 - i13^0 + n12^0[0m
New Graphs: 
Proving termination of subgraph 3
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

