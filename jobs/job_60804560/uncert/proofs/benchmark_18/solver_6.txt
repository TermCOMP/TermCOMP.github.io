YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l5, l3, (arg1 > 0) /\ (0 = arg2), par{arg1 -> 0, arg2 -> 0, arg3 -> undef3, arg4 -> undef4}>
<l5, l8, (undef5 <= arg1) /\ (arg2 > 0) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> 0, arg3 -> undef7, arg4 -> undef8}>
<l5, l8, (undef10 > ~(1)) /\ (arg2 > 0) /\ (undef9 <= arg1) /\ (arg1 > 0) /\ (undef9 > 0), par{arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12}>
<l8, l3, (arg1 > 0), par{arg1 -> arg2, arg2 -> 0, arg3 -> undef15, arg4 -> undef16}>
<l8, l2, (undef17 <= arg1) /\ (undef21 > 1) /\ (arg1 > 0) /\ (undef17 > 0), par{arg1 -> undef17, arg3 -> 0, arg4 -> undef20}>
<l8, l2, (undef26 > 1) /\ (undef24 > ~(1)) /\ (undef22 <= arg1) /\ (arg1 > 0) /\ (undef22 > 0), par{arg1 -> undef22, arg3 -> undef24, arg4 -> undef25}>
<l2, l3, (arg1 > 0) /\ (undef31 > 1), par{arg1 -> arg2, arg2 -> arg3, arg3 -> undef29, arg4 -> undef30}>
<l3, l4, (arg1 < 2) /\ (arg2 > 1), par{arg3 -> undef34, arg4 -> undef35}>
<l4, l6, (arg2 > 1) /\ (arg1 < 2) /\ ((arg2 - (2 * undef40)) < 2) /\ ((arg2 - (2 * undef40)) >= 0), par{arg3 -> (arg2 - (2 * undef40)), arg4 -> undef39}>
<l3, l4, (arg1 > 2) /\ (arg2 > 1), par{arg3 -> undef43, arg4 -> undef44}>
<l4, l6, (arg2 > 1) /\ (arg1 > 2) /\ ((arg2 - (2 * undef49)) < 2) /\ ((arg2 - (2 * undef49)) >= 0), par{arg3 -> (arg2 - (2 * undef49)), arg4 -> undef48}>
<l6, l7, (arg2 > 1) /\ (undef54 > 0) /\ (arg2 > undef54) /\ (0 = arg3), par{arg3 -> 0}>
<l7, l3, (arg2 > 1) /\ (arg2 > undef56) /\ (undef56 > 0) /\ ((arg2 - (2 * undef56)) < 2) /\ ((arg2 - (2 * undef56)) >= 0) /\ (0 = arg3), par{arg2 -> undef56, arg3 -> undef57, arg4 -> undef58}>
<l6, l3, (arg2 > 1) /\ ((arg2 - 1) < arg2) /\ (1 = arg3), par{arg2 -> (arg2 - 1), arg3 -> undef61, arg4 -> undef62}>
<l1, l5, true, par{arg1 -> undef63, arg2 -> undef64, arg3 -> undef65, arg4 -> undef66}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef20, undef21, undef22, undef24, undef25, undef26, undef29, undef30, undef31, undef34, undef35, undef39, undef40, undef43, undef44, undef48, undef49, undef54, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef20, undef21, undef22, undef24, undef25, undef26, undef29, undef30, undef31, undef34, undef35, undef39, undef40, undef43, undef44, undef48, undef49, undef54, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (undef63 > 0) /\ (0 = undef64), par{arg1 -> 0, arg2 -> 0}>
<l0, l3, (undef5 <= undef63) /\ (undef64 > 0) /\ (undef63 > 0) /\ (undef5 > 0) /\ (undef5 > 0), par{arg1 -> 0, arg2 -> 0}>
<l0, l3, (undef5 <= undef63) /\ (undef64 > 0) /\ (undef63 > 0) /\ (undef5 > 0) /\ (undef17 <= undef5) /\ (undef21 > 1) /\ (undef5 > 0) /\ (undef17 > 0) /\ (undef17 > 0) /\ (undef31 > 1), par{arg1 -> 0, arg2 -> 0}>
<l0, l3, (undef5 <= undef63) /\ (undef64 > 0) /\ (undef63 > 0) /\ (undef5 > 0) /\ (undef26 > 1) /\ (undef24 > ~(1)) /\ (undef22 <= undef5) /\ (undef5 > 0) /\ (undef22 > 0) /\ (undef22 > 0) /\ (undef31 > 1), par{arg1 -> 0, arg2 -> undef24}>
<l0, l3, (undef10 > ~(1)) /\ (undef64 > 0) /\ (undef9 <= undef63) /\ (undef63 > 0) /\ (undef9 > 0) /\ (undef9 > 0), par{arg1 -> undef10, arg2 -> 0}>
<l0, l3, (undef10 > ~(1)) /\ (undef64 > 0) /\ (undef9 <= undef63) /\ (undef63 > 0) /\ (undef9 > 0) /\ (undef17 <= undef9) /\ (undef21 > 1) /\ (undef9 > 0) /\ (undef17 > 0) /\ (undef17 > 0) /\ (undef31 > 1), par{arg1 -> undef10, arg2 -> 0}>
<l0, l3, (undef10 > ~(1)) /\ (undef64 > 0) /\ (undef9 <= undef63) /\ (undef63 > 0) /\ (undef9 > 0) /\ (undef26 > 1) /\ (undef24 > ~(1)) /\ (undef22 <= undef9) /\ (undef9 > 0) /\ (undef22 > 0) /\ (undef22 > 0) /\ (undef31 > 1), par{arg1 -> undef10, arg2 -> undef24}>
<l3, l3, (arg1 < 2) /\ (arg2 > 1) /\ (arg2 > 1) /\ (arg1 < 2) /\ ((arg2 - (2 * undef40)) < 2) /\ ((arg2 - (2 * undef40)) >= 0) /\ (arg2 > 1) /\ (undef54 > 0) /\ (arg2 > undef54) /\ (0 = (arg2 - (2 * undef40))) /\ (arg2 > 1) /\ (arg2 > undef56) /\ (undef56 > 0) /\ ((arg2 - (2 * undef56)) < 2) /\ ((arg2 - (2 * undef56)) >= 0) /\ (0 = 0), par{arg2 -> undef56}>
<l3, l3, (arg1 < 2) /\ (arg2 > 1) /\ (arg2 > 1) /\ (arg1 < 2) /\ ((arg2 - (2 * undef40)) < 2) /\ ((arg2 - (2 * undef40)) >= 0) /\ (arg2 > 1) /\ ((arg2 - 1) < arg2) /\ (1 = (arg2 - (2 * undef40))), par{arg2 -> (arg2 - 1)}>
<l3, l3, (arg1 > 2) /\ (arg2 > 1) /\ (arg2 > 1) /\ (arg1 > 2) /\ ((arg2 - (2 * undef49)) < 2) /\ ((arg2 - (2 * undef49)) >= 0) /\ (arg2 > 1) /\ (undef54 > 0) /\ (arg2 > undef54) /\ (0 = (arg2 - (2 * undef49))) /\ (arg2 > 1) /\ (arg2 > undef56) /\ (undef56 > 0) /\ ((arg2 - (2 * undef56)) < 2) /\ ((arg2 - (2 * undef56)) >= 0) /\ (0 = 0), par{arg2 -> undef56}>
<l3, l3, (arg1 > 2) /\ (arg2 > 1) /\ (arg2 > 1) /\ (arg1 > 2) /\ ((arg2 - (2 * undef49)) < 2) /\ ((arg2 - (2 * undef49)) >= 0) /\ (arg2 > 1) /\ ((arg2 - 1) < arg2) /\ (1 = (arg2 - (2 * undef49))), par{arg2 -> (arg2 - 1)}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef20, undef21, undef22, undef24, undef25, undef26, undef29, undef30, undef31, undef34, undef35, undef39, undef40, undef43, undef44, undef48, undef49, undef54, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef20, undef21, undef22, undef24, undef25, undef26, undef29, undef30, undef31, undef34, undef35, undef39, undef40, undef43, undef44, undef48, undef49, undef54, undef56, undef57, undef58, undef61, undef62, undef63, undef64, undef65, undef66, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 2*undef56 <= arg2 /\ 1 + undef54 <= arg2 /\ 1 + undef56 <= arg2 /\ 1 <= undef54 /\ 1 <= undef56 /\ arg1 <= 1 /\ arg2 <= 1 + 2*undef56 /\ 2 <= arg2 /\ arg2 = 2*undef40, {arg2 -> undef56, rest remain the same}>
<l3, l3, arg1 <= 1 /\ 2 <= arg2 /\ arg2 = 1 + 2*undef40, {arg2 -> -1 + arg2, rest remain the same}>
<l3, l3, 2*undef56 <= arg2 /\ 1 + undef54 <= arg2 /\ 1 + undef56 <= arg2 /\ 1 <= undef54 /\ 1 <= undef56 /\ arg2 <= 1 + 2*undef56 /\ 2 <= arg2 /\ 3 <= arg1 /\ arg2 = 2*undef49, {arg2 -> undef56, rest remain the same}>
<l3, l3, 2 <= arg2 /\ 3 <= arg1 /\ arg2 = 1 + 2*undef49, {arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef63 /\ undef64 = 0, {arg1 -> 0, arg2 -> 0, rest remain the same}>
<l0, l3, undef5 <= undef63 /\ 1 <= undef5 /\ 1 <= undef63 /\ 1 <= undef64, {arg1 -> 0, arg2 -> 0, rest remain the same}>
<l0, l3, undef5 <= undef63 /\ undef17 <= undef5 /\ 1 <= undef5 /\ 1 <= undef17 /\ 1 <= undef63 /\ 1 <= undef64 /\ 2 <= undef21 /\ 2 <= undef31, {arg1 -> 0, arg2 -> 0, rest remain the same}>
<l0, l3, undef5 <= undef63 /\ undef22 <= undef5 /\ 0 <= undef24 /\ 1 <= undef5 /\ 1 <= undef22 /\ 1 <= undef63 /\ 1 <= undef64 /\ 2 <= undef26 /\ 2 <= undef31, {arg1 -> 0, arg2 -> undef24, rest remain the same}>
<l0, l3, undef9 <= undef63 /\ 0 <= undef10 /\ 1 <= undef9 /\ 1 <= undef63 /\ 1 <= undef64, {arg1 -> undef10, arg2 -> 0, rest remain the same}>
<l0, l3, undef9 <= undef63 /\ undef17 <= undef9 /\ 0 <= undef10 /\ 1 <= undef9 /\ 1 <= undef17 /\ 1 <= undef63 /\ 1 <= undef64 /\ 2 <= undef21 /\ 2 <= undef31, {arg1 -> undef10, arg2 -> 0, rest remain the same}>
<l0, l3, undef9 <= undef63 /\ undef22 <= undef9 /\ 0 <= undef10 /\ 0 <= undef24 /\ 1 <= undef9 /\ 1 <= undef22 /\ 1 <= undef63 /\ 1 <= undef64 /\ 2 <= undef26 /\ 2 <= undef31, {arg1 -> undef10, arg2 -> undef24, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005666

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001739s
[33mRanking function: [36m(7 / 2) + (~(11) / 2)*arg1 + arg2[0m
New Graphs: 
Transitions:
<l3, l3, 2*undef56 <= arg2 /\ 1 + undef54 <= arg2 /\ 1 + undef56 <= arg2 /\ 1 <= undef54 /\ 1 <= undef56 /\ arg2 <= 1 + 2*undef56 /\ 2 <= arg2 /\ 3 <= arg1 /\ arg2 = 2*undef49, {arg2 -> undef56, rest remain the same}>
<l3, l3, 2 <= arg2 /\ 3 <= arg1 /\ arg2 = 1 + 2*undef49, {arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000774s
[33mRanking function: [36m-2 + arg2[0m
New Graphs: 
[32mProgram Terminates[0m

