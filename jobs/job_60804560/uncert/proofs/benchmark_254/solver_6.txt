NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, true, par{arg1 -> 0, arg2 -> 0}>
<l2, l2, (arg2 > ~(1)) /\ (arg1 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - arg1) >= 1), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg1 > ~(1)) /\ ((arg2 - arg1) = 0) /\ (arg2 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 2)}>
<l1, l3, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 0) /\ (arg2 = 0)>
<l2, l2, (arg2 > ~(1)) /\ (arg1 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - arg1) >= 1), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg1 > ~(1)) /\ ((arg2 - arg1) = 0) /\ (arg2 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 2)}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.006172

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000621s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003945s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.026520s
Time used: 0.026275
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.024594s
Time used: 0.024126
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020162s
Time used: 4.00028
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.027116s
Time used: 4.00052
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015049s
Time used: 1.00031
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.019846s
Time used: 0.012973
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.003284s
Time used: 1.00038

LOG: SAT solveNonLinear - Elapsed time: 1.023130s
Cost: 1; Total time: 1.01336
[33mQuasi-ranking function: [36m50000 - 2*arg1 + arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000526s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006099s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.036454s
Time used: 0.036232
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.051931s
Time used: 0.051439
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.019102s
Time used: 4.00108
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.032600s
Time used: 4.00048
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.016398s
Time used: 1.00034
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020014s
Time used: 0.012313
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.006201s
Time used: 1.00055

LOG: SAT solveNonLinear - Elapsed time: 1.026215s
Cost: 1; Total time: 1.01286
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg2 /\ 50001 <= arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000600s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.015468s
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 50001 <= arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.047669s
Time used: 0.047263
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.069018s
Time used: 0.068284
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.023500s
Time used: 4.00074
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.033661s
Time used: 4.00057
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015470s
Time used: 1.00032
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.023428s
Time used: 0.015801
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.006247s
Time used: 1.00066

LOG: SAT solveNonLinear - Elapsed time: 1.029675s
Cost: 1; Total time: 1.01646
[33mQuasi-ranking function: [36m50000 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 50001 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000624s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009183s
Trying to remove transition: <l2, l2, 50001 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.048945s
Time used: 0.04852
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.068255s
Time used: 0.067547
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.042012s
Time used: 4.01898
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.062674s
Time used: 4.02775
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010350s
Time used: 1.00073
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.023810s
Time used: 0.01733
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.015928s
Time used: 1.01026

LOG: SAT solveNonLinear - Elapsed time: 1.039739s
Cost: 1; Total time: 1.02759
[33mQuasi-ranking function: [36m50000 - arg1 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000715s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014505s
Trying to remove transition: <l2, l2, 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.049805s
Time used: 0.049407
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.083066s
Time used: 0.082239
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.024974s
Time used: 4.00145
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.032342s
Time used: 4.00078
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.013806s
Time used: 1.00057
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.032100s
Time used: 4.00141
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009482s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.009515s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>
<l2, end, 0 <= arg2 /\ 1 + arg1 <= 0 /\ 1 + arg1 <= arg2, {all remain the same}>
<l2, end, arg2 <= arg1 /\ 1 + arg1 <= 0 /\ 1 + arg2 <= 0, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg2 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008052s
Time used: 0.007877
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.010813s
Time used: 0.010763

LOG: SAT solveNonLinear - Elapsed time: 0.018865s
Cost: 2; Total time: 0.01864
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 3
Strengthening exit transition (result): 
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005129s
Time used: 0.005061

LOG: SAT solveNonLinear - Elapsed time: 0.005129s
Cost: 0; Total time: 0.005061
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 0 <= arg1, arg1 <= arg2, 
OPEN EXITS: 
<l2, end, arg1 <= arg2 /\ 0 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>
Conditions: arg1 <= arg2, 0 <= arg1, 
OPEN EXITS: 
<l0, l2, arg1 <= arg2 /\ arg1 = 0 /\ arg2 = 0, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

