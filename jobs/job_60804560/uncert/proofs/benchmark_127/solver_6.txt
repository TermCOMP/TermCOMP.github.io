YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l6, l8, (undef1 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0), par{arg1 -> undef1, arg3 -> 1, arg4 -> undef4, arg5 -> undef5, arg6 -> undef6}>
<l6, l2, (undef13 > ~(1)) /\ (arg2 > 0) /\ (undef7 <= arg1) /\ (arg1 > 0) /\ (undef7 > 0) /\ (undef8 > ~(1)), par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9, arg4 -> undef10, arg5 -> undef11, arg6 -> undef12}>
<l7, l2, (undef14 <= arg1) /\ ((undef15 + 1) <= arg1) /\ (arg1 > 0) /\ (undef14 > 0) /\ (undef15 > ~(1)), par{arg1 -> undef14, arg2 -> undef15, arg3 -> arg2, arg4 -> undef17, arg5 -> undef18, arg6 -> undef19}>
<l2, l3, (undef26 > 0) /\ (arg3 > 1) /\ (undef20 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef20 > ~(1)), par{arg1 -> undef20, arg2 -> arg3, arg3 -> undef22, arg4 -> undef23, arg5 -> undef24, arg6 -> undef25}>
<l8, l9, (arg2 > ~(1)) /\ (arg1 > 0) /\ (arg3 > 0) /\ (arg3 < arg2) /\ (undef30 > ~(1)), par{arg2 -> (arg1 - 1), arg3 -> 0, arg4 -> undef30, arg5 -> arg2, arg6 -> (arg3 + 1)}>
<l9, l8, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2), par{arg1 -> (arg2 - 1), arg2 -> arg5, arg3 -> arg6, arg4 -> undef36, arg5 -> undef37, arg6 -> undef38}>
<l9, l9, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2), par{arg3 -> (arg3 + 1)}>
<l9, l9, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2), par{arg3 -> (arg3 + 1), arg6 -> undef50}>
<l3, l3, ((undef51 + 2) <= arg1) /\ (arg2 > 1) /\ (arg1 > 1) /\ (undef51 > ~(1)), par{arg1 -> undef51, arg3 -> undef53, arg4 -> undef54, arg5 -> undef55, arg6 -> undef56}>
<l3, l5, ((undef58 + 1) <= arg1) /\ (arg2 > 1) /\ ((undef61 + 1) <= arg1) /\ (arg1 > 0) /\ (undef57 > 4) /\ (undef58 > ~(1)) /\ (undef61 > ~(1)), par{arg1 -> undef57, arg2 -> undef58, arg3 -> undef59, arg4 -> arg2, arg5 -> undef61, arg6 -> undef62}>
<l4, l5, (undef63 <= arg1) /\ ((undef64 + 2) <= arg1) /\ (undef64 <= arg5) /\ ((undef67 + 2) <= arg1) /\ (undef67 <= arg5) /\ (arg1 > 5) /\ (arg5 > ~(1)) /\ (undef63 > 5) /\ (undef64 > ~(1)) /\ (undef67 > ~(1)) /\ ((arg4 + 6) <= arg1), par{arg1 -> undef63, arg2 -> undef64, arg3 -> arg2, arg4 -> arg3, arg5 -> undef67, arg6 -> undef68}>
<l3, l5, ((undef69 - 7) <= arg1) /\ (arg2 > 1) /\ ((undef70 + 1) <= arg1) /\ ((undef73 + 1) <= arg1) /\ (arg1 > 0) /\ (undef69 > 7) /\ (undef70 > ~(1)) /\ (undef73 > ~(1)), par{arg1 -> undef69, arg2 -> undef70, arg3 -> undef71, arg4 -> arg2, arg5 -> undef73, arg6 -> undef74}>
<l5, l3, ((undef75 + 2) <= arg1) /\ (arg4 > 1) /\ (undef75 <= arg2) /\ (undef75 <= arg5) /\ (arg1 > 4) /\ (arg2 > ~(1)) /\ (arg5 > ~(1)) /\ (undef75 > ~(1)), par{arg1 -> undef75, arg2 -> arg4, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80}>
<l3, l3, ((undef81 + 4) <= arg1) /\ (arg2 > 1) /\ (arg1 > 4) /\ (undef81 > 0), par{arg1 -> undef81, arg3 -> undef83, arg4 -> undef84, arg5 -> undef85, arg6 -> undef86}>
<l1, l6, true, par{arg1 -> undef87, arg2 -> undef88, arg3 -> undef89, arg4 -> undef90, arg5 -> undef91, arg6 -> undef92}>

Fresh variables:
undef1, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef26, undef30, undef36, undef37, undef38, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef61, undef62, undef63, undef64, undef67, undef68, undef69, undef70, undef71, undef73, undef74, undef75, undef77, undef78, undef79, undef80, undef81, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Undef variables:
undef1, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef26, undef30, undef36, undef37, undef38, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef61, undef62, undef63, undef64, undef67, undef68, undef69, undef70, undef71, undef73, undef74, undef75, undef77, undef78, undef79, undef80, undef81, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l9, (undef1 > ~(1)) /\ (undef88 > 0) /\ (undef87 > 0) /\ (undef88 > ~(1)) /\ (undef1 > 0) /\ (1 > 0) /\ (1 < undef88) /\ (undef30 > ~(1)), par{arg1 -> undef1, arg2 -> (undef1 - 1), arg3 -> 0, arg4 -> undef30, arg5 -> undef88, arg6 -> (1 + 1)}>
<l0, l3, (undef13 > ~(1)) /\ (undef88 > 0) /\ (undef7 <= undef87) /\ (undef87 > 0) /\ (undef7 > 0) /\ (undef8 > ~(1)) /\ (undef26 > 0) /\ (undef9 > 1) /\ (undef20 <= undef8) /\ (undef7 > 0) /\ (undef8 > ~(1)) /\ (undef20 > ~(1)), par{arg1 -> undef20, arg2 -> undef9, arg3 -> undef22, arg4 -> undef23, arg5 -> undef24, arg6 -> undef25}>
<l3, l3, ((undef51 + 2) <= arg1) /\ (arg2 > 1) /\ (arg1 > 1) /\ (undef51 > ~(1)), par{arg1 -> undef51, arg3 -> undef53, arg4 -> undef54, arg5 -> undef55, arg6 -> undef56}>
<l3, l3, ((undef58 + 1) <= arg1) /\ (arg2 > 1) /\ ((undef61 + 1) <= arg1) /\ (arg1 > 0) /\ (undef57 > 4) /\ (undef58 > ~(1)) /\ (undef61 > ~(1)) /\ ((undef75 + 2) <= undef57) /\ (arg2 > 1) /\ (undef75 <= undef58) /\ (undef75 <= undef61) /\ (undef57 > 4) /\ (undef58 > ~(1)) /\ (undef61 > ~(1)) /\ (undef75 > ~(1)), par{arg1 -> undef75, arg2 -> arg2, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80}>
<l3, l3, ((undef69 - 7) <= arg1) /\ (arg2 > 1) /\ ((undef70 + 1) <= arg1) /\ ((undef73 + 1) <= arg1) /\ (arg1 > 0) /\ (undef69 > 7) /\ (undef70 > ~(1)) /\ (undef73 > ~(1)) /\ ((undef75 + 2) <= undef69) /\ (arg2 > 1) /\ (undef75 <= undef70) /\ (undef75 <= undef73) /\ (undef69 > 4) /\ (undef70 > ~(1)) /\ (undef73 > ~(1)) /\ (undef75 > ~(1)), par{arg1 -> undef75, arg2 -> arg2, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80}>
<l3, l3, ((undef81 + 4) <= arg1) /\ (arg2 > 1) /\ (arg1 > 4) /\ (undef81 > 0), par{arg1 -> undef81, arg3 -> undef83, arg4 -> undef84, arg5 -> undef85, arg6 -> undef86}>
<l9, l9, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2) /\ (arg5 > ~(1)) /\ ((arg2 - 1) > 0) /\ (arg6 > 0) /\ (arg6 < arg5) /\ (undef30 > ~(1)), par{arg1 -> (arg2 - 1), arg2 -> ((arg2 - 1) - 1), arg3 -> 0, arg4 -> undef30, arg5 -> arg5, arg6 -> (arg6 + 1)}>
<l9, l9, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2), par{arg3 -> (arg3 + 1)}>
<l9, l9, (arg4 > 0) /\ (arg4 > arg3) /\ (arg1 > 0) /\ (arg6 > 1) /\ (arg2 < arg1) /\ ((arg2 - 1) < arg1) /\ (arg2 > ~(1)) /\ ((arg2 - 1) < arg2), par{arg3 -> (arg3 + 1), arg6 -> undef50}>

Fresh variables:
undef1, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef26, undef30, undef36, undef37, undef38, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef61, undef62, undef63, undef64, undef67, undef68, undef69, undef70, undef71, undef73, undef74, undef75, undef77, undef78, undef79, undef80, undef81, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Undef variables:
undef1, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef26, undef30, undef36, undef37, undef38, undef50, undef51, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef61, undef62, undef63, undef64, undef67, undef68, undef69, undef70, undef71, undef73, undef74, undef75, undef77, undef78, undef79, undef80, undef81, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 0 <= undef51 /\ 2 <= arg1 /\ 2 + undef51 <= arg1 /\ 2 <= arg2, {arg1 -> undef51, arg3 -> undef53, arg4 -> undef54, arg5 -> undef55, arg6 -> undef56, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 + undef61 <= arg1 /\ 0 <= undef58 /\ undef75 <= undef58 /\ 0 <= undef61 /\ undef75 <= undef61 /\ 0 <= undef75 /\ 2 <= arg2 /\ 2 + undef75 <= undef57 /\ 5 <= undef57, {arg1 -> undef75, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef70 <= arg1 /\ 1 + undef73 <= arg1 /\ 0 <= undef70 /\ undef75 <= undef70 /\ 0 <= undef73 /\ undef75 <= undef73 /\ 0 <= undef75 /\ 2 <= arg2 /\ 2 + undef75 <= undef69 /\ undef69 <= 7 + arg1 /\ 8 <= undef69, {arg1 -> undef75, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80, rest remain the same}>
<l3, l3, 1 <= undef81 /\ 2 <= arg2 /\ 4 + undef81 <= arg1 /\ 5 <= arg1, {arg1 -> undef81, arg3 -> undef83, arg4 -> undef84, arg5 -> undef85, arg6 -> undef86, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Graph 2:
Transitions:
<l9, l9, 1 <= arg1 /\ 1 + arg2 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 1 + arg6 <= arg5 /\ 0 <= arg5 /\ 0 <= undef30 /\ 2 <= arg2 /\ 2 <= arg6, {arg1 -> -1 + arg2, arg2 -> -2 + arg2, arg3 -> 0, arg4 -> undef30, arg6 -> 1 + arg6, rest remain the same}>
<l9, l9, 1 <= arg1 /\ 1 + arg2 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 0 <= arg2 /\ 2 <= arg6, {arg3 -> 1 + arg3, rest remain the same}>
<l9, l9, 1 <= arg1 /\ 1 + arg2 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 0 <= arg2 /\ 2 <= arg6, {arg3 -> 1 + arg3, arg6 -> undef50, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 <= undef7 /\ 1 <= undef26 /\ 1 <= undef87 /\ 1 <= undef88 /\ undef7 <= undef87 /\ 0 <= undef8 /\ undef20 <= undef8 /\ 0 <= undef13 /\ 0 <= undef20 /\ 2 <= undef9, {arg1 -> undef20, arg2 -> undef9, arg3 -> undef22, arg4 -> undef23, arg5 -> undef24, arg6 -> undef25, rest remain the same}>

Graph 2
<l0, l9, 1 <= undef1 /\ 1 <= undef87 /\ 0 <= undef30 /\ 2 <= undef88, {arg1 -> undef1, arg2 -> -1 + undef1, arg3 -> 0, arg4 -> undef30, arg5 -> undef88, arg6 -> 2, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.011614

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002768s
[33mRanking function: [36m-36 + 18*arg1[0m
New Graphs: 
Transitions:
<l3, l3, 1 <= arg1 /\ 1 + undef58 <= arg1 /\ 1 + undef61 <= arg1 /\ 0 <= undef58 /\ undef75 <= undef58 /\ 0 <= undef61 /\ undef75 <= undef61 /\ 0 <= undef75 /\ 2 <= arg2 /\ 2 + undef75 <= undef57 /\ 5 <= undef57, {arg1 -> undef75, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef70 <= arg1 /\ 1 + undef73 <= arg1 /\ 0 <= undef70 /\ undef75 <= undef70 /\ 0 <= undef73 /\ undef75 <= undef73 /\ 0 <= undef75 /\ 2 <= arg2 /\ 2 + undef75 <= undef69 /\ undef69 <= 7 + arg1 /\ 8 <= undef69, {arg1 -> undef75, arg3 -> undef77, arg4 -> undef78, arg5 -> undef79, arg6 -> undef80, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001492s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.078067

Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002316s
[33mRanking function: [36m(~(13) / 2) + (3 / 2)*arg1 - arg2 + (5 / 3)*arg5[0m
New Graphs: 
Transitions:
<l9, l9, 1 <= arg1 /\ 1 + arg2 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 0 <= arg2 /\ 2 <= arg6, {arg3 -> 1 + arg3, rest remain the same}>
<l9, l9, 1 <= arg1 /\ 1 + arg2 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 0 <= arg2 /\ 2 <= arg6, {arg3 -> 1 + arg3, arg6 -> undef50, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg6
Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000972s
[33mRanking function: [36m-1 - arg3 + arg4[0m
New Graphs: 
[32mProgram Terminates[0m

