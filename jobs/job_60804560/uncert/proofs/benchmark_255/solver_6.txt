NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, true, par{arg1 -> 0, arg2 -> 100}>
<l3, l3, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l3, l3, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>
<l1, l2, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 0) /\ (arg2 = 100)>
<l3, l3, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l3, l3, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l3, l3, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l3, arg1 = 0 /\ arg2 = 100, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 1.05346

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007406s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007387s
Trying to remove transition: <l3, l3, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.474938s
Time used: 0.47286
Trying to remove transition: <l3, l3, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021921s
Time used: 4.00004
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.027263s
Time used: 4.00003
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.026881s
Time used: 4.00017
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.014049s
Time used: 1.00005
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.022498s
Time used: 4.0003
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, arg1 = 0 /\ arg2 = 100, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, arg1 = 0 /\ arg2 = 100, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006939s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.006978s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l3, l3, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg2 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.021563s
Time used: 5.00193
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020725s
Time used: 0.016946
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.008345s
Time used: 1.00428

LOG: SAT solveNonLinear - Elapsed time: 1.029070s
Cost: 2; Total time: 1.02123
[31mFailed at location 3: 1 + arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l3: 1 + arg1 + arg2 <= 0[0m
[36mQuasi-invariant at l3: 0 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004338s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001137s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000882s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000878s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000858s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000873s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000835s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000854s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000823s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000841s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000843s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000835s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000831s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000831s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000817s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000832s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000793s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000787s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000817s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000803s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000816s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000811s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000809s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000805s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000829s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000839s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000842s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000812s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000808s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000831s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000830s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000852s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000854s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000833s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000855s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000842s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000854s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000847s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000853s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000850s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000857s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000841s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000872s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000843s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000837s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000836s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000817s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000836s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000823s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000683s
Remaining time after improvement: 0.958991
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 + arg2 <= 101[0m
[36mQuasi-invariant at l3: 51 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101 /\ arg2 = 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 52 <= arg2 /\ 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: arg1 + arg2 <= 101, 51 <= arg2, 
OPEN EXITS: 
<l3, end, 51 <= arg2 /\ arg1 + arg2 <= 101, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, arg1 = 0 /\ arg2 = 100, {all remain the same}>
Conditions: 51 <= arg2, arg1 + arg2 <= 101, 
OPEN EXITS: 
<l0, l3, arg1 + arg2 <= 101 /\ arg1 = 0 /\ arg2 = 100, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

