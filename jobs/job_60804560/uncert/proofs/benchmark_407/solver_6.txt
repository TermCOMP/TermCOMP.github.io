NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2, arg3 -> undef3}>
<l3, l4, (arg1 < 10), par{arg2 -> arg1, arg3 -> arg1}>
<l4, l3, (arg2 < 6) /\ (arg2 = arg3), par{arg1 -> (arg1 + 1), arg2 -> undef8, arg3 -> undef9}>
<l4, l4, (arg2 > 5) /\ (arg2 = arg3), par{arg2 -> (arg2 + 1), arg3 -> (arg2 + 1)}>
<l1, l2, true, par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>

Fresh variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef15, 

Undef variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (arg1 = undef14) /\ (arg2 = undef14) /\ (arg3 = undef14) /\ (undef13 > 0) /\ (undef14 > ~(1)) /\ (undef14 < 10)>
<l4, l4, (arg2 < 6) /\ (arg2 = arg3) /\ ((arg1 + 1) < 10), par{arg1 -> (arg1 + 1), arg2 -> (arg1 + 1), arg3 -> (arg1 + 1)}>
<l4, l4, (arg2 > 5) /\ (arg2 = arg3), par{arg2 -> (arg2 + 1), arg3 -> (arg2 + 1)}>

Fresh variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef15, 

Undef variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef15, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, arg2 <= 5 /\ arg1 <= 8 /\ arg2 = arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>
<l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l4, 0 <= undef14 /\ 1 <= undef13 /\ undef14 <= 9 /\ arg1 = undef14 /\ arg2 = undef14 /\ arg3 = undef14, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.0156

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000863s
[33mRanking function: [36m8 - arg1[0m
New Graphs: 
Transitions:
<l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>
Variables:
arg2, arg3
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000239s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000862s
Trying to remove transition: <l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003173s
Time used: 0.00309
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021426s
Time used: 4.00015
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.024571s
Time used: 4.00018
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015366s
Time used: 1.00003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020963s
Time used: 4.00002
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l4, 0 <= undef14 /\ 1 <= undef13 /\ undef14 <= 9 /\ arg1 = undef14 /\ arg2 = undef14 /\ arg3 = undef14, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l4, 0 <= undef14 /\ 1 <= undef13 /\ undef14 <= 9 /\ arg1 = undef14 /\ arg2 = undef14 /\ arg3 = undef14, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011461s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.011514s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l4, l4, arg2 <= 5 /\ arg1 <= 8 /\ arg2 = arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>
<l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, 1 + arg3 <= arg2 /\ 6 <= arg2, {all remain the same}>
<l4, end, 1 + arg2 <= arg3 /\ 6 <= arg2, {all remain the same}>
<l4, end, 1 + arg3 <= arg2 /\ 9 <= arg1 /\ arg2 <= 5, {all remain the same}>
<l4, end, arg2 <= arg3 /\ 9 <= arg1 /\ arg2 <= 5, {all remain the same}>
<l4, end, 1 + arg3 <= arg2 /\ arg2 <= 5 /\ arg1 <= 8, {all remain the same}>
<l4, end, 1 + arg2 <= arg3 /\ arg2 <= 5 /\ arg1 <= 8, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009849s
Time used: 0.009675
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.021220s
Time used: 0.021136

LOG: SAT solveNonLinear - Elapsed time: 0.031069s
Cost: 4; Total time: 0.030811
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg2 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 3
Strengthening exit transition (result): 
<l4, end, 1 + arg2 <= arg3 /\ 6 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, arg2 <= arg3 /\ 9 <= arg1 /\ arg2 <= 5, {all remain the same}>
Strengthening exit transition (result): 
<l4, end, 1 + arg2 <= arg3 /\ arg2 <= 5 /\ arg1 <= 8, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= 5 /\ arg1 <= 8 /\ arg2 = arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, 1 + arg2 <= arg3 /\ 6 <= arg2, {all remain the same}>
<l4, end, arg2 <= arg3 /\ 9 <= arg1 /\ arg2 <= 5, {all remain the same}>
<l4, end, 1 + arg2 <= arg3 /\ arg2 <= 5 /\ arg1 <= 8, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005108s
Time used: 0.004971
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.005026s
Time used: 0.005002

LOG: SAT solveNonLinear - Elapsed time: 0.010134s
Cost: 1; Total time: 0.009973
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg3 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 2
Strengthening exit transition (result): 
<l4, end, 9 <= arg1 /\ arg2 <= 5 /\ arg2 = arg3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg2 <= 5 /\ arg1 <= 8 /\ arg2 = arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l4}...
EXIT TRANSITIONS:
<l4, end, 9 <= arg1 /\ arg2 <= 5 /\ arg2 = arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005745s
Time used: 0.005671

LOG: SAT solveNonLinear - Elapsed time: 0.005745s
Cost: 0; Total time: 0.005671
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: arg1 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l4: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg3 /\ arg2 <= 5 /\ arg1 <= 8 /\ arg2 = arg3, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, arg1 <= arg3 /\ 6 <= arg2 /\ arg2 = arg3, {arg2 -> 1 + arg2, arg3 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l4, end, true, {all remain the same}>
Conditions: arg2 <= arg3, arg3 <= arg2, arg1 <= arg3, 
OPEN EXITS: 
<l4, end, arg1 <= arg3 /\ arg2 = arg3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l4, 0 <= undef14 /\ 1 <= undef13 /\ undef14 <= 9 /\ arg1 = undef14 /\ arg2 = undef14 /\ arg3 = undef14, {all remain the same}>
Conditions: arg1 <= arg3, arg2 = arg3, 
OPEN EXITS: 
<l0, l4, arg1 <= arg3 /\ 0 <= undef14 /\ 1 <= undef13 /\ undef14 <= 9 /\ arg1 = undef14 /\ arg2 = arg3 /\ arg2 = undef14 /\ arg3 = undef14, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

