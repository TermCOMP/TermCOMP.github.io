YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l10, true>
<l1, l2, ((0 + nodecount^0) <= (0 + i^0))>
<l1, l11, ((1 + i^0) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l12, l13, true, par{i^0 -> (1 + i^0)}>
<l12, l2, true>
<l14, l15, true>
<l16, l11, ((0 + edgecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l16, l12, ((1 + i^0) <= (0 + edgecount^0)) /\ (undef62 = undef62) /\ (undef63 = undef63), par{x^0 -> undef62, y^0 -> undef63}>
<l17, l18, true, par{j^0 -> (1 + j^0)}>
<l3, l4, true>
<l5, l3, ((0 + edgecount^0) <= (0 + j^0)), par{i^0 -> (1 + i^0)}>
<l5, l17, ((1 + j^0) <= (0 + edgecount^0)) /\ (undef98 = undef98) /\ (undef99 = undef99), par{x^0 -> undef98, y^0 -> undef99}>
<l4, l13, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l4, l18, ((1 + i^0) <= (0 + nodecount^0)), par{j^0 -> 0}>
<l6, l7, true>
<l7, l14, true, par{i^0 -> (1 + i^0)}>
<l18, l5, true>
<l8, l6, ((1 + source^0) <= (0 + i^0))>
<l8, l6, ((1 + i^0) <= (0 + source^0))>
<l8, l7, ((0 + i^0) <= (0 + source^0)) /\ ((0 + source^0) <= (0 + i^0))>
<l15, l3, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l15, l8, ((1 + i^0) <= (0 + nodecount^0))>
<l13, l16, true>
<l11, l1, true>
<l9, l14, true, par{edgecount^0 -> (0 + __const_9^0), i^0 -> 0, nodecount^0 -> (0 + __const_5^0), source^0 -> 0}>
<l10, l9, true>

Fresh variables:
undef62, undef63, undef98, undef99, 

Undef variables:
undef62, undef63, undef98, undef99, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l14, (edgecount^0 = (0 + edgecount^0)) /\ (i^0 = 0) /\ (nodecount^0 = (0 + nodecount^0)) /\ (0 = 0)>
<l11, l2, ((0 + nodecount^0) <= (0 + i^0))>
<l11, l11, ((1 + i^0) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l13, l11, ((0 + edgecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l13, l13, ((1 + i^0) <= (0 + edgecount^0)) /\ (undef62 = undef62) /\ (undef63 = undef63), par{i^0 -> (1 + i^0)}>
<l13, l2, ((1 + i^0) <= (0 + edgecount^0)) /\ (undef62 = undef62) /\ (undef63 = undef63)>
<l14, l13, ((0 + nodecount^0) <= (0 + i^0)) /\ ((0 + nodecount^0) <= (0 + 0)), par{i^0 -> 0}>
<l14, l18, ((0 + nodecount^0) <= (0 + i^0)) /\ ((1 + 0) <= (0 + nodecount^0)), par{i^0 -> 0, j^0 -> 0}>
<l14, l14, ((1 + i^0) <= (0 + nodecount^0)) /\ ((1 + 0) <= (0 + i^0)), par{i^0 -> (1 + i^0)}>
<l14, l14, ((1 + i^0) <= (0 + nodecount^0)) /\ ((1 + i^0) <= (0 + 0)), par{i^0 -> (1 + i^0)}>
<l14, l14, ((1 + i^0) <= (0 + nodecount^0)) /\ ((0 + i^0) <= (0 + 0)) /\ ((0 + 0) <= (0 + i^0)), par{i^0 -> (1 + i^0)}>
<l18, l13, ((0 + edgecount^0) <= (0 + j^0)) /\ ((0 + nodecount^0) <= (0 + (1 + i^0))), par{i^0 -> 0}>
<l18, l18, ((0 + edgecount^0) <= (0 + j^0)) /\ ((1 + (1 + i^0)) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0), j^0 -> 0}>
<l18, l18, ((1 + j^0) <= (0 + edgecount^0)) /\ (undef98 = undef98) /\ (undef99 = undef99), par{j^0 -> (1 + j^0)}>

Fresh variables:
undef62, undef63, undef98, undef99, 

Undef variables:
undef62, undef63, undef98, undef99, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l14, l14, 1 + i^0 <= nodecount^0 /\ 1 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l14, 1 + i^0 <= 0 /\ 1 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l14, 1 + i^0 <= nodecount^0 /\ i^0 = 0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0, nodecount^0

Graph 2:
Transitions:
<l18, l18, edgecount^0 <= j^0 /\ 2 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + j^0 <= edgecount^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
edgecount^0, i^0, j^0, nodecount^0

Graph 3:
Transitions:
<l13, l13, 1 + i^0 <= edgecount^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
edgecount^0, i^0

Graph 4:
Transitions:
<l11, l11, 1 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0, nodecount^0

Graph 5:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l14, i^0 = 0, {all remain the same}>

Graph 2
<l14, l18, nodecount^0 <= i^0 /\ 1 <= nodecount^0, {i^0 -> 0, j^0 -> 0, rest remain the same}>

Graph 3
<l14, l13, nodecount^0 <= i^0 /\ nodecount^0 <= 0, {i^0 -> 0, rest remain the same}>
<l18, l13, edgecount^0 <= j^0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, rest remain the same}>

Graph 4
<l13, l11, edgecount^0 <= i^0, {i^0 -> 0, rest remain the same}>

Graph 5
<l11, l2, nodecount^0 <= i^0, {all remain the same}>
<l13, l2, 1 + i^0 <= edgecount^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 5 )
( 11 , 4 )
( 13 , 3 )
( 14 , 1 )
( 18 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002714
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l14: 0 <= i^0[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l14, l14, 1 + i^0 <= 0 /\ 1 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + i^0 <= nodecount^0 /\ 1 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + i^0 <= nodecount^0 /\ i^0 = 0, {i^0 -> 1 + i^0, rest remain the same}>
Checking unfeasibility...
Time used: 0.001638

Checking conditional termination of SCC {l14}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000544s
[33mRanking function: [36m-i^0[0m
New Graphs: 
Transitions:
<l14, l14, 1 + i^0 <= nodecount^0 /\ 1 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0, nodecount^0
Checking conditional termination of SCC {l14}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000315s
[33mRanking function: [36m-1 - i^0 + nodecount^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.002181

Checking conditional termination of SCC {l18}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000688s
[33mRanking function: [36m-2 - i^0 + nodecount^0[0m
New Graphs: 
Transitions:
<l18, l18, 1 + j^0 <= edgecount^0, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
edgecount^0, j^0
Checking conditional termination of SCC {l18}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000372s
[33mRanking function: [36m-1 + edgecount^0 - j^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.000868

Checking conditional termination of SCC {l13}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000424s
[33mRanking function: [36m-1 + edgecount^0 - i^0[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.000785

Checking conditional termination of SCC {l11}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000429s
[33mRanking function: [36m-1 - i^0 + nodecount^0[0m
New Graphs: 
Proving termination of subgraph 5
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

