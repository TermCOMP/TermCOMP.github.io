YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l3, l2, (arg2 > 0) /\ (undef4 > ~(1)) /\ (undef1 <= arg1) /\ ((undef2 - 5) <= arg1) /\ ((undef3 - 3) <= arg1) /\ (arg1 > 0) /\ (undef1 > 0) /\ (undef2 > 5) /\ (undef3 > 3), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> 0}>
<l2, l4, (arg4 < 2) /\ (arg5 > 0) /\ (undef11 > arg5) /\ (undef12 > arg5) /\ (arg1 > 0) /\ (arg2 > 4) /\ (arg3 > 2) /\ (undef6 > 4), par{arg1 -> undef6, arg2 -> undef7, arg3 -> undef8, arg4 -> undef9, arg5 -> undef10}>
<l2, l4, ((undef13 - 6) <= arg1) /\ (arg4 < 2) /\ ((undef13 - 1) <= arg2) /\ ((undef13 - 3) <= arg3) /\ (arg1 > 0) /\ (arg2 > 5) /\ (arg3 > 3) /\ (undef13 > 6), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, arg5 -> undef17}>
<l2, l2, (undef22 > arg5) /\ (arg5 > 0) /\ (arg4 > 1) /\ (undef18 <= arg1) /\ ((undef18 + 4) <= arg2) /\ ((undef18 + 2) <= arg3) /\ (arg1 > 0) /\ (arg2 > 4) /\ (arg3 > 2) /\ (undef18 > 0) /\ (undef19 > 4) /\ (undef20 > 2), par{arg1 -> undef18, arg2 -> undef19, arg3 -> undef20, arg4 -> (arg4 - 1), arg5 -> undef22}>
<l2, l2, (undef23 <= arg1) /\ (arg4 > 1) /\ ((undef23 + 5) <= arg2) /\ ((undef23 + 3) <= arg3) /\ ((undef24 - 7) <= arg1) /\ ((undef24 - 2) <= arg2) /\ ((undef24 - 4) <= arg3) /\ ((undef25 - 5) <= arg1) /\ (undef25 <= arg2) /\ ((undef25 - 2) <= arg3) /\ (arg1 > 0) /\ (arg2 > 5) /\ (arg3 > 3) /\ (undef23 > 0) /\ (undef24 > 7) /\ (undef25 > 5), par{arg1 -> undef23, arg2 -> undef24, arg3 -> undef25, arg4 -> (arg4 - 1), arg5 -> 1}>
<l4, l5, (arg2 > 1) /\ (undef29 > ~(1)) /\ ((undef28 + 1) <= arg1) /\ (arg1 > 4) /\ (undef28 > 3), par{arg1 -> undef28, arg2 -> undef29, arg3 -> 0, arg4 -> undef31, arg5 -> undef32}>
<l5, l5, (undef35 > arg3) /\ (arg3 > 0) /\ (arg2 > 1) /\ (arg1 > 2) /\ (undef33 > 2), par{arg1 -> undef33, arg2 -> (arg2 - 1), arg3 -> undef35, arg4 -> undef36, arg5 -> undef37}>
<l5, l5, ((undef38 - 2) <= arg1) /\ (arg2 > 1) /\ (arg1 > 3) /\ (undef38 > 5), par{arg1 -> undef38, arg2 -> (arg2 - 1), arg3 -> 1, arg4 -> undef41, arg5 -> undef42}>
<l5, l6, ((undef43 + 2) <= arg1) /\ (arg2 < 2) /\ (arg1 > 2) /\ (undef43 > 0), par{arg1 -> undef43, arg2 -> undef44, arg3 -> undef45, arg4 -> undef46, arg5 -> undef47}>
<l6, l6, ((undef48 + 1) <= arg1) /\ (arg1 > 0) /\ (undef48 > ~(1)), par{arg1 -> undef48, arg2 -> undef49, arg3 -> undef50, arg4 -> undef51, arg5 -> undef52}>
<l1, l3, true, par{arg1 -> undef53, arg2 -> undef54, arg3 -> undef55, arg4 -> undef56, arg5 -> undef57}>

Fresh variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef28, undef29, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef53, undef54, undef55, undef56, undef57, 

Undef variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef28, undef29, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef53, undef54, undef55, undef56, undef57, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = undef2) /\ (arg3 = undef3) /\ (arg4 = undef4) /\ (arg5 = 0) /\ (undef54 > 0) /\ (undef4 > ~(1)) /\ (undef1 <= undef53) /\ ((undef2 - 5) <= undef53) /\ ((undef3 - 3) <= undef53) /\ (undef53 > 0) /\ (undef1 > 0) /\ (undef2 > 5) /\ (undef3 > 3)>
<l2, l5, (arg4 < 2) /\ (arg5 > 0) /\ (undef11 > arg5) /\ (undef12 > arg5) /\ (arg1 > 0) /\ (arg2 > 4) /\ (arg3 > 2) /\ (undef6 > 4) /\ (undef7 > 1) /\ (undef29 > ~(1)) /\ ((undef28 + 1) <= undef6) /\ (undef6 > 4) /\ (undef28 > 3), par{arg1 -> undef28, arg2 -> undef29, arg3 -> 0, arg4 -> undef31, arg5 -> undef32}>
<l2, l5, ((undef13 - 6) <= arg1) /\ (arg4 < 2) /\ ((undef13 - 1) <= arg2) /\ ((undef13 - 3) <= arg3) /\ (arg1 > 0) /\ (arg2 > 5) /\ (arg3 > 3) /\ (undef13 > 6) /\ (undef14 > 1) /\ (undef29 > ~(1)) /\ ((undef28 + 1) <= undef13) /\ (undef13 > 4) /\ (undef28 > 3), par{arg1 -> undef28, arg2 -> undef29, arg3 -> 0, arg4 -> undef31, arg5 -> undef32}>
<l2, l2, (undef22 > arg5) /\ (arg5 > 0) /\ (arg4 > 1) /\ (undef18 <= arg1) /\ ((undef18 + 4) <= arg2) /\ ((undef18 + 2) <= arg3) /\ (arg1 > 0) /\ (arg2 > 4) /\ (arg3 > 2) /\ (undef18 > 0) /\ (undef19 > 4) /\ (undef20 > 2), par{arg1 -> undef18, arg2 -> undef19, arg3 -> undef20, arg4 -> (arg4 - 1), arg5 -> undef22}>
<l2, l2, (undef23 <= arg1) /\ (arg4 > 1) /\ ((undef23 + 5) <= arg2) /\ ((undef23 + 3) <= arg3) /\ ((undef24 - 7) <= arg1) /\ ((undef24 - 2) <= arg2) /\ ((undef24 - 4) <= arg3) /\ ((undef25 - 5) <= arg1) /\ (undef25 <= arg2) /\ ((undef25 - 2) <= arg3) /\ (arg1 > 0) /\ (arg2 > 5) /\ (arg3 > 3) /\ (undef23 > 0) /\ (undef24 > 7) /\ (undef25 > 5), par{arg1 -> undef23, arg2 -> undef24, arg3 -> undef25, arg4 -> (arg4 - 1), arg5 -> 1}>
<l5, l5, (undef35 > arg3) /\ (arg3 > 0) /\ (arg2 > 1) /\ (arg1 > 2) /\ (undef33 > 2), par{arg1 -> undef33, arg2 -> (arg2 - 1), arg3 -> undef35, arg4 -> undef36, arg5 -> undef37}>
<l5, l5, ((undef38 - 2) <= arg1) /\ (arg2 > 1) /\ (arg1 > 3) /\ (undef38 > 5), par{arg1 -> undef38, arg2 -> (arg2 - 1), arg3 -> 1, arg4 -> undef41, arg5 -> undef42}>
<l5, l6, ((undef43 + 2) <= arg1) /\ (arg2 < 2) /\ (arg1 > 2) /\ (undef43 > 0), par{arg1 -> undef43, arg2 -> undef44, arg3 -> undef45, arg4 -> undef46, arg5 -> undef47}>
<l6, l6, ((undef48 + 1) <= arg1) /\ (arg1 > 0) /\ (undef48 > ~(1)), par{arg1 -> undef48, arg2 -> undef49, arg3 -> undef50, arg4 -> undef51, arg5 -> undef52}>

Fresh variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef28, undef29, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef53, undef54, undef55, undef56, undef57, 

Undef variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef23, undef24, undef25, undef28, undef29, undef31, undef32, undef33, undef35, undef36, undef37, undef38, undef41, undef42, undef43, undef44, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef53, undef54, undef55, undef56, undef57, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, undef18 <= arg1 /\ 1 <= arg1 /\ 1 + arg5 <= undef22 /\ 1 <= arg5 /\ 1 <= undef18 /\ 5 <= arg2 /\ 5 <= undef19 /\ 3 <= arg3 /\ 3 <= undef20 /\ 2 + undef18 <= arg3 /\ 2 <= arg4 /\ 4 + undef18 <= arg2, {arg1 -> undef18, arg2 -> undef19, arg3 -> undef20, arg4 -> -1 + arg4, arg5 -> undef22, rest remain the same}>
<l2, l2, undef23 <= arg1 /\ undef25 <= arg2 /\ 1 <= arg1 /\ 1 <= undef23 /\ 5 + undef23 <= arg2 /\ 3 + undef23 <= arg3 /\ 2 <= arg4 /\ 4 <= arg3 /\ 6 <= arg2 /\ 6 <= undef25 /\ undef25 <= 5 + arg1 /\ undef24 <= 7 + arg1 /\ undef24 <= 2 + arg2 /\ undef25 <= 2 + arg3 /\ undef24 <= 4 + arg3 /\ 8 <= undef24, {arg1 -> undef23, arg2 -> undef24, arg3 -> undef25, arg4 -> -1 + arg4, arg5 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Graph 2:
Transitions:
<l5, l5, 1 + arg3 <= undef35 /\ 1 <= arg3 /\ 3 <= arg1 /\ 3 <= undef33 /\ 2 <= arg2, {arg1 -> undef33, arg2 -> -1 + arg2, arg3 -> undef35, arg4 -> undef36, arg5 -> undef37, rest remain the same}>
<l5, l5, 2 <= arg2 /\ 4 <= arg1 /\ 6 <= undef38 /\ undef38 <= 2 + arg1, {arg1 -> undef38, arg2 -> -1 + arg2, arg3 -> 1, arg4 -> undef41, arg5 -> undef42, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Graph 3:
Transitions:
<l6, l6, 0 <= undef48 /\ 1 <= arg1 /\ 1 + undef48 <= arg1, {arg1 -> undef48, arg2 -> undef49, arg3 -> undef50, arg4 -> undef51, arg5 -> undef52, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5

Precedence: 
Graph 0

Graph 1
<l0, l2, undef1 <= undef53 /\ 0 <= undef4 /\ 1 <= undef1 /\ 1 <= undef53 /\ 1 <= undef54 /\ 4 <= undef3 /\ 6 <= undef2 /\ undef2 <= 5 + undef53 /\ undef3 <= 3 + undef53 /\ arg1 = undef1 /\ arg2 = undef2 /\ arg3 = undef3 /\ arg4 = undef4 /\ arg5 = 0, {all remain the same}>

Graph 2
<l2, l5, 0 <= undef29 /\ 1 <= arg1 /\ 1 + arg5 <= undef11 /\ 1 + arg5 <= undef12 /\ 1 <= arg5 /\ 1 + undef28 <= undef6 /\ arg4 <= 1 /\ 5 <= arg2 /\ 5 <= undef6 /\ 3 <= arg3 /\ 2 <= undef7 /\ 4 <= undef28, {arg1 -> undef28, arg2 -> undef29, arg3 -> 0, arg4 -> undef31, arg5 -> undef32, rest remain the same}>
<l2, l5, 0 <= undef29 /\ 1 <= arg1 /\ 1 + undef28 <= undef13 /\ undef13 <= 1 + arg2 /\ arg4 <= 1 /\ 2 <= undef14 /\ 4 <= arg3 /\ 4 <= undef28 /\ 6 <= arg2 /\ 7 <= undef13 /\ undef13 <= 3 + arg3 /\ undef13 <= 6 + arg1, {arg1 -> undef28, arg2 -> undef29, arg3 -> 0, arg4 -> undef31, arg5 -> undef32, rest remain the same}>

Graph 3
<l5, l6, 1 <= undef43 /\ arg2 <= 1 /\ 3 <= arg1 /\ 2 + undef43 <= arg1, {arg1 -> undef43, arg2 -> undef44, arg3 -> undef45, arg4 -> undef46, arg5 -> undef47, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 5 , 2 )
( 6 , 3 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.007467

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002189s
[33mRanking function: [36m-2 + arg4[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.004647

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001096s
[33mRanking function: [36m-2 + arg2[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.001525

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000535s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m

