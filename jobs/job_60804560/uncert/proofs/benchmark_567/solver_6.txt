YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (undef1 = 5) /\ (undef2 = (0 + undef1)) /\ ((0 + undef2) <= 0), par{x^0 -> undef1, y^0 -> undef2}>
<l3, l1, true>

Fresh variables:
undef1, undef2, 

Undef variables:
undef1, undef2, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:

Fresh variables:
undef1, undef2, 

Undef variables:
undef1, undef2, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Precedence: 
Graph 0

Map Locations to Subgraph:
( 0 , 0 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
[32mProgram Terminates[0m

