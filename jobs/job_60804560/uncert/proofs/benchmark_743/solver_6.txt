YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, ((0 + y^0) <= 0) /\ ((0 + x^0) <= 0), par{p^0 -> 1}>
<l1, l3, (1 <= (0 + y^0)), par{y^0 -> (~(1) + y^0)}>
<l3, l1, true>
<l4, l3, ((0 + x^0) <= 0)>
<l4, l5, (1 <= (0 + x^0)), par{p^0 -> (1 + p^0)}>
<l6, l4, true, par{p^0 -> 0}>
<l7, l6, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, ((0 + x^0) <= 0)>
<l0, l5, (1 <= (0 + x^0))>
<l3, l2, ((0 + y^0) <= 0) /\ ((0 + x^0) <= 0)>
<l3, l3, (1 <= (0 + y^0)), par{y^0 -> (~(1) + y^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Graph 2:
Transitions:
<l3, l3, 1 <= y^0, {y^0 -> -1 + y^0, rest remain the same}>
Variables:
y^0

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, 1 <= x^0, {all remain the same}>

Graph 2
<l0, l3, x^0 <= 0, {all remain the same}>

Graph 3
<l3, l2, x^0 <= 0 /\ y^0 <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 3 )
( 3 , 2 )
( 5 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l5}...
No cycles found.

Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.000703

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000257s
[33mRanking function: [36m-1 + y^0[0m
New Graphs: 
Proving termination of subgraph 3
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

