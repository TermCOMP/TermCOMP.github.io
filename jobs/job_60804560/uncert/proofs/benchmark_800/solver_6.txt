YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, (undef6 = undef6) /\ (undef7 = undef7), par{oldX0^0 -> (0 + x0^0), oldX1^0 -> (0 + x1^0), oldX2^0 -> undef6, oldX3^0 -> undef7, x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l3, l4, (undef13 = (0 + x0^0)) /\ (undef14 = (0 + x1^0)), par{oldX0^0 -> undef13, oldX1^0 -> undef14, x0^0 -> (0 + undef13), x1^0 -> (3 + undef14)}>
<l4, l1, (undef22 = (0 + x0^0)) /\ (undef23 = (0 + x1^0)) /\ ((1 + __const_20^0) <= (0 + undef23)), par{oldX0^0 -> undef22, oldX1^0 -> undef23, x0^0 -> (0 + undef22), x1^0 -> (0 + undef23)}>
<l4, l3, (undef31 = (0 + x0^0)) /\ (undef32 = (0 + x1^0)) /\ ((0 + undef32) <= (0 + __const_20^0)), par{oldX0^0 -> undef31, oldX1^0 -> undef32, x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l5, l6, (undef40 = (0 + x0^0)) /\ (undef42 = undef42), par{oldX0^0 -> undef40, oldX1^0 -> (0 + x1^0), oldX2^0 -> undef42, x0^0 -> (1 + undef40), x1^0 -> (0 + undef42)}>
<l6, l4, (undef49 = (0 + x0^0)) /\ ((1 + __const_99^0) <= (0 + undef49)), par{oldX0^0 -> undef49, oldX1^0 -> (0 + x1^0), x0^0 -> (0 + undef49), x1^0 -> (0 + __const_5^0)}>
<l6, l5, (undef58 = (0 + x0^0)) /\ (undef60 = undef60) /\ ((0 + undef58) <= (0 + __const_99^0)), par{oldX0^0 -> undef58, oldX1^0 -> (0 + x1^0), oldX2^0 -> undef60, x0^0 -> (0 + undef58), x1^0 -> (0 + undef60)}>
<l7, l6, (undef69 = undef69), par{oldX0^0 -> (0 + x0^0), oldX1^0 -> (0 + x1^0), oldX2^0 -> undef69, x0^0 -> 0, x1^0 -> (0 + undef69)}>
<l8, l7, (undef78 = undef78) /\ (undef79 = undef79), par{oldX0^0 -> (0 + x0^0), oldX1^0 -> (0 + x1^0), oldX2^0 -> undef78, oldX3^0 -> undef79, x0^0 -> (0 + undef78), x1^0 -> (0 + undef79)}>
<l8, l2, true>
<l8, l1, true>
<l8, l3, true>
<l8, l4, true>
<l8, l5, true>
<l8, l6, true>
<l8, l7, true>
<l9, l8, true>

Fresh variables:
undef6, undef7, undef13, undef14, undef22, undef23, undef31, undef32, undef40, undef42, undef49, undef58, undef60, undef69, undef78, undef79, 

Undef variables:
undef6, undef7, undef13, undef14, undef22, undef23, undef31, undef32, undef40, undef42, undef49, undef58, undef60, undef69, undef78, undef79, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef78 = undef78) /\ (undef79 = undef79) /\ (undef69 = undef69) /\ (undef49 = (0 + 0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef22 = (0 + (0 + undef49))) /\ (undef23 = (0 + (0 + __const_5^0))) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l0, l3, (undef78 = undef78) /\ (undef79 = undef79) /\ (undef69 = undef69) /\ (undef49 = (0 + 0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef31 = (0 + (0 + undef49))) /\ (undef32 = (0 + (0 + __const_5^0))) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l0, l5, (undef78 = undef78) /\ (undef79 = undef79) /\ (undef69 = undef69) /\ (undef58 = (0 + 0)) /\ (undef60 = undef60) /\ ((0 + undef58) <= (0 + __const_99^0)), par{x0^0 -> (0 + undef58), x1^0 -> (0 + undef60)}>
<l0, l2, true>
<l0, l2, (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l0, l3, true>
<l0, l2, (undef22 = (0 + x0^0)) /\ (undef23 = (0 + x1^0)) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l0, l3, (undef31 = (0 + x0^0)) /\ (undef32 = (0 + x1^0)) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l0, l5, true>
<l0, l2, (undef49 = (0 + x0^0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef22 = (0 + (0 + undef49))) /\ (undef23 = (0 + (0 + __const_5^0))) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l0, l3, (undef49 = (0 + x0^0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef31 = (0 + (0 + undef49))) /\ (undef32 = (0 + (0 + __const_5^0))) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l0, l5, (undef58 = (0 + x0^0)) /\ (undef60 = undef60) /\ ((0 + undef58) <= (0 + __const_99^0)), par{x0^0 -> (0 + undef58), x1^0 -> (0 + undef60)}>
<l0, l2, (undef69 = undef69) /\ (undef49 = (0 + 0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef22 = (0 + (0 + undef49))) /\ (undef23 = (0 + (0 + __const_5^0))) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l0, l3, (undef69 = undef69) /\ (undef49 = (0 + 0)) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef31 = (0 + (0 + undef49))) /\ (undef32 = (0 + (0 + __const_5^0))) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l0, l5, (undef69 = undef69) /\ (undef58 = (0 + 0)) /\ (undef60 = undef60) /\ ((0 + undef58) <= (0 + __const_99^0)), par{x0^0 -> (0 + undef58), x1^0 -> (0 + undef60)}>
<l3, l2, (undef13 = (0 + x0^0)) /\ (undef14 = (0 + x1^0)) /\ (undef22 = (0 + (0 + undef13))) /\ (undef23 = (0 + (3 + undef14))) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l3, l3, (undef13 = (0 + x0^0)) /\ (undef14 = (0 + x1^0)) /\ (undef31 = (0 + (0 + undef13))) /\ (undef32 = (0 + (3 + undef14))) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l5, l2, (undef40 = (0 + x0^0)) /\ (undef42 = undef42) /\ (undef49 = (0 + (1 + undef40))) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef22 = (0 + (0 + undef49))) /\ (undef23 = (0 + (0 + __const_5^0))) /\ ((1 + __const_20^0) <= (0 + undef23)) /\ (undef6 = undef6) /\ (undef7 = undef7), par{x0^0 -> (0 + undef6), x1^0 -> (0 + undef7)}>
<l5, l3, (undef40 = (0 + x0^0)) /\ (undef42 = undef42) /\ (undef49 = (0 + (1 + undef40))) /\ ((1 + __const_99^0) <= (0 + undef49)) /\ (undef31 = (0 + (0 + undef49))) /\ (undef32 = (0 + (0 + __const_5^0))) /\ ((0 + undef32) <= (0 + __const_20^0)), par{x0^0 -> (0 + undef31), x1^0 -> (0 + undef32)}>
<l5, l5, (undef40 = (0 + x0^0)) /\ (undef42 = undef42) /\ (undef58 = (0 + (1 + undef40))) /\ (undef60 = undef60) /\ ((0 + undef58) <= (0 + __const_99^0)), par{x0^0 -> (0 + undef58), x1^0 -> (0 + undef60)}>

Fresh variables:
undef6, undef7, undef13, undef14, undef22, undef23, undef31, undef32, undef40, undef42, undef49, undef58, undef60, undef69, undef78, undef79, 

Undef variables:
undef6, undef7, undef13, undef14, undef22, undef23, undef31, undef32, undef40, undef42, undef49, undef58, undef60, undef69, undef78, undef79, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, undef58 <= __const_99^0 /\ x0^0 = undef40 /\ 1 + undef40 = undef58, {x0^0 -> undef58, x1^0 -> undef60, rest remain the same}>
Variables:
__const_99^0, x0^0, x1^0

Graph 2:
Transitions:
<l3, l3, undef32 <= __const_20^0 /\ x0^0 = undef13 /\ x1^0 = undef14 /\ undef13 = undef31 /\ 3 + undef14 = undef32, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>
Variables:
__const_20^0, x0^0, x1^0

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, undef58 <= __const_99^0 /\ undef58 = 0, {x0^0 -> undef58, x1^0 -> undef60, rest remain the same}>
<l0, l5, true, {all remain the same}>
<l0, l5, undef58 <= __const_99^0 /\ x0^0 = undef58, {x0^0 -> undef58, x1^0 -> undef60, rest remain the same}>
<l0, l5, undef58 <= __const_99^0 /\ undef58 = 0, {x0^0 -> undef58, x1^0 -> undef60, rest remain the same}>

Graph 2
<l0, l3, undef32 <= __const_20^0 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef32 /\ undef31 = undef49 /\ undef49 = 0, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>
<l0, l3, true, {all remain the same}>
<l0, l3, undef32 <= __const_20^0 /\ x0^0 = undef31 /\ x1^0 = undef32, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>
<l0, l3, undef32 <= __const_20^0 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef32 /\ x0^0 = undef49 /\ undef31 = undef49, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>
<l0, l3, undef32 <= __const_20^0 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef32 /\ undef31 = undef49 /\ undef49 = 0, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>
<l5, l3, undef32 <= __const_20^0 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef32 /\ x0^0 = undef40 /\ undef31 = undef49 /\ 1 + undef40 = undef49, {x0^0 -> undef31, x1^0 -> undef32, rest remain the same}>

Graph 3
<l0, l2, 1 + __const_20^0 <= undef23 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef23 /\ undef22 = undef49 /\ undef49 = 0, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l0, l2, true, {all remain the same}>
<l0, l2, true, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l0, l2, 1 + __const_20^0 <= undef23 /\ x0^0 = undef22 /\ x1^0 = undef23, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l0, l2, 1 + __const_20^0 <= undef23 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef23 /\ x0^0 = undef49 /\ undef22 = undef49, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l0, l2, 1 + __const_20^0 <= undef23 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef23 /\ undef22 = undef49 /\ undef49 = 0, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l3, l2, 1 + __const_20^0 <= undef23 /\ x0^0 = undef13 /\ x1^0 = undef14 /\ undef13 = undef22 /\ 3 + undef14 = undef23, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>
<l5, l2, 1 + __const_20^0 <= undef23 /\ 1 + __const_99^0 <= undef49 /\ __const_5^0 = undef23 /\ x0^0 = undef40 /\ undef22 = undef49 /\ 1 + undef40 = undef49, {x0^0 -> undef6, x1^0 -> undef7, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 3 )
( 3 , 2 )
( 5 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001275

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000479s
[33mRanking function: [36m-1 + __const_99^0 - x0^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001786

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000627s
[33mRanking function: [36m-1 + (1 / 3)*__const_20^0 + (~(1) / 3)*x1^0[0m
New Graphs: 
Proving termination of subgraph 3
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m

