YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l4, l2, (undef1 <= arg1) /\ (arg2 > ~(1)) /\ ((undef2 + 1) <= arg1) /\ (arg1 > 0) /\ (undef1 > 0) /\ (undef2 > ~(1)), par{arg1 -> undef1, arg2 -> undef2, arg3 -> 1, arg4 -> arg2, arg5 -> undef5, arg6 -> undef6, arg7 -> undef7, arg8 -> undef8, arg9 -> undef9, arg10 -> undef10}>
<l2, l5, (undef11 <= arg1) /\ (arg4 < arg3) /\ ((undef11 - 1) <= arg2) /\ (undef12 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef11 > 0) /\ (undef12 > ~(1)), par{arg1 -> undef11, arg2 -> undef12, arg3 -> 1, arg5 -> undef15, arg6 -> undef16, arg7 -> undef17, arg8 -> undef18, arg9 -> undef19, arg10 -> undef20}>
<l2, l7, (arg4 >= arg3) /\ (arg4 > 0) /\ ((arg4 - 1) < arg3) /\ (undef21 <= arg1) /\ ((undef21 - 1) <= arg2) /\ ((undef22 - 106) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef21 > 0) /\ (undef22 > 105), par{arg1 -> undef21, arg2 -> undef22, arg4 -> (arg4 - 1), arg5 -> arg4, arg6 -> 40, arg7 -> 97, arg8 -> 43, arg9 -> 98, arg10 -> 41}>
<l5, l5, (undef31 <= arg1) /\ (arg4 > arg3) /\ ((undef31 - 1) <= arg2) /\ ((undef32 - 42) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef31 > 0) /\ (undef32 > 41), par{arg1 -> undef31, arg2 -> undef32, arg3 -> (arg3 + 1), arg5 -> undef35, arg6 -> undef36, arg7 -> undef37, arg8 -> undef38, arg9 -> undef39, arg10 -> undef40}>
<l7, l2, (undef41 <= arg1) /\ (arg4 < arg3) /\ ((undef41 + 105) <= arg2) /\ (undef42 <= arg2) /\ (arg1 > 0) /\ (arg2 > 105) /\ (undef41 > 0) /\ (undef42 > 105) /\ (40 = arg6) /\ (97 = arg7) /\ (43 = arg8) /\ (98 = arg9) /\ (41 = arg10), par{arg1 -> undef41, arg2 -> undef42, arg3 -> (arg3 + 1), arg4 -> arg5, arg5 -> undef45, arg6 -> undef46, arg7 -> undef47, arg8 -> undef48, arg9 -> undef49, arg10 -> undef50}>
<l2, l7, (arg4 >= arg3) /\ (arg4 > 0) /\ ((arg4 - 1) >= arg3) /\ (undef51 <= arg1) /\ ((undef51 - 1) <= arg2) /\ ((undef52 - 106) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef51 > 0) /\ (undef52 > 105), par{arg1 -> undef51, arg2 -> undef52, arg4 -> (arg4 - 1), arg5 -> arg4, arg6 -> 40, arg7 -> 97, arg8 -> 43, arg9 -> 98, arg10 -> 41}>
<l7, l2, (undef61 <= arg1) /\ (arg4 >= arg3) /\ ((undef61 + 105) <= arg2) /\ ((undef62 - 2) <= arg2) /\ (arg1 > 0) /\ (arg2 > 105) /\ (undef61 > 0) /\ (undef62 > 107) /\ (40 = arg6) /\ (97 = arg7) /\ (43 = arg8) /\ (98 = arg9) /\ (41 = arg10), par{arg1 -> undef61, arg2 -> undef62, arg3 -> (arg3 + 1), arg4 -> arg5, arg5 -> undef65, arg6 -> undef66, arg7 -> undef67, arg8 -> undef68, arg9 -> undef69, arg10 -> undef70}>
<l5, l3, (undef71 <= arg2) /\ (arg4 <= arg3) /\ ((undef72 + 1) <= arg1) /\ (undef72 <= arg2) /\ ((undef73 + 1) <= arg1) /\ (undef73 <= arg2) /\ (undef74 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef71 > ~(1)) /\ (undef72 > ~(1)) /\ (undef73 > ~(1)) /\ (undef74 > ~(1)), par{arg1 -> undef71, arg2 -> undef72, arg3 -> undef73, arg4 -> undef74, arg5 -> undef75, arg6 -> undef76, arg7 -> undef77, arg8 -> undef78, arg9 -> undef79, arg10 -> undef80}>
<l3, l3, ((undef81 + 2) <= arg1) /\ ((undef81 + 2) <= arg4) /\ (undef82 <= arg2) /\ (undef83 <= arg3) /\ ((undef84 + 2) <= arg1) /\ ((undef84 + 2) <= arg4) /\ (arg1 > 41) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 41) /\ (undef81 > ~(1)) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ (undef84 > ~(1)), par{arg1 -> undef81, arg2 -> undef82, arg3 -> undef83, arg4 -> undef84, arg5 -> undef85, arg6 -> undef86, arg7 -> undef87, arg8 -> undef88, arg9 -> undef89, arg10 -> undef90}>
<l3, l6, (undef91 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > ~(1)) /\ (undef91 > ~(1)), par{arg1 -> undef91, arg2 -> undef92, arg3 -> undef93, arg4 -> undef94, arg5 -> undef95, arg6 -> undef96, arg7 -> undef97, arg8 -> undef98, arg9 -> undef99, arg10 -> undef100}>
<l3, l3, ((undef101 + 2) <= arg1) /\ ((undef101 + 2) <= arg4) /\ ((undef102 - 44) <= arg2) /\ (undef103 <= arg3) /\ ((undef104 + 2) <= arg1) /\ ((undef104 + 2) <= arg4) /\ (arg1 > 43) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 43) /\ (undef101 > ~(1)) /\ (undef102 > 43) /\ (undef103 > ~(1)) /\ (undef104 > ~(1)), par{arg1 -> undef101, arg2 -> undef102, arg3 -> undef103, arg4 -> undef104, arg5 -> undef105, arg6 -> undef106, arg7 -> undef107, arg8 -> undef108, arg9 -> undef109, arg10 -> undef110}>
<l3, l3, ((undef111 + 2) <= arg1) /\ ((undef111 + 2) <= arg4) /\ ((undef112 - 45) <= arg2) /\ (undef113 <= arg3) /\ ((undef114 + 2) <= arg1) /\ ((undef114 + 2) <= arg4) /\ (arg1 > 44) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 44) /\ (undef111 > ~(1)) /\ (undef112 > 44) /\ (undef113 > ~(1)) /\ (undef114 > ~(1)), par{arg1 -> undef111, arg2 -> undef112, arg3 -> undef113, arg4 -> undef114, arg5 -> undef115, arg6 -> undef116, arg7 -> undef117, arg8 -> undef118, arg9 -> undef119, arg10 -> undef120}>
<l3, l3, ((undef121 + 2) <= arg1) /\ ((undef121 + 2) <= arg4) /\ ((undef122 - 47) <= arg2) /\ (undef123 <= arg3) /\ ((undef124 + 2) <= arg1) /\ ((undef124 + 2) <= arg4) /\ (arg1 > 46) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 46) /\ (undef121 > ~(1)) /\ (undef122 > 46) /\ (undef123 > ~(1)) /\ (undef124 > ~(1)), par{arg1 -> undef121, arg2 -> undef122, arg3 -> undef123, arg4 -> undef124, arg5 -> undef125, arg6 -> undef126, arg7 -> undef127, arg8 -> undef128, arg9 -> undef129, arg10 -> undef130}>
<l3, l3, ((undef131 + 2) <= arg1) /\ ((undef131 + 2) <= arg4) /\ ((undef132 - 49) <= arg2) /\ (undef133 <= arg3) /\ ((undef134 + 2) <= arg1) /\ ((undef134 + 2) <= arg4) /\ (arg1 > 48) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 48) /\ (undef131 > ~(1)) /\ (undef132 > 48) /\ (undef133 > ~(1)) /\ (undef134 > ~(1)), par{arg1 -> undef131, arg2 -> undef132, arg3 -> undef133, arg4 -> undef134, arg5 -> undef135, arg6 -> undef136, arg7 -> undef137, arg8 -> undef138, arg9 -> undef139, arg10 -> undef140}>
<l3, l3, ((undef141 + 1) <= arg1) /\ (undef151 > 47) /\ ((undef141 + 1) <= arg4) /\ (arg2 >= undef142) /\ (arg1 >= (undef144 + 1)) /\ (arg4 >= (undef144 + 1)) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 0) /\ (undef141 > ~(1)) /\ (undef142 > ~(1)) /\ (undef143 > 0) /\ (undef144 > ~(1)), par{arg1 -> undef141, arg2 -> undef142, arg3 -> undef143, arg4 -> undef144, arg5 -> undef145, arg6 -> undef146, arg7 -> undef147, arg8 -> undef148, arg9 -> undef149, arg10 -> undef150}>
<l3, l3, ((undef152 + 1) <= arg1) /\ (undef162 < 40) /\ ((undef152 + 1) <= arg4) /\ (undef153 <= arg2) /\ ((undef155 + 1) <= arg1) /\ ((undef155 + 1) <= arg4) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 0) /\ (undef152 > ~(1)) /\ (undef153 > ~(1)) /\ (undef154 > 0) /\ (undef155 > ~(1)), par{arg1 -> undef152, arg2 -> undef153, arg3 -> undef154, arg4 -> undef155, arg5 -> undef156, arg6 -> undef157, arg7 -> undef158, arg8 -> undef159, arg9 -> undef160, arg10 -> undef161}>
<l3, l3, ((undef163 + 2) <= arg1) /\ ((undef163 + 2) <= arg4) /\ (undef164 <= arg2) /\ ((undef165 - 46) <= arg3) /\ ((undef166 + 2) <= arg1) /\ ((undef166 + 2) <= arg4) /\ (arg1 > 45) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 45) /\ (undef163 > ~(1)) /\ (undef164 > ~(1)) /\ (undef165 > 45) /\ (undef166 > ~(1)), par{arg1 -> undef163, arg2 -> undef164, arg3 -> undef165, arg4 -> undef166, arg5 -> undef167, arg6 -> undef168, arg7 -> undef169, arg8 -> undef170, arg9 -> undef171, arg10 -> undef172}>
<l3, l3, ((undef173 + 2) <= arg1) /\ ((undef173 + 2) <= arg4) /\ (undef174 <= arg2) /\ ((undef175 - 48) <= arg3) /\ ((undef176 + 2) <= arg1) /\ ((undef176 + 2) <= arg4) /\ (arg1 > 47) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 47) /\ (undef173 > ~(1)) /\ (undef174 > ~(1)) /\ (undef175 > 47) /\ (undef176 > ~(1)), par{arg1 -> undef173, arg2 -> undef174, arg3 -> undef175, arg4 -> undef176, arg5 -> undef177, arg6 -> undef178, arg7 -> undef179, arg8 -> undef180, arg9 -> undef181, arg10 -> undef182}>
<l3, l3, ((undef183 + 2) <= arg1) /\ ((undef183 + 2) <= arg4) /\ ((undef184 + 1) <= arg2) /\ ((undef186 + 2) <= arg1) /\ ((undef186 + 2) <= arg4) /\ (arg1 > 42) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (arg4 > 42) /\ (undef183 > ~(1)) /\ (undef184 > ~(1)) /\ (undef185 > 0) /\ (undef186 > ~(1)), par{arg1 -> undef183, arg2 -> undef184, arg3 -> undef185, arg4 -> undef186, arg5 -> undef187, arg6 -> undef188, arg7 -> undef189, arg8 -> undef190, arg9 -> undef191, arg10 -> undef192}>
<l6, l6, ((undef193 + 1) <= arg1) /\ (arg1 > 0) /\ (undef193 > ~(1)), par{arg1 -> undef193, arg2 -> undef194, arg3 -> undef195, arg4 -> undef196, arg5 -> undef197, arg6 -> undef198, arg7 -> undef199, arg8 -> undef200, arg9 -> undef201, arg10 -> undef202}>
<l1, l4, true, par{arg1 -> undef203, arg2 -> undef204, arg3 -> undef205, arg4 -> undef206, arg5 -> undef207, arg6 -> undef208, arg7 -> undef209, arg8 -> undef210, arg9 -> undef211, arg10 -> undef212}>

Fresh variables:
undef1, undef2, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef31, undef32, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef61, undef62, undef65, undef66, undef67, undef68, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef100, undef101, undef102, undef103, undef104, undef105, undef106, undef107, undef108, undef109, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef128, undef129, undef130, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, undef170, undef171, undef172, undef173, undef174, undef175, undef176, undef177, undef178, undef179, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef189, undef190, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef207, undef208, undef209, undef210, undef211, undef212, 

Undef variables:
undef1, undef2, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef31, undef32, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef61, undef62, undef65, undef66, undef67, undef68, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef100, undef101, undef102, undef103, undef104, undef105, undef106, undef107, undef108, undef109, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef128, undef129, undef130, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, undef170, undef171, undef172, undef173, undef174, undef175, undef176, undef177, undef178, undef179, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef189, undef190, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef207, undef208, undef209, undef210, undef211, undef212, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = undef2) /\ (arg3 = 1) /\ (arg4 = undef204) /\ (undef1 <= undef203) /\ (undef204 > ~(1)) /\ ((undef2 + 1) <= undef203) /\ (undef203 > 0) /\ (undef1 > 0) /\ (undef2 > ~(1))>
<l2, l5, (undef11 <= arg1) /\ (arg4 < arg3) /\ ((undef11 - 1) <= arg2) /\ (undef12 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef11 > 0) /\ (undef12 > ~(1)), par{arg1 -> undef11, arg2 -> undef12, arg3 -> 1}>
<l2, l2, (arg4 >= arg3) /\ (arg4 > 0) /\ ((arg4 - 1) < arg3) /\ (undef21 <= arg1) /\ ((undef21 - 1) <= arg2) /\ ((undef22 - 106) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef21 > 0) /\ (undef22 > 105) /\ (undef41 <= undef21) /\ ((arg4 - 1) < arg3) /\ ((undef41 + 105) <= undef22) /\ (undef42 <= undef22) /\ (undef21 > 0) /\ (undef22 > 105) /\ (undef41 > 0) /\ (undef42 > 105) /\ (40 = 40) /\ (97 = 97) /\ (43 = 43) /\ (98 = 98) /\ (41 = 41), par{arg1 -> undef41, arg2 -> undef42, arg3 -> (arg3 + 1), arg4 -> arg4}>
<l2, l2, (arg4 >= arg3) /\ (arg4 > 0) /\ ((arg4 - 1) >= arg3) /\ (undef51 <= arg1) /\ ((undef51 - 1) <= arg2) /\ ((undef52 - 106) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef51 > 0) /\ (undef52 > 105) /\ (undef61 <= undef51) /\ ((arg4 - 1) >= arg3) /\ ((undef61 + 105) <= undef52) /\ ((undef62 - 2) <= undef52) /\ (undef51 > 0) /\ (undef52 > 105) /\ (undef61 > 0) /\ (undef62 > 107) /\ (40 = 40) /\ (97 = 97) /\ (43 = 43) /\ (98 = 98) /\ (41 = 41), par{arg1 -> undef61, arg2 -> undef62, arg3 -> (arg3 + 1), arg4 -> arg4}>
<l3, l3, ((undef81 + 2) <= arg1) /\ ((undef81 + 2) <= arg4) /\ (undef82 <= arg2) /\ (undef83 <= arg3) /\ ((undef84 + 2) <= arg1) /\ ((undef84 + 2) <= arg4) /\ (arg1 > 41) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 41) /\ (undef81 > ~(1)) /\ (undef82 > ~(1)) /\ (undef83 > ~(1)) /\ (undef84 > ~(1)), par{arg1 -> undef81, arg2 -> undef82, arg3 -> undef83, arg4 -> undef84}>
<l3, l6, (undef91 <= arg3) /\ (arg1 > ~(1)) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > ~(1)) /\ (undef91 > ~(1)), par{arg1 -> undef91, arg2 -> undef92, arg3 -> undef93, arg4 -> undef94}>
<l3, l3, ((undef101 + 2) <= arg1) /\ ((undef101 + 2) <= arg4) /\ ((undef102 - 44) <= arg2) /\ (undef103 <= arg3) /\ ((undef104 + 2) <= arg1) /\ ((undef104 + 2) <= arg4) /\ (arg1 > 43) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 43) /\ (undef101 > ~(1)) /\ (undef102 > 43) /\ (undef103 > ~(1)) /\ (undef104 > ~(1)), par{arg1 -> undef101, arg2 -> undef102, arg3 -> undef103, arg4 -> undef104}>
<l3, l3, ((undef111 + 2) <= arg1) /\ ((undef111 + 2) <= arg4) /\ ((undef112 - 45) <= arg2) /\ (undef113 <= arg3) /\ ((undef114 + 2) <= arg1) /\ ((undef114 + 2) <= arg4) /\ (arg1 > 44) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 44) /\ (undef111 > ~(1)) /\ (undef112 > 44) /\ (undef113 > ~(1)) /\ (undef114 > ~(1)), par{arg1 -> undef111, arg2 -> undef112, arg3 -> undef113, arg4 -> undef114}>
<l3, l3, ((undef121 + 2) <= arg1) /\ ((undef121 + 2) <= arg4) /\ ((undef122 - 47) <= arg2) /\ (undef123 <= arg3) /\ ((undef124 + 2) <= arg1) /\ ((undef124 + 2) <= arg4) /\ (arg1 > 46) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 46) /\ (undef121 > ~(1)) /\ (undef122 > 46) /\ (undef123 > ~(1)) /\ (undef124 > ~(1)), par{arg1 -> undef121, arg2 -> undef122, arg3 -> undef123, arg4 -> undef124}>
<l3, l3, ((undef131 + 2) <= arg1) /\ ((undef131 + 2) <= arg4) /\ ((undef132 - 49) <= arg2) /\ (undef133 <= arg3) /\ ((undef134 + 2) <= arg1) /\ ((undef134 + 2) <= arg4) /\ (arg1 > 48) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 48) /\ (undef131 > ~(1)) /\ (undef132 > 48) /\ (undef133 > ~(1)) /\ (undef134 > ~(1)), par{arg1 -> undef131, arg2 -> undef132, arg3 -> undef133, arg4 -> undef134}>
<l3, l3, ((undef141 + 1) <= arg1) /\ (undef151 > 47) /\ ((undef141 + 1) <= arg4) /\ (arg2 >= undef142) /\ (arg1 >= (undef144 + 1)) /\ (arg4 >= (undef144 + 1)) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 0) /\ (undef141 > ~(1)) /\ (undef142 > ~(1)) /\ (undef143 > 0) /\ (undef144 > ~(1)), par{arg1 -> undef141, arg2 -> undef142, arg3 -> undef143, arg4 -> undef144}>
<l3, l3, ((undef152 + 1) <= arg1) /\ (undef162 < 40) /\ ((undef152 + 1) <= arg4) /\ (undef153 <= arg2) /\ ((undef155 + 1) <= arg1) /\ ((undef155 + 1) <= arg4) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 0) /\ (undef152 > ~(1)) /\ (undef153 > ~(1)) /\ (undef154 > 0) /\ (undef155 > ~(1)), par{arg1 -> undef152, arg2 -> undef153, arg3 -> undef154, arg4 -> undef155}>
<l3, l3, ((undef163 + 2) <= arg1) /\ ((undef163 + 2) <= arg4) /\ (undef164 <= arg2) /\ ((undef165 - 46) <= arg3) /\ ((undef166 + 2) <= arg1) /\ ((undef166 + 2) <= arg4) /\ (arg1 > 45) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 45) /\ (undef163 > ~(1)) /\ (undef164 > ~(1)) /\ (undef165 > 45) /\ (undef166 > ~(1)), par{arg1 -> undef163, arg2 -> undef164, arg3 -> undef165, arg4 -> undef166}>
<l3, l3, ((undef173 + 2) <= arg1) /\ ((undef173 + 2) <= arg4) /\ (undef174 <= arg2) /\ ((undef175 - 48) <= arg3) /\ ((undef176 + 2) <= arg1) /\ ((undef176 + 2) <= arg4) /\ (arg1 > 47) /\ (arg2 > ~(1)) /\ (arg3 > ~(1)) /\ (arg4 > 47) /\ (undef173 > ~(1)) /\ (undef174 > ~(1)) /\ (undef175 > 47) /\ (undef176 > ~(1)), par{arg1 -> undef173, arg2 -> undef174, arg3 -> undef175, arg4 -> undef176}>
<l3, l3, ((undef183 + 2) <= arg1) /\ ((undef183 + 2) <= arg4) /\ ((undef184 + 1) <= arg2) /\ ((undef186 + 2) <= arg1) /\ ((undef186 + 2) <= arg4) /\ (arg1 > 42) /\ (arg2 > 0) /\ (arg3 > ~(1)) /\ (arg4 > 42) /\ (undef183 > ~(1)) /\ (undef184 > ~(1)) /\ (undef185 > 0) /\ (undef186 > ~(1)), par{arg1 -> undef183, arg2 -> undef184, arg3 -> undef185, arg4 -> undef186}>
<l5, l5, (undef31 <= arg1) /\ (arg4 > arg3) /\ ((undef31 - 1) <= arg2) /\ ((undef32 - 42) <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef31 > 0) /\ (undef32 > 41), par{arg1 -> undef31, arg2 -> undef32, arg3 -> (arg3 + 1)}>
<l5, l3, (undef71 <= arg2) /\ (arg4 <= arg3) /\ ((undef72 + 1) <= arg1) /\ (undef72 <= arg2) /\ ((undef73 + 1) <= arg1) /\ (undef73 <= arg2) /\ (undef74 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef71 > ~(1)) /\ (undef72 > ~(1)) /\ (undef73 > ~(1)) /\ (undef74 > ~(1)), par{arg1 -> undef71, arg2 -> undef72, arg3 -> undef73, arg4 -> undef74}>
<l6, l6, ((undef193 + 1) <= arg1) /\ (arg1 > 0) /\ (undef193 > ~(1)), par{arg1 -> undef193, arg2 -> undef194, arg3 -> undef195, arg4 -> undef196}>

Fresh variables:
undef1, undef2, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef31, undef32, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef61, undef62, undef65, undef66, undef67, undef68, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef100, undef101, undef102, undef103, undef104, undef105, undef106, undef107, undef108, undef109, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef128, undef129, undef130, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, undef170, undef171, undef172, undef173, undef174, undef175, undef176, undef177, undef178, undef179, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef189, undef190, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef207, undef208, undef209, undef210, undef211, undef212, 

Undef variables:
undef1, undef2, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef22, undef31, undef32, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef45, undef46, undef47, undef48, undef49, undef50, undef51, undef52, undef61, undef62, undef65, undef66, undef67, undef68, undef69, undef70, undef71, undef72, undef73, undef74, undef75, undef76, undef77, undef78, undef79, undef80, undef81, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, undef91, undef92, undef93, undef94, undef95, undef96, undef97, undef98, undef99, undef100, undef101, undef102, undef103, undef104, undef105, undef106, undef107, undef108, undef109, undef110, undef111, undef112, undef113, undef114, undef115, undef116, undef117, undef118, undef119, undef120, undef121, undef122, undef123, undef124, undef125, undef126, undef127, undef128, undef129, undef130, undef131, undef132, undef133, undef134, undef135, undef136, undef137, undef138, undef139, undef140, undef141, undef142, undef143, undef144, undef145, undef146, undef147, undef148, undef149, undef150, undef151, undef152, undef153, undef154, undef155, undef156, undef157, undef158, undef159, undef160, undef161, undef162, undef163, undef164, undef165, undef166, undef167, undef168, undef169, undef170, undef171, undef172, undef173, undef174, undef175, undef176, undef177, undef178, undef179, undef180, undef181, undef182, undef183, undef184, undef185, undef186, undef187, undef188, undef189, undef190, undef191, undef192, undef193, undef194, undef195, undef196, undef197, undef198, undef199, undef200, undef201, undef202, undef203, undef204, undef205, undef206, undef207, undef208, undef209, undef210, undef211, undef212, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg4 /\ 1 <= undef21 /\ 1 <= undef41 /\ undef21 <= 1 + arg2 /\ undef21 <= arg1 /\ 0 <= arg2 /\ undef41 <= undef21 /\ undef42 <= undef22 /\ 106 <= undef22 /\ 106 <= undef42 /\ 105 + undef41 <= undef22 /\ undef22 <= 106 + arg2 /\ arg3 = arg4, {arg1 -> undef41, arg2 -> undef42, arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= arg4 /\ 1 <= undef51 /\ 1 <= undef61 /\ undef51 <= 1 + arg2 /\ undef51 <= arg1 /\ 0 <= arg2 /\ undef61 <= undef51 /\ 106 <= undef52 /\ 105 + undef61 <= undef52 /\ undef52 <= 106 + arg2 /\ undef62 <= 2 + undef52 /\ 108 <= undef62, {arg1 -> undef61, arg2 -> undef62, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 2:
Transitions:
<l5, l5, 1 <= arg1 /\ 1 + arg3 <= arg4 /\ 1 <= undef31 /\ undef31 <= 1 + arg2 /\ undef31 <= arg1 /\ 0 <= arg2 /\ 42 <= undef32 /\ undef32 <= 42 + arg2, {arg1 -> undef31, arg2 -> undef32, arg3 -> 1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 3:
Transitions:
<l3, l3, 0 <= arg2 /\ undef82 <= arg2 /\ 0 <= arg3 /\ undef83 <= arg3 /\ 0 <= undef81 /\ 0 <= undef82 /\ 0 <= undef83 /\ 0 <= undef84 /\ 42 <= arg1 /\ 42 <= arg4 /\ 2 + undef81 <= arg1 /\ 2 + undef84 <= arg1 /\ 2 + undef81 <= arg4 /\ 2 + undef84 <= arg4, {arg1 -> undef81, arg2 -> undef82, arg3 -> undef83, arg4 -> undef84, rest remain the same}>
<l3, l3, 0 <= arg2 /\ 0 <= arg3 /\ undef103 <= arg3 /\ 0 <= undef101 /\ 0 <= undef103 /\ 0 <= undef104 /\ 2 + undef101 <= arg1 /\ 2 + undef104 <= arg1 /\ 2 + undef101 <= arg4 /\ 2 + undef104 <= arg4 /\ 44 <= arg1 /\ 44 <= arg4 /\ 44 <= undef102 /\ undef102 <= 44 + arg2, {arg1 -> undef101, arg2 -> undef102, arg3 -> undef103, arg4 -> undef104, rest remain the same}>
<l3, l3, 0 <= arg2 /\ 0 <= arg3 /\ undef113 <= arg3 /\ 0 <= undef111 /\ 0 <= undef113 /\ 0 <= undef114 /\ 2 + undef111 <= arg1 /\ 2 + undef114 <= arg1 /\ 2 + undef111 <= arg4 /\ 2 + undef114 <= arg4 /\ 45 <= arg1 /\ 45 <= arg4 /\ 45 <= undef112 /\ undef112 <= 45 + arg2, {arg1 -> undef111, arg2 -> undef112, arg3 -> undef113, arg4 -> undef114, rest remain the same}>
<l3, l3, 0 <= arg2 /\ 0 <= arg3 /\ undef123 <= arg3 /\ 0 <= undef121 /\ 0 <= undef123 /\ 0 <= undef124 /\ 2 + undef121 <= arg1 /\ 2 + undef124 <= arg1 /\ 2 + undef121 <= arg4 /\ 2 + undef124 <= arg4 /\ 47 <= arg1 /\ 47 <= arg4 /\ 47 <= undef122 /\ undef122 <= 47 + arg2, {arg1 -> undef121, arg2 -> undef122, arg3 -> undef123, arg4 -> undef124, rest remain the same}>
<l3, l3, 0 <= arg2 /\ 0 <= arg3 /\ undef133 <= arg3 /\ 0 <= undef131 /\ 0 <= undef133 /\ 0 <= undef134 /\ 2 + undef131 <= arg1 /\ 2 + undef134 <= arg1 /\ 2 + undef131 <= arg4 /\ 2 + undef134 <= arg4 /\ 49 <= arg1 /\ 49 <= arg4 /\ 49 <= undef132 /\ undef132 <= 49 + arg2, {arg1 -> undef131, arg2 -> undef132, arg3 -> undef133, arg4 -> undef134, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef141 <= arg1 /\ 1 + undef144 <= arg1 /\ 1 <= arg4 /\ 1 + undef141 <= arg4 /\ 1 + undef144 <= arg4 /\ 1 <= undef143 /\ 0 <= arg2 /\ undef142 <= arg2 /\ 0 <= arg3 /\ 0 <= undef141 /\ 0 <= undef142 /\ 0 <= undef144 /\ 48 <= undef151, {arg1 -> undef141, arg2 -> undef142, arg3 -> undef143, arg4 -> undef144, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef152 <= arg1 /\ 1 + undef155 <= arg1 /\ 1 <= arg4 /\ 1 + undef152 <= arg4 /\ 1 + undef155 <= arg4 /\ 1 <= undef154 /\ 0 <= arg2 /\ undef153 <= arg2 /\ 0 <= arg3 /\ 0 <= undef152 /\ 0 <= undef153 /\ 0 <= undef155 /\ undef162 <= 39, {arg1 -> undef152, arg2 -> undef153, arg3 -> undef154, arg4 -> undef155, rest remain the same}>
<l3, l3, 0 <= arg2 /\ undef164 <= arg2 /\ 0 <= arg3 /\ 0 <= undef163 /\ 0 <= undef164 /\ 0 <= undef166 /\ 2 + undef163 <= arg1 /\ 2 + undef166 <= arg1 /\ 2 + undef163 <= arg4 /\ 2 + undef166 <= arg4 /\ 46 <= arg1 /\ 46 <= arg4 /\ 46 <= undef165 /\ undef165 <= 46 + arg3, {arg1 -> undef163, arg2 -> undef164, arg3 -> undef165, arg4 -> undef166, rest remain the same}>
<l3, l3, 0 <= arg2 /\ undef174 <= arg2 /\ 0 <= arg3 /\ 0 <= undef173 /\ 0 <= undef174 /\ 0 <= undef176 /\ 2 + undef173 <= arg1 /\ 2 + undef176 <= arg1 /\ 2 + undef173 <= arg4 /\ 2 + undef176 <= arg4 /\ 48 <= arg1 /\ 48 <= arg4 /\ 48 <= undef175 /\ undef175 <= 48 + arg3, {arg1 -> undef173, arg2 -> undef174, arg3 -> undef175, arg4 -> undef176, rest remain the same}>
<l3, l3, 1 <= arg2 /\ 1 + undef184 <= arg2 /\ 1 <= undef185 /\ 0 <= arg3 /\ 0 <= undef183 /\ 0 <= undef184 /\ 0 <= undef186 /\ 43 <= arg1 /\ 43 <= arg4 /\ 2 + undef183 <= arg1 /\ 2 + undef186 <= arg1 /\ 2 + undef183 <= arg4 /\ 2 + undef186 <= arg4, {arg1 -> undef183, arg2 -> undef184, arg3 -> undef185, arg4 -> undef186, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 4:
Transitions:
<l6, l6, 1 <= arg1 /\ 1 + undef193 <= arg1 /\ 0 <= undef193, {arg1 -> undef193, arg2 -> undef194, arg3 -> undef195, arg4 -> undef196, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef1 /\ 1 + undef2 <= undef203 /\ 1 <= undef203 /\ undef1 <= undef203 /\ 0 <= undef2 /\ 0 <= undef204 /\ arg3 = 1 /\ arg1 = undef1 /\ arg2 = undef2 /\ arg4 = undef204, {all remain the same}>

Graph 2
<l2, l5, 1 <= arg1 /\ 1 + arg4 <= arg3 /\ 1 <= undef11 /\ undef11 <= 1 + arg2 /\ undef11 <= arg1 /\ 0 <= arg2 /\ undef12 <= arg2 /\ 0 <= undef12, {arg1 -> undef11, arg2 -> undef12, arg3 -> 1, rest remain the same}>

Graph 3
<l5, l3, 1 <= arg1 /\ 1 + undef72 <= arg1 /\ 1 + undef73 <= arg1 /\ 0 <= arg2 /\ undef71 <= arg2 /\ undef72 <= arg2 /\ undef73 <= arg2 /\ undef74 <= arg2 /\ arg4 <= arg3 /\ 0 <= undef71 /\ 0 <= undef72 /\ 0 <= undef73 /\ 0 <= undef74, {arg1 -> undef71, arg2 -> undef72, arg3 -> undef73, arg4 -> undef74, rest remain the same}>

Graph 4
<l3, l6, 0 <= arg1 /\ 0 <= arg2 /\ 0 <= arg3 /\ undef91 <= arg3 /\ 0 <= arg4 /\ 0 <= undef91, {arg1 -> undef91, arg2 -> undef92, arg3 -> undef93, arg4 -> undef94, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 3 , 3 )
( 5 , 2 )
( 6 , 4 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.006221

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002190s
[33mRanking function: [36m-arg3 + arg4[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001873

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000738s
[33mRanking function: [36m-1 - arg3 + arg4[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.035617

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.016130s
[33mRanking function: [36m(~(273) / 2) + (13 / 4)*arg1[0m
New Graphs: 
Transitions:
<l3, l3, 1 <= arg1 /\ 1 + undef141 <= arg1 /\ 1 + undef144 <= arg1 /\ 1 <= arg4 /\ 1 + undef141 <= arg4 /\ 1 + undef144 <= arg4 /\ 1 <= undef143 /\ 0 <= arg2 /\ undef142 <= arg2 /\ 0 <= arg3 /\ 0 <= undef141 /\ 0 <= undef142 /\ 0 <= undef144 /\ 48 <= undef151, {arg1 -> undef141, arg2 -> undef142, arg3 -> undef143, arg4 -> undef144, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + undef152 <= arg1 /\ 1 + undef155 <= arg1 /\ 1 <= arg4 /\ 1 + undef152 <= arg4 /\ 1 + undef155 <= arg4 /\ 1 <= undef154 /\ 0 <= arg2 /\ undef153 <= arg2 /\ 0 <= arg3 /\ 0 <= undef152 /\ 0 <= undef153 /\ 0 <= undef155 /\ undef162 <= 39, {arg1 -> undef152, arg2 -> undef153, arg3 -> undef154, arg4 -> undef155, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002067s
[33mRanking function: [36m-1 + arg4[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.001341

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000662s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m

