YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, true>
<l2, l3, (undef4 = (~(1) + x_5^0)) /\ ((0 + (~(1) * undef4)) <= 0), par{x_5^0 -> undef4}>
<l3, l2, true>
<l2, l4, (undef8 = (~(1) + x_5^0)) /\ (0 <= (~(1) + (~(1) * undef8))) /\ (undef7 = undef7), par{Result_4^0 -> undef7, x_5^0 -> undef8}>
<l5, l1, true>

Fresh variables:
undef4, undef7, undef8, 

Undef variables:
undef4, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, true>
<l2, l2, (undef4 = (~(1) + x_5^0)) /\ ((0 + (~(1) * undef4)) <= 0), par{x_5^0 -> undef4}>
<l2, l4, (undef8 = (~(1) + x_5^0)) /\ (0 <= (~(1) + (~(1) * undef8))) /\ (undef7 = undef7), par{x_5^0 -> undef8}>

Fresh variables:
undef4, undef7, undef8, 

Undef variables:
undef4, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= undef4 /\ x_5^0 = 1 + undef4, {x_5^0 -> undef4, rest remain the same}>
Variables:
x_5^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, true, {all remain the same}>

Graph 2
<l2, l4, 1 + undef8 <= 0 /\ x_5^0 = 1 + undef8, {x_5^0 -> undef8, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 4 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.000665

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000299s
[33mRanking function: [36m-1 + x_5^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m

