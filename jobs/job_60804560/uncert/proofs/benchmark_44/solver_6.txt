NO
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l1, true>
<l2, l3, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2}>
<l3, l3, (10 = arg1), par{arg1 -> 10, arg2 -> undef4}>
<l3, l3, (arg1 > 5) /\ (arg1 < 10), par{arg1 -> (arg1 - 1), arg2 -> undef6}>
<l3, l3, (arg1 > 10), par{arg1 -> (arg1 - 1), arg2 -> undef8}>
<l1, l2, true, par{arg1 -> undef9, arg2 -> undef10}>

Fresh variables:
undef2, undef4, undef6, undef8, undef9, undef10, 

Undef variables:
undef2, undef4, undef6, undef8, undef9, undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = undef10) /\ (undef9 > 0) /\ (undef10 > ~(1))>
<l3, l3, (10 = arg1), par{arg1 -> 10}>
<l3, l3, (arg1 > 5) /\ (arg1 < 10), par{arg1 -> (arg1 - 1)}>
<l3, l3, (arg1 > 10), par{arg1 -> (arg1 - 1)}>

Fresh variables:
undef2, undef4, undef6, undef8, undef9, undef10, 

Undef variables:
undef2, undef4, undef6, undef8, undef9, undef10, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002371

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000598s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000167s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000476s
Trying to remove transition: <l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.612743s
Time used: 1.60306
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021289s
Time used: 0.0043
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.017164s
Time used: 0.017075

LOG: SAT solveNonLinear - Elapsed time: 0.038453s
Cost: 1; Total time: 0.021375
[31mFailed at location 3: arg1 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002837s
Remaining time after improvement: 0.999499
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 0 and entry <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>

LOG: CALL check - Post:arg1 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>
* Postcondition  : arg1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000235s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000266s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 <= 0 , 
Narrowing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000514s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000162s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000465s
Trying to remove transition: <l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.424409s
Time used: 1.41848
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020949s
Time used: 0.004466
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.016870s
Time used: 0.016801

LOG: SAT solveNonLinear - Elapsed time: 0.037819s
Cost: 1; Total time: 0.021267
[31mFailed at location 3: arg1 <= 1[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002796s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000606s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000429s
Remaining time after improvement: 0.998413
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 3 and entry <l0, l3, 0 <= undef10 /\ 1 <= arg1 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>

LOG: CALL check - Post:arg1 <= 3 - Process 2
* Exit transition: <l0, l3, 0 <= undef10 /\ 1 <= arg1 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>
* Postcondition  : arg1 <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000184s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000213s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 <= 3 , 
Narrowing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000442s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000133s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000392s
Trying to remove transition: <l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.563344s
Time used: 1.55562
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.059945s
Time used: 0.042289
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.186696s
Time used: 0.185619

LOG: SAT solveNonLinear - Elapsed time: 0.246641s
Cost: 1; Total time: 0.227908
[31mFailed at location 3: arg1 <= 8[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 8[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007223s
Remaining time after improvement: 0.999184
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 8[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 6 <= arg1 /\ arg1 <= 8, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 8 and entry <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ 4 <= arg1 /\ arg1 = undef10, {all remain the same}>

LOG: CALL check - Post:arg1 <= 8 - Process 3
* Exit transition: <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ 4 <= arg1 /\ arg1 = undef10, {all remain the same}>
* Postcondition  : arg1 <= 8

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000232s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000265s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 <= 8 , 
Narrowing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l3, l3, 6 <= arg1 /\ arg1 <= 9, {arg1 -> -1 + arg1, rest remain the same}>
Narrowing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000395s
[33mRanking function: [36m-10 + arg1[0m
New Graphs: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000158s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000487s
Trying to remove transition: <l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.552337s
Time used: 1.54492
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.068801s
Time used: 0.050975
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.815017s
Time used: 0.811779

LOG: SAT solveNonLinear - Elapsed time: 0.883818s
Cost: 1; Total time: 0.862754
[31mFailed at location 3: arg1 <= 9[0m
Before Improving: 
[36mQuasi-invariant at l3: arg1 <= 9[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009815s
Remaining time after improvement: 0.999262
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg1 <= 9[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 9 and entry <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ 9 <= arg1 /\ arg1 = undef10, {all remain the same}>

LOG: CALL check - Post:arg1 <= 9 - Process 4
* Exit transition: <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ 9 <= arg1 /\ arg1 = undef10, {all remain the same}>
* Postcondition  : arg1 <= 9

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000409s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000438s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: arg1 <= 9 , 
Narrowing transition: 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000374s
[33mRanking function: [36m-10 + arg1[0m
New Graphs: 
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000146s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000455s
Trying to remove transition: <l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.470655s
Time used: 1.46439
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.036239s
Time used: 4.00078
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.019792s
Time used: 4.00055
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011933s
Time used: 1.00073
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.413493s
Time used: 0.406157

Proving non-termination of subgraph 1
Transitions:
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, arg1 <= 9, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.013222s
Time used: 0.013063
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.005334s
Time used: 0.00531

LOG: SAT solveNonLinear - Elapsed time: 0.018556s
Cost: 1; Total time: 0.018373
[31mFailed at location 3: 10 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l3: 10 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001645s
Remaining time after improvement: 0.999601
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 10 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, arg1 = 10, {arg1 -> 10, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 11 <= arg1, {arg1 -> -1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 10 <= arg1, 
OPEN EXITS: 
<l3, end, 10 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ arg1 = undef10, {all remain the same}>
Conditions: 10 <= arg1, 
OPEN EXITS: 
<l0, l3, 0 <= undef10 /\ 1 <= undef9 /\ 10 <= arg1 /\ arg1 = undef10, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m

