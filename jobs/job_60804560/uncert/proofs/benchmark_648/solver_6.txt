YES
Solver Timeout: 4
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, ((1 + n^0) <= (0 + i^0))>
<l1, l4, ((0 + i^0) <= (0 + n^0)), par{i^0 -> (1 + i^0), j^0 -> (2 + j^0)}>
<l5, l4, true, par{i^0 -> 0}>
<l6, l5, true, par{n^0 -> 0}>
<l7, l5, ((0 + tmp^0) <= 0) /\ (0 <= (0 + tmp^0)), par{n^0 -> (0 + __const_1023^0)}>
<l7, l6, (1 <= (0 + tmp^0))>
<l7, l6, ((1 + tmp^0) <= 0)>
<l4, l1, true>
<l8, l9, true>
<l10, l8, ((0 + __const_1023^0) <= (0 + b^0))>
<l10, l8, ((1 + b^0) <= (0 + __const_1023^0))>
<l2, l8, ((1 + b^0) <= 0)>
<l2, l10, (0 <= (0 + b^0))>
<l11, l7, (undef84 = undef84), par{tmp^0 -> undef84}>
<l3, l11, true>

Fresh variables:
undef84, 

Undef variables:
undef84, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (i^0 = 0) /\ (undef84 = undef84) /\ ((0 + undef84) <= 0) /\ (0 <= (0 + undef84)), par{n^0 -> (0 + __const_1023^0)}>
<l0, l4, (i^0 = 0) /\ (undef84 = undef84) /\ (1 <= (0 + undef84)), par{n^0 -> 0}>
<l0, l4, (i^0 = 0) /\ (undef84 = undef84) /\ ((1 + undef84) <= 0), par{n^0 -> 0}>
<l4, l9, ((1 + n^0) <= (0 + i^0)) /\ ((1 + b^0) <= 0)>
<l4, l9, ((1 + n^0) <= (0 + i^0)) /\ (0 <= (0 + b^0)) /\ ((0 + __const_1023^0) <= (0 + b^0))>
<l4, l9, ((1 + n^0) <= (0 + i^0)) /\ (0 <= (0 + b^0)) /\ ((1 + b^0) <= (0 + __const_1023^0))>
<l4, l4, ((0 + i^0) <= (0 + n^0)), par{i^0 -> (1 + i^0), j^0 -> (2 + j^0)}>

Fresh variables:
undef84, 

Undef variables:
undef84, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, i^0 <= n^0, {i^0 -> 1 + i^0, j^0 -> 2 + j^0, rest remain the same}>
Variables:
i^0, j^0, n^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, i^0 = 0 /\ undef84 = 0, {n^0 -> __const_1023^0, rest remain the same}>
<l0, l4, 1 <= undef84 /\ i^0 = 0, {n^0 -> 0, rest remain the same}>
<l0, l4, 1 + undef84 <= 0 /\ i^0 = 0, {n^0 -> 0, rest remain the same}>

Graph 2
<l4, l9, 1 + b^0 <= 0 /\ 1 + n^0 <= i^0, {all remain the same}>
<l4, l9, 1 + n^0 <= i^0 /\ __const_1023^0 <= b^0 /\ 0 <= b^0, {all remain the same}>
<l4, l9, 1 + b^0 <= __const_1023^0 /\ 1 + n^0 <= i^0 /\ 0 <= b^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001593

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000359s
[33mRanking function: [36m-i^0 + n^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l9}...
No cycles found.

[32mProgram Terminates[0m

