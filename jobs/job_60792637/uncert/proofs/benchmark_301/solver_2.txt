MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/D76Dm.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

p(a)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) PiDP
    (7) UsableRulesProof [EQUIVALENT, 0 ms]
    (8) PiDP
    (9) PiDPToQDPProof [SOUND, 0 ms]
    (10) QDP
(11) PrologToPiTRSProof [SOUND, 0 ms]
(12) PiTRS
    (13) DependencyPairsProof [EQUIVALENT, 0 ms]
    (14) PiDP
    (15) DependencyGraphProof [EQUIVALENT, 0 ms]
    (16) PiDP
    (17) UsableRulesProof [EQUIVALENT, 0 ms]
    (18) PiDP
    (19) PiDPToQDPProof [SOUND, 0 ms]
    (20) QDP
(21) PrologToTRSTransformerProof [SOUND, 0 ms]
(22) QTRS
    (23) QTRSRRRProof [EQUIVALENT, 18 ms]
    (24) QTRS
    (25) QTRSRRRProof [EQUIVALENT, 6 ms]
    (26) QTRS
    (27) QTRSRRRProof [EQUIVALENT, 5 ms]
    (28) QTRS
    (29) QTRSRRRProof [EQUIVALENT, 3 ms]
    (30) QTRS
    (31) QTRSRRRProof [EQUIVALENT, 0 ms]
    (32) QTRS
    (33) QTRSRRRProof [EQUIVALENT, 1 ms]
    (34) QTRS
    (35) QTRSRRRProof [EQUIVALENT, 2 ms]
    (36) QTRS
(37) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(38) TRIPLES
    (39) TriplesToPiDPProof [SOUND, 0 ms]
    (40) PiDP
    (41) DependencyGraphProof [EQUIVALENT, 0 ms]
    (42) PiDP
    (43) PiDPToQDPProof [SOUND, 0 ms]
    (44) QDP
(45) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(46) IRSwT
    (47) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
    (48) IRSwT
    (49) IntTRSCompressionProof [EQUIVALENT, 11 ms]
    (50) IRSwT
    (51) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
    (52) IRSwT
    (53) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
    (54) IRSwT
    (55) FilterProof [EQUIVALENT, 0 ms]
    (56) IntTRS
    (57) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
    (58) NO


----------------------------------------

(0)
Obligation:
Clauses:

p(X) :- ','(l(X), q(X)).
q(.(A, [])).
r(1).
l([]).
l(.(H, T)) :- ','(r(H), l(T)).


Query: p(a)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

p_in_1: (f)

l_in_1: (f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g(x1)

p_out_a(x1)  =  p_out_a(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g(x1)

p_out_a(x1)  =  p_out_a(x1)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_A(X) -> U1_A(X, l_in_a(X))
   P_IN_A(X) -> L_IN_A(X)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))
   L_IN_A(.(H, T)) -> R_IN_A(H)
   U3_A(H, T, r_out_a(H)) -> U4_A(H, T, l_in_a(T))
   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   U1_A(X, l_out_a(X)) -> U2_A(X, q_in_g(X))
   U1_A(X, l_out_a(X)) -> Q_IN_G(X)

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g(x1)

p_out_a(x1)  =  p_out_a(x1)

P_IN_A(x1)  =  P_IN_A

U1_A(x1, x2)  =  U1_A(x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)

R_IN_A(x1)  =  R_IN_A

U4_A(x1, x2, x3)  =  U4_A(x1, x3)

U2_A(x1, x2)  =  U2_A(x1, x2)

Q_IN_G(x1)  =  Q_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_A(X) -> U1_A(X, l_in_a(X))
   P_IN_A(X) -> L_IN_A(X)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))
   L_IN_A(.(H, T)) -> R_IN_A(H)
   U3_A(H, T, r_out_a(H)) -> U4_A(H, T, l_in_a(T))
   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   U1_A(X, l_out_a(X)) -> U2_A(X, q_in_g(X))
   U1_A(X, l_out_a(X)) -> Q_IN_G(X)

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g(x1)

p_out_a(x1)  =  p_out_a(x1)

P_IN_A(x1)  =  P_IN_A

U1_A(x1, x2)  =  U1_A(x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)

R_IN_A(x1)  =  R_IN_A

U4_A(x1, x2, x3)  =  U4_A(x1, x3)

U2_A(x1, x2)  =  U2_A(x1, x2)

Q_IN_G(x1)  =  Q_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 6 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g(x1)

p_out_a(x1)  =  p_out_a(x1)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(8)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))

The TRS R consists of the following rules:

   r_in_a(1) -> r_out_a(1)

The argument filtering Pi contains the following mapping:
r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

.(x1, x2)  =  .(x1, x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(9) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(r_out_a(H)) -> L_IN_A
   L_IN_A -> U3_A(r_in_a)

The TRS R consists of the following rules:

   r_in_a -> r_out_a(1)

The set Q consists of the following terms:

   r_in_a

We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

p_in_1: (f)

l_in_1: (f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g

p_out_a(x1)  =  p_out_a(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(12)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g

p_out_a(x1)  =  p_out_a(x1)



----------------------------------------

(13) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_A(X) -> U1_A(X, l_in_a(X))
   P_IN_A(X) -> L_IN_A(X)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))
   L_IN_A(.(H, T)) -> R_IN_A(H)
   U3_A(H, T, r_out_a(H)) -> U4_A(H, T, l_in_a(T))
   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   U1_A(X, l_out_a(X)) -> U2_A(X, q_in_g(X))
   U1_A(X, l_out_a(X)) -> Q_IN_G(X)

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g

p_out_a(x1)  =  p_out_a(x1)

P_IN_A(x1)  =  P_IN_A

U1_A(x1, x2)  =  U1_A(x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)

R_IN_A(x1)  =  R_IN_A

U4_A(x1, x2, x3)  =  U4_A(x1, x3)

U2_A(x1, x2)  =  U2_A(x1, x2)

Q_IN_G(x1)  =  Q_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_A(X) -> U1_A(X, l_in_a(X))
   P_IN_A(X) -> L_IN_A(X)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))
   L_IN_A(.(H, T)) -> R_IN_A(H)
   U3_A(H, T, r_out_a(H)) -> U4_A(H, T, l_in_a(T))
   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   U1_A(X, l_out_a(X)) -> U2_A(X, q_in_g(X))
   U1_A(X, l_out_a(X)) -> Q_IN_G(X)

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g

p_out_a(x1)  =  p_out_a(x1)

P_IN_A(x1)  =  P_IN_A

U1_A(x1, x2)  =  U1_A(x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)

R_IN_A(x1)  =  R_IN_A

U4_A(x1, x2, x3)  =  U4_A(x1, x3)

U2_A(x1, x2)  =  U2_A(x1, x2)

Q_IN_G(x1)  =  Q_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 6 less nodes.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))

The TRS R consists of the following rules:

   p_in_a(X) -> U1_a(X, l_in_a(X))
   l_in_a([]) -> l_out_a([])
   l_in_a(.(H, T)) -> U3_a(H, T, r_in_a(H))
   r_in_a(1) -> r_out_a(1)
   U3_a(H, T, r_out_a(H)) -> U4_a(H, T, l_in_a(T))
   U4_a(H, T, l_out_a(T)) -> l_out_a(.(H, T))
   U1_a(X, l_out_a(X)) -> U2_a(X, q_in_g(X))
   q_in_g(.(A, [])) -> q_out_g(.(A, []))
   U2_a(X, q_out_g(X)) -> p_out_a(X)

The argument filtering Pi contains the following mapping:
p_in_a(x1)  =  p_in_a

U1_a(x1, x2)  =  U1_a(x2)

l_in_a(x1)  =  l_in_a

l_out_a(x1)  =  l_out_a(x1)

U3_a(x1, x2, x3)  =  U3_a(x3)

r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

U4_a(x1, x2, x3)  =  U4_a(x1, x3)

U2_a(x1, x2)  =  U2_a(x1, x2)

q_in_g(x1)  =  q_in_g(x1)

.(x1, x2)  =  .(x1, x2)

[]  =  []

q_out_g(x1)  =  q_out_g

p_out_a(x1)  =  p_out_a(x1)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(18)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_A(H, T, r_out_a(H)) -> L_IN_A(T)
   L_IN_A(.(H, T)) -> U3_A(H, T, r_in_a(H))

The TRS R consists of the following rules:

   r_in_a(1) -> r_out_a(1)

The argument filtering Pi contains the following mapping:
r_in_a(x1)  =  r_in_a

r_out_a(x1)  =  r_out_a(x1)

.(x1, x2)  =  .(x1, x2)

L_IN_A(x1)  =  L_IN_A

U3_A(x1, x2, x3)  =  U3_A(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(19) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(r_out_a(H)) -> L_IN_A
   L_IN_A -> U3_A(r_in_a)

The TRS R consists of the following rules:

   r_in_a -> r_out_a(1)

The set Q consists of the following terms:

   r_in_a

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p X)",
                "(',' (l X) (q X))"
            ],
            [
                "(q (. A ([])))",
                null
            ],
            [
                "(r (1))",
                null
            ],
            [
                "(l ([]))",
                null
            ],
            [
                "(l (. H T))",
                "(',' (r H) (l T))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "11": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "130": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "131": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(l T6)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(l T6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "132": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "176": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(q T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "133": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "155": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (r T14) (l T15))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "177": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "134": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "156": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "167": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "178": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "135": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "157": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(',' (r T14) (l T15))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "179": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "136": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "106": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (l T6) (q T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "129": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 11,
                "label": "CASE"
            },
            {
                "from": 11,
                "to": 106,
                "label": "ONLY EVAL with clause\np(X3) :- ','(l(X3), q(X3)).\nand substitutionT1 -> T6,\nX3 -> T6,\nT5 -> T6"
            },
            {
                "from": 106,
                "to": 129,
                "label": "SPLIT 1"
            },
            {
                "from": 106,
                "to": 130,
                "label": "SPLIT 2\nnew knowledge:\nT7 is ground\nreplacements:T6 -> T7"
            },
            {
                "from": 129,
                "to": 131,
                "label": "CASE"
            },
            {
                "from": 130,
                "to": 176,
                "label": "CASE"
            },
            {
                "from": 131,
                "to": 132,
                "label": "PARALLEL"
            },
            {
                "from": 131,
                "to": 133,
                "label": "PARALLEL"
            },
            {
                "from": 132,
                "to": 134,
                "label": "EVAL with clause\nl([]).\nand substitutionT6 -> []"
            },
            {
                "from": 132,
                "to": 135,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 133,
                "to": 155,
                "label": "EVAL with clause\nl(.(X8, X9)) :- ','(r(X8), l(X9)).\nand substitutionX8 -> T14,\nX9 -> T15,\nT6 -> .(T14, T15),\nT12 -> T14,\nT13 -> T15"
            },
            {
                "from": 133,
                "to": 156,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 134,
                "to": 136,
                "label": "SUCCESS"
            },
            {
                "from": 155,
                "to": 157,
                "label": "CASE"
            },
            {
                "from": 157,
                "to": 166,
                "label": "EVAL with clause\nr(1).\nand substitutionT14 -> 1,\nT15 -> T16"
            },
            {
                "from": 157,
                "to": 167,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 166,
                "to": 129,
                "label": "INSTANCE with matching:\nT6 -> T16"
            },
            {
                "from": 176,
                "to": 177,
                "label": "EVAL with clause\nq(.(X12, [])).\nand substitutionX12 -> T19,\nT7 -> .(T19, [])"
            },
            {
                "from": 176,
                "to": 178,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 177,
                "to": 179,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(22)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in -> U1(f106_in)
   U1(f106_out1(T6)) -> f1_out1(T6)
   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))
   f130_in(.(T19, [])) -> f130_out1
   f106_in -> U3(f129_in)
   U3(f129_out1(T7)) -> U4(f130_in(T7), T7)
   U4(f130_out1, T7) -> f106_out1(T7)

Q is empty.

----------------------------------------

(23) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + 2*x_2
   POL(1) = 0
   POL(U1(x_1)) = 2*x_1
   POL(U2(x_1)) = 2*x_1
   POL(U3(x_1)) = 2*x_1
   POL(U4(x_1, x_2)) = x_1 + x_2
   POL([]) = 0
   POL(f106_in) = 0
   POL(f106_out1(x_1)) = x_1
   POL(f129_in) = 0
   POL(f129_out1(x_1)) = x_1
   POL(f130_in(x_1)) = x_1
   POL(f130_out1) = 0
   POL(f1_in) = 1
   POL(f1_out1(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f1_in -> U1(f106_in)




----------------------------------------

(24)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   U1(f106_out1(T6)) -> f1_out1(T6)
   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))
   f130_in(.(T19, [])) -> f130_out1
   f106_in -> U3(f129_in)
   U3(f129_out1(T7)) -> U4(f130_in(T7), T7)
   U4(f130_out1, T7) -> f106_out1(T7)

Q is empty.

----------------------------------------

(25) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2*x_1 + x_2
   POL(1) = 0
   POL(U1(x_1)) = 2*x_1
   POL(U2(x_1)) = x_1
   POL(U3(x_1)) = 2*x_1
   POL(U4(x_1, x_2)) = x_1 + 2*x_2
   POL([]) = 0
   POL(f106_in) = 2
   POL(f106_out1(x_1)) = x_1
   POL(f129_in) = 0
   POL(f129_out1(x_1)) = 2*x_1
   POL(f130_in(x_1)) = x_1
   POL(f130_out1) = 0
   POL(f1_out1(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f106_in -> U3(f129_in)




----------------------------------------

(26)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   U1(f106_out1(T6)) -> f1_out1(T6)
   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))
   f130_in(.(T19, [])) -> f130_out1
   U3(f129_out1(T7)) -> U4(f130_in(T7), T7)
   U4(f130_out1, T7) -> f106_out1(T7)

Q is empty.

----------------------------------------

(27) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2*x_1 + x_2
   POL(1) = 0
   POL(U1(x_1)) = 2*x_1
   POL(U2(x_1)) = x_1
   POL(U3(x_1)) = 1 + 2*x_1
   POL(U4(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL([]) = 0
   POL(f106_out1(x_1)) = 1 + x_1
   POL(f129_in) = 2
   POL(f129_out1(x_1)) = 2 + 2*x_1
   POL(f130_in(x_1)) = x_1
   POL(f130_out1) = 0
   POL(f1_out1(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U3(f129_out1(T7)) -> U4(f130_in(T7), T7)
   U4(f130_out1, T7) -> f106_out1(T7)




----------------------------------------

(28)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   U1(f106_out1(T6)) -> f1_out1(T6)
   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))
   f130_in(.(T19, [])) -> f130_out1

Q is empty.

----------------------------------------

(29) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2*x_1 + x_2
   POL(1) = 0
   POL(U1(x_1)) = 2 + x_1
   POL(U2(x_1)) = 2*x_1
   POL([]) = 0
   POL(f106_out1(x_1)) = 2 + 2*x_1
   POL(f129_in) = 0
   POL(f129_out1(x_1)) = x_1
   POL(f130_in(x_1)) = 1 + x_1
   POL(f130_out1) = 1
   POL(f1_out1(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U1(f106_out1(T6)) -> f1_out1(T6)




----------------------------------------

(30)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))
   f130_in(.(T19, [])) -> f130_out1

Q is empty.

----------------------------------------

(31) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2*x_1 + x_2
   POL(1) = 0
   POL(U2(x_1)) = 2*x_1
   POL([]) = 0
   POL(f129_in) = 0
   POL(f129_out1(x_1)) = 2*x_1
   POL(f130_in(x_1)) = 1 + 2*x_1
   POL(f130_out1) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f130_in(.(T19, [])) -> f130_out1




----------------------------------------

(32)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f129_in -> f129_out1([])
   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))

Q is empty.

----------------------------------------

(33) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + x_2
   POL(1) = 0
   POL(U2(x_1)) = x_1
   POL([]) = 0
   POL(f129_in) = 1
   POL(f129_out1(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f129_in -> f129_out1([])




----------------------------------------

(34)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f129_in -> U2(f129_in)
   U2(f129_out1(T16)) -> f129_out1(.(1, T16))

Q is empty.

----------------------------------------

(35) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + x_2
   POL(1) = 1
   POL(U2(x_1)) = 2*x_1
   POL(f129_in) = 0
   POL(f129_out1(x_1)) = 2 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U2(f129_out1(T16)) -> f129_out1(.(1, T16))




----------------------------------------

(36)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f129_in -> U2(f129_in)

Q is empty.

----------------------------------------

(37) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p X)",
                "(',' (l X) (q X))"
            ],
            [
                "(q (. A ([])))",
                null
            ],
            [
                "(r (1))",
                null
            ],
            [
                "(l ([]))",
                null
            ],
            [
                "(l (. H T))",
                "(',' (r H) (l T))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "25": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "199": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(l T13)"
                    },
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(l T13)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "210": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(q (. (1) T14))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": [],
                    "exprvars": []
                }
            },
            "112": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "211": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "113": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "212": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "213": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "181": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q (. (1) T14))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": [],
                    "exprvars": []
                }
            },
            "120": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(q ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "122": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "123": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (r T11) (l T12)) (q (. T11 T12)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "200": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(l T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "124": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "201": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(l T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "125": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(',' (',' (r T11) (l T12)) (q (. T11 T12)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "202": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "126": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (l T13) (q (. (1) T13)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "203": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "105": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (l T4) (q T4))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "127": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "204": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "205": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (r T21) (l T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "107": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (l T4) (q T4))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (l T4) (q T4))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "206": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "108": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(',' (l T4) (q T4))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "207": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(',' (r T21) (l T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "109": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(',' (l T4) (q T4))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "208": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "209": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 25,
                "label": "CASE"
            },
            {
                "from": 25,
                "to": 105,
                "label": "ONLY EVAL with clause\np(X2) :- ','(l(X2), q(X2)).\nand substitutionT1 -> T4,\nX2 -> T4,\nT3 -> T4"
            },
            {
                "from": 105,
                "to": 107,
                "label": "CASE"
            },
            {
                "from": 107,
                "to": 108,
                "label": "PARALLEL"
            },
            {
                "from": 107,
                "to": 109,
                "label": "PARALLEL"
            },
            {
                "from": 108,
                "to": 112,
                "label": "EVAL with clause\nl([]).\nand substitutionT4 -> []"
            },
            {
                "from": 108,
                "to": 113,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 109,
                "to": 123,
                "label": "EVAL with clause\nl(.(X8, X9)) :- ','(r(X8), l(X9)).\nand substitutionX8 -> T11,\nX9 -> T12,\nT4 -> .(T11, T12),\nT9 -> T11,\nT10 -> T12"
            },
            {
                "from": 109,
                "to": 124,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 112,
                "to": 120,
                "label": "CASE"
            },
            {
                "from": 120,
                "to": 122,
                "label": "BACKTRACK\nfor clause: q(.(A, []))because of non-unification"
            },
            {
                "from": 123,
                "to": 125,
                "label": "CASE"
            },
            {
                "from": 125,
                "to": 126,
                "label": "EVAL with clause\nr(1).\nand substitutionT11 -> 1,\nT12 -> T13"
            },
            {
                "from": 125,
                "to": 127,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 126,
                "to": 180,
                "label": "SPLIT 1"
            },
            {
                "from": 126,
                "to": 181,
                "label": "SPLIT 2\nnew knowledge:\nT14 is ground\nreplacements:T13 -> T14"
            },
            {
                "from": 180,
                "to": 199,
                "label": "CASE"
            },
            {
                "from": 181,
                "to": 210,
                "label": "CASE"
            },
            {
                "from": 199,
                "to": 200,
                "label": "PARALLEL"
            },
            {
                "from": 199,
                "to": 201,
                "label": "PARALLEL"
            },
            {
                "from": 200,
                "to": 202,
                "label": "EVAL with clause\nl([]).\nand substitutionT13 -> []"
            },
            {
                "from": 200,
                "to": 203,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 201,
                "to": 205,
                "label": "EVAL with clause\nl(.(X14, X15)) :- ','(r(X14), l(X15)).\nand substitutionX14 -> T21,\nX15 -> T22,\nT13 -> .(T21, T22),\nT19 -> T21,\nT20 -> T22"
            },
            {
                "from": 201,
                "to": 206,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 202,
                "to": 204,
                "label": "SUCCESS"
            },
            {
                "from": 205,
                "to": 207,
                "label": "CASE"
            },
            {
                "from": 207,
                "to": 208,
                "label": "EVAL with clause\nr(1).\nand substitutionT21 -> 1,\nT22 -> T23"
            },
            {
                "from": 207,
                "to": 209,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 208,
                "to": 180,
                "label": "INSTANCE with matching:\nT13 -> T23"
            },
            {
                "from": 210,
                "to": 211,
                "label": "EVAL with clause\nq(.(X18, [])).\nand substitutionX18 -> 1,\nT14 -> []"
            },
            {
                "from": 210,
                "to": 212,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 211,
                "to": 213,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(38)
Obligation:
Triples:

lA(.(1, X1)) :- lA(X1).
pB(.(1, X1)) :- lA(X1).

Clauses:

lcA([]).
lcA(.(1, X1)) :- lcA(X1).

Afs:

pB(x1)  =  pB


----------------------------------------

(39) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

pB_in_1: (f)

lA_in_1: (f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_A(.(1, X1)) -> U2_A(X1, lA_in_a(X1))
   PB_IN_A(.(1, X1)) -> LA_IN_A(X1)
   LA_IN_A(.(1, X1)) -> U1_A(X1, lA_in_a(X1))
   LA_IN_A(.(1, X1)) -> LA_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
lA_in_a(x1)  =  lA_in_a

.(x1, x2)  =  .(x1, x2)

1  =  1

PB_IN_A(x1)  =  PB_IN_A

U2_A(x1, x2)  =  U2_A(x2)

LA_IN_A(x1)  =  LA_IN_A

U1_A(x1, x2)  =  U1_A(x2)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(40)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_A(.(1, X1)) -> U2_A(X1, lA_in_a(X1))
   PB_IN_A(.(1, X1)) -> LA_IN_A(X1)
   LA_IN_A(.(1, X1)) -> U1_A(X1, lA_in_a(X1))
   LA_IN_A(.(1, X1)) -> LA_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
lA_in_a(x1)  =  lA_in_a

.(x1, x2)  =  .(x1, x2)

1  =  1

PB_IN_A(x1)  =  PB_IN_A

U2_A(x1, x2)  =  U2_A(x2)

LA_IN_A(x1)  =  LA_IN_A

U1_A(x1, x2)  =  U1_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(41) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(42)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LA_IN_A(.(1, X1)) -> LA_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

1  =  1

LA_IN_A(x1)  =  LA_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(43) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LA_IN_A -> LA_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(45) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p X)",
                "(',' (l X) (q X))"
            ],
            [
                "(q (. A ([])))",
                null
            ],
            [
                "(r (1))",
                null
            ],
            [
                "(l ([]))",
                null
            ],
            [
                "(l (. H T))",
                "(',' (r H) (l T))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "29": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "190": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (r T14) (l T15))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "191": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "192": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(',' (r T14) (l T15))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "182": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "193": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l T16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "183": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "194": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "184": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(l T6)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(l T6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "195": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(q T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "185": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "196": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "186": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(l T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "197": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "187": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "198": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "188": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "189": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "128": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (l T6) (q T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 29,
                "label": "CASE"
            },
            {
                "from": 29,
                "to": 128,
                "label": "ONLY EVAL with clause\np(X3) :- ','(l(X3), q(X3)).\nand substitutionT1 -> T6,\nX3 -> T6,\nT5 -> T6"
            },
            {
                "from": 128,
                "to": 182,
                "label": "SPLIT 1"
            },
            {
                "from": 128,
                "to": 183,
                "label": "SPLIT 2\nnew knowledge:\nT7 is ground\nreplacements:T6 -> T7"
            },
            {
                "from": 182,
                "to": 184,
                "label": "CASE"
            },
            {
                "from": 183,
                "to": 195,
                "label": "CASE"
            },
            {
                "from": 184,
                "to": 185,
                "label": "PARALLEL"
            },
            {
                "from": 184,
                "to": 186,
                "label": "PARALLEL"
            },
            {
                "from": 185,
                "to": 187,
                "label": "EVAL with clause\nl([]).\nand substitutionT6 -> []"
            },
            {
                "from": 185,
                "to": 188,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 186,
                "to": 190,
                "label": "EVAL with clause\nl(.(X8, X9)) :- ','(r(X8), l(X9)).\nand substitutionX8 -> T14,\nX9 -> T15,\nT6 -> .(T14, T15),\nT12 -> T14,\nT13 -> T15"
            },
            {
                "from": 186,
                "to": 191,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 187,
                "to": 189,
                "label": "SUCCESS"
            },
            {
                "from": 190,
                "to": 192,
                "label": "CASE"
            },
            {
                "from": 192,
                "to": 193,
                "label": "EVAL with clause\nr(1).\nand substitutionT14 -> 1,\nT15 -> T16"
            },
            {
                "from": 192,
                "to": 194,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 193,
                "to": 182,
                "label": "INSTANCE with matching:\nT6 -> T16"
            },
            {
                "from": 195,
                "to": 196,
                "label": "EVAL with clause\nq(.(X12, [])).\nand substitutionX12 -> T19,\nT7 -> .(T19, [])"
            },
            {
                "from": 195,
                "to": 197,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 196,
                "to": 198,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(46)
Obligation:
Rules:
f192_out -> f190_out :|: TRUE
f190_in -> f192_in :|: TRUE
f186_in -> f190_in :|: TRUE
f190_out -> f186_out :|: TRUE
f191_out -> f186_out :|: TRUE
f186_in -> f191_in :|: TRUE
f184_out -> f182_out :|: TRUE
f182_in -> f184_in :|: TRUE
f192_in -> f194_in :|: TRUE
f194_out -> f192_out :|: TRUE
f192_in -> f193_in :|: TRUE
f193_out -> f192_out :|: TRUE
f185_out -> f184_out :|: TRUE
f186_out -> f184_out :|: TRUE
f184_in -> f186_in :|: TRUE
f184_in -> f185_in :|: TRUE
f193_in -> f182_in :|: TRUE
f182_out -> f193_out :|: TRUE
f29_out -> f3_out :|: TRUE
f3_in -> f29_in :|: TRUE
f29_in -> f128_in :|: TRUE
f128_out -> f29_out :|: TRUE
f128_in -> f182_in :|: TRUE
f182_out -> f183_in(T7) :|: TRUE
f183_out(x) -> f128_out :|: TRUE
Start term: f3_in

----------------------------------------

(47) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f190_in -> f192_in :|: TRUE
f186_in -> f190_in :|: TRUE
f182_in -> f184_in :|: TRUE
f192_in -> f193_in :|: TRUE
f184_in -> f186_in :|: TRUE
f193_in -> f182_in :|: TRUE


----------------------------------------

(48)
Obligation:
Rules:
f190_in -> f192_in :|: TRUE
f186_in -> f190_in :|: TRUE
f182_in -> f184_in :|: TRUE
f192_in -> f193_in :|: TRUE
f184_in -> f186_in :|: TRUE
f193_in -> f182_in :|: TRUE

----------------------------------------

(49) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(50)
Obligation:
Rules:
f182_in -> f182_in :|: TRUE

----------------------------------------

(51) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(52)
Obligation:
Rules:
f182_in -> f182_in :|: TRUE

----------------------------------------

(53) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f182_in -> f182_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(54)
Obligation:

Termination digraph:
Nodes:
(1) f182_in -> f182_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(55) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f182_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(56)
Obligation:
Rules:
f182_in -> f182_in :|: TRUE

----------------------------------------

(57) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1)
----------------------------------------

(58)
NO
