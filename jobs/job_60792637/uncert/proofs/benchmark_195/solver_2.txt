YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/haaOU.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

convert(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 1 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) PiDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) PiDP
        (10) PiDPToQDPProof [SOUND, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) PiDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) PiDP
        (17) PiDPToQDPProof [SOUND, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) PiDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) PiDP
        (24) PiDPToQDPProof [SOUND, 0 ms]
        (25) QDP
        (26) UsableRulesReductionPairsProof [EQUIVALENT, 8 ms]
        (27) QDP
        (28) PisEmptyProof [EQUIVALENT, 0 ms]
        (29) YES


----------------------------------------

(0)
Obligation:
Clauses:

convert([], B, 0).
convert(.(0, XS), B, X) :- ','(convert(XS, B, Y), times(Y, B, X)).
convert(.(s(Y), XS), B, s(X)) :- convert(.(Y, XS), B, X).
plus(0, Y, Y).
plus(s(X), Y, s(Z)) :- plus(X, Y, Z).
times(0, Y, 0).
times(s(X), Y, Z) :- ','(times(X, Y, U), plus(Y, U, Z)).


Query: convert(g,g,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(convert ([]) B (0))",
                null
            ],
            [
                "(convert (. (0) XS) B X)",
                "(',' (convert XS B Y) (times Y B X))"
            ],
            [
                "(convert (. (s Y) XS) B (s X))",
                "(convert (. Y XS) B X)"
            ],
            [
                "(plus (0) Y Y)",
                null
            ],
            [
                "(plus (s X) Y (s Z))",
                "(plus X Y Z)"
            ],
            [
                "(times (0) Y (0))",
                null
            ],
            [
                "(times (s X) Y Z)",
                "(',' (times X Y U) (plus Y U Z))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "88": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(times T42 T34 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T42"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "192": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(plus T80 T81 T83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T80",
                        "T81"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "390": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert (. T106 T107) T108 T110)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T107",
                        "T108"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "391": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "392": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 6,
                        "term": "(convert (. T106 T107) T108 T110)"
                    },
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(convert (. T106 T107) T108 T110)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(convert (. T106 T107) T108 T110)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T107",
                        "T108"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "91": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "93": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "52": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(convert ([]) T5 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "97": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T58 T59 X80) (plus T59 X80 T61))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T59"
                    ],
                    "free": ["X80"],
                    "exprvars": []
                }
            },
            "54": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert (. (0) T9) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "98": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "55": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(convert T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(convert T1 T2 T3)",
                            "(convert ([]) X2 (0))"
                        ],
                        [
                            "(convert T1 T2 T3)",
                            "(convert (. (0) X13) X14 X15)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [
                        "X2",
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert (. (0) T9) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert (. (0) T9) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times (0) T17 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "201": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "60": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "63": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 3,
                        "term": "(times (0) T17 T12)"
                    },
                    {
                        "clause": 6,
                        "scope": 3,
                        "term": "(times (0) T17 T12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [{
                    "clause": 5,
                    "scope": 3,
                    "term": "(times (0) T17 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [],
                    "exprvars": []
                }
            },
            "65": {
                "goal": [{
                    "clause": 6,
                    "scope": 3,
                    "term": "(times (0) T17 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [],
                    "exprvars": []
                }
            },
            "66": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "67": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "68": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "69": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "410": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(convert (. T106 T107) T108 T110)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(convert (. T106 T107) T108 T110)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T107",
                        "T108"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "411": {
                "goal": [{
                    "clause": 1,
                    "scope": 6,
                    "term": "(convert (. T106 T107) T108 T110)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T107",
                        "T108"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "412": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(convert (. T106 T107) T108 T110)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T107",
                        "T108"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "413": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (convert T123 T124 X164) (times X164 T124 T126))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T123",
                        "T124"
                    ],
                    "free": ["X164"],
                    "exprvars": []
                }
            },
            "216": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "414": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "217": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert (. (0) T9) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "415": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert T123 T124 X164)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T123",
                        "T124"
                    ],
                    "free": ["X164"],
                    "exprvars": []
                }
            },
            "70": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T129 T124 T126)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T124",
                        "T129"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (convert T9 T10 X16) (times X16 T10 T12))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert (. (0) T9) T10 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "417": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert (. T142 T143) T144 T146)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T142",
                        "T143",
                        "T144"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (convert T33 T34 X53) (times X53 T34 X54)) (times X54 T34 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T33",
                        "T34"
                    ],
                    "free": [
                        "X54",
                        "X53"
                    ],
                    "exprvars": []
                }
            },
            "418": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "74": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert T33 T34 X53)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T33",
                        "T34"
                    ],
                    "free": ["X53"],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T37 T34 X54) (times X54 T34 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T37"
                    ],
                    "free": ["X54"],
                    "exprvars": []
                }
            },
            "34": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(convert T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(convert T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "35": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(convert ([]) T5 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert ([]) T5 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "36": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(convert T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(convert T1 T2 T3)",
                        "(convert ([]) X2 (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "384": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (convert (. T98 T99) T100 X127) (times (s X127) T100 T12))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99",
                        "T100"
                    ],
                    "free": ["X127"],
                    "exprvars": []
                }
            },
            "385": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "386": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(convert (. T98 T99) T100 X127)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99",
                        "T100"
                    ],
                    "free": ["X127"],
                    "exprvars": []
                }
            },
            "387": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times (s T101) T100 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T100",
                        "T101"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "102": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T58 T59 X80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T58",
                        "T59"
                    ],
                    "free": ["X80"],
                    "exprvars": []
                }
            },
            "388": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(convert (. (0) T9) T10 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T10"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "103": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(plus T59 T64 T61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T59",
                        "T64"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "389": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "104": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(plus T59 T64 T61)"
                    },
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(plus T59 T64 T61)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T59",
                        "T64"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "105": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(plus T59 T64 T61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T59",
                        "T64"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "106": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(plus T59 T64 T61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T59",
                        "T64"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "107": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "108": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T37 T34 X54)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T37"
                    ],
                    "free": ["X54"],
                    "exprvars": []
                }
            },
            "109": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "83": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T42 T34 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T42"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "40": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(convert ([]) T5 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(convert ([]) T5 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "86": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(times T42 T34 T12)"
                    },
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(times T42 T34 T12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T42"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "87": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(times T42 T34 T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T34",
                        "T42"
                    ],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 34,
                "label": "CASE"
            },
            {
                "from": 34,
                "to": 35,
                "label": "EVAL with clause\nconvert([], X2, 0).\nand substitutionT1 -> [],\nT2 -> T5,\nX2 -> T5,\nT3 -> 0"
            },
            {
                "from": 34,
                "to": 36,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 35,
                "to": 40,
                "label": "SUCCESS"
            },
            {
                "from": 36,
                "to": 54,
                "label": "EVAL with clause\nconvert(.(0, X13), X14, X15) :- ','(convert(X13, X14, X16), times(X16, X14, X15)).\nand substitutionX13 -> T9,\nT1 -> .(0, T9),\nT2 -> T10,\nX14 -> T10,\nT3 -> T12,\nX15 -> T12,\nT11 -> T12"
            },
            {
                "from": 36,
                "to": 55,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 40,
                "to": 52,
                "label": "BACKTRACK\nfor clause: convert(.(0, XS), B, X) :- ','(convert(XS, B, Y), times(Y, B, X))because of non-unification"
            },
            {
                "from": 52,
                "to": 53,
                "label": "BACKTRACK\nfor clause: convert(.(s(Y), XS), B, s(X)) :- convert(.(Y, XS), B, X)because of non-unification"
            },
            {
                "from": 54,
                "to": 56,
                "label": "CASE"
            },
            {
                "from": 55,
                "to": 390,
                "label": "EVAL with clause\nconvert(.(s(X142), X143), X144, s(X145)) :- convert(.(X142, X143), X144, X145).\nand substitutionX142 -> T106,\nX143 -> T107,\nT1 -> .(s(T106), T107),\nT2 -> T108,\nX144 -> T108,\nX145 -> T110,\nT3 -> s(T110),\nT109 -> T110"
            },
            {
                "from": 55,
                "to": 391,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 56,
                "to": 57,
                "label": "PARALLEL"
            },
            {
                "from": 56,
                "to": 58,
                "label": "PARALLEL"
            },
            {
                "from": 57,
                "to": 59,
                "label": "EVAL with clause\nconvert([], X21, 0).\nand substitutionT9 -> [],\nT10 -> T17,\nX21 -> T17,\nX16 -> 0"
            },
            {
                "from": 57,
                "to": 60,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 58,
                "to": 70,
                "label": "PARALLEL"
            },
            {
                "from": 58,
                "to": 71,
                "label": "PARALLEL"
            },
            {
                "from": 59,
                "to": 63,
                "label": "CASE"
            },
            {
                "from": 63,
                "to": 64,
                "label": "PARALLEL"
            },
            {
                "from": 63,
                "to": 65,
                "label": "PARALLEL"
            },
            {
                "from": 64,
                "to": 66,
                "label": "EVAL with clause\ntimes(0, X28, 0).\nand substitutionT17 -> T24,\nX28 -> T24,\nT12 -> 0"
            },
            {
                "from": 64,
                "to": 67,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 65,
                "to": 69,
                "label": "BACKTRACK\nfor clause: times(s(X), Y, Z) :- ','(times(X, Y, U), plus(Y, U, Z))because of non-unification"
            },
            {
                "from": 66,
                "to": 68,
                "label": "SUCCESS"
            },
            {
                "from": 70,
                "to": 72,
                "label": "EVAL with clause\nconvert(.(0, X50), X51, X52) :- ','(convert(X50, X51, X53), times(X53, X51, X52)).\nand substitutionX50 -> T33,\nT9 -> .(0, T33),\nT10 -> T34,\nX51 -> T34,\nX16 -> X54,\nX52 -> X54"
            },
            {
                "from": 70,
                "to": 73,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 71,
                "to": 216,
                "label": "PARALLEL"
            },
            {
                "from": 71,
                "to": 217,
                "label": "PARALLEL"
            },
            {
                "from": 72,
                "to": 74,
                "label": "SPLIT 1"
            },
            {
                "from": 72,
                "to": 75,
                "label": "SPLIT 2\nnew knowledge:\nT33 is ground\nT34 is ground\nT37 is ground\nreplacements:X53 -> T37"
            },
            {
                "from": 74,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T33\nT2 -> T34\nT3 -> X53"
            },
            {
                "from": 75,
                "to": 82,
                "label": "SPLIT 1"
            },
            {
                "from": 75,
                "to": 83,
                "label": "SPLIT 2\nnew knowledge:\nT37 is ground\nT34 is ground\nT42 is ground\nreplacements:X54 -> T42"
            },
            {
                "from": 82,
                "to": 83,
                "label": "INSTANCE with matching:\nT42 -> T37\nT12 -> X54"
            },
            {
                "from": 83,
                "to": 86,
                "label": "CASE"
            },
            {
                "from": 86,
                "to": 87,
                "label": "PARALLEL"
            },
            {
                "from": 86,
                "to": 88,
                "label": "PARALLEL"
            },
            {
                "from": 87,
                "to": 91,
                "label": "EVAL with clause\ntimes(0, X69, 0).\nand substitutionT42 -> 0,\nT34 -> T51,\nX69 -> T51,\nT12 -> 0"
            },
            {
                "from": 87,
                "to": 92,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 88,
                "to": 97,
                "label": "EVAL with clause\ntimes(s(X77), X78, X79) :- ','(times(X77, X78, X80), plus(X78, X80, X79)).\nand substitutionX77 -> T58,\nT42 -> s(T58),\nT34 -> T59,\nX78 -> T59,\nT12 -> T61,\nX79 -> T61,\nT60 -> T61"
            },
            {
                "from": 88,
                "to": 98,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 91,
                "to": 93,
                "label": "SUCCESS"
            },
            {
                "from": 97,
                "to": 102,
                "label": "SPLIT 1"
            },
            {
                "from": 97,
                "to": 103,
                "label": "SPLIT 2\nnew knowledge:\nT58 is ground\nT59 is ground\nT64 is ground\nreplacements:X80 -> T64"
            },
            {
                "from": 102,
                "to": 83,
                "label": "INSTANCE with matching:\nT42 -> T58\nT34 -> T59\nT12 -> X80"
            },
            {
                "from": 103,
                "to": 104,
                "label": "CASE"
            },
            {
                "from": 104,
                "to": 105,
                "label": "PARALLEL"
            },
            {
                "from": 104,
                "to": 106,
                "label": "PARALLEL"
            },
            {
                "from": 105,
                "to": 107,
                "label": "EVAL with clause\nplus(0, X91, X91).\nand substitutionT59 -> 0,\nT64 -> T73,\nX91 -> T73,\nT61 -> T73"
            },
            {
                "from": 105,
                "to": 108,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 106,
                "to": 192,
                "label": "EVAL with clause\nplus(s(X98), X99, s(X100)) :- plus(X98, X99, X100).\nand substitutionX98 -> T80,\nT59 -> s(T80),\nT64 -> T81,\nX99 -> T81,\nX100 -> T83,\nT61 -> s(T83),\nT82 -> T83"
            },
            {
                "from": 106,
                "to": 201,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 107,
                "to": 109,
                "label": "SUCCESS"
            },
            {
                "from": 192,
                "to": 103,
                "label": "INSTANCE with matching:\nT59 -> T80\nT64 -> T81\nT61 -> T83"
            },
            {
                "from": 216,
                "to": 384,
                "label": "EVAL with clause\nconvert(.(s(X123), X124), X125, s(X126)) :- convert(.(X123, X124), X125, X126).\nand substitutionX123 -> T98,\nX124 -> T99,\nT9 -> .(s(T98), T99),\nT10 -> T100,\nX125 -> T100,\nX126 -> X127,\nX16 -> s(X127)"
            },
            {
                "from": 216,
                "to": 385,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 217,
                "to": 388,
                "label": "FAILURE"
            },
            {
                "from": 384,
                "to": 386,
                "label": "SPLIT 1"
            },
            {
                "from": 384,
                "to": 387,
                "label": "SPLIT 2\nnew knowledge:\nT98 is ground\nT99 is ground\nT100 is ground\nT101 is ground\nreplacements:X127 -> T101"
            },
            {
                "from": 386,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> .(T98, T99)\nT2 -> T100\nT3 -> X127"
            },
            {
                "from": 387,
                "to": 83,
                "label": "INSTANCE with matching:\nT42 -> s(T101)\nT34 -> T100"
            },
            {
                "from": 388,
                "to": 389,
                "label": "BACKTRACK\nfor clause: convert(.(s(Y), XS), B, s(X)) :- convert(.(Y, XS), B, X)because of non-unification"
            },
            {
                "from": 390,
                "to": 392,
                "label": "CASE"
            },
            {
                "from": 392,
                "to": 410,
                "label": "BACKTRACK\nfor clause: convert([], B, 0)because of non-unification"
            },
            {
                "from": 410,
                "to": 411,
                "label": "PARALLEL"
            },
            {
                "from": 410,
                "to": 412,
                "label": "PARALLEL"
            },
            {
                "from": 411,
                "to": 413,
                "label": "EVAL with clause\nconvert(.(0, X161), X162, X163) :- ','(convert(X161, X162, X164), times(X164, X162, X163)).\nand substitutionT106 -> 0,\nT107 -> T123,\nX161 -> T123,\nT108 -> T124,\nX162 -> T124,\nT110 -> T126,\nX163 -> T126,\nT125 -> T126"
            },
            {
                "from": 411,
                "to": 414,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 412,
                "to": 417,
                "label": "EVAL with clause\nconvert(.(s(X179), X180), X181, s(X182)) :- convert(.(X179, X180), X181, X182).\nand substitutionX179 -> T142,\nT106 -> s(T142),\nT107 -> T143,\nX180 -> T143,\nT108 -> T144,\nX181 -> T144,\nX182 -> T146,\nT110 -> s(T146),\nT145 -> T146"
            },
            {
                "from": 412,
                "to": 418,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 413,
                "to": 415,
                "label": "SPLIT 1"
            },
            {
                "from": 413,
                "to": 416,
                "label": "SPLIT 2\nnew knowledge:\nT123 is ground\nT124 is ground\nT129 is ground\nreplacements:X164 -> T129"
            },
            {
                "from": 415,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T123\nT2 -> T124\nT3 -> X164"
            },
            {
                "from": 416,
                "to": 83,
                "label": "INSTANCE with matching:\nT42 -> T129\nT34 -> T124\nT12 -> T126"
            },
            {
                "from": 417,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> .(T142, T143)\nT2 -> T144\nT3 -> T146"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

timesB(s(X1), X2, X3) :- timesB(X1, X2, X4).
timesB(s(X1), X2, X3) :- ','(timescB(X1, X2, X4), plusC(X2, X4, X3)).
plusC(s(X1), X2, s(X3)) :- plusC(X1, X2, X3).
convertA(.(0, .(0, X1)), X2, X3) :- convertA(X1, X2, X4).
convertA(.(0, .(0, X1)), X2, X3) :- ','(convertcA(X1, X2, X4), timesB(X4, X2, X5)).
convertA(.(0, .(0, X1)), X2, X3) :- ','(convertcA(X1, X2, X4), ','(timescB(X4, X2, X5), timesB(X5, X2, X3))).
convertA(.(0, .(s(X1), X2)), X3, X4) :- convertA(.(X1, X2), X3, X5).
convertA(.(0, .(s(X1), X2)), X3, X4) :- ','(convertcA(.(X1, X2), X3, X5), timesB(s(X5), X3, X4)).
convertA(.(s(0), X1), X2, s(X3)) :- convertA(X1, X2, X4).
convertA(.(s(0), X1), X2, s(X3)) :- ','(convertcA(X1, X2, X4), timesB(X4, X2, X3)).
convertA(.(s(s(X1)), X2), X3, s(s(X4))) :- convertA(.(X1, X2), X3, X4).

Clauses:

convertcA([], X1, 0).
convertcA(.(0, []), X1, 0).
convertcA(.(0, .(0, X1)), X2, X3) :- ','(convertcA(X1, X2, X4), ','(timescB(X4, X2, X5), timescB(X5, X2, X3))).
convertcA(.(0, .(s(X1), X2)), X3, X4) :- ','(convertcA(.(X1, X2), X3, X5), timescB(s(X5), X3, X4)).
convertcA(.(s(0), X1), X2, s(X3)) :- ','(convertcA(X1, X2, X4), timescB(X4, X2, X3)).
convertcA(.(s(s(X1)), X2), X3, s(s(X4))) :- convertcA(.(X1, X2), X3, X4).
timescB(0, X1, 0).
timescB(s(X1), X2, X3) :- ','(timescB(X1, X2, X4), pluscC(X2, X4, X3)).
pluscC(0, X1, X1).
pluscC(s(X1), X2, s(X3)) :- pluscC(X1, X2, X3).

Afs:

convertA(x1, x2, x3)  =  convertA(x1, x2)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

convertA_in_3: (b,b,f)

convertcA_in_3: (b,b,f)

timescB_in_3: (b,b,f)

pluscC_in_3: (b,b,f)

timesB_in_3: (b,b,f)

plusC_in_3: (b,b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> U5_GGA(X1, X2, X3, convertA_in_gga(X1, X2, X4))
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> U6_GGA(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U7_GGA(X1, X2, X3, timesB_in_gga(X4, X2, X5))
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> TIMESB_IN_GGA(X4, X2, X5)
   TIMESB_IN_GGA(s(X1), X2, X3) -> U1_GGA(X1, X2, X3, timesB_in_gga(X1, X2, X4))
   TIMESB_IN_GGA(s(X1), X2, X3) -> TIMESB_IN_GGA(X1, X2, X4)
   TIMESB_IN_GGA(s(X1), X2, X3) -> U2_GGA(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U2_GGA(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U3_GGA(X1, X2, X3, plusC_in_gga(X2, X4, X3))
   U2_GGA(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> PLUSC_IN_GGA(X2, X4, X3)
   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> U4_GGA(X1, X2, X3, plusC_in_gga(X1, X2, X3))
   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> PLUSC_IN_GGA(X1, X2, X3)
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U8_GGA(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U8_GGA(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U9_GGA(X1, X2, X3, timesB_in_gga(X5, X2, X3))
   U8_GGA(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> TIMESB_IN_GGA(X5, X2, X3)
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> U10_GGA(X1, X2, X3, X4, convertA_in_gga(.(X1, X2), X3, X5))
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> CONVERTA_IN_GGA(.(X1, X2), X3, X5)
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> U11_GGA(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   U11_GGA(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U12_GGA(X1, X2, X3, X4, timesB_in_gga(s(X5), X3, X4))
   U11_GGA(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> TIMESB_IN_GGA(s(X5), X3, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> U13_GGA(X1, X2, X3, convertA_in_gga(X1, X2, X4))
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> U14_GGA(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   U14_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U15_GGA(X1, X2, X3, timesB_in_gga(X4, X2, X3))
   U14_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> TIMESB_IN_GGA(X4, X2, X3)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> U16_GGA(X1, X2, X3, X4, convertA_in_gga(.(X1, X2), X3, X4))
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> CONVERTA_IN_GGA(.(X1, X2), X3, X4)

The TRS R consists of the following rules:

   convertcA_in_gga([], X1, 0) -> convertcA_out_gga([], X1, 0)
   convertcA_in_gga(.(0, []), X1, 0) -> convertcA_out_gga(.(0, []), X1, 0)
   convertcA_in_gga(.(0, .(0, X1)), X2, X3) -> U18_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(0, .(s(X1), X2)), X3, X4) -> U21_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   convertcA_in_gga(.(s(0), X1), X2, s(X3)) -> U23_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(s(s(X1)), X2), X3, s(s(X4))) -> U25_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X4))
   U25_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X4)) -> convertcA_out_gga(.(s(s(X1)), X2), X3, s(s(X4)))
   U23_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U24_gga(X1, X2, X3, timescB_in_gga(X4, X2, X3))
   timescB_in_gga(0, X1, 0) -> timescB_out_gga(0, X1, 0)
   timescB_in_gga(s(X1), X2, X3) -> U26_gga(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U26_gga(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U27_gga(X1, X2, X3, pluscC_in_gga(X2, X4, X3))
   pluscC_in_gga(0, X1, X1) -> pluscC_out_gga(0, X1, X1)
   pluscC_in_gga(s(X1), X2, s(X3)) -> U28_gga(X1, X2, X3, pluscC_in_gga(X1, X2, X3))
   U28_gga(X1, X2, X3, pluscC_out_gga(X1, X2, X3)) -> pluscC_out_gga(s(X1), X2, s(X3))
   U27_gga(X1, X2, X3, pluscC_out_gga(X2, X4, X3)) -> timescB_out_gga(s(X1), X2, X3)
   U24_gga(X1, X2, X3, timescB_out_gga(X4, X2, X3)) -> convertcA_out_gga(.(s(0), X1), X2, s(X3))
   U21_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U22_gga(X1, X2, X3, X4, timescB_in_gga(s(X5), X3, X4))
   U22_gga(X1, X2, X3, X4, timescB_out_gga(s(X5), X3, X4)) -> convertcA_out_gga(.(0, .(s(X1), X2)), X3, X4)
   U18_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U19_gga(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U19_gga(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U20_gga(X1, X2, X3, timescB_in_gga(X5, X2, X3))
   U20_gga(X1, X2, X3, timescB_out_gga(X5, X2, X3)) -> convertcA_out_gga(.(0, .(0, X1)), X2, X3)

The argument filtering Pi contains the following mapping:
convertA_in_gga(x1, x2, x3)  =  convertA_in_gga(x1, x2)

.(x1, x2)  =  .(x1, x2)

0  =  0

convertcA_in_gga(x1, x2, x3)  =  convertcA_in_gga(x1, x2)

[]  =  []

convertcA_out_gga(x1, x2, x3)  =  convertcA_out_gga(x1, x2, x3)

U18_gga(x1, x2, x3, x4)  =  U18_gga(x1, x2, x4)

s(x1)  =  s(x1)

U21_gga(x1, x2, x3, x4, x5)  =  U21_gga(x1, x2, x3, x5)

U23_gga(x1, x2, x3, x4)  =  U23_gga(x1, x2, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x2, x4)

timescB_in_gga(x1, x2, x3)  =  timescB_in_gga(x1, x2)

timescB_out_gga(x1, x2, x3)  =  timescB_out_gga(x1, x2, x3)

U26_gga(x1, x2, x3, x4)  =  U26_gga(x1, x2, x4)

U27_gga(x1, x2, x3, x4)  =  U27_gga(x1, x2, x4)

pluscC_in_gga(x1, x2, x3)  =  pluscC_in_gga(x1, x2)

pluscC_out_gga(x1, x2, x3)  =  pluscC_out_gga(x1, x2, x3)

U28_gga(x1, x2, x3, x4)  =  U28_gga(x1, x2, x4)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

U19_gga(x1, x2, x3, x4)  =  U19_gga(x1, x2, x4)

U20_gga(x1, x2, x3, x4)  =  U20_gga(x1, x2, x4)

timesB_in_gga(x1, x2, x3)  =  timesB_in_gga(x1, x2)

plusC_in_gga(x1, x2, x3)  =  plusC_in_gga(x1, x2)

CONVERTA_IN_GGA(x1, x2, x3)  =  CONVERTA_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4)  =  U5_GGA(x1, x2, x4)

U6_GGA(x1, x2, x3, x4)  =  U6_GGA(x1, x2, x4)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)

TIMESB_IN_GGA(x1, x2, x3)  =  TIMESB_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

PLUSC_IN_GGA(x1, x2, x3)  =  PLUSC_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4)  =  U4_GGA(x1, x2, x4)

U8_GGA(x1, x2, x3, x4)  =  U8_GGA(x1, x2, x4)

U9_GGA(x1, x2, x3, x4)  =  U9_GGA(x1, x2, x4)

U10_GGA(x1, x2, x3, x4, x5)  =  U10_GGA(x1, x2, x3, x5)

U11_GGA(x1, x2, x3, x4, x5)  =  U11_GGA(x1, x2, x3, x5)

U12_GGA(x1, x2, x3, x4, x5)  =  U12_GGA(x1, x2, x3, x5)

U13_GGA(x1, x2, x3, x4)  =  U13_GGA(x1, x2, x4)

U14_GGA(x1, x2, x3, x4)  =  U14_GGA(x1, x2, x4)

U15_GGA(x1, x2, x3, x4)  =  U15_GGA(x1, x2, x4)

U16_GGA(x1, x2, x3, x4, x5)  =  U16_GGA(x1, x2, x3, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> U5_GGA(X1, X2, X3, convertA_in_gga(X1, X2, X4))
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> U6_GGA(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U7_GGA(X1, X2, X3, timesB_in_gga(X4, X2, X5))
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> TIMESB_IN_GGA(X4, X2, X5)
   TIMESB_IN_GGA(s(X1), X2, X3) -> U1_GGA(X1, X2, X3, timesB_in_gga(X1, X2, X4))
   TIMESB_IN_GGA(s(X1), X2, X3) -> TIMESB_IN_GGA(X1, X2, X4)
   TIMESB_IN_GGA(s(X1), X2, X3) -> U2_GGA(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U2_GGA(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U3_GGA(X1, X2, X3, plusC_in_gga(X2, X4, X3))
   U2_GGA(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> PLUSC_IN_GGA(X2, X4, X3)
   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> U4_GGA(X1, X2, X3, plusC_in_gga(X1, X2, X3))
   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> PLUSC_IN_GGA(X1, X2, X3)
   U6_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U8_GGA(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U8_GGA(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U9_GGA(X1, X2, X3, timesB_in_gga(X5, X2, X3))
   U8_GGA(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> TIMESB_IN_GGA(X5, X2, X3)
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> U10_GGA(X1, X2, X3, X4, convertA_in_gga(.(X1, X2), X3, X5))
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> CONVERTA_IN_GGA(.(X1, X2), X3, X5)
   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> U11_GGA(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   U11_GGA(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U12_GGA(X1, X2, X3, X4, timesB_in_gga(s(X5), X3, X4))
   U11_GGA(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> TIMESB_IN_GGA(s(X5), X3, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> U13_GGA(X1, X2, X3, convertA_in_gga(X1, X2, X4))
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> U14_GGA(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   U14_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U15_GGA(X1, X2, X3, timesB_in_gga(X4, X2, X3))
   U14_GGA(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> TIMESB_IN_GGA(X4, X2, X3)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> U16_GGA(X1, X2, X3, X4, convertA_in_gga(.(X1, X2), X3, X4))
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> CONVERTA_IN_GGA(.(X1, X2), X3, X4)

The TRS R consists of the following rules:

   convertcA_in_gga([], X1, 0) -> convertcA_out_gga([], X1, 0)
   convertcA_in_gga(.(0, []), X1, 0) -> convertcA_out_gga(.(0, []), X1, 0)
   convertcA_in_gga(.(0, .(0, X1)), X2, X3) -> U18_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(0, .(s(X1), X2)), X3, X4) -> U21_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   convertcA_in_gga(.(s(0), X1), X2, s(X3)) -> U23_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(s(s(X1)), X2), X3, s(s(X4))) -> U25_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X4))
   U25_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X4)) -> convertcA_out_gga(.(s(s(X1)), X2), X3, s(s(X4)))
   U23_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U24_gga(X1, X2, X3, timescB_in_gga(X4, X2, X3))
   timescB_in_gga(0, X1, 0) -> timescB_out_gga(0, X1, 0)
   timescB_in_gga(s(X1), X2, X3) -> U26_gga(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U26_gga(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U27_gga(X1, X2, X3, pluscC_in_gga(X2, X4, X3))
   pluscC_in_gga(0, X1, X1) -> pluscC_out_gga(0, X1, X1)
   pluscC_in_gga(s(X1), X2, s(X3)) -> U28_gga(X1, X2, X3, pluscC_in_gga(X1, X2, X3))
   U28_gga(X1, X2, X3, pluscC_out_gga(X1, X2, X3)) -> pluscC_out_gga(s(X1), X2, s(X3))
   U27_gga(X1, X2, X3, pluscC_out_gga(X2, X4, X3)) -> timescB_out_gga(s(X1), X2, X3)
   U24_gga(X1, X2, X3, timescB_out_gga(X4, X2, X3)) -> convertcA_out_gga(.(s(0), X1), X2, s(X3))
   U21_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U22_gga(X1, X2, X3, X4, timescB_in_gga(s(X5), X3, X4))
   U22_gga(X1, X2, X3, X4, timescB_out_gga(s(X5), X3, X4)) -> convertcA_out_gga(.(0, .(s(X1), X2)), X3, X4)
   U18_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U19_gga(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U19_gga(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U20_gga(X1, X2, X3, timescB_in_gga(X5, X2, X3))
   U20_gga(X1, X2, X3, timescB_out_gga(X5, X2, X3)) -> convertcA_out_gga(.(0, .(0, X1)), X2, X3)

The argument filtering Pi contains the following mapping:
convertA_in_gga(x1, x2, x3)  =  convertA_in_gga(x1, x2)

.(x1, x2)  =  .(x1, x2)

0  =  0

convertcA_in_gga(x1, x2, x3)  =  convertcA_in_gga(x1, x2)

[]  =  []

convertcA_out_gga(x1, x2, x3)  =  convertcA_out_gga(x1, x2, x3)

U18_gga(x1, x2, x3, x4)  =  U18_gga(x1, x2, x4)

s(x1)  =  s(x1)

U21_gga(x1, x2, x3, x4, x5)  =  U21_gga(x1, x2, x3, x5)

U23_gga(x1, x2, x3, x4)  =  U23_gga(x1, x2, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x2, x4)

timescB_in_gga(x1, x2, x3)  =  timescB_in_gga(x1, x2)

timescB_out_gga(x1, x2, x3)  =  timescB_out_gga(x1, x2, x3)

U26_gga(x1, x2, x3, x4)  =  U26_gga(x1, x2, x4)

U27_gga(x1, x2, x3, x4)  =  U27_gga(x1, x2, x4)

pluscC_in_gga(x1, x2, x3)  =  pluscC_in_gga(x1, x2)

pluscC_out_gga(x1, x2, x3)  =  pluscC_out_gga(x1, x2, x3)

U28_gga(x1, x2, x3, x4)  =  U28_gga(x1, x2, x4)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

U19_gga(x1, x2, x3, x4)  =  U19_gga(x1, x2, x4)

U20_gga(x1, x2, x3, x4)  =  U20_gga(x1, x2, x4)

timesB_in_gga(x1, x2, x3)  =  timesB_in_gga(x1, x2)

plusC_in_gga(x1, x2, x3)  =  plusC_in_gga(x1, x2)

CONVERTA_IN_GGA(x1, x2, x3)  =  CONVERTA_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4)  =  U5_GGA(x1, x2, x4)

U6_GGA(x1, x2, x3, x4)  =  U6_GGA(x1, x2, x4)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)

TIMESB_IN_GGA(x1, x2, x3)  =  TIMESB_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

PLUSC_IN_GGA(x1, x2, x3)  =  PLUSC_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4)  =  U4_GGA(x1, x2, x4)

U8_GGA(x1, x2, x3, x4)  =  U8_GGA(x1, x2, x4)

U9_GGA(x1, x2, x3, x4)  =  U9_GGA(x1, x2, x4)

U10_GGA(x1, x2, x3, x4, x5)  =  U10_GGA(x1, x2, x3, x5)

U11_GGA(x1, x2, x3, x4, x5)  =  U11_GGA(x1, x2, x3, x5)

U12_GGA(x1, x2, x3, x4, x5)  =  U12_GGA(x1, x2, x3, x5)

U13_GGA(x1, x2, x3, x4)  =  U13_GGA(x1, x2, x4)

U14_GGA(x1, x2, x3, x4)  =  U14_GGA(x1, x2, x4)

U15_GGA(x1, x2, x3, x4)  =  U15_GGA(x1, x2, x4)

U16_GGA(x1, x2, x3, x4, x5)  =  U16_GGA(x1, x2, x3, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 21 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> PLUSC_IN_GGA(X1, X2, X3)

The TRS R consists of the following rules:

   convertcA_in_gga([], X1, 0) -> convertcA_out_gga([], X1, 0)
   convertcA_in_gga(.(0, []), X1, 0) -> convertcA_out_gga(.(0, []), X1, 0)
   convertcA_in_gga(.(0, .(0, X1)), X2, X3) -> U18_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(0, .(s(X1), X2)), X3, X4) -> U21_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   convertcA_in_gga(.(s(0), X1), X2, s(X3)) -> U23_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(s(s(X1)), X2), X3, s(s(X4))) -> U25_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X4))
   U25_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X4)) -> convertcA_out_gga(.(s(s(X1)), X2), X3, s(s(X4)))
   U23_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U24_gga(X1, X2, X3, timescB_in_gga(X4, X2, X3))
   timescB_in_gga(0, X1, 0) -> timescB_out_gga(0, X1, 0)
   timescB_in_gga(s(X1), X2, X3) -> U26_gga(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U26_gga(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U27_gga(X1, X2, X3, pluscC_in_gga(X2, X4, X3))
   pluscC_in_gga(0, X1, X1) -> pluscC_out_gga(0, X1, X1)
   pluscC_in_gga(s(X1), X2, s(X3)) -> U28_gga(X1, X2, X3, pluscC_in_gga(X1, X2, X3))
   U28_gga(X1, X2, X3, pluscC_out_gga(X1, X2, X3)) -> pluscC_out_gga(s(X1), X2, s(X3))
   U27_gga(X1, X2, X3, pluscC_out_gga(X2, X4, X3)) -> timescB_out_gga(s(X1), X2, X3)
   U24_gga(X1, X2, X3, timescB_out_gga(X4, X2, X3)) -> convertcA_out_gga(.(s(0), X1), X2, s(X3))
   U21_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U22_gga(X1, X2, X3, X4, timescB_in_gga(s(X5), X3, X4))
   U22_gga(X1, X2, X3, X4, timescB_out_gga(s(X5), X3, X4)) -> convertcA_out_gga(.(0, .(s(X1), X2)), X3, X4)
   U18_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U19_gga(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U19_gga(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U20_gga(X1, X2, X3, timescB_in_gga(X5, X2, X3))
   U20_gga(X1, X2, X3, timescB_out_gga(X5, X2, X3)) -> convertcA_out_gga(.(0, .(0, X1)), X2, X3)

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

0  =  0

convertcA_in_gga(x1, x2, x3)  =  convertcA_in_gga(x1, x2)

[]  =  []

convertcA_out_gga(x1, x2, x3)  =  convertcA_out_gga(x1, x2, x3)

U18_gga(x1, x2, x3, x4)  =  U18_gga(x1, x2, x4)

s(x1)  =  s(x1)

U21_gga(x1, x2, x3, x4, x5)  =  U21_gga(x1, x2, x3, x5)

U23_gga(x1, x2, x3, x4)  =  U23_gga(x1, x2, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x2, x4)

timescB_in_gga(x1, x2, x3)  =  timescB_in_gga(x1, x2)

timescB_out_gga(x1, x2, x3)  =  timescB_out_gga(x1, x2, x3)

U26_gga(x1, x2, x3, x4)  =  U26_gga(x1, x2, x4)

U27_gga(x1, x2, x3, x4)  =  U27_gga(x1, x2, x4)

pluscC_in_gga(x1, x2, x3)  =  pluscC_in_gga(x1, x2)

pluscC_out_gga(x1, x2, x3)  =  pluscC_out_gga(x1, x2, x3)

U28_gga(x1, x2, x3, x4)  =  U28_gga(x1, x2, x4)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

U19_gga(x1, x2, x3, x4)  =  U19_gga(x1, x2, x4)

U20_gga(x1, x2, x3, x4)  =  U20_gga(x1, x2, x4)

PLUSC_IN_GGA(x1, x2, x3)  =  PLUSC_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PLUSC_IN_GGA(s(X1), X2, s(X3)) -> PLUSC_IN_GGA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

PLUSC_IN_GGA(x1, x2, x3)  =  PLUSC_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUSC_IN_GGA(s(X1), X2) -> PLUSC_IN_GGA(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PLUSC_IN_GGA(s(X1), X2) -> PLUSC_IN_GGA(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESB_IN_GGA(s(X1), X2, X3) -> TIMESB_IN_GGA(X1, X2, X4)

The TRS R consists of the following rules:

   convertcA_in_gga([], X1, 0) -> convertcA_out_gga([], X1, 0)
   convertcA_in_gga(.(0, []), X1, 0) -> convertcA_out_gga(.(0, []), X1, 0)
   convertcA_in_gga(.(0, .(0, X1)), X2, X3) -> U18_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(0, .(s(X1), X2)), X3, X4) -> U21_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   convertcA_in_gga(.(s(0), X1), X2, s(X3)) -> U23_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(s(s(X1)), X2), X3, s(s(X4))) -> U25_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X4))
   U25_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X4)) -> convertcA_out_gga(.(s(s(X1)), X2), X3, s(s(X4)))
   U23_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U24_gga(X1, X2, X3, timescB_in_gga(X4, X2, X3))
   timescB_in_gga(0, X1, 0) -> timescB_out_gga(0, X1, 0)
   timescB_in_gga(s(X1), X2, X3) -> U26_gga(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U26_gga(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U27_gga(X1, X2, X3, pluscC_in_gga(X2, X4, X3))
   pluscC_in_gga(0, X1, X1) -> pluscC_out_gga(0, X1, X1)
   pluscC_in_gga(s(X1), X2, s(X3)) -> U28_gga(X1, X2, X3, pluscC_in_gga(X1, X2, X3))
   U28_gga(X1, X2, X3, pluscC_out_gga(X1, X2, X3)) -> pluscC_out_gga(s(X1), X2, s(X3))
   U27_gga(X1, X2, X3, pluscC_out_gga(X2, X4, X3)) -> timescB_out_gga(s(X1), X2, X3)
   U24_gga(X1, X2, X3, timescB_out_gga(X4, X2, X3)) -> convertcA_out_gga(.(s(0), X1), X2, s(X3))
   U21_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U22_gga(X1, X2, X3, X4, timescB_in_gga(s(X5), X3, X4))
   U22_gga(X1, X2, X3, X4, timescB_out_gga(s(X5), X3, X4)) -> convertcA_out_gga(.(0, .(s(X1), X2)), X3, X4)
   U18_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U19_gga(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U19_gga(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U20_gga(X1, X2, X3, timescB_in_gga(X5, X2, X3))
   U20_gga(X1, X2, X3, timescB_out_gga(X5, X2, X3)) -> convertcA_out_gga(.(0, .(0, X1)), X2, X3)

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

0  =  0

convertcA_in_gga(x1, x2, x3)  =  convertcA_in_gga(x1, x2)

[]  =  []

convertcA_out_gga(x1, x2, x3)  =  convertcA_out_gga(x1, x2, x3)

U18_gga(x1, x2, x3, x4)  =  U18_gga(x1, x2, x4)

s(x1)  =  s(x1)

U21_gga(x1, x2, x3, x4, x5)  =  U21_gga(x1, x2, x3, x5)

U23_gga(x1, x2, x3, x4)  =  U23_gga(x1, x2, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x2, x4)

timescB_in_gga(x1, x2, x3)  =  timescB_in_gga(x1, x2)

timescB_out_gga(x1, x2, x3)  =  timescB_out_gga(x1, x2, x3)

U26_gga(x1, x2, x3, x4)  =  U26_gga(x1, x2, x4)

U27_gga(x1, x2, x3, x4)  =  U27_gga(x1, x2, x4)

pluscC_in_gga(x1, x2, x3)  =  pluscC_in_gga(x1, x2)

pluscC_out_gga(x1, x2, x3)  =  pluscC_out_gga(x1, x2, x3)

U28_gga(x1, x2, x3, x4)  =  U28_gga(x1, x2, x4)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

U19_gga(x1, x2, x3, x4)  =  U19_gga(x1, x2, x4)

U20_gga(x1, x2, x3, x4)  =  U20_gga(x1, x2, x4)

TIMESB_IN_GGA(x1, x2, x3)  =  TIMESB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESB_IN_GGA(s(X1), X2, X3) -> TIMESB_IN_GGA(X1, X2, X4)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

TIMESB_IN_GGA(x1, x2, x3)  =  TIMESB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMESB_IN_GGA(s(X1), X2) -> TIMESB_IN_GGA(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*TIMESB_IN_GGA(s(X1), X2) -> TIMESB_IN_GGA(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> CONVERTA_IN_GGA(.(X1, X2), X3, X5)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> CONVERTA_IN_GGA(.(X1, X2), X3, X4)

The TRS R consists of the following rules:

   convertcA_in_gga([], X1, 0) -> convertcA_out_gga([], X1, 0)
   convertcA_in_gga(.(0, []), X1, 0) -> convertcA_out_gga(.(0, []), X1, 0)
   convertcA_in_gga(.(0, .(0, X1)), X2, X3) -> U18_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(0, .(s(X1), X2)), X3, X4) -> U21_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X5))
   convertcA_in_gga(.(s(0), X1), X2, s(X3)) -> U23_gga(X1, X2, X3, convertcA_in_gga(X1, X2, X4))
   convertcA_in_gga(.(s(s(X1)), X2), X3, s(s(X4))) -> U25_gga(X1, X2, X3, X4, convertcA_in_gga(.(X1, X2), X3, X4))
   U25_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X4)) -> convertcA_out_gga(.(s(s(X1)), X2), X3, s(s(X4)))
   U23_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U24_gga(X1, X2, X3, timescB_in_gga(X4, X2, X3))
   timescB_in_gga(0, X1, 0) -> timescB_out_gga(0, X1, 0)
   timescB_in_gga(s(X1), X2, X3) -> U26_gga(X1, X2, X3, timescB_in_gga(X1, X2, X4))
   U26_gga(X1, X2, X3, timescB_out_gga(X1, X2, X4)) -> U27_gga(X1, X2, X3, pluscC_in_gga(X2, X4, X3))
   pluscC_in_gga(0, X1, X1) -> pluscC_out_gga(0, X1, X1)
   pluscC_in_gga(s(X1), X2, s(X3)) -> U28_gga(X1, X2, X3, pluscC_in_gga(X1, X2, X3))
   U28_gga(X1, X2, X3, pluscC_out_gga(X1, X2, X3)) -> pluscC_out_gga(s(X1), X2, s(X3))
   U27_gga(X1, X2, X3, pluscC_out_gga(X2, X4, X3)) -> timescB_out_gga(s(X1), X2, X3)
   U24_gga(X1, X2, X3, timescB_out_gga(X4, X2, X3)) -> convertcA_out_gga(.(s(0), X1), X2, s(X3))
   U21_gga(X1, X2, X3, X4, convertcA_out_gga(.(X1, X2), X3, X5)) -> U22_gga(X1, X2, X3, X4, timescB_in_gga(s(X5), X3, X4))
   U22_gga(X1, X2, X3, X4, timescB_out_gga(s(X5), X3, X4)) -> convertcA_out_gga(.(0, .(s(X1), X2)), X3, X4)
   U18_gga(X1, X2, X3, convertcA_out_gga(X1, X2, X4)) -> U19_gga(X1, X2, X3, timescB_in_gga(X4, X2, X5))
   U19_gga(X1, X2, X3, timescB_out_gga(X4, X2, X5)) -> U20_gga(X1, X2, X3, timescB_in_gga(X5, X2, X3))
   U20_gga(X1, X2, X3, timescB_out_gga(X5, X2, X3)) -> convertcA_out_gga(.(0, .(0, X1)), X2, X3)

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

0  =  0

convertcA_in_gga(x1, x2, x3)  =  convertcA_in_gga(x1, x2)

[]  =  []

convertcA_out_gga(x1, x2, x3)  =  convertcA_out_gga(x1, x2, x3)

U18_gga(x1, x2, x3, x4)  =  U18_gga(x1, x2, x4)

s(x1)  =  s(x1)

U21_gga(x1, x2, x3, x4, x5)  =  U21_gga(x1, x2, x3, x5)

U23_gga(x1, x2, x3, x4)  =  U23_gga(x1, x2, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x2, x4)

timescB_in_gga(x1, x2, x3)  =  timescB_in_gga(x1, x2)

timescB_out_gga(x1, x2, x3)  =  timescB_out_gga(x1, x2, x3)

U26_gga(x1, x2, x3, x4)  =  U26_gga(x1, x2, x4)

U27_gga(x1, x2, x3, x4)  =  U27_gga(x1, x2, x4)

pluscC_in_gga(x1, x2, x3)  =  pluscC_in_gga(x1, x2)

pluscC_out_gga(x1, x2, x3)  =  pluscC_out_gga(x1, x2, x3)

U28_gga(x1, x2, x3, x4)  =  U28_gga(x1, x2, x4)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

U19_gga(x1, x2, x3, x4)  =  U19_gga(x1, x2, x4)

U20_gga(x1, x2, x3, x4)  =  U20_gga(x1, x2, x4)

CONVERTA_IN_GGA(x1, x2, x3)  =  CONVERTA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3, X4) -> CONVERTA_IN_GGA(.(X1, X2), X3, X5)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2, X3) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(0), X1), X2, s(X3)) -> CONVERTA_IN_GGA(X1, X2, X4)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3, s(s(X4))) -> CONVERTA_IN_GGA(.(X1, X2), X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

0  =  0

s(x1)  =  s(x1)

CONVERTA_IN_GGA(x1, x2, x3)  =  CONVERTA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3) -> CONVERTA_IN_GGA(.(X1, X2), X3)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2) -> CONVERTA_IN_GGA(X1, X2)
   CONVERTA_IN_GGA(.(s(0), X1), X2) -> CONVERTA_IN_GGA(X1, X2)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3) -> CONVERTA_IN_GGA(.(X1, X2), X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   CONVERTA_IN_GGA(.(0, .(s(X1), X2)), X3) -> CONVERTA_IN_GGA(.(X1, X2), X3)
   CONVERTA_IN_GGA(.(0, .(0, X1)), X2) -> CONVERTA_IN_GGA(X1, X2)
   CONVERTA_IN_GGA(.(s(0), X1), X2) -> CONVERTA_IN_GGA(X1, X2)
   CONVERTA_IN_GGA(.(s(s(X1)), X2), X3) -> CONVERTA_IN_GGA(.(X1, X2), X3)
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + 2*x_2
   POL(0) = 0
   POL(CONVERTA_IN_GGA(x_1, x_2)) = 2*x_1 + x_2
   POL(s(x_1)) = x_1


----------------------------------------

(27)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(28) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(29)
YES
