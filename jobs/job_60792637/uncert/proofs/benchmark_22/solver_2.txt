MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/k4f9f.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

front(a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [SOUND, 0 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 1 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (20) YES
        (21) PiDP
            (22) UsableRulesProof [EQUIVALENT, 0 ms]
            (23) PiDP
            (24) PiDPToQDPProof [SOUND, 0 ms]
            (25) QDP
(26) PrologToPiTRSProof [SOUND, 0 ms]
(27) PiTRS
    (28) DependencyPairsProof [EQUIVALENT, 0 ms]
    (29) PiDP
    (30) DependencyGraphProof [EQUIVALENT, 0 ms]
    (31) AND
        (32) PiDP
            (33) UsableRulesProof [EQUIVALENT, 0 ms]
            (34) PiDP
            (35) PiDPToQDPProof [SOUND, 0 ms]
            (36) QDP
            (37) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (38) YES
        (39) PiDP
            (40) UsableRulesProof [EQUIVALENT, 0 ms]
            (41) PiDP
            (42) PiDPToQDPProof [SOUND, 0 ms]
            (43) QDP
            (44) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (45) YES
        (46) PiDP
            (47) UsableRulesProof [EQUIVALENT, 0 ms]
            (48) PiDP
            (49) PiDPToQDPProof [SOUND, 0 ms]
            (50) QDP
(51) PrologToTRSTransformerProof [SOUND, 0 ms]
(52) QTRS
    (53) QTRSRRRProof [EQUIVALENT, 72 ms]
    (54) QTRS
    (55) DependencyPairsProof [EQUIVALENT, 0 ms]
    (56) QDP
    (57) DependencyGraphProof [EQUIVALENT, 0 ms]
    (58) AND
        (59) QDP
            (60) UsableRulesProof [EQUIVALENT, 0 ms]
            (61) QDP
        (62) QDP
(63) PrologToIRSwTTransformerProof [SOUND, 23 ms]
(64) AND
    (65) IRSwT
        (66) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (67) TRUE
    (68) IRSwT
        (69) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (70) TRUE
    (71) IRSwT
        (72) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (73) IRSwT
        (74) IntTRSCompressionProof [EQUIVALENT, 9 ms]
        (75) IRSwT
        (76) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (77) IRSwT
        (78) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (79) IRSwT
        (80) FilterProof [EQUIVALENT, 0 ms]
        (81) IntTRS
        (82) IntTRSPeriodicNontermProof [COMPLETE, 1 ms]
        (83) NO
(84) PrologToDTProblemTransformerProof [SOUND, 42 ms]
(85) TRIPLES
    (86) UndefinedPredicateInTriplesTransformerProof [SOUND, 0 ms]
    (87) TRIPLES
    (88) TriplesToPiDPProof [SOUND, 12 ms]
    (89) PiDP
    (90) DependencyGraphProof [EQUIVALENT, 0 ms]
    (91) AND
        (92) PiDP
            (93) UsableRulesProof [EQUIVALENT, 0 ms]
            (94) PiDP
            (95) PiDPToQDPProof [SOUND, 0 ms]
            (96) QDP
            (97) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (98) YES
        (99) PiDP
            (100) UsableRulesProof [EQUIVALENT, 0 ms]
            (101) PiDP
            (102) PiDPToQDPProof [SOUND, 0 ms]
            (103) QDP
            (104) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (105) YES
        (106) PiDP
            (107) PiDPToQDPProof [SOUND, 0 ms]
            (108) QDP


----------------------------------------

(0)
Obligation:
Clauses:

front(void, []).
front(tree(X, void, void), .(X, [])).
front(tree(X1, L, R), Xs) :- ','(front(L, Ls), ','(front(R, Rs), app(Ls, Rs, Xs))).
app([], X, X).
app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs).


Query: front(a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

front_in_2: (f,b) (f,f)

app_in_3: (b,b,f) (b,b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   FRONT_IN_AG(tree(X1, L, R), Xs) -> U1_AG(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AG(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AA(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AA(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGA(Ls, Rs, Xs)
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> U4_GGA(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AG(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AG(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGG(Ls, Rs, Xs)
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> U4_GGG(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)

FRONT_IN_AG(x1, x2)  =  FRONT_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x2, x5, x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x2, x3, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x2, x4, x5, x6)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x2, x3, x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4, x5)  =  U4_GGG(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FRONT_IN_AG(tree(X1, L, R), Xs) -> U1_AG(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AG(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AA(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AA(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGA(Ls, Rs, Xs)
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> U4_GGA(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AG(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AG(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGG(Ls, Rs, Xs)
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> U4_GGG(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)

FRONT_IN_AG(x1, x2)  =  FRONT_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x2, x5, x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x2, x3, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x2, x4, x5, x6)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x2, x3, x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4, x5)  =  U4_GGG(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 11 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(Xs), Ys, .(Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GGG(.(Xs), Ys, .(Zs)) -> APP_IN_GGG(Xs, Ys, Zs)
The graph contains the following edges 1 > 1, 2 >= 2, 3 > 3


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(Xs), Ys) -> APP_IN_GGA(Xs, Ys)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GGA(.(Xs), Ys) -> APP_IN_GGA(Xs, Ys)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)

The TRS R consists of the following rules:

   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x2)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AA(front_out_aa(L, Ls)) -> FRONT_IN_AA
   FRONT_IN_AA -> U1_AA(front_in_aa)
   FRONT_IN_AA -> FRONT_IN_AA

The TRS R consists of the following rules:

   front_in_aa -> front_out_aa(void, [])
   front_in_aa -> front_out_aa(tree(void, void), .([]))
   front_in_aa -> U1_aa(front_in_aa)
   U1_aa(front_out_aa(L, Ls)) -> U2_aa(L, Ls, front_in_aa)
   U2_aa(L, Ls, front_out_aa(R, Rs)) -> U3_aa(L, R, app_in_gga(Ls, Rs))
   U3_aa(L, R, app_out_gga(Xs)) -> front_out_aa(tree(L, R), Xs)
   app_in_gga([], X) -> app_out_gga(X)
   app_in_gga(.(Xs), Ys) -> U4_gga(app_in_gga(Xs, Ys))
   U4_gga(app_out_gga(Zs)) -> app_out_gga(.(Zs))

The set Q consists of the following terms:

   front_in_aa
   U1_aa(x0)
   U2_aa(x0, x1, x2)
   U3_aa(x0, x1, x2)
   app_in_gga(x0, x1)
   U4_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

front_in_2: (f,b) (f,f)

app_in_3: (b,b,f) (b,b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(27)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)



----------------------------------------

(28) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   FRONT_IN_AG(tree(X1, L, R), Xs) -> U1_AG(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AG(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AA(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AA(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGA(Ls, Rs, Xs)
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> U4_GGA(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AG(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AG(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGG(Ls, Rs, Xs)
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> U4_GGG(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)

FRONT_IN_AG(x1, x2)  =  FRONT_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x2, x5, x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x2, x3, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x2, x3, x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x2, x4, x5, x6)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x2, x3, x4, x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4, x5)  =  U4_GGG(x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FRONT_IN_AG(tree(X1, L, R), Xs) -> U1_AG(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AG(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AA(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AA(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U2_AA(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGA(Ls, Rs, Xs)
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> U4_GGA(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_AG(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U1_AG(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_AG(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   U2_AG(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> APP_IN_GGG(Ls, Rs, Xs)
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> U4_GGG(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)

FRONT_IN_AG(x1, x2)  =  FRONT_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x2, x5, x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x2, x3, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x2, x3, x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x2, x4, x5, x6)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x2, x3, x4, x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4, x5)  =  U4_GGG(x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(30) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 11 less nodes.
----------------------------------------

(31)
Complex Obligation (AND)

----------------------------------------

(32)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(33) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(34)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GGG(x1, x2, x3)  =  APP_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(35) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GGG(.(Xs), Ys, .(Zs)) -> APP_IN_GGG(Xs, Ys, Zs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(37) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GGG(.(Xs), Ys, .(Zs)) -> APP_IN_GGG(Xs, Ys, Zs)
The graph contains the following edges 1 > 1, 2 >= 2, 3 > 3


----------------------------------------

(38)
YES

----------------------------------------

(39)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(40) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(41)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GGA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(42) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(43)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(.(Xs), Ys) -> APP_IN_GGA(Xs, Ys)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(44) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GGA(.(Xs), Ys) -> APP_IN_GGA(Xs, Ys)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(45)
YES

----------------------------------------

(46)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)

The TRS R consists of the following rules:

   front_in_ag(void, []) -> front_out_ag(void, [])
   front_in_ag(tree(X, void, void), .(X, [])) -> front_out_ag(tree(X, void, void), .(X, []))
   front_in_ag(tree(X1, L, R), Xs) -> U1_ag(X1, L, R, Xs, front_in_aa(L, Ls))
   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   U1_ag(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_ag(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_ag(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_ag(X1, L, R, Xs, app_in_ggg(Ls, Rs, Xs))
   app_in_ggg([], X, X) -> app_out_ggg([], X, X)
   app_in_ggg(.(X, Xs), Ys, .(X, Zs)) -> U4_ggg(X, Xs, Ys, Zs, app_in_ggg(Xs, Ys, Zs))
   U4_ggg(X, Xs, Ys, Zs, app_out_ggg(Xs, Ys, Zs)) -> app_out_ggg(.(X, Xs), Ys, .(X, Zs))
   U3_ag(X1, L, R, Xs, app_out_ggg(Ls, Rs, Xs)) -> front_out_ag(tree(X1, L, R), Xs)

The argument filtering Pi contains the following mapping:
front_in_ag(x1, x2)  =  front_in_ag(x2)

[]  =  []

front_out_ag(x1, x2)  =  front_out_ag(x1, x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x2, x4, x5, x6)

U3_ag(x1, x2, x3, x4, x5)  =  U3_ag(x2, x3, x4, x5)

app_in_ggg(x1, x2, x3)  =  app_in_ggg(x1, x2, x3)

app_out_ggg(x1, x2, x3)  =  app_out_ggg(x1, x2, x3)

U4_ggg(x1, x2, x3, x4, x5)  =  U4_ggg(x2, x3, x4, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(47) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(48)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(X1, L, R, Xs, front_out_aa(L, Ls)) -> FRONT_IN_AA(R, Rs)
   FRONT_IN_AA(tree(X1, L, R), Xs) -> U1_AA(X1, L, R, Xs, front_in_aa(L, Ls))
   FRONT_IN_AA(tree(X1, L, R), Xs) -> FRONT_IN_AA(L, Ls)

The TRS R consists of the following rules:

   front_in_aa(void, []) -> front_out_aa(void, [])
   front_in_aa(tree(X, void, void), .(X, [])) -> front_out_aa(tree(X, void, void), .(X, []))
   front_in_aa(tree(X1, L, R), Xs) -> U1_aa(X1, L, R, Xs, front_in_aa(L, Ls))
   U1_aa(X1, L, R, Xs, front_out_aa(L, Ls)) -> U2_aa(X1, L, R, Xs, Ls, front_in_aa(R, Rs))
   U2_aa(X1, L, R, Xs, Ls, front_out_aa(R, Rs)) -> U3_aa(X1, L, R, Xs, app_in_gga(Ls, Rs, Xs))
   U3_aa(X1, L, R, Xs, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(X1, L, R), Xs)
   app_in_gga([], X, X) -> app_out_gga([], X, X)
   app_in_gga(.(X, Xs), Ys, .(X, Zs)) -> U4_gga(X, Xs, Ys, Zs, app_in_gga(Xs, Ys, Zs))
   U4_gga(X, Xs, Ys, Zs, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(X, Xs), Ys, .(X, Zs))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x2)

front_in_aa(x1, x2)  =  front_in_aa

front_out_aa(x1, x2)  =  front_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x2, x5, x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x2, x3, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2, x3)

U4_gga(x1, x2, x3, x4, x5)  =  U4_gga(x2, x3, x5)

FRONT_IN_AA(x1, x2)  =  FRONT_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(49) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AA(front_out_aa(L, Ls)) -> FRONT_IN_AA
   FRONT_IN_AA -> U1_AA(front_in_aa)
   FRONT_IN_AA -> FRONT_IN_AA

The TRS R consists of the following rules:

   front_in_aa -> front_out_aa(void, [])
   front_in_aa -> front_out_aa(tree(void, void), .([]))
   front_in_aa -> U1_aa(front_in_aa)
   U1_aa(front_out_aa(L, Ls)) -> U2_aa(L, Ls, front_in_aa)
   U2_aa(L, Ls, front_out_aa(R, Rs)) -> U3_aa(L, R, app_in_gga(Ls, Rs))
   U3_aa(L, R, app_out_gga(Ls, Rs, Xs)) -> front_out_aa(tree(L, R), Xs)
   app_in_gga([], X) -> app_out_gga([], X, X)
   app_in_gga(.(Xs), Ys) -> U4_gga(Xs, Ys, app_in_gga(Xs, Ys))
   U4_gga(Xs, Ys, app_out_gga(Xs, Ys, Zs)) -> app_out_gga(.(Xs), Ys, .(Zs))

The set Q consists of the following terms:

   front_in_aa
   U1_aa(x0)
   U2_aa(x0, x1, x2)
   U3_aa(x0, x1, x2)
   app_in_gga(x0, x1)
   U4_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(51) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(front (void) ([]))",
                null
            ],
            [
                "(front (tree X (void) (void)) (. X ([])))",
                null
            ],
            [
                "(front (tree X1 L R) Xs)",
                "(',' (front L Ls) (',' (front R Rs) (app Ls Rs Xs)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "192": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T38 X44)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X44"],
                    "exprvars": []
                }
            },
            "193": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T41 X45) (app T40 X45 X46))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X46",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "395": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app T65 T64 T19)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(app T65 T64 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "396": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "397": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "398": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "399": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "279": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T23 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "400": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "401": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T85 T86 T84)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T84"],
                    "free": [],
                    "exprvars": []
                }
            },
            "402": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "23": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "179": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T38 X44) (',' (front T39 X45) (app X44 X45 X46)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X46",
                        "X44",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "214": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T41 X45)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X45"],
                    "exprvars": []
                }
            },
            "215": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "216": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(app T43 T42 X46)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(app T43 T42 X46)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "217": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "218": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "219": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "74": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T20 X21) (',' (front T21 X22) (app X21 X22 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "32": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "76": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "77": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "220": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "221": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T60 T61 X68)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "83": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "42": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "86": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "43": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T23 X22) (app T22 X22 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X22"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 8,
                "label": "PARALLEL"
            },
            {
                "from": 5,
                "to": 9,
                "label": "PARALLEL"
            },
            {
                "from": 8,
                "to": 13,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT1 -> void,\nT2 -> []"
            },
            {
                "from": 8,
                "to": 14,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 9,
                "to": 19,
                "label": "PARALLEL"
            },
            {
                "from": 9,
                "to": 20,
                "label": "PARALLEL"
            },
            {
                "from": 13,
                "to": 16,
                "label": "SUCCESS"
            },
            {
                "from": 19,
                "to": 23,
                "label": "EVAL with clause\nfront(tree(X6, void, void), .(X6, [])).\nand substitutionX6 -> T7,\nT1 -> tree(T7, void, void),\nT2 -> .(T7, [])"
            },
            {
                "from": 19,
                "to": 25,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 20,
                "to": 31,
                "label": "EVAL with clause\nfront(tree(X17, X18, X19), X20) :- ','(front(X18, X21), ','(front(X19, X22), app(X21, X22, X20))).\nand substitutionX17 -> T16,\nX18 -> T20,\nX19 -> T21,\nT1 -> tree(T16, T20, T21),\nT2 -> T19,\nX20 -> T19,\nT17 -> T20,\nT18 -> T21"
            },
            {
                "from": 20,
                "to": 32,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 23,
                "to": 26,
                "label": "SUCCESS"
            },
            {
                "from": 31,
                "to": 42,
                "label": "SPLIT 1"
            },
            {
                "from": 31,
                "to": 43,
                "label": "SPLIT 2\nreplacements:X21 -> T22,\nT21 -> T23"
            },
            {
                "from": 42,
                "to": 72,
                "label": "CASE"
            },
            {
                "from": 43,
                "to": 323,
                "label": "SPLIT 1"
            },
            {
                "from": 43,
                "to": 324,
                "label": "SPLIT 2\nreplacements:X22 -> T64,\nT22 -> T65"
            },
            {
                "from": 72,
                "to": 73,
                "label": "PARALLEL"
            },
            {
                "from": 72,
                "to": 74,
                "label": "PARALLEL"
            },
            {
                "from": 73,
                "to": 75,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT20 -> void,\nX21 -> []"
            },
            {
                "from": 73,
                "to": 76,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 74,
                "to": 81,
                "label": "PARALLEL"
            },
            {
                "from": 74,
                "to": 82,
                "label": "PARALLEL"
            },
            {
                "from": 75,
                "to": 77,
                "label": "SUCCESS"
            },
            {
                "from": 81,
                "to": 83,
                "label": "EVAL with clause\nfront(tree(X27, void, void), .(X27, [])).\nand substitutionX27 -> T28,\nT20 -> tree(T28, void, void),\nX21 -> .(T28, [])"
            },
            {
                "from": 81,
                "to": 86,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 82,
                "to": 179,
                "label": "EVAL with clause\nfront(tree(X40, X41, X42), X43) :- ','(front(X41, X44), ','(front(X42, X45), app(X44, X45, X43))).\nand substitutionX40 -> T35,\nX41 -> T38,\nX42 -> T39,\nT20 -> tree(T35, T38, T39),\nX21 -> X46,\nX43 -> X46,\nT36 -> T38,\nT37 -> T39"
            },
            {
                "from": 82,
                "to": 180,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 83,
                "to": 92,
                "label": "SUCCESS"
            },
            {
                "from": 179,
                "to": 192,
                "label": "SPLIT 1"
            },
            {
                "from": 179,
                "to": 193,
                "label": "SPLIT 2\nreplacements:X44 -> T40,\nT39 -> T41"
            },
            {
                "from": 192,
                "to": 42,
                "label": "INSTANCE with matching:\nT20 -> T38\nX21 -> X44"
            },
            {
                "from": 193,
                "to": 214,
                "label": "SPLIT 1"
            },
            {
                "from": 193,
                "to": 215,
                "label": "SPLIT 2\nreplacements:X45 -> T42,\nT40 -> T43"
            },
            {
                "from": 214,
                "to": 42,
                "label": "INSTANCE with matching:\nT20 -> T41\nX21 -> X45"
            },
            {
                "from": 215,
                "to": 216,
                "label": "CASE"
            },
            {
                "from": 216,
                "to": 217,
                "label": "PARALLEL"
            },
            {
                "from": 216,
                "to": 218,
                "label": "PARALLEL"
            },
            {
                "from": 217,
                "to": 219,
                "label": "EVAL with clause\napp([], X53, X53).\nand substitutionT43 -> [],\nT42 -> T50,\nX53 -> T50,\nX46 -> T50"
            },
            {
                "from": 217,
                "to": 220,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 218,
                "to": 266,
                "label": "EVAL with clause\napp(.(X64, X65), X66, .(X64, X67)) :- app(X65, X66, X67).\nand substitutionX64 -> T57,\nX65 -> T60,\nT43 -> .(T57, T60),\nT42 -> T61,\nX66 -> T61,\nX67 -> X68,\nX46 -> .(T57, X68),\nT58 -> T60,\nT59 -> T61"
            },
            {
                "from": 218,
                "to": 279,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 219,
                "to": 221,
                "label": "SUCCESS"
            },
            {
                "from": 266,
                "to": 215,
                "label": "INSTANCE with matching:\nT43 -> T60\nT42 -> T61\nX46 -> X68"
            },
            {
                "from": 323,
                "to": 42,
                "label": "INSTANCE with matching:\nT20 -> T23\nX21 -> X22"
            },
            {
                "from": 324,
                "to": 395,
                "label": "CASE"
            },
            {
                "from": 395,
                "to": 396,
                "label": "PARALLEL"
            },
            {
                "from": 395,
                "to": 397,
                "label": "PARALLEL"
            },
            {
                "from": 396,
                "to": 398,
                "label": "EVAL with clause\napp([], X77, X77).\nand substitutionT65 -> [],\nT64 -> T72,\nX77 -> T72,\nT19 -> T72"
            },
            {
                "from": 396,
                "to": 399,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 397,
                "to": 401,
                "label": "EVAL with clause\napp(.(X86, X87), X88, .(X86, X89)) :- app(X87, X88, X89).\nand substitutionX86 -> T81,\nX87 -> T85,\nT65 -> .(T81, T85),\nT64 -> T86,\nX88 -> T86,\nX89 -> T84,\nT19 -> .(T81, T84),\nT82 -> T85,\nT83 -> T86"
            },
            {
                "from": 397,
                "to": 402,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 398,
                "to": 400,
                "label": "SUCCESS"
            },
            {
                "from": 401,
                "to": 324,
                "label": "INSTANCE with matching:\nT65 -> T85\nT64 -> T86\nT19 -> T84"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(52)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f2_in([]) -> f2_out1
   f2_in(.(T7, [])) -> f2_out1
   f2_in(T19) -> U1(f31_in(T19), T19)
   U1(f31_out1(X21, X22), T19) -> f2_out1
   f42_in -> f42_out1
   f42_in -> U2(f179_in)
   U2(f179_out1) -> f42_out1
   f215_in -> f215_out1
   f215_in -> U3(f215_in)
   U3(f215_out1) -> f215_out1
   f324_in(T72) -> f324_out1([], T72)
   f324_in(.(T81, T84)) -> U4(f324_in(T84), .(T81, T84))
   U4(f324_out1(T85, T86), .(T81, T84)) -> f324_out1(.(T81, T85), T86)
   f31_in(T19) -> U5(f42_in, T19)
   U5(f42_out1, T19) -> U6(f43_in(T19), T19)
   U6(f43_out1(T22, X22), T19) -> f31_out1(T22, X22)
   f43_in(T19) -> U7(f42_in, T19)
   U7(f42_out1, T19) -> U8(f324_in(T19), T19)
   U8(f324_out1(T65, T64), T19) -> f43_out1(T65, T64)
   f179_in -> U9(f42_in)
   U9(f42_out1) -> U10(f193_in)
   U10(f193_out1) -> f179_out1
   f193_in -> U11(f42_in)
   U11(f42_out1) -> U12(f215_in)
   U12(f215_out1) -> f193_out1

Q is empty.

----------------------------------------

(53) QTRSRRRProof (EQUIVALENT)
Used ordering:
f2_in/1(YES)
[]/0)
f2_out1/0)
./2(YES,YES)
U1/2(YES,YES)
f31_in/1(YES)
f31_out1/2(YES,YES)
f42_in/0)
f42_out1/0)
U2/1)YES(
f179_in/0)
f179_out1/0)
f215_in/0)
f215_out1/0)
U3/1)YES(
f324_in/1(YES)
f324_out1/2(YES,YES)
U4/2(YES,YES)
U5/2(YES,YES)
U6/2(YES,YES)
f43_in/1(YES)
f43_out1/2(YES,YES)
U7/2(YES,YES)
U8/2(YES,YES)
U9/1)YES(
U10/1)YES(
f193_in/0)
f193_out1/0)
U11/1)YES(
U12/1)YES(

Quasi precedence:
f2_in_1 > U1_2 > f2_out1
f2_in_1 > f31_in_1 > [U5_2, f43_in_1] > [[], f324_in_1, U7_2] > [f31_out1_2, f43_out1_2, U8_2] > f2_out1
f2_in_1 > f31_in_1 > [U5_2, f43_in_1] > [[], f324_in_1, U7_2] > U4_2 > [._2, f324_out1_2]
f2_in_1 > f31_in_1 > [U5_2, f43_in_1] > [f42_in, f42_out1, f179_in, f179_out1, f215_in, f215_out1, f193_in, f193_out1]
f2_in_1 > f31_in_1 > [U5_2, f43_in_1] > U6_2


Status:
f2_in_1: multiset status
[]: multiset status
f2_out1: multiset status
._2: multiset status
U1_2: multiset status
f31_in_1: [1]
f31_out1_2: multiset status
f42_in: multiset status
f42_out1: multiset status
f179_in: multiset status
f179_out1: multiset status
f215_in: multiset status
f215_out1: multiset status
f324_in_1: multiset status
f324_out1_2: multiset status
U4_2: multiset status
U5_2: multiset status
U6_2: multiset status
f43_in_1: multiset status
f43_out1_2: multiset status
U7_2: multiset status
U8_2: multiset status
f193_in: multiset status
f193_out1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f2_in([]) -> f2_out1
   f2_in(.(T7, [])) -> f2_out1
   f2_in(T19) -> U1(f31_in(T19), T19)
   U1(f31_out1(X21, X22), T19) -> f2_out1
   f324_in(T72) -> f324_out1([], T72)
   f324_in(.(T81, T84)) -> U4(f324_in(T84), .(T81, T84))
   U4(f324_out1(T85, T86), .(T81, T84)) -> f324_out1(.(T81, T85), T86)
   f31_in(T19) -> U5(f42_in, T19)
   U5(f42_out1, T19) -> U6(f43_in(T19), T19)
   U6(f43_out1(T22, X22), T19) -> f31_out1(T22, X22)
   f43_in(T19) -> U7(f42_in, T19)
   U7(f42_out1, T19) -> U8(f324_in(T19), T19)
   U8(f324_out1(T65, T64), T19) -> f43_out1(T65, T64)




----------------------------------------

(54)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f42_in -> f42_out1
   f42_in -> U2(f179_in)
   U2(f179_out1) -> f42_out1
   f215_in -> f215_out1
   f215_in -> U3(f215_in)
   U3(f215_out1) -> f215_out1
   f179_in -> U9(f42_in)
   U9(f42_out1) -> U10(f193_in)
   U10(f193_out1) -> f179_out1
   f193_in -> U11(f42_in)
   U11(f42_out1) -> U12(f215_in)
   U12(f215_out1) -> f193_out1

Q is empty.

----------------------------------------

(55) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F42_IN -> U2^1(f179_in)
   F42_IN -> F179_IN
   F215_IN -> U3^1(f215_in)
   F215_IN -> F215_IN
   F179_IN -> U9^1(f42_in)
   F179_IN -> F42_IN
   U9^1(f42_out1) -> U10^1(f193_in)
   U9^1(f42_out1) -> F193_IN
   F193_IN -> U11^1(f42_in)
   F193_IN -> F42_IN
   U11^1(f42_out1) -> U12^1(f215_in)
   U11^1(f42_out1) -> F215_IN

The TRS R consists of the following rules:

   f42_in -> f42_out1
   f42_in -> U2(f179_in)
   U2(f179_out1) -> f42_out1
   f215_in -> f215_out1
   f215_in -> U3(f215_in)
   U3(f215_out1) -> f215_out1
   f179_in -> U9(f42_in)
   U9(f42_out1) -> U10(f193_in)
   U10(f193_out1) -> f179_out1
   f193_in -> U11(f42_in)
   U11(f42_out1) -> U12(f215_in)
   U12(f215_out1) -> f193_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 6 less nodes.
----------------------------------------

(58)
Complex Obligation (AND)

----------------------------------------

(59)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F215_IN -> F215_IN

The TRS R consists of the following rules:

   f42_in -> f42_out1
   f42_in -> U2(f179_in)
   U2(f179_out1) -> f42_out1
   f215_in -> f215_out1
   f215_in -> U3(f215_in)
   U3(f215_out1) -> f215_out1
   f179_in -> U9(f42_in)
   U9(f42_out1) -> U10(f193_in)
   U10(f193_out1) -> f179_out1
   f193_in -> U11(f42_in)
   U11(f42_out1) -> U12(f215_in)
   U12(f215_out1) -> f193_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(60) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(61)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F215_IN -> F215_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F42_IN -> F179_IN
   F179_IN -> U9^1(f42_in)
   U9^1(f42_out1) -> F193_IN
   F193_IN -> F42_IN
   F179_IN -> F42_IN

The TRS R consists of the following rules:

   f42_in -> f42_out1
   f42_in -> U2(f179_in)
   U2(f179_out1) -> f42_out1
   f215_in -> f215_out1
   f215_in -> U3(f215_in)
   U3(f215_out1) -> f215_out1
   f179_in -> U9(f42_in)
   U9(f42_out1) -> U10(f193_in)
   U10(f193_out1) -> f179_out1
   f193_in -> U11(f42_in)
   U11(f42_out1) -> U12(f215_in)
   U12(f215_out1) -> f193_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(63) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(front (void) ([]))",
                null
            ],
            [
                "(front (tree X (void) (void)) (. X ([])))",
                null
            ],
            [
                "(front (tree X1 L R) Xs)",
                "(',' (front L Ls) (',' (front R Rs) (app Ls Rs Xs)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "44": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "45": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T23 X22) (app T22 X22 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "390": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "391": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "392": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "393": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "394": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "430": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T85 T86 T84)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T84"],
                    "free": [],
                    "exprvars": []
                }
            },
            "432": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "357": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T38 X44) (',' (front T39 X45) (app X44 X45 X46)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X46",
                        "X44",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "358": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "359": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T38 X44)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X44"],
                    "exprvars": []
                }
            },
            "52": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(front T20 X21)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "55": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "360": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T41 X45) (app T40 X45 X46))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X46",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "361": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T41 X45)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X45"],
                    "exprvars": []
                }
            },
            "362": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "363": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(app T43 T42 X46)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(app T43 T42 X46)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "364": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "365": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(app T43 T42 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "21": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "22": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "336": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "337": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(front T20 X21)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "338": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "339": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "382": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "383": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "340": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "384": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "385": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T60 T61 X68)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "386": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "387": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T23 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "388": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T65 T64 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "389": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app T65 T64 T19)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(app T65 T64 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "40": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T20 X21) (',' (front T21 X22) (app X21 X22 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "41": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 6,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 11,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT1 -> void,\nT2 -> []"
            },
            {
                "from": 6,
                "to": 12,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 7,
                "to": 17,
                "label": "PARALLEL"
            },
            {
                "from": 7,
                "to": 18,
                "label": "PARALLEL"
            },
            {
                "from": 11,
                "to": 15,
                "label": "SUCCESS"
            },
            {
                "from": 17,
                "to": 21,
                "label": "EVAL with clause\nfront(tree(X6, void, void), .(X6, [])).\nand substitutionX6 -> T7,\nT1 -> tree(T7, void, void),\nT2 -> .(T7, [])"
            },
            {
                "from": 17,
                "to": 22,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 18,
                "to": 40,
                "label": "EVAL with clause\nfront(tree(X17, X18, X19), X20) :- ','(front(X18, X21), ','(front(X19, X22), app(X21, X22, X20))).\nand substitutionX17 -> T16,\nX18 -> T20,\nX19 -> T21,\nT1 -> tree(T16, T20, T21),\nT2 -> T19,\nX20 -> T19,\nT17 -> T20,\nT18 -> T21"
            },
            {
                "from": 18,
                "to": 41,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 21,
                "to": 24,
                "label": "SUCCESS"
            },
            {
                "from": 40,
                "to": 44,
                "label": "SPLIT 1"
            },
            {
                "from": 40,
                "to": 45,
                "label": "SPLIT 2\nreplacements:X21 -> T22,\nT21 -> T23"
            },
            {
                "from": 44,
                "to": 49,
                "label": "CASE"
            },
            {
                "from": 45,
                "to": 387,
                "label": "SPLIT 1"
            },
            {
                "from": 45,
                "to": 388,
                "label": "SPLIT 2\nreplacements:X22 -> T64,\nT22 -> T65"
            },
            {
                "from": 49,
                "to": 52,
                "label": "PARALLEL"
            },
            {
                "from": 49,
                "to": 53,
                "label": "PARALLEL"
            },
            {
                "from": 52,
                "to": 55,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT20 -> void,\nX21 -> []"
            },
            {
                "from": 52,
                "to": 57,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 53,
                "to": 336,
                "label": "PARALLEL"
            },
            {
                "from": 53,
                "to": 337,
                "label": "PARALLEL"
            },
            {
                "from": 55,
                "to": 59,
                "label": "SUCCESS"
            },
            {
                "from": 336,
                "to": 338,
                "label": "EVAL with clause\nfront(tree(X27, void, void), .(X27, [])).\nand substitutionX27 -> T28,\nT20 -> tree(T28, void, void),\nX21 -> .(T28, [])"
            },
            {
                "from": 336,
                "to": 339,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 337,
                "to": 357,
                "label": "EVAL with clause\nfront(tree(X40, X41, X42), X43) :- ','(front(X41, X44), ','(front(X42, X45), app(X44, X45, X43))).\nand substitutionX40 -> T35,\nX41 -> T38,\nX42 -> T39,\nT20 -> tree(T35, T38, T39),\nX21 -> X46,\nX43 -> X46,\nT36 -> T38,\nT37 -> T39"
            },
            {
                "from": 337,
                "to": 358,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 338,
                "to": 340,
                "label": "SUCCESS"
            },
            {
                "from": 357,
                "to": 359,
                "label": "SPLIT 1"
            },
            {
                "from": 357,
                "to": 360,
                "label": "SPLIT 2\nreplacements:X44 -> T40,\nT39 -> T41"
            },
            {
                "from": 359,
                "to": 44,
                "label": "INSTANCE with matching:\nT20 -> T38\nX21 -> X44"
            },
            {
                "from": 360,
                "to": 361,
                "label": "SPLIT 1"
            },
            {
                "from": 360,
                "to": 362,
                "label": "SPLIT 2\nreplacements:X45 -> T42,\nT40 -> T43"
            },
            {
                "from": 361,
                "to": 44,
                "label": "INSTANCE with matching:\nT20 -> T41\nX21 -> X45"
            },
            {
                "from": 362,
                "to": 363,
                "label": "CASE"
            },
            {
                "from": 363,
                "to": 364,
                "label": "PARALLEL"
            },
            {
                "from": 363,
                "to": 365,
                "label": "PARALLEL"
            },
            {
                "from": 364,
                "to": 382,
                "label": "EVAL with clause\napp([], X53, X53).\nand substitutionT43 -> [],\nT42 -> T50,\nX53 -> T50,\nX46 -> T50"
            },
            {
                "from": 364,
                "to": 383,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 365,
                "to": 385,
                "label": "EVAL with clause\napp(.(X64, X65), X66, .(X64, X67)) :- app(X65, X66, X67).\nand substitutionX64 -> T57,\nX65 -> T60,\nT43 -> .(T57, T60),\nT42 -> T61,\nX66 -> T61,\nX67 -> X68,\nX46 -> .(T57, X68),\nT58 -> T60,\nT59 -> T61"
            },
            {
                "from": 365,
                "to": 386,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 382,
                "to": 384,
                "label": "SUCCESS"
            },
            {
                "from": 385,
                "to": 362,
                "label": "INSTANCE with matching:\nT43 -> T60\nT42 -> T61\nX46 -> X68"
            },
            {
                "from": 387,
                "to": 44,
                "label": "INSTANCE with matching:\nT20 -> T23\nX21 -> X22"
            },
            {
                "from": 388,
                "to": 389,
                "label": "CASE"
            },
            {
                "from": 389,
                "to": 390,
                "label": "PARALLEL"
            },
            {
                "from": 389,
                "to": 391,
                "label": "PARALLEL"
            },
            {
                "from": 390,
                "to": 392,
                "label": "EVAL with clause\napp([], X77, X77).\nand substitutionT65 -> [],\nT64 -> T72,\nX77 -> T72,\nT19 -> T72"
            },
            {
                "from": 390,
                "to": 393,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 391,
                "to": 430,
                "label": "EVAL with clause\napp(.(X86, X87), X88, .(X86, X89)) :- app(X87, X88, X89).\nand substitutionX86 -> T81,\nX87 -> T85,\nT65 -> .(T81, T85),\nT64 -> T86,\nX88 -> T86,\nX89 -> T84,\nT19 -> .(T81, T84),\nT82 -> T85,\nT83 -> T86"
            },
            {
                "from": 391,
                "to": 432,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 392,
                "to": 394,
                "label": "SUCCESS"
            },
            {
                "from": 430,
                "to": 388,
                "label": "INSTANCE with matching:\nT65 -> T85\nT64 -> T86\nT19 -> T84"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(64)
Complex Obligation (AND)

----------------------------------------

(65)
Obligation:
Rules:
f391_in(T19) -> f432_in :|: TRUE
f391_in(.(T81, T84)) -> f430_in(T84) :|: TRUE
f432_out -> f391_out(x) :|: TRUE
f430_out(x1) -> f391_out(.(x2, x1)) :|: TRUE
f430_in(x3) -> f388_in(x3) :|: TRUE
f388_out(x4) -> f430_out(x4) :|: TRUE
f388_in(x5) -> f389_in(x5) :|: TRUE
f389_out(x6) -> f388_out(x6) :|: TRUE
f391_out(x7) -> f389_out(x7) :|: TRUE
f389_in(x8) -> f390_in(x8) :|: TRUE
f389_in(x9) -> f391_in(x9) :|: TRUE
f390_out(x10) -> f389_out(x10) :|: TRUE
f4_out(T2) -> f1_out(T2) :|: TRUE
f1_in(x11) -> f4_in(x11) :|: TRUE
f4_in(x12) -> f6_in(x12) :|: TRUE
f7_out(x13) -> f4_out(x13) :|: TRUE
f6_out(x14) -> f4_out(x14) :|: TRUE
f4_in(x15) -> f7_in(x15) :|: TRUE
f7_in(x16) -> f18_in(x16) :|: TRUE
f17_out(x17) -> f7_out(x17) :|: TRUE
f18_out(x18) -> f7_out(x18) :|: TRUE
f7_in(x19) -> f17_in(x19) :|: TRUE
f40_out(x20) -> f18_out(x20) :|: TRUE
f18_in(x21) -> f40_in(x21) :|: TRUE
f41_out -> f18_out(x22) :|: TRUE
f18_in(x23) -> f41_in :|: TRUE
f40_in(x24) -> f44_in :|: TRUE
f44_out -> f45_in(x25) :|: TRUE
f45_out(x26) -> f40_out(x26) :|: TRUE
f387_out -> f388_in(x27) :|: TRUE
f388_out(x28) -> f45_out(x28) :|: TRUE
f45_in(x29) -> f387_in :|: TRUE
Start term: f1_in(T2)

----------------------------------------

(66) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(67)
TRUE

----------------------------------------

(68)
Obligation:
Rules:
f363_in -> f364_in :|: TRUE
f364_out -> f363_out :|: TRUE
f365_out -> f363_out :|: TRUE
f363_in -> f365_in :|: TRUE
f385_in -> f362_in :|: TRUE
f362_out -> f385_out :|: TRUE
f363_out -> f362_out :|: TRUE
f362_in -> f363_in :|: TRUE
f386_out -> f365_out :|: TRUE
f385_out -> f365_out :|: TRUE
f365_in -> f386_in :|: TRUE
f365_in -> f385_in :|: TRUE
f4_out(T2) -> f1_out(T2) :|: TRUE
f1_in(x) -> f4_in(x) :|: TRUE
f4_in(x1) -> f6_in(x1) :|: TRUE
f7_out(x2) -> f4_out(x2) :|: TRUE
f6_out(x3) -> f4_out(x3) :|: TRUE
f4_in(x4) -> f7_in(x4) :|: TRUE
f7_in(x5) -> f18_in(x5) :|: TRUE
f17_out(x6) -> f7_out(x6) :|: TRUE
f18_out(x7) -> f7_out(x7) :|: TRUE
f7_in(x8) -> f17_in(x8) :|: TRUE
f40_out(T19) -> f18_out(T19) :|: TRUE
f18_in(x9) -> f40_in(x9) :|: TRUE
f41_out -> f18_out(x10) :|: TRUE
f18_in(x11) -> f41_in :|: TRUE
f40_in(x12) -> f44_in :|: TRUE
f44_out -> f45_in(x13) :|: TRUE
f45_out(x14) -> f40_out(x14) :|: TRUE
f44_in -> f49_in :|: TRUE
f49_out -> f44_out :|: TRUE
f52_out -> f49_out :|: TRUE
f49_in -> f53_in :|: TRUE
f49_in -> f52_in :|: TRUE
f53_out -> f49_out :|: TRUE
f53_in -> f337_in :|: TRUE
f53_in -> f336_in :|: TRUE
f337_out -> f53_out :|: TRUE
f336_out -> f53_out :|: TRUE
f357_out -> f337_out :|: TRUE
f358_out -> f337_out :|: TRUE
f337_in -> f358_in :|: TRUE
f337_in -> f357_in :|: TRUE
f360_out -> f357_out :|: TRUE
f357_in -> f359_in :|: TRUE
f359_out -> f360_in :|: TRUE
f360_in -> f361_in :|: TRUE
f361_out -> f362_in :|: TRUE
f362_out -> f360_out :|: TRUE
f387_out -> f388_in(x15) :|: TRUE
f388_out(x16) -> f45_out(x16) :|: TRUE
f45_in(x17) -> f387_in :|: TRUE
f44_out -> f387_out :|: TRUE
f387_in -> f44_in :|: TRUE
Start term: f1_in(T2)

----------------------------------------

(69) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(70)
TRUE

----------------------------------------

(71)
Obligation:
Rules:
f357_out -> f337_out :|: TRUE
f358_out -> f337_out :|: TRUE
f337_in -> f358_in :|: TRUE
f337_in -> f357_in :|: TRUE
f360_in -> f361_in :|: TRUE
f361_out -> f362_in :|: TRUE
f362_out -> f360_out :|: TRUE
f361_in -> f44_in :|: TRUE
f44_out -> f361_out :|: TRUE
f363_in -> f364_in :|: TRUE
f364_out -> f363_out :|: TRUE
f365_out -> f363_out :|: TRUE
f363_in -> f365_in :|: TRUE
f44_in -> f49_in :|: TRUE
f49_out -> f44_out :|: TRUE
f363_out -> f362_out :|: TRUE
f362_in -> f363_in :|: TRUE
f364_in -> f382_in :|: TRUE
f382_out -> f364_out :|: TRUE
f383_out -> f364_out :|: TRUE
f364_in -> f383_in :|: TRUE
f382_in -> f382_out :|: TRUE
f52_out -> f49_out :|: TRUE
f49_in -> f53_in :|: TRUE
f49_in -> f52_in :|: TRUE
f53_out -> f49_out :|: TRUE
f360_out -> f357_out :|: TRUE
f357_in -> f359_in :|: TRUE
f359_out -> f360_in :|: TRUE
f385_in -> f362_in :|: TRUE
f362_out -> f385_out :|: TRUE
f53_in -> f337_in :|: TRUE
f53_in -> f336_in :|: TRUE
f337_out -> f53_out :|: TRUE
f336_out -> f53_out :|: TRUE
f359_in -> f44_in :|: TRUE
f44_out -> f359_out :|: TRUE
f386_out -> f365_out :|: TRUE
f385_out -> f365_out :|: TRUE
f365_in -> f386_in :|: TRUE
f365_in -> f385_in :|: TRUE
f4_out(T2) -> f1_out(T2) :|: TRUE
f1_in(x) -> f4_in(x) :|: TRUE
f4_in(x1) -> f6_in(x1) :|: TRUE
f7_out(x2) -> f4_out(x2) :|: TRUE
f6_out(x3) -> f4_out(x3) :|: TRUE
f4_in(x4) -> f7_in(x4) :|: TRUE
f7_in(x5) -> f18_in(x5) :|: TRUE
f17_out(x6) -> f7_out(x6) :|: TRUE
f18_out(x7) -> f7_out(x7) :|: TRUE
f7_in(x8) -> f17_in(x8) :|: TRUE
f40_out(T19) -> f18_out(T19) :|: TRUE
f18_in(x9) -> f40_in(x9) :|: TRUE
f41_out -> f18_out(x10) :|: TRUE
f18_in(x11) -> f41_in :|: TRUE
f40_in(x12) -> f44_in :|: TRUE
f44_out -> f45_in(x13) :|: TRUE
f45_out(x14) -> f40_out(x14) :|: TRUE
f387_out -> f388_in(x15) :|: TRUE
f388_out(x16) -> f45_out(x16) :|: TRUE
f45_in(x17) -> f387_in :|: TRUE
f44_out -> f387_out :|: TRUE
f387_in -> f44_in :|: TRUE
Start term: f1_in(T2)

----------------------------------------

(72) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f337_in -> f357_in :|: TRUE
f44_in -> f49_in :|: TRUE
f49_in -> f53_in :|: TRUE
f357_in -> f359_in :|: TRUE
f53_in -> f337_in :|: TRUE
f359_in -> f44_in :|: TRUE


----------------------------------------

(73)
Obligation:
Rules:
f337_in -> f357_in :|: TRUE
f44_in -> f49_in :|: TRUE
f49_in -> f53_in :|: TRUE
f357_in -> f359_in :|: TRUE
f53_in -> f337_in :|: TRUE
f359_in -> f44_in :|: TRUE

----------------------------------------

(74) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(75)
Obligation:
Rules:
f44_in -> f44_in :|: TRUE

----------------------------------------

(76) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(77)
Obligation:
Rules:
f44_in -> f44_in :|: TRUE

----------------------------------------

(78) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f44_in -> f44_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(79)
Obligation:

Termination digraph:
Nodes:
(1) f44_in -> f44_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(80) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f44_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(81)
Obligation:
Rules:
f44_in -> f44_in :|: TRUE

----------------------------------------

(82) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1)
----------------------------------------

(83)
NO

----------------------------------------

(84) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(front (void) ([]))",
                null
            ],
            [
                "(front (tree X (void) (void)) (. X ([])))",
                null
            ],
            [
                "(front (tree X1 L R) Xs)",
                "(',' (front L Ls) (',' (front R Rs) (app Ls Rs Xs)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "590": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 14,
                        "term": "(app (. T235 ([])) T234 T214)"
                    },
                    {
                        "clause": 4,
                        "scope": 14,
                        "term": "(app (. T235 ([])) T234 T214)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T236 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T236 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "470": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app (. T144 ([])) T143 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "471": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 10,
                        "term": "(app (. T144 ([])) T143 (. T117 ([])))"
                    },
                    {
                        "clause": 4,
                        "scope": 10,
                        "term": "(app (. T144 ([])) T143 (. T117 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "472": {
                "goal": [{
                    "clause": 4,
                    "scope": 10,
                    "term": "(app (. T144 ([])) T143 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "473": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T151 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "474": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "475": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T163 X179) (',' (front T164 X180) (app X179 X180 X181))) (',' (front T165 X129) (app X181 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X129",
                        "X181",
                        "X179",
                        "X180"
                    ],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T163 X179)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X179"],
                    "exprvars": []
                }
            },
            "510": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "511": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "512": {
                "goal": [{
                    "clause": 1,
                    "scope": 12,
                    "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "513": {
                "goal": [{
                    "clause": 2,
                    "scope": 12,
                    "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "636": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T246 T245)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T236 (. T243 T245))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T243",
                        "T245"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "637": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "517": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T232 X216) (app (. T233 ([])) X216 T214))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "638": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 15,
                        "term": "(app ([]) T246 T245)"
                    },
                    {
                        "clause": 4,
                        "scope": 15,
                        "term": "(app ([]) T246 T245)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(front T236 (. T243 T245))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T243",
                        "T245"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "518": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "639": {
                "goal": [{
                    "clause": 3,
                    "scope": 15,
                    "term": "(app ([]) T246 T245)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T236 (. T243 T245))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T243",
                        "T245"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T167 X180) (app T166 X180 X181)) (',' (front T168 X129) (app X181 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X129",
                        "X181",
                        "X180"
                    ],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T167 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T170 T169 X181) (',' (front T171 X129) (app X181 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X129",
                        "X181"
                    ],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T170 T169 X181)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X181"],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T175 X129) (app T174 X129 (. T117 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "486": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T175 X129)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "640": {
                "goal": [{
                    "clause": 4,
                    "scope": 15,
                    "term": "(app ([]) T246 T245)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T236 (. T243 T245))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T243",
                        "T245"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "487": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T179 T178 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "641": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "488": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 11,
                        "term": "(app T179 T178 (. T117 ([])))"
                    },
                    {
                        "clause": 4,
                        "scope": 11,
                        "term": "(app T179 T178 (. T117 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "521": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T232 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "642": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "489": {
                "goal": [{
                    "clause": 3,
                    "scope": 11,
                    "term": "(app T179 T178 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "522": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app (. T235 ([])) T234 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T236 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T236 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "643": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "644": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "403": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app T33 T32 X36)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(app T33 T32 X36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "645": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T263 X275) (',' (front T264 X276) (app X275 X276 X277))) (',' (front T265 X216) (app X277 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216",
                        "X277",
                        "X275",
                        "X276"
                    ],
                    "exprvars": []
                }
            },
            "404": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(app T33 T32 X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "646": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "405": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(app T33 T32 X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "647": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T263 X275)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X275"],
                    "exprvars": []
                }
            },
            "406": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "648": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T267 X276) (app T266 X276 X277)) (',' (front T268 X216) (app X277 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T269 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T269 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216",
                        "X277",
                        "X276"
                    ],
                    "exprvars": []
                }
            },
            "407": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "649": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T267 X276)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X276"],
                    "exprvars": []
                }
            },
            "408": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "409": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T50 T51 X58)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X58"],
                    "exprvars": []
                }
            },
            "27": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 ([]))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "28": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(front T1 T2)",
                        "(front (void) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "29": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(front T1 ([]))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "490": {
                "goal": [{
                    "clause": 4,
                    "scope": 11,
                    "term": "(app T179 T178 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "491": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "492": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "493": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "494": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T203 T204 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "495": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "496": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "650": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T271 T270 X277) (',' (front T272 X216) (app X277 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T273 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T273 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216",
                        "X277"
                    ],
                    "exprvars": []
                }
            },
            "497": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "651": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T271 T270 X277)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X277"],
                    "exprvars": []
                }
            },
            "410": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "498": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 12,
                        "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                    },
                    {
                        "clause": 1,
                        "scope": 12,
                        "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                    },
                    {
                        "clause": 2,
                        "scope": 12,
                        "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "652": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T277 X216) (app T276 X216 T214))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T278 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T278 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "411": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(app ([]) T13 ([]))"
                    },
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(app ([]) T13 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "499": {
                "goal": [{
                    "clause": 0,
                    "scope": 12,
                    "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "653": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T277 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "412": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(app ([]) T13 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "654": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T282 T281 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T283 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T283 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "413": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(app ([]) T13 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "414": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "415": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "417": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "418": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "419": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "30": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(front T1 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "33": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "34": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "35": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "36": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "37": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (front T10 X11) (',' (front T11 X12) (app X11 X12 ([]))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "38": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T12 X12) (app ([]) X12 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "39": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "420": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T66 X12) (app (. T67 ([])) X12 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "421": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "422": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T66 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "423": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app (. T69 ([])) T68 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "424": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(app (. T69 ([])) T68 ([]))"
                    },
                    {
                        "clause": 4,
                        "scope": 6,
                        "term": "(app (. T69 ([])) T68 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "425": {
                "goal": [{
                    "clause": 4,
                    "scope": 6,
                    "term": "(app (. T69 ([])) T68 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "426": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "427": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T81 X100) (',' (front T82 X101) (app X100 X101 X102))) (',' (front T83 X12) (app X102 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X12",
                        "X102",
                        "X100",
                        "X101"
                    ],
                    "exprvars": []
                }
            },
            "428": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "429": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T81 X100)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X100"],
                    "exprvars": []
                }
            },
            "46": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T12 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T13 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "48": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(front T12 X12)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(front T12 X12)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(front T12 X12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "431": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (front T85 X101) (app T84 X101 X102)) (',' (front T86 X12) (app X102 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X12",
                        "X102",
                        "X101"
                    ],
                    "exprvars": []
                }
            },
            "433": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T85 X101)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X101"],
                    "exprvars": []
                }
            },
            "434": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T88 T87 X102) (',' (front T89 X12) (app X102 X12 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X12",
                        "X102"
                    ],
                    "exprvars": []
                }
            },
            "435": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T88 T87 X102)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X102"],
                    "exprvars": []
                }
            },
            "436": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T93 X12) (app T92 X12 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "437": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T93 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "438": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T97 T96 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "439": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(app T97 T96 ([]))"
                    },
                    {
                        "clause": 4,
                        "scope": 7,
                        "term": "(app T97 T96 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [{
                    "clause": 0,
                    "scope": 3,
                    "term": "(front T12 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "51": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(front T12 X12)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(front T12 X12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "54": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "163": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T28 X34) (',' (front T29 X35) (app X34 X35 X36)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X36",
                        "X34",
                        "X35"
                    ],
                    "exprvars": []
                }
            },
            "164": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "681": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 16,
                        "term": "(app T282 T281 T214)"
                    },
                    {
                        "clause": 4,
                        "scope": 16,
                        "term": "(app T282 T281 T214)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T283 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T283 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "440": {
                "goal": [{
                    "clause": 3,
                    "scope": 7,
                    "term": "(app T97 T96 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "682": {
                "goal": [{
                    "clause": 3,
                    "scope": 16,
                    "term": "(app T282 T281 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T283 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T283 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "441": {
                "goal": [{
                    "clause": 4,
                    "scope": 7,
                    "term": "(app T97 T96 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "683": {
                "goal": [{
                    "clause": 4,
                    "scope": 16,
                    "term": "(app T282 T281 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T283 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T283 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "684": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "685": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "686": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "445": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "687": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T303 T304 T302)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T283 (. T299 T302))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T299",
                        "T302"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "446": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(front T1 (. T109 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T109"],
                    "free": [],
                    "exprvars": []
                }
            },
            "688": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "447": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(front T1 T2)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T2)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T2)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "689": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(app T303 T304 T302)"
                    },
                    {
                        "clause": 4,
                        "scope": 17,
                        "term": "(app T303 T304 T302)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(front T283 (. T299 T302))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T299",
                        "T302"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "448": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(front T1 (. T109 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T109"],
                    "free": [],
                    "exprvars": []
                }
            },
            "449": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "170": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T28 X34)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X34"],
                    "exprvars": []
                }
            },
            "171": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T31 X35) (app T30 X35 X36))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X36",
                        "X35"
                    ],
                    "exprvars": []
                }
            },
            "690": {
                "goal": [{
                    "clause": 3,
                    "scope": 17,
                    "term": "(app T303 T304 T302)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T283 (. T299 T302))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T299",
                        "T302"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "691": {
                "goal": [{
                    "clause": 4,
                    "scope": 17,
                    "term": "(app T303 T304 T302)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(front T283 (. T299 T302))",
                        "(front (tree X119 (void) (void)) (. X119 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T299",
                        "T302"
                    ],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "450": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "692": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "693": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "210": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T31 X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "452": {
                "goal": [{
                    "clause": 0,
                    "scope": 8,
                    "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "694": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "212": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T33 T32 X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T120 X129) (app ([]) X129 (. T117 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T120 X129)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "457": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T121 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(app ([]) T121 (. T117 ([])))"
                    },
                    {
                        "clause": 4,
                        "scope": 9,
                        "term": "(app ([]) T121 (. T117 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [{
                    "clause": 3,
                    "scope": 9,
                    "term": "(app ([]) T121 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "70": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(front T12 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "614": {
                "goal": [{
                    "clause": 4,
                    "scope": 14,
                    "term": "(app (. T235 ([])) T234 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T236 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T236 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(front T12 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "739": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T324 T325 T323)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T323"],
                    "free": [],
                    "exprvars": []
                }
            },
            "78": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "79": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "460": {
                "goal": [{
                    "clause": 4,
                    "scope": 9,
                    "term": "(app ([]) T121 (. T117 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [],
                    "exprvars": []
                }
            },
            "461": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "462": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "463": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "464": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "465": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "740": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": 2,
                    "scope": 8,
                    "term": "(',' (front T118 X128) (',' (front T119 X129) (app X128 X129 (. T117 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": [
                        "X128",
                        "X129"
                    ],
                    "exprvars": []
                }
            },
            "741": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 18,
                        "term": "(app T324 T325 T323)"
                    },
                    {
                        "clause": 4,
                        "scope": 18,
                        "term": "(app T324 T325 T323)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T323"],
                    "free": [],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T141 X129) (app (. T142 ([])) X129 (. T117 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T117"],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 12,
                        "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                    },
                    {
                        "clause": 2,
                        "scope": 12,
                        "term": "(',' (front T215 X215) (',' (front T216 X216) (app X215 X216 T214)))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X215",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "742": {
                "goal": [{
                    "clause": 3,
                    "scope": 18,
                    "term": "(app T324 T325 T323)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T323"],
                    "free": [],
                    "exprvars": []
                }
            },
            "468": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "501": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (front T217 X216) (app ([]) X216 T214))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T1 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T1 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": [
                        "X119",
                        "X216"
                    ],
                    "exprvars": []
                }
            },
            "743": {
                "goal": [{
                    "clause": 4,
                    "scope": 18,
                    "term": "(app T324 T325 T323)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T323"],
                    "free": [],
                    "exprvars": []
                }
            },
            "469": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T141 X129)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X129"],
                    "exprvars": []
                }
            },
            "502": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "744": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "80": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "503": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(front T217 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "745": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "504": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T218 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T219 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T219 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "746": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "505": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 13,
                        "term": "(app ([]) T218 T214)"
                    },
                    {
                        "clause": 4,
                        "scope": 13,
                        "term": "(app ([]) T218 T214)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T219 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T219 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "747": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T345 T346 T344)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T344"],
                    "free": [],
                    "exprvars": []
                }
            },
            "506": {
                "goal": [{
                    "clause": 3,
                    "scope": 13,
                    "term": "(app ([]) T218 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T219 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T219 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "748": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "507": {
                "goal": [{
                    "clause": 4,
                    "scope": 13,
                    "term": "(app ([]) T218 T214)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(front T219 T214)",
                            "(front (void) ([]))"
                        ],
                        [
                            "(front T219 T214)",
                            "(front (tree X119 (void) (void)) (. X119 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T214"],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "508": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "509": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 10,
                "label": "CASE"
            },
            {
                "from": 10,
                "to": 27,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT1 -> void,\nT2 -> []"
            },
            {
                "from": 10,
                "to": 28,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 27,
                "to": 29,
                "label": "SUCCESS"
            },
            {
                "from": 28,
                "to": 446,
                "label": "EVAL with clause\nfront(tree(X119, void, void), .(X119, [])).\nand substitutionX119 -> T109,\nT1 -> tree(T109, void, void),\nT2 -> .(T109, [])"
            },
            {
                "from": 28,
                "to": 447,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 29,
                "to": 30,
                "label": "BACKTRACK\nfor clause: front(tree(X, void, void), .(X, []))because of non-unification"
            },
            {
                "from": 30,
                "to": 33,
                "label": "EVAL with clause\nfront(tree(X7, X8, X9), X10) :- ','(front(X8, X11), ','(front(X9, X12), app(X11, X12, X10))).\nand substitutionX7 -> T7,\nX8 -> T10,\nX9 -> T11,\nT1 -> tree(T7, T10, T11),\nX10 -> [],\nT8 -> T10,\nT9 -> T11"
            },
            {
                "from": 30,
                "to": 34,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 33,
                "to": 35,
                "label": "CASE"
            },
            {
                "from": 35,
                "to": 36,
                "label": "PARALLEL"
            },
            {
                "from": 35,
                "to": 37,
                "label": "PARALLEL"
            },
            {
                "from": 36,
                "to": 38,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT10 -> void,\nX11 -> [],\nT11 -> T12"
            },
            {
                "from": 36,
                "to": 39,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 37,
                "to": 418,
                "label": "PARALLEL"
            },
            {
                "from": 37,
                "to": 419,
                "label": "PARALLEL"
            },
            {
                "from": 38,
                "to": 46,
                "label": "SPLIT 1"
            },
            {
                "from": 38,
                "to": 47,
                "label": "SPLIT 2\nreplacements:X12 -> T13"
            },
            {
                "from": 46,
                "to": 48,
                "label": "CASE"
            },
            {
                "from": 47,
                "to": 411,
                "label": "CASE"
            },
            {
                "from": 48,
                "to": 50,
                "label": "PARALLEL"
            },
            {
                "from": 48,
                "to": 51,
                "label": "PARALLEL"
            },
            {
                "from": 50,
                "to": 54,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT12 -> void,\nX12 -> []"
            },
            {
                "from": 50,
                "to": 56,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 51,
                "to": 70,
                "label": "PARALLEL"
            },
            {
                "from": 51,
                "to": 71,
                "label": "PARALLEL"
            },
            {
                "from": 54,
                "to": 58,
                "label": "SUCCESS"
            },
            {
                "from": 70,
                "to": 78,
                "label": "EVAL with clause\nfront(tree(X17, void, void), .(X17, [])).\nand substitutionX17 -> T18,\nT12 -> tree(T18, void, void),\nX12 -> .(T18, [])"
            },
            {
                "from": 70,
                "to": 79,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 71,
                "to": 163,
                "label": "EVAL with clause\nfront(tree(X30, X31, X32), X33) :- ','(front(X31, X34), ','(front(X32, X35), app(X34, X35, X33))).\nand substitutionX30 -> T25,\nX31 -> T28,\nX32 -> T29,\nT12 -> tree(T25, T28, T29),\nX12 -> X36,\nX33 -> X36,\nT26 -> T28,\nT27 -> T29"
            },
            {
                "from": 71,
                "to": 164,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 78,
                "to": 80,
                "label": "SUCCESS"
            },
            {
                "from": 163,
                "to": 170,
                "label": "SPLIT 1"
            },
            {
                "from": 163,
                "to": 171,
                "label": "SPLIT 2\nreplacements:X34 -> T30,\nT29 -> T31"
            },
            {
                "from": 170,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T28\nX12 -> X34"
            },
            {
                "from": 171,
                "to": 210,
                "label": "SPLIT 1"
            },
            {
                "from": 171,
                "to": 212,
                "label": "SPLIT 2\nreplacements:X35 -> T32,\nT30 -> T33"
            },
            {
                "from": 210,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T31\nX12 -> X35"
            },
            {
                "from": 212,
                "to": 403,
                "label": "CASE"
            },
            {
                "from": 403,
                "to": 404,
                "label": "PARALLEL"
            },
            {
                "from": 403,
                "to": 405,
                "label": "PARALLEL"
            },
            {
                "from": 404,
                "to": 406,
                "label": "EVAL with clause\napp([], X43, X43).\nand substitutionT33 -> [],\nT32 -> T40,\nX43 -> T40,\nX36 -> T40"
            },
            {
                "from": 404,
                "to": 407,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 405,
                "to": 409,
                "label": "EVAL with clause\napp(.(X54, X55), X56, .(X54, X57)) :- app(X55, X56, X57).\nand substitutionX54 -> T47,\nX55 -> T50,\nT33 -> .(T47, T50),\nT32 -> T51,\nX56 -> T51,\nX57 -> X58,\nX36 -> .(T47, X58),\nT48 -> T50,\nT49 -> T51"
            },
            {
                "from": 405,
                "to": 410,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 406,
                "to": 408,
                "label": "SUCCESS"
            },
            {
                "from": 409,
                "to": 212,
                "label": "INSTANCE with matching:\nT33 -> T50\nT32 -> T51\nX36 -> X58"
            },
            {
                "from": 411,
                "to": 412,
                "label": "PARALLEL"
            },
            {
                "from": 411,
                "to": 413,
                "label": "PARALLEL"
            },
            {
                "from": 412,
                "to": 414,
                "label": "EVAL with clause\napp([], X67, X67).\nand substitutionT13 -> [],\nX67 -> [],\nT60 -> []"
            },
            {
                "from": 412,
                "to": 415,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 413,
                "to": 417,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 414,
                "to": 416,
                "label": "SUCCESS"
            },
            {
                "from": 418,
                "to": 420,
                "label": "EVAL with clause\nfront(tree(X76, void, void), .(X76, [])).\nand substitutionX76 -> T67,\nT10 -> tree(T67, void, void),\nX11 -> .(T67, []),\nT11 -> T66,\nT65 -> T67"
            },
            {
                "from": 418,
                "to": 421,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 419,
                "to": 427,
                "label": "EVAL with clause\nfront(tree(X96, X97, X98), X99) :- ','(front(X97, X100), ','(front(X98, X101), app(X100, X101, X99))).\nand substitutionX96 -> T78,\nX97 -> T81,\nX98 -> T82,\nT10 -> tree(T78, T81, T82),\nX11 -> X102,\nX99 -> X102,\nT79 -> T81,\nT80 -> T82,\nT11 -> T83"
            },
            {
                "from": 419,
                "to": 428,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 420,
                "to": 422,
                "label": "SPLIT 1"
            },
            {
                "from": 420,
                "to": 423,
                "label": "SPLIT 2\nreplacements:X12 -> T68,\nT67 -> T69"
            },
            {
                "from": 422,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T66"
            },
            {
                "from": 423,
                "to": 424,
                "label": "CASE"
            },
            {
                "from": 424,
                "to": 425,
                "label": "BACKTRACK\nfor clause: app([], X, X)because of non-unification"
            },
            {
                "from": 425,
                "to": 426,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 427,
                "to": 429,
                "label": "SPLIT 1"
            },
            {
                "from": 427,
                "to": 431,
                "label": "SPLIT 2\nreplacements:X100 -> T84,\nT82 -> T85,\nT83 -> T86"
            },
            {
                "from": 429,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T81\nX12 -> X100"
            },
            {
                "from": 431,
                "to": 433,
                "label": "SPLIT 1"
            },
            {
                "from": 431,
                "to": 434,
                "label": "SPLIT 2\nreplacements:X101 -> T87,\nT84 -> T88,\nT86 -> T89"
            },
            {
                "from": 433,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T85\nX12 -> X101"
            },
            {
                "from": 434,
                "to": 435,
                "label": "SPLIT 1"
            },
            {
                "from": 434,
                "to": 436,
                "label": "SPLIT 2\nreplacements:X102 -> T92,\nT89 -> T93"
            },
            {
                "from": 435,
                "to": 212,
                "label": "INSTANCE with matching:\nT33 -> T88\nT32 -> T87\nX36 -> X102"
            },
            {
                "from": 436,
                "to": 437,
                "label": "SPLIT 1"
            },
            {
                "from": 436,
                "to": 438,
                "label": "SPLIT 2\nreplacements:X12 -> T96,\nT92 -> T97"
            },
            {
                "from": 437,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T93"
            },
            {
                "from": 438,
                "to": 439,
                "label": "CASE"
            },
            {
                "from": 439,
                "to": 440,
                "label": "PARALLEL"
            },
            {
                "from": 439,
                "to": 441,
                "label": "PARALLEL"
            },
            {
                "from": 440,
                "to": 442,
                "label": "EVAL with clause\napp([], X113, X113).\nand substitutionT97 -> [],\nT96 -> [],\nX113 -> [],\nT104 -> []"
            },
            {
                "from": 440,
                "to": 443,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 441,
                "to": 445,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 442,
                "to": 444,
                "label": "SUCCESS"
            },
            {
                "from": 446,
                "to": 448,
                "label": "SUCCESS"
            },
            {
                "from": 447,
                "to": 496,
                "label": "EVAL with clause\nfront(tree(X211, X212, X213), X214) :- ','(front(X212, X215), ','(front(X213, X216), app(X215, X216, X214))).\nand substitutionX211 -> T211,\nX212 -> T215,\nX213 -> T216,\nT1 -> tree(T211, T215, T216),\nT2 -> T214,\nX214 -> T214,\nT212 -> T215,\nT213 -> T216"
            },
            {
                "from": 447,
                "to": 497,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 448,
                "to": 449,
                "label": "EVAL with clause\nfront(tree(X124, X125, X126), X127) :- ','(front(X125, X128), ','(front(X126, X129), app(X128, X129, X127))).\nand substitutionX124 -> T114,\nX125 -> T118,\nX126 -> T119,\nT1 -> tree(T114, T118, T119),\nT109 -> T117,\nX127 -> .(T117, []),\nT115 -> T118,\nT116 -> T119"
            },
            {
                "from": 448,
                "to": 450,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 449,
                "to": 451,
                "label": "CASE"
            },
            {
                "from": 451,
                "to": 452,
                "label": "PARALLEL"
            },
            {
                "from": 451,
                "to": 453,
                "label": "PARALLEL"
            },
            {
                "from": 452,
                "to": 454,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT118 -> void,\nX128 -> [],\nT119 -> T120"
            },
            {
                "from": 452,
                "to": 455,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 453,
                "to": 465,
                "label": "PARALLEL"
            },
            {
                "from": 453,
                "to": 466,
                "label": "PARALLEL"
            },
            {
                "from": 454,
                "to": 456,
                "label": "SPLIT 1"
            },
            {
                "from": 454,
                "to": 457,
                "label": "SPLIT 2\nreplacements:X129 -> T121"
            },
            {
                "from": 456,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T120\nX12 -> X129"
            },
            {
                "from": 457,
                "to": 458,
                "label": "CASE"
            },
            {
                "from": 458,
                "to": 459,
                "label": "PARALLEL"
            },
            {
                "from": 458,
                "to": 460,
                "label": "PARALLEL"
            },
            {
                "from": 459,
                "to": 461,
                "label": "EVAL with clause\napp([], X136, X136).\nand substitutionT121 -> .(T135, []),\nX136 -> .(T135, []),\nT117 -> T135,\nT134 -> .(T135, [])"
            },
            {
                "from": 459,
                "to": 462,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 460,
                "to": 464,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 461,
                "to": 463,
                "label": "SUCCESS"
            },
            {
                "from": 465,
                "to": 467,
                "label": "EVAL with clause\nfront(tree(X145, void, void), .(X145, [])).\nand substitutionX145 -> T142,\nT118 -> tree(T142, void, void),\nX128 -> .(T142, []),\nT119 -> T141,\nT140 -> T142"
            },
            {
                "from": 465,
                "to": 468,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 466,
                "to": 475,
                "label": "EVAL with clause\nfront(tree(X175, X176, X177), X178) :- ','(front(X176, X179), ','(front(X177, X180), app(X179, X180, X178))).\nand substitutionX175 -> T160,\nX176 -> T163,\nX177 -> T164,\nT118 -> tree(T160, T163, T164),\nX128 -> X181,\nX178 -> X181,\nT161 -> T163,\nT162 -> T164,\nT119 -> T165"
            },
            {
                "from": 466,
                "to": 476,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 467,
                "to": 469,
                "label": "SPLIT 1"
            },
            {
                "from": 467,
                "to": 470,
                "label": "SPLIT 2\nreplacements:X129 -> T143,\nT142 -> T144"
            },
            {
                "from": 469,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T141\nX12 -> X129"
            },
            {
                "from": 470,
                "to": 471,
                "label": "CASE"
            },
            {
                "from": 471,
                "to": 472,
                "label": "BACKTRACK\nfor clause: app([], X, X)because of non-unification"
            },
            {
                "from": 472,
                "to": 473,
                "label": "EVAL with clause\napp(.(X157, X158), X159, .(X157, X160)) :- app(X158, X159, X160).\nand substitutionT144 -> T149,\nX157 -> T149,\nX158 -> [],\nT143 -> T151,\nX159 -> T151,\nT117 -> T149,\nX160 -> [],\nT150 -> T151"
            },
            {
                "from": 472,
                "to": 474,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 473,
                "to": 47,
                "label": "INSTANCE with matching:\nT13 -> T151"
            },
            {
                "from": 475,
                "to": 477,
                "label": "SPLIT 1"
            },
            {
                "from": 475,
                "to": 480,
                "label": "SPLIT 2\nreplacements:X179 -> T166,\nT164 -> T167,\nT165 -> T168"
            },
            {
                "from": 477,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T163\nX12 -> X179"
            },
            {
                "from": 480,
                "to": 481,
                "label": "SPLIT 1"
            },
            {
                "from": 480,
                "to": 482,
                "label": "SPLIT 2\nreplacements:X180 -> T169,\nT166 -> T170,\nT168 -> T171"
            },
            {
                "from": 481,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T167\nX12 -> X180"
            },
            {
                "from": 482,
                "to": 484,
                "label": "SPLIT 1"
            },
            {
                "from": 482,
                "to": 485,
                "label": "SPLIT 2\nreplacements:X181 -> T174,\nT171 -> T175"
            },
            {
                "from": 484,
                "to": 212,
                "label": "INSTANCE with matching:\nT33 -> T170\nT32 -> T169\nX36 -> X181"
            },
            {
                "from": 485,
                "to": 486,
                "label": "SPLIT 1"
            },
            {
                "from": 485,
                "to": 487,
                "label": "SPLIT 2\nreplacements:X129 -> T178,\nT174 -> T179"
            },
            {
                "from": 486,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T175\nX12 -> X129"
            },
            {
                "from": 487,
                "to": 488,
                "label": "CASE"
            },
            {
                "from": 488,
                "to": 489,
                "label": "PARALLEL"
            },
            {
                "from": 488,
                "to": 490,
                "label": "PARALLEL"
            },
            {
                "from": 489,
                "to": 491,
                "label": "EVAL with clause\napp([], X192, X192).\nand substitutionT179 -> [],\nT178 -> .(T193, []),\nX192 -> .(T193, []),\nT117 -> T193,\nT192 -> .(T193, [])"
            },
            {
                "from": 489,
                "to": 492,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 490,
                "to": 494,
                "label": "EVAL with clause\napp(.(X201, X202), X203, .(X201, X204)) :- app(X202, X203, X204).\nand substitutionX201 -> T200,\nX202 -> T203,\nT179 -> .(T200, T203),\nT178 -> T204,\nX203 -> T204,\nT117 -> T200,\nX204 -> [],\nT201 -> T203,\nT202 -> T204"
            },
            {
                "from": 490,
                "to": 495,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 491,
                "to": 493,
                "label": "SUCCESS"
            },
            {
                "from": 494,
                "to": 438,
                "label": "INSTANCE with matching:\nT97 -> T203\nT96 -> T204"
            },
            {
                "from": 496,
                "to": 498,
                "label": "CASE"
            },
            {
                "from": 498,
                "to": 499,
                "label": "PARALLEL"
            },
            {
                "from": 498,
                "to": 500,
                "label": "PARALLEL"
            },
            {
                "from": 499,
                "to": 501,
                "label": "EVAL with clause\nfront(void, []).\nand substitutionT215 -> void,\nX215 -> [],\nT216 -> T217"
            },
            {
                "from": 499,
                "to": 502,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 500,
                "to": 512,
                "label": "PARALLEL"
            },
            {
                "from": 500,
                "to": 513,
                "label": "PARALLEL"
            },
            {
                "from": 501,
                "to": 503,
                "label": "SPLIT 1"
            },
            {
                "from": 501,
                "to": 504,
                "label": "SPLIT 2\nreplacements:X216 -> T218,\nT1 -> T219"
            },
            {
                "from": 503,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T217\nX12 -> X216"
            },
            {
                "from": 504,
                "to": 505,
                "label": "CASE"
            },
            {
                "from": 505,
                "to": 506,
                "label": "PARALLEL"
            },
            {
                "from": 505,
                "to": 507,
                "label": "PARALLEL"
            },
            {
                "from": 506,
                "to": 508,
                "label": "EVAL with clause\napp([], X223, X223).\nand substitutionT218 -> T226,\nX223 -> T226,\nT214 -> T226"
            },
            {
                "from": 506,
                "to": 509,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 507,
                "to": 511,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 508,
                "to": 510,
                "label": "SUCCESS"
            },
            {
                "from": 512,
                "to": 517,
                "label": "EVAL with clause\nfront(tree(X232, void, void), .(X232, [])).\nand substitutionX232 -> T233,\nT215 -> tree(T233, void, void),\nX215 -> .(T233, []),\nT216 -> T232,\nT231 -> T233"
            },
            {
                "from": 512,
                "to": 518,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 513,
                "to": 645,
                "label": "EVAL with clause\nfront(tree(X271, X272, X273), X274) :- ','(front(X272, X275), ','(front(X273, X276), app(X275, X276, X274))).\nand substitutionX271 -> T260,\nX272 -> T263,\nX273 -> T264,\nT215 -> tree(T260, T263, T264),\nX215 -> X277,\nX274 -> X277,\nT261 -> T263,\nT262 -> T264,\nT216 -> T265"
            },
            {
                "from": 513,
                "to": 646,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 517,
                "to": 521,
                "label": "SPLIT 1"
            },
            {
                "from": 517,
                "to": 522,
                "label": "SPLIT 2\nreplacements:X216 -> T234,\nT233 -> T235,\nT1 -> T236"
            },
            {
                "from": 521,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T232\nX12 -> X216"
            },
            {
                "from": 522,
                "to": 590,
                "label": "CASE"
            },
            {
                "from": 590,
                "to": 614,
                "label": "BACKTRACK\nfor clause: app([], X, X)because of non-unification"
            },
            {
                "from": 614,
                "to": 636,
                "label": "EVAL with clause\napp(.(X244, X245), X246, .(X244, X247)) :- app(X245, X246, X247).\nand substitutionT235 -> T243,\nX244 -> T243,\nX245 -> [],\nT234 -> T246,\nX246 -> T246,\nX247 -> T245,\nT214 -> .(T243, T245),\nT244 -> T246"
            },
            {
                "from": 614,
                "to": 637,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 636,
                "to": 638,
                "label": "CASE"
            },
            {
                "from": 638,
                "to": 639,
                "label": "PARALLEL"
            },
            {
                "from": 638,
                "to": 640,
                "label": "PARALLEL"
            },
            {
                "from": 639,
                "to": 641,
                "label": "EVAL with clause\napp([], X254, X254).\nand substitutionT246 -> T253,\nX254 -> T253,\nT245 -> T253"
            },
            {
                "from": 639,
                "to": 642,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 640,
                "to": 644,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 641,
                "to": 643,
                "label": "SUCCESS"
            },
            {
                "from": 645,
                "to": 647,
                "label": "SPLIT 1"
            },
            {
                "from": 645,
                "to": 648,
                "label": "SPLIT 2\nreplacements:X275 -> T266,\nT264 -> T267,\nT265 -> T268,\nT1 -> T269"
            },
            {
                "from": 647,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T263\nX12 -> X275"
            },
            {
                "from": 648,
                "to": 649,
                "label": "SPLIT 1"
            },
            {
                "from": 648,
                "to": 650,
                "label": "SPLIT 2\nreplacements:X276 -> T270,\nT266 -> T271,\nT268 -> T272,\nT269 -> T273"
            },
            {
                "from": 649,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T267\nX12 -> X276"
            },
            {
                "from": 650,
                "to": 651,
                "label": "SPLIT 1"
            },
            {
                "from": 650,
                "to": 652,
                "label": "SPLIT 2\nreplacements:X277 -> T276,\nT272 -> T277,\nT273 -> T278"
            },
            {
                "from": 651,
                "to": 212,
                "label": "INSTANCE with matching:\nT33 -> T271\nT32 -> T270\nX36 -> X277"
            },
            {
                "from": 652,
                "to": 653,
                "label": "SPLIT 1"
            },
            {
                "from": 652,
                "to": 654,
                "label": "SPLIT 2\nreplacements:X216 -> T281,\nT276 -> T282,\nT278 -> T283"
            },
            {
                "from": 653,
                "to": 46,
                "label": "INSTANCE with matching:\nT12 -> T277\nX12 -> X216"
            },
            {
                "from": 654,
                "to": 681,
                "label": "CASE"
            },
            {
                "from": 681,
                "to": 682,
                "label": "PARALLEL"
            },
            {
                "from": 681,
                "to": 683,
                "label": "PARALLEL"
            },
            {
                "from": 682,
                "to": 684,
                "label": "EVAL with clause\napp([], X288, X288).\nand substitutionT282 -> [],\nT281 -> T290,\nX288 -> T290,\nT214 -> T290"
            },
            {
                "from": 682,
                "to": 685,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 683,
                "to": 687,
                "label": "EVAL with clause\napp(.(X297, X298), X299, .(X297, X300)) :- app(X298, X299, X300).\nand substitutionX297 -> T299,\nX298 -> T303,\nT282 -> .(T299, T303),\nT281 -> T304,\nX299 -> T304,\nX300 -> T302,\nT214 -> .(T299, T302),\nT300 -> T303,\nT301 -> T304"
            },
            {
                "from": 683,
                "to": 688,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 684,
                "to": 686,
                "label": "SUCCESS"
            },
            {
                "from": 687,
                "to": 689,
                "label": "CASE"
            },
            {
                "from": 689,
                "to": 690,
                "label": "PARALLEL"
            },
            {
                "from": 689,
                "to": 691,
                "label": "PARALLEL"
            },
            {
                "from": 690,
                "to": 692,
                "label": "EVAL with clause\napp([], X307, X307).\nand substitutionT303 -> [],\nT304 -> T311,\nX307 -> T311,\nT302 -> T311"
            },
            {
                "from": 690,
                "to": 693,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 691,
                "to": 739,
                "label": "EVAL with clause\napp(.(X316, X317), X318, .(X316, X319)) :- app(X317, X318, X319).\nand substitutionX316 -> T320,\nX317 -> T324,\nT303 -> .(T320, T324),\nT304 -> T325,\nX318 -> T325,\nX319 -> T323,\nT302 -> .(T320, T323),\nT321 -> T324,\nT322 -> T325"
            },
            {
                "from": 691,
                "to": 740,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 692,
                "to": 694,
                "label": "SUCCESS"
            },
            {
                "from": 739,
                "to": 741,
                "label": "CASE"
            },
            {
                "from": 741,
                "to": 742,
                "label": "PARALLEL"
            },
            {
                "from": 741,
                "to": 743,
                "label": "PARALLEL"
            },
            {
                "from": 742,
                "to": 744,
                "label": "EVAL with clause\napp([], X326, X326).\nand substitutionT324 -> [],\nT325 -> T332,\nX326 -> T332,\nT323 -> T332"
            },
            {
                "from": 742,
                "to": 745,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 743,
                "to": 747,
                "label": "EVAL with clause\napp(.(X335, X336), X337, .(X335, X338)) :- app(X336, X337, X338).\nand substitutionX335 -> T341,\nX336 -> T345,\nT324 -> .(T341, T345),\nT325 -> T346,\nX337 -> T346,\nX338 -> T344,\nT323 -> .(T341, T344),\nT342 -> T345,\nT343 -> T346"
            },
            {
                "from": 743,
                "to": 748,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 744,
                "to": 746,
                "label": "SUCCESS"
            },
            {
                "from": 747,
                "to": 739,
                "label": "INSTANCE with matching:\nT324 -> T345\nT325 -> T346\nT323 -> T344"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(85)
Obligation:
Triples:

frontA(tree(X1, X2, X3), X4) :- frontA(X2, X5).
frontA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), frontA(X3, X6)).
frontA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), ','(frontcA(X3, X6), appB(X5, X6, X4))).
appB(.(X1, X2), X3, .(X1, X4)) :- appB(X2, X3, X4).
appE(.(X1, X2), X3, .(X1, X4)) :- appE(X2, X3, X4).
frontF(tree(X1, void, X2), []) :- frontA(X2, X3).
frontF(tree(X1, void, X2), []) :- ','(frontcA(X2, X3), appC(X3)).
frontF(tree(X1, tree(X2, void, void), X3), []) :- frontA(X3, X4).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- frontA(X3, X6).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), frontA(X4, X7)).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), ','(frontcA(X4, X7), appB(X6, X7, X8))).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), ','(frontcA(X4, X7), ','(appcB(X6, X7, X8), frontA(X5, X9)))).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), ','(frontcA(X4, X7), ','(appcB(X6, X7, X8), ','(frontcA(X5, X9), appD(X8, X9))))).
frontF(tree(X1, void, X2), .(X3, [])) :- frontA(X2, X4).
frontF(tree(X1, tree(X2, void, void), X3), .(X4, [])) :- frontA(X3, X5).
frontF(tree(X1, tree(X2, void, void), X3), .(X2, [])) :- ','(frontcA(X3, X4), appC(X4)).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- frontA(X3, X7).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), frontA(X4, X8)).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), appB(X7, X8, X9))).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), ','(appcB(X7, X8, X9), frontA(X5, X10)))).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), ','(appcB(X7, X8, .(X6, X9)), ','(frontcA(X5, X10), appD(X9, X10))))).
frontF(tree(X1, void, X2), X3) :- frontA(X2, X4).
frontF(tree(X1, tree(X2, void, void), X3), X4) :- frontA(X3, X5).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- frontA(X3, X7).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), frontA(X4, X8)).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), appB(X7, X8, X9))).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), ','(appcB(X7, X8, X9), frontA(X5, X10)))).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, .(X7, X8))) :- ','(frontcA(X3, X9), ','(frontcA(X4, X10), ','(appcB(X9, X10, .(X6, .(X7, X11))), ','(frontcA(X5, X12), appE(X11, X12, X8))))).

Clauses:

frontcA(void, []).
frontcA(tree(X1, void, void), .(X1, [])).
frontcA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), ','(frontcA(X3, X6), appcB(X5, X6, X4))).
appcB([], X1, X1).
appcB(.(X1, X2), X3, .(X1, X4)) :- appcB(X2, X3, X4).
appcC([]).
appcD([], []).
appcE([], X1, X1).
appcE(.(X1, X2), X3, .(X1, X4)) :- appcE(X2, X3, X4).

Afs:

frontF(x1, x2)  =  frontF(x2)


----------------------------------------

(86) UndefinedPredicateInTriplesTransformerProof (SOUND)
Deleted triples and predicates having undefined goals [DT09].
----------------------------------------

(87)
Obligation:
Triples:

frontA(tree(X1, X2, X3), X4) :- frontA(X2, X5).
frontA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), frontA(X3, X6)).
frontA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), ','(frontcA(X3, X6), appB(X5, X6, X4))).
appB(.(X1, X2), X3, .(X1, X4)) :- appB(X2, X3, X4).
appE(.(X1, X2), X3, .(X1, X4)) :- appE(X2, X3, X4).
frontF(tree(X1, void, X2), []) :- frontA(X2, X3).
frontF(tree(X1, tree(X2, void, void), X3), []) :- frontA(X3, X4).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- frontA(X3, X6).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), frontA(X4, X7)).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), ','(frontcA(X4, X7), appB(X6, X7, X8))).
frontF(tree(X1, tree(X2, X3, X4), X5), []) :- ','(frontcA(X3, X6), ','(frontcA(X4, X7), ','(appcB(X6, X7, X8), frontA(X5, X9)))).
frontF(tree(X1, void, X2), .(X3, [])) :- frontA(X2, X4).
frontF(tree(X1, tree(X2, void, void), X3), .(X4, [])) :- frontA(X3, X5).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- frontA(X3, X7).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), frontA(X4, X8)).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), appB(X7, X8, X9))).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), ','(appcB(X7, X8, X9), frontA(X5, X10)))).
frontF(tree(X1, void, X2), X3) :- frontA(X2, X4).
frontF(tree(X1, tree(X2, void, void), X3), X4) :- frontA(X3, X5).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- frontA(X3, X7).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), frontA(X4, X8)).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), appB(X7, X8, X9))).
frontF(tree(X1, tree(X2, X3, X4), X5), X6) :- ','(frontcA(X3, X7), ','(frontcA(X4, X8), ','(appcB(X7, X8, X9), frontA(X5, X10)))).
frontF(tree(X1, tree(X2, X3, X4), X5), .(X6, .(X7, X8))) :- ','(frontcA(X3, X9), ','(frontcA(X4, X10), ','(appcB(X9, X10, .(X6, .(X7, X11))), ','(frontcA(X5, X12), appE(X11, X12, X8))))).

Clauses:

frontcA(void, []).
frontcA(tree(X1, void, void), .(X1, [])).
frontcA(tree(X1, X2, X3), X4) :- ','(frontcA(X2, X5), ','(frontcA(X3, X6), appcB(X5, X6, X4))).
appcB([], X1, X1).
appcB(.(X1, X2), X3, .(X1, X4)) :- appcB(X2, X3, X4).
appcC([]).
appcD([], []).
appcE([], X1, X1).
appcE(.(X1, X2), X3, .(X1, X4)) :- appcE(X2, X3, X4).

Afs:

frontF(x1, x2)  =  frontF(x2)


----------------------------------------

(88) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

frontF_in_2: (f,b)

frontA_in_2: (f,f)

frontcA_in_2: (f,f)

appcB_in_3: (b,b,f)

appB_in_3: (b,b,f)

appE_in_3: (b,b,b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   FRONTF_IN_AG(tree(X1, void, X2), []) -> U8_AG(X1, X2, frontA_in_aa(X2, X3))
   FRONTF_IN_AG(tree(X1, void, X2), []) -> FRONTA_IN_AA(X2, X3)
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> U1_AA(X1, X2, X3, X4, frontA_in_aa(X2, X5))
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> FRONTA_IN_AA(X2, X5)
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> U2_AA(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U3_AA(X1, X2, X3, X4, frontA_in_aa(X3, X6))
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> FRONTA_IN_AA(X3, X6)
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U4_AA(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U4_AA(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U5_AA(X1, X2, X3, X4, appB_in_gga(X5, X6, X4))
   U4_AA(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> APPB_IN_GGA(X5, X6, X4)
   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> U6_GGA(X1, X2, X3, X4, appB_in_gga(X2, X3, X4))
   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), []) -> U9_AG(X1, X2, X3, frontA_in_aa(X3, X4))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), []) -> FRONTA_IN_AA(X3, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> U10_AG(X1, X2, X3, X4, X5, frontA_in_aa(X3, X6))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> FRONTA_IN_AA(X3, X6)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> U11_AG(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U12_AG(X1, X2, X3, X4, X5, frontA_in_aa(X4, X7))
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> FRONTA_IN_AA(X4, X7)
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U13_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X4, X7))
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> U14_AG(X1, X2, X3, X4, X5, appB_in_gga(X6, X7, X8))
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> APPB_IN_GGA(X6, X7, X8)
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> U15_AG(X1, X2, X3, X4, X5, appcB_in_gga(X6, X7, X8))
   U15_AG(X1, X2, X3, X4, X5, appcB_out_gga(X6, X7, X8)) -> U16_AG(X1, X2, X3, X4, X5, frontA_in_aa(X5, X9))
   U15_AG(X1, X2, X3, X4, X5, appcB_out_gga(X6, X7, X8)) -> FRONTA_IN_AA(X5, X9)
   FRONTF_IN_AG(tree(X1, void, X2), .(X3, [])) -> U17_AG(X1, X2, X3, frontA_in_aa(X2, X4))
   FRONTF_IN_AG(tree(X1, void, X2), .(X3, [])) -> FRONTA_IN_AA(X2, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), .(X4, [])) -> U18_AG(X1, X2, X3, X4, frontA_in_aa(X3, X5))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), .(X4, [])) -> FRONTA_IN_AA(X3, X5)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> U19_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X3, X7))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> FRONTA_IN_AA(X3, X7)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> U20_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X3, X7))
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U21_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X4, X8))
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> FRONTA_IN_AA(X4, X8)
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_in_aa(X4, X8))
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U23_AG(X1, X2, X3, X4, X5, X6, appB_in_gga(X7, X8, X9))
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> APPB_IN_GGA(X7, X8, X9)
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U24_AG(X1, X2, X3, X4, X5, X6, appcB_in_gga(X7, X8, X9))
   U24_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> U25_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X5, X10))
   U24_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> FRONTA_IN_AA(X5, X10)
   FRONTF_IN_AG(tree(X1, void, X2), X3) -> U26_AG(X1, X2, X3, frontA_in_aa(X2, X4))
   FRONTF_IN_AG(tree(X1, void, X2), X3) -> FRONTA_IN_AA(X2, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), X4) -> U27_AG(X1, X2, X3, X4, frontA_in_aa(X3, X5))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), X4) -> FRONTA_IN_AA(X3, X5)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> U28_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X3, X7))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> FRONTA_IN_AA(X3, X7)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> U29_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X3, X7))
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U30_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X4, X8))
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> FRONTA_IN_AA(X4, X8)
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_in_aa(X4, X8))
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U32_AG(X1, X2, X3, X4, X5, X6, appB_in_gga(X7, X8, X9))
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> APPB_IN_GGA(X7, X8, X9)
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U33_AG(X1, X2, X3, X4, X5, X6, appcB_in_gga(X7, X8, X9))
   U33_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> U34_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X5, X10))
   U33_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> FRONTA_IN_AA(X5, X10)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, .(X7, X8))) -> U35_AG(X1, X2, X3, X4, X5, X6, X7, X8, frontcA_in_aa(X3, X9))
   U35_AG(X1, X2, X3, X4, X5, X6, X7, X8, frontcA_out_aa(X3, X9)) -> U36_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, frontcA_in_aa(X4, X10))
   U36_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, frontcA_out_aa(X4, X10)) -> U37_AG(X1, X2, X3, X4, X5, X6, X7, X8, appcB_in_gga(X9, X10, .(X6, .(X7, X11))))
   U37_AG(X1, X2, X3, X4, X5, X6, X7, X8, appcB_out_gga(X9, X10, .(X6, .(X7, X11)))) -> U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_in_aa(X5, X12))
   U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_out_aa(X5, X12)) -> U39_AG(X1, X2, X3, X4, X5, X6, X7, X8, appE_in_ggg(X11, X12, X8))
   U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_out_aa(X5, X12)) -> APPE_IN_GGG(X11, X12, X8)
   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> U7_GGG(X1, X2, X3, X4, appE_in_ggg(X2, X3, X4))
   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GGG(X2, X3, X4)

The TRS R consists of the following rules:

   frontcA_in_aa(void, []) -> frontcA_out_aa(void, [])
   frontcA_in_aa(tree(X1, void, void), .(X1, [])) -> frontcA_out_aa(tree(X1, void, void), .(X1, []))
   frontcA_in_aa(tree(X1, X2, X3), X4) -> U41_aa(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U41_aa(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U42_aa(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U42_aa(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X1, X2, X3, X4, appcB_in_gga(X5, X6, X4))
   appcB_in_gga([], X1, X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X1, X2), X3, .(X1, X4)) -> U44_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U44_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, .(X1, X4))
   U43_aa(X1, X2, X3, X4, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X1, X2, X3), X4)

The argument filtering Pi contains the following mapping:
[]  =  []

frontA_in_aa(x1, x2)  =  frontA_in_aa

frontcA_in_aa(x1, x2)  =  frontcA_in_aa

frontcA_out_aa(x1, x2)  =  frontcA_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

.(x1, x2)  =  .(x2)

U41_aa(x1, x2, x3, x4, x5)  =  U41_aa(x5)

U42_aa(x1, x2, x3, x4, x5, x6)  =  U42_aa(x2, x5, x6)

U43_aa(x1, x2, x3, x4, x5)  =  U43_aa(x2, x3, x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2, x3)

U44_gga(x1, x2, x3, x4, x5)  =  U44_gga(x2, x3, x5)

appB_in_gga(x1, x2, x3)  =  appB_in_gga(x1, x2)

appE_in_ggg(x1, x2, x3)  =  appE_in_ggg(x1, x2, x3)

FRONTF_IN_AG(x1, x2)  =  FRONTF_IN_AG(x2)

U8_AG(x1, x2, x3)  =  U8_AG(x3)

FRONTA_IN_AA(x1, x2)  =  FRONTA_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5)  =  U2_AA(x5)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)

U4_AA(x1, x2, x3, x4, x5, x6)  =  U4_AA(x5, x6)

U5_AA(x1, x2, x3, x4, x5)  =  U5_AA(x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x3, x5)

U9_AG(x1, x2, x3, x4)  =  U9_AG(x4)

U10_AG(x1, x2, x3, x4, x5, x6)  =  U10_AG(x6)

U11_AG(x1, x2, x3, x4, x5, x6)  =  U11_AG(x6)

U12_AG(x1, x2, x3, x4, x5, x6)  =  U12_AG(x6)

U13_AG(x1, x2, x3, x4, x5, x6, x7)  =  U13_AG(x6, x7)

U14_AG(x1, x2, x3, x4, x5, x6)  =  U14_AG(x6)

U15_AG(x1, x2, x3, x4, x5, x6)  =  U15_AG(x6)

U16_AG(x1, x2, x3, x4, x5, x6)  =  U16_AG(x6)

U17_AG(x1, x2, x3, x4)  =  U17_AG(x4)

U18_AG(x1, x2, x3, x4, x5)  =  U18_AG(x5)

U19_AG(x1, x2, x3, x4, x5, x6, x7)  =  U19_AG(x7)

U20_AG(x1, x2, x3, x4, x5, x6, x7)  =  U20_AG(x7)

U21_AG(x1, x2, x3, x4, x5, x6, x7)  =  U21_AG(x7)

U22_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U22_AG(x7, x8)

U23_AG(x1, x2, x3, x4, x5, x6, x7)  =  U23_AG(x7)

U24_AG(x1, x2, x3, x4, x5, x6, x7)  =  U24_AG(x7)

U25_AG(x1, x2, x3, x4, x5, x6, x7)  =  U25_AG(x7)

U26_AG(x1, x2, x3, x4)  =  U26_AG(x3, x4)

U27_AG(x1, x2, x3, x4, x5)  =  U27_AG(x4, x5)

U28_AG(x1, x2, x3, x4, x5, x6, x7)  =  U28_AG(x6, x7)

U29_AG(x1, x2, x3, x4, x5, x6, x7)  =  U29_AG(x6, x7)

U30_AG(x1, x2, x3, x4, x5, x6, x7)  =  U30_AG(x6, x7)

U31_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U31_AG(x6, x7, x8)

U32_AG(x1, x2, x3, x4, x5, x6, x7)  =  U32_AG(x6, x7)

U33_AG(x1, x2, x3, x4, x5, x6, x7)  =  U33_AG(x6, x7)

U34_AG(x1, x2, x3, x4, x5, x6, x7)  =  U34_AG(x6, x7)

U35_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U35_AG(x8, x9)

U36_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U36_AG(x8, x9, x10)

U37_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U37_AG(x8, x9)

U38_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U38_AG(x8, x9, x10)

U39_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U39_AG(x8, x9)

APPE_IN_GGG(x1, x2, x3)  =  APPE_IN_GGG(x1, x2, x3)

U7_GGG(x1, x2, x3, x4, x5)  =  U7_GGG(x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(89)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FRONTF_IN_AG(tree(X1, void, X2), []) -> U8_AG(X1, X2, frontA_in_aa(X2, X3))
   FRONTF_IN_AG(tree(X1, void, X2), []) -> FRONTA_IN_AA(X2, X3)
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> U1_AA(X1, X2, X3, X4, frontA_in_aa(X2, X5))
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> FRONTA_IN_AA(X2, X5)
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> U2_AA(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U3_AA(X1, X2, X3, X4, frontA_in_aa(X3, X6))
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> FRONTA_IN_AA(X3, X6)
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U4_AA(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U4_AA(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U5_AA(X1, X2, X3, X4, appB_in_gga(X5, X6, X4))
   U4_AA(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> APPB_IN_GGA(X5, X6, X4)
   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> U6_GGA(X1, X2, X3, X4, appB_in_gga(X2, X3, X4))
   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), []) -> U9_AG(X1, X2, X3, frontA_in_aa(X3, X4))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), []) -> FRONTA_IN_AA(X3, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> U10_AG(X1, X2, X3, X4, X5, frontA_in_aa(X3, X6))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> FRONTA_IN_AA(X3, X6)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), []) -> U11_AG(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U12_AG(X1, X2, X3, X4, X5, frontA_in_aa(X4, X7))
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> FRONTA_IN_AA(X4, X7)
   U11_AG(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U13_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X4, X7))
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> U14_AG(X1, X2, X3, X4, X5, appB_in_gga(X6, X7, X8))
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> APPB_IN_GGA(X6, X7, X8)
   U13_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X4, X7)) -> U15_AG(X1, X2, X3, X4, X5, appcB_in_gga(X6, X7, X8))
   U15_AG(X1, X2, X3, X4, X5, appcB_out_gga(X6, X7, X8)) -> U16_AG(X1, X2, X3, X4, X5, frontA_in_aa(X5, X9))
   U15_AG(X1, X2, X3, X4, X5, appcB_out_gga(X6, X7, X8)) -> FRONTA_IN_AA(X5, X9)
   FRONTF_IN_AG(tree(X1, void, X2), .(X3, [])) -> U17_AG(X1, X2, X3, frontA_in_aa(X2, X4))
   FRONTF_IN_AG(tree(X1, void, X2), .(X3, [])) -> FRONTA_IN_AA(X2, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), .(X4, [])) -> U18_AG(X1, X2, X3, X4, frontA_in_aa(X3, X5))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), .(X4, [])) -> FRONTA_IN_AA(X3, X5)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> U19_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X3, X7))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> FRONTA_IN_AA(X3, X7)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, [])) -> U20_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X3, X7))
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U21_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X4, X8))
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> FRONTA_IN_AA(X4, X8)
   U20_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_in_aa(X4, X8))
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U23_AG(X1, X2, X3, X4, X5, X6, appB_in_gga(X7, X8, X9))
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> APPB_IN_GGA(X7, X8, X9)
   U22_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U24_AG(X1, X2, X3, X4, X5, X6, appcB_in_gga(X7, X8, X9))
   U24_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> U25_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X5, X10))
   U24_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> FRONTA_IN_AA(X5, X10)
   FRONTF_IN_AG(tree(X1, void, X2), X3) -> U26_AG(X1, X2, X3, frontA_in_aa(X2, X4))
   FRONTF_IN_AG(tree(X1, void, X2), X3) -> FRONTA_IN_AA(X2, X4)
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), X4) -> U27_AG(X1, X2, X3, X4, frontA_in_aa(X3, X5))
   FRONTF_IN_AG(tree(X1, tree(X2, void, void), X3), X4) -> FRONTA_IN_AA(X3, X5)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> U28_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X3, X7))
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> FRONTA_IN_AA(X3, X7)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), X6) -> U29_AG(X1, X2, X3, X4, X5, X6, frontcA_in_aa(X3, X7))
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U30_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X4, X8))
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> FRONTA_IN_AA(X4, X8)
   U29_AG(X1, X2, X3, X4, X5, X6, frontcA_out_aa(X3, X7)) -> U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_in_aa(X4, X8))
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U32_AG(X1, X2, X3, X4, X5, X6, appB_in_gga(X7, X8, X9))
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> APPB_IN_GGA(X7, X8, X9)
   U31_AG(X1, X2, X3, X4, X5, X6, X7, frontcA_out_aa(X4, X8)) -> U33_AG(X1, X2, X3, X4, X5, X6, appcB_in_gga(X7, X8, X9))
   U33_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> U34_AG(X1, X2, X3, X4, X5, X6, frontA_in_aa(X5, X10))
   U33_AG(X1, X2, X3, X4, X5, X6, appcB_out_gga(X7, X8, X9)) -> FRONTA_IN_AA(X5, X10)
   FRONTF_IN_AG(tree(X1, tree(X2, X3, X4), X5), .(X6, .(X7, X8))) -> U35_AG(X1, X2, X3, X4, X5, X6, X7, X8, frontcA_in_aa(X3, X9))
   U35_AG(X1, X2, X3, X4, X5, X6, X7, X8, frontcA_out_aa(X3, X9)) -> U36_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, frontcA_in_aa(X4, X10))
   U36_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, frontcA_out_aa(X4, X10)) -> U37_AG(X1, X2, X3, X4, X5, X6, X7, X8, appcB_in_gga(X9, X10, .(X6, .(X7, X11))))
   U37_AG(X1, X2, X3, X4, X5, X6, X7, X8, appcB_out_gga(X9, X10, .(X6, .(X7, X11)))) -> U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_in_aa(X5, X12))
   U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_out_aa(X5, X12)) -> U39_AG(X1, X2, X3, X4, X5, X6, X7, X8, appE_in_ggg(X11, X12, X8))
   U38_AG(X1, X2, X3, X4, X5, X6, X7, X8, X11, frontcA_out_aa(X5, X12)) -> APPE_IN_GGG(X11, X12, X8)
   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> U7_GGG(X1, X2, X3, X4, appE_in_ggg(X2, X3, X4))
   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GGG(X2, X3, X4)

The TRS R consists of the following rules:

   frontcA_in_aa(void, []) -> frontcA_out_aa(void, [])
   frontcA_in_aa(tree(X1, void, void), .(X1, [])) -> frontcA_out_aa(tree(X1, void, void), .(X1, []))
   frontcA_in_aa(tree(X1, X2, X3), X4) -> U41_aa(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U41_aa(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U42_aa(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U42_aa(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X1, X2, X3, X4, appcB_in_gga(X5, X6, X4))
   appcB_in_gga([], X1, X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X1, X2), X3, .(X1, X4)) -> U44_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U44_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, .(X1, X4))
   U43_aa(X1, X2, X3, X4, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X1, X2, X3), X4)

The argument filtering Pi contains the following mapping:
[]  =  []

frontA_in_aa(x1, x2)  =  frontA_in_aa

frontcA_in_aa(x1, x2)  =  frontcA_in_aa

frontcA_out_aa(x1, x2)  =  frontcA_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

.(x1, x2)  =  .(x2)

U41_aa(x1, x2, x3, x4, x5)  =  U41_aa(x5)

U42_aa(x1, x2, x3, x4, x5, x6)  =  U42_aa(x2, x5, x6)

U43_aa(x1, x2, x3, x4, x5)  =  U43_aa(x2, x3, x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2, x3)

U44_gga(x1, x2, x3, x4, x5)  =  U44_gga(x2, x3, x5)

appB_in_gga(x1, x2, x3)  =  appB_in_gga(x1, x2)

appE_in_ggg(x1, x2, x3)  =  appE_in_ggg(x1, x2, x3)

FRONTF_IN_AG(x1, x2)  =  FRONTF_IN_AG(x2)

U8_AG(x1, x2, x3)  =  U8_AG(x3)

FRONTA_IN_AA(x1, x2)  =  FRONTA_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5)  =  U2_AA(x5)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)

U4_AA(x1, x2, x3, x4, x5, x6)  =  U4_AA(x5, x6)

U5_AA(x1, x2, x3, x4, x5)  =  U5_AA(x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x3, x5)

U9_AG(x1, x2, x3, x4)  =  U9_AG(x4)

U10_AG(x1, x2, x3, x4, x5, x6)  =  U10_AG(x6)

U11_AG(x1, x2, x3, x4, x5, x6)  =  U11_AG(x6)

U12_AG(x1, x2, x3, x4, x5, x6)  =  U12_AG(x6)

U13_AG(x1, x2, x3, x4, x5, x6, x7)  =  U13_AG(x6, x7)

U14_AG(x1, x2, x3, x4, x5, x6)  =  U14_AG(x6)

U15_AG(x1, x2, x3, x4, x5, x6)  =  U15_AG(x6)

U16_AG(x1, x2, x3, x4, x5, x6)  =  U16_AG(x6)

U17_AG(x1, x2, x3, x4)  =  U17_AG(x4)

U18_AG(x1, x2, x3, x4, x5)  =  U18_AG(x5)

U19_AG(x1, x2, x3, x4, x5, x6, x7)  =  U19_AG(x7)

U20_AG(x1, x2, x3, x4, x5, x6, x7)  =  U20_AG(x7)

U21_AG(x1, x2, x3, x4, x5, x6, x7)  =  U21_AG(x7)

U22_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U22_AG(x7, x8)

U23_AG(x1, x2, x3, x4, x5, x6, x7)  =  U23_AG(x7)

U24_AG(x1, x2, x3, x4, x5, x6, x7)  =  U24_AG(x7)

U25_AG(x1, x2, x3, x4, x5, x6, x7)  =  U25_AG(x7)

U26_AG(x1, x2, x3, x4)  =  U26_AG(x3, x4)

U27_AG(x1, x2, x3, x4, x5)  =  U27_AG(x4, x5)

U28_AG(x1, x2, x3, x4, x5, x6, x7)  =  U28_AG(x6, x7)

U29_AG(x1, x2, x3, x4, x5, x6, x7)  =  U29_AG(x6, x7)

U30_AG(x1, x2, x3, x4, x5, x6, x7)  =  U30_AG(x6, x7)

U31_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U31_AG(x6, x7, x8)

U32_AG(x1, x2, x3, x4, x5, x6, x7)  =  U32_AG(x6, x7)

U33_AG(x1, x2, x3, x4, x5, x6, x7)  =  U33_AG(x6, x7)

U34_AG(x1, x2, x3, x4, x5, x6, x7)  =  U34_AG(x6, x7)

U35_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U35_AG(x8, x9)

U36_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U36_AG(x8, x9, x10)

U37_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U37_AG(x8, x9)

U38_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U38_AG(x8, x9, x10)

U39_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U39_AG(x8, x9)

APPE_IN_GGG(x1, x2, x3)  =  APPE_IN_GGG(x1, x2, x3)

U7_GGG(x1, x2, x3, x4, x5)  =  U7_GGG(x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(90) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 58 less nodes.
----------------------------------------

(91)
Complex Obligation (AND)

----------------------------------------

(92)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GGG(X2, X3, X4)

The TRS R consists of the following rules:

   frontcA_in_aa(void, []) -> frontcA_out_aa(void, [])
   frontcA_in_aa(tree(X1, void, void), .(X1, [])) -> frontcA_out_aa(tree(X1, void, void), .(X1, []))
   frontcA_in_aa(tree(X1, X2, X3), X4) -> U41_aa(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U41_aa(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U42_aa(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U42_aa(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X1, X2, X3, X4, appcB_in_gga(X5, X6, X4))
   appcB_in_gga([], X1, X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X1, X2), X3, .(X1, X4)) -> U44_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U44_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, .(X1, X4))
   U43_aa(X1, X2, X3, X4, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X1, X2, X3), X4)

The argument filtering Pi contains the following mapping:
[]  =  []

frontcA_in_aa(x1, x2)  =  frontcA_in_aa

frontcA_out_aa(x1, x2)  =  frontcA_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

.(x1, x2)  =  .(x2)

U41_aa(x1, x2, x3, x4, x5)  =  U41_aa(x5)

U42_aa(x1, x2, x3, x4, x5, x6)  =  U42_aa(x2, x5, x6)

U43_aa(x1, x2, x3, x4, x5)  =  U43_aa(x2, x3, x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2, x3)

U44_gga(x1, x2, x3, x4, x5)  =  U44_gga(x2, x3, x5)

APPE_IN_GGG(x1, x2, x3)  =  APPE_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(93) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(94)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPE_IN_GGG(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GGG(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APPE_IN_GGG(x1, x2, x3)  =  APPE_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(95) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(96)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPE_IN_GGG(.(X2), X3, .(X4)) -> APPE_IN_GGG(X2, X3, X4)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(97) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPE_IN_GGG(.(X2), X3, .(X4)) -> APPE_IN_GGG(X2, X3, X4)
The graph contains the following edges 1 > 1, 2 >= 2, 3 > 3


----------------------------------------

(98)
YES

----------------------------------------

(99)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)

The TRS R consists of the following rules:

   frontcA_in_aa(void, []) -> frontcA_out_aa(void, [])
   frontcA_in_aa(tree(X1, void, void), .(X1, [])) -> frontcA_out_aa(tree(X1, void, void), .(X1, []))
   frontcA_in_aa(tree(X1, X2, X3), X4) -> U41_aa(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U41_aa(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U42_aa(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U42_aa(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X1, X2, X3, X4, appcB_in_gga(X5, X6, X4))
   appcB_in_gga([], X1, X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X1, X2), X3, .(X1, X4)) -> U44_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U44_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, .(X1, X4))
   U43_aa(X1, X2, X3, X4, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X1, X2, X3), X4)

The argument filtering Pi contains the following mapping:
[]  =  []

frontcA_in_aa(x1, x2)  =  frontcA_in_aa

frontcA_out_aa(x1, x2)  =  frontcA_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

.(x1, x2)  =  .(x2)

U41_aa(x1, x2, x3, x4, x5)  =  U41_aa(x5)

U42_aa(x1, x2, x3, x4, x5, x6)  =  U42_aa(x2, x5, x6)

U43_aa(x1, x2, x3, x4, x5)  =  U43_aa(x2, x3, x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2, x3)

U44_gga(x1, x2, x3, x4, x5)  =  U44_gga(x2, x3, x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(100) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(101)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X1, X2), X3, .(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(102) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(103)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X2), X3) -> APPB_IN_GGA(X2, X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(104) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPB_IN_GGA(.(X2), X3) -> APPB_IN_GGA(X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(105)
YES

----------------------------------------

(106)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> U2_AA(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U2_AA(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> FRONTA_IN_AA(X3, X6)
   FRONTA_IN_AA(tree(X1, X2, X3), X4) -> FRONTA_IN_AA(X2, X5)

The TRS R consists of the following rules:

   frontcA_in_aa(void, []) -> frontcA_out_aa(void, [])
   frontcA_in_aa(tree(X1, void, void), .(X1, [])) -> frontcA_out_aa(tree(X1, void, void), .(X1, []))
   frontcA_in_aa(tree(X1, X2, X3), X4) -> U41_aa(X1, X2, X3, X4, frontcA_in_aa(X2, X5))
   U41_aa(X1, X2, X3, X4, frontcA_out_aa(X2, X5)) -> U42_aa(X1, X2, X3, X4, X5, frontcA_in_aa(X3, X6))
   U42_aa(X1, X2, X3, X4, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X1, X2, X3, X4, appcB_in_gga(X5, X6, X4))
   appcB_in_gga([], X1, X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X1, X2), X3, .(X1, X4)) -> U44_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U44_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, .(X1, X4))
   U43_aa(X1, X2, X3, X4, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X1, X2, X3), X4)

The argument filtering Pi contains the following mapping:
[]  =  []

frontcA_in_aa(x1, x2)  =  frontcA_in_aa

frontcA_out_aa(x1, x2)  =  frontcA_out_aa(x1, x2)

tree(x1, x2, x3)  =  tree(x2, x3)

.(x1, x2)  =  .(x2)

U41_aa(x1, x2, x3, x4, x5)  =  U41_aa(x5)

U42_aa(x1, x2, x3, x4, x5, x6)  =  U42_aa(x2, x5, x6)

U43_aa(x1, x2, x3, x4, x5)  =  U43_aa(x2, x3, x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2, x3)

U44_gga(x1, x2, x3, x4, x5)  =  U44_gga(x2, x3, x5)

FRONTA_IN_AA(x1, x2)  =  FRONTA_IN_AA

U2_AA(x1, x2, x3, x4, x5)  =  U2_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(107) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(108)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FRONTA_IN_AA -> U2_AA(frontcA_in_aa)
   U2_AA(frontcA_out_aa(X2, X5)) -> FRONTA_IN_AA
   FRONTA_IN_AA -> FRONTA_IN_AA

The TRS R consists of the following rules:

   frontcA_in_aa -> frontcA_out_aa(void, [])
   frontcA_in_aa -> frontcA_out_aa(tree(void, void), .([]))
   frontcA_in_aa -> U41_aa(frontcA_in_aa)
   U41_aa(frontcA_out_aa(X2, X5)) -> U42_aa(X2, X5, frontcA_in_aa)
   U42_aa(X2, X5, frontcA_out_aa(X3, X6)) -> U43_aa(X2, X3, appcB_in_gga(X5, X6))
   appcB_in_gga([], X1) -> appcB_out_gga([], X1, X1)
   appcB_in_gga(.(X2), X3) -> U44_gga(X2, X3, appcB_in_gga(X2, X3))
   U44_gga(X2, X3, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X2), X3, .(X4))
   U43_aa(X2, X3, appcB_out_gga(X5, X6, X4)) -> frontcA_out_aa(tree(X2, X3), X4)

The set Q consists of the following terms:

   frontcA_in_aa
   U41_aa(x0)
   U42_aa(x0, x1, x2)
   appcB_in_gga(x0, x1)
   U44_gga(x0, x1, x2)
   U43_aa(x0, x1, x2)

We have to consider all (P,Q,R)-chains.