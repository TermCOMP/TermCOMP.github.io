MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/7ArUE.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

p(g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) PiDP
    (7) UsableRulesProof [EQUIVALENT, 0 ms]
    (8) PiDP
    (9) PiDPToQDPProof [SOUND, 0 ms]
    (10) QDP
(11) PrologToPiTRSProof [SOUND, 0 ms]
(12) PiTRS
    (13) DependencyPairsProof [EQUIVALENT, 0 ms]
    (14) PiDP
    (15) DependencyGraphProof [EQUIVALENT, 0 ms]
    (16) PiDP
    (17) UsableRulesProof [EQUIVALENT, 0 ms]
    (18) PiDP
    (19) PiDPToQDPProof [SOUND, 0 ms]
    (20) QDP
(21) PrologToTRSTransformerProof [SOUND, 0 ms]
(22) QTRS
    (23) QTRSRRRProof [EQUIVALENT, 38 ms]
    (24) QTRS
    (25) QTRSRRRProof [EQUIVALENT, 3 ms]
    (26) QTRS
    (27) QTRSRRRProof [EQUIVALENT, 3 ms]
    (28) QTRS
    (29) Overlay + Local Confluence [EQUIVALENT, 0 ms]
    (30) QTRS
    (31) DependencyPairsProof [EQUIVALENT, 0 ms]
    (32) QDP
    (33) UsableRulesProof [EQUIVALENT, 0 ms]
    (34) QDP
    (35) QReductionProof [EQUIVALENT, 0 ms]
    (36) QDP
(37) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(38) TRIPLES
    (39) TriplesToPiDPProof [SOUND, 0 ms]
    (40) PiDP
    (41) DependencyGraphProof [EQUIVALENT, 0 ms]
    (42) PiDP
    (43) PiDPToQDPProof [SOUND, 0 ms]
    (44) QDP
(45) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(46) IRSwT
    (47) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
    (48) IRSwT
    (49) IntTRSCompressionProof [EQUIVALENT, 9 ms]
    (50) IRSwT
    (51) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
    (52) IRSwT
    (53) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
    (54) IRSwT
    (55) FilterProof [EQUIVALENT, 0 ms]
    (56) IntTRS
    (57) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
    (58) NO


----------------------------------------

(0)
Obligation:
Clauses:

p(b).
p(a) :- p1(X).
p1(b).
p1(a) :- p1(X).


Query: p(g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

p_in_1: (b)

p1_in_1: (f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_G(a) -> U1_G(p1_in_a(X))
   P_IN_G(a) -> P1_IN_A(X)
   P1_IN_A(a) -> U2_A(p1_in_a(X))
   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P_IN_G(x1)  =  P_IN_G(x1)

U1_G(x1)  =  U1_G(x1)

P1_IN_A(x1)  =  P1_IN_A

U2_A(x1)  =  U2_A(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_G(a) -> U1_G(p1_in_a(X))
   P_IN_G(a) -> P1_IN_A(X)
   P1_IN_A(a) -> U2_A(p1_in_a(X))
   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P_IN_G(x1)  =  P_IN_G(x1)

U1_G(x1)  =  U1_G(x1)

P1_IN_A(x1)  =  P1_IN_A

U2_A(x1)  =  U2_A(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P1_IN_A(x1)  =  P1_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(8)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P1_IN_A(a) -> P1_IN_A(X)

R is empty.
The argument filtering Pi contains the following mapping:
a  =  a

P1_IN_A(x1)  =  P1_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(9) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P1_IN_A -> P1_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

p_in_1: (b)

p1_in_1: (f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g(x1)

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(12)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g(x1)

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)



----------------------------------------

(13) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_G(a) -> U1_G(p1_in_a(X))
   P_IN_G(a) -> P1_IN_A(X)
   P1_IN_A(a) -> U2_A(p1_in_a(X))
   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g(x1)

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P_IN_G(x1)  =  P_IN_G(x1)

U1_G(x1)  =  U1_G(x1)

P1_IN_A(x1)  =  P1_IN_A

U2_A(x1)  =  U2_A(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P_IN_G(a) -> U1_G(p1_in_a(X))
   P_IN_G(a) -> P1_IN_A(X)
   P1_IN_A(a) -> U2_A(p1_in_a(X))
   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g(x1)

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P_IN_G(x1)  =  P_IN_G(x1)

U1_G(x1)  =  U1_G(x1)

P1_IN_A(x1)  =  P1_IN_A

U2_A(x1)  =  U2_A(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P1_IN_A(a) -> P1_IN_A(X)

The TRS R consists of the following rules:

   p_in_g(b) -> p_out_g(b)
   p_in_g(a) -> U1_g(p1_in_a(X))
   p1_in_a(b) -> p1_out_a(b)
   p1_in_a(a) -> U2_a(p1_in_a(X))
   U2_a(p1_out_a(X)) -> p1_out_a(a)
   U1_g(p1_out_a(X)) -> p_out_g(a)

The argument filtering Pi contains the following mapping:
p_in_g(x1)  =  p_in_g(x1)

b  =  b

p_out_g(x1)  =  p_out_g(x1)

a  =  a

U1_g(x1)  =  U1_g(x1)

p1_in_a(x1)  =  p1_in_a

p1_out_a(x1)  =  p1_out_a(x1)

U2_a(x1)  =  U2_a(x1)

P1_IN_A(x1)  =  P1_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(18)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P1_IN_A(a) -> P1_IN_A(X)

R is empty.
The argument filtering Pi contains the following mapping:
a  =  a

P1_IN_A(x1)  =  P1_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(19) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P1_IN_A -> P1_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 90,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p (b))",
                null
            ],
            [
                "(p (a))",
                "(p1 X)"
            ],
            [
                "(p1 (b))",
                null
            ],
            [
                "(p1 (a))",
                "(p1 X)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "99": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(p1 X2)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(p1 X2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "100": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "101": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "102": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "103": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "104": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X4)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "90": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "91": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(p T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(p T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "93": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "94": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "95": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "96": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "97": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "98": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 90,
                "to": 91,
                "label": "CASE"
            },
            {
                "from": 91,
                "to": 92,
                "label": "PARALLEL"
            },
            {
                "from": 91,
                "to": 93,
                "label": "PARALLEL"
            },
            {
                "from": 92,
                "to": 94,
                "label": "EVAL with clause\np(b).\nand substitutionT1 -> b"
            },
            {
                "from": 92,
                "to": 95,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 93,
                "to": 97,
                "label": "EVAL with clause\np(a) :- p1(X2).\nand substitutionT1 -> a"
            },
            {
                "from": 93,
                "to": 98,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 94,
                "to": 96,
                "label": "SUCCESS"
            },
            {
                "from": 97,
                "to": 99,
                "label": "CASE"
            },
            {
                "from": 99,
                "to": 100,
                "label": "PARALLEL"
            },
            {
                "from": 99,
                "to": 101,
                "label": "PARALLEL"
            },
            {
                "from": 100,
                "to": 102,
                "label": "ONLY EVAL with clause\np1(b).\nand substitutionX2 -> b"
            },
            {
                "from": 101,
                "to": 104,
                "label": "ONLY EVAL with clause\np1(a) :- p1(X4).\nand substitutionX2 -> a"
            },
            {
                "from": 102,
                "to": 103,
                "label": "SUCCESS"
            },
            {
                "from": 104,
                "to": 97,
                "label": "INSTANCE with matching:\nX2 -> X4"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(22)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f90_in(b) -> f90_out1
   f90_in(a) -> U1(f97_in, a)
   U1(f97_out1(X2), a) -> f90_out1
   f97_in -> f97_out1(b)
   f97_in -> U2(f97_in)
   U2(f97_out1(X4)) -> f97_out1(a)

Q is empty.

----------------------------------------

(23) QTRSRRRProof (EQUIVALENT)
Used ordering:
f90_in/1(YES)
b/0)
f90_out1/0)
a/0)
U1/2(YES,YES)
f97_in/0)
f97_out1/1)YES(
U2/1)YES(

Quasi precedence:
f90_in_1 > U1_2 > [b, f90_out1, f97_in] > a


Status:
f90_in_1: [1]
b: multiset status
f90_out1: multiset status
a: multiset status
U1_2: multiset status
f97_in: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f90_in(b) -> f90_out1
   f90_in(a) -> U1(f97_in, a)
   U1(f97_out1(X2), a) -> f90_out1




----------------------------------------

(24)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f97_in -> f97_out1(b)
   f97_in -> U2(f97_in)
   U2(f97_out1(X4)) -> f97_out1(a)

Q is empty.

----------------------------------------

(25) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(U2(x_1)) = x_1
   POL(a) = 0
   POL(b) = 0
   POL(f97_in) = 1
   POL(f97_out1(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f97_in -> f97_out1(b)




----------------------------------------

(26)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f97_in -> U2(f97_in)
   U2(f97_out1(X4)) -> f97_out1(a)

Q is empty.

----------------------------------------

(27) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(U2(x_1)) = 2*x_1
   POL(a) = 0
   POL(f97_in) = 0
   POL(f97_out1(x_1)) = 1 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U2(f97_out1(X4)) -> f97_out1(a)




----------------------------------------

(28)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f97_in -> U2(f97_in)

Q is empty.

----------------------------------------

(29) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(30)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f97_in -> U2(f97_in)

The set Q consists of the following terms:

   f97_in


----------------------------------------

(31) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F97_IN -> F97_IN

The TRS R consists of the following rules:

   f97_in -> U2(f97_in)

The set Q consists of the following terms:

   f97_in

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F97_IN -> F97_IN

R is empty.
The set Q consists of the following terms:

   f97_in

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f97_in


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F97_IN -> F97_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 19,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p (b))",
                null
            ],
            [
                "(p (a))",
                "(p1 X)"
            ],
            [
                "(p1 (b))",
                null
            ],
            [
                "(p1 (a))",
                "(p1 X)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "88": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "89": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X3"],
                    "exprvars": []
                }
            },
            "79": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(p T1)",
                        "(p (b))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "80": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(p (b))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(p (b))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "83": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "84": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(p1 X1)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(p1 X1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "85": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(p1 X1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(p T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(p T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "86": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(p1 X1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "87": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 19,
                "to": 20,
                "label": "CASE"
            },
            {
                "from": 20,
                "to": 72,
                "label": "EVAL with clause\np(b).\nand substitutionT1 -> b"
            },
            {
                "from": 20,
                "to": 79,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 72,
                "to": 80,
                "label": "SUCCESS"
            },
            {
                "from": 79,
                "to": 82,
                "label": "EVAL with clause\np(a) :- p1(X1).\nand substitutionT1 -> a"
            },
            {
                "from": 79,
                "to": 83,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 80,
                "to": 81,
                "label": "BACKTRACK\nfor clause: p(a) :- p1(X)because of non-unification"
            },
            {
                "from": 82,
                "to": 84,
                "label": "CASE"
            },
            {
                "from": 84,
                "to": 85,
                "label": "PARALLEL"
            },
            {
                "from": 84,
                "to": 86,
                "label": "PARALLEL"
            },
            {
                "from": 85,
                "to": 87,
                "label": "ONLY EVAL with clause\np1(b).\nand substitutionX1 -> b"
            },
            {
                "from": 86,
                "to": 89,
                "label": "ONLY EVAL with clause\np1(a) :- p1(X3).\nand substitutionX1 -> a"
            },
            {
                "from": 87,
                "to": 88,
                "label": "SUCCESS"
            },
            {
                "from": 89,
                "to": 82,
                "label": "INSTANCE with matching:\nX1 -> X3"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(38)
Obligation:
Triples:

p1A(a) :- p1A(X1).
pB(a) :- p1A(X1).

Clauses:

p1cA(b).
p1cA(a) :- p1cA(X1).

Afs:

pB(x1)  =  pB(x1)


----------------------------------------

(39) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

pB_in_1: (b)

p1A_in_1: (f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_G(a) -> U2_G(p1A_in_a(X1))
   PB_IN_G(a) -> P1A_IN_A(X1)
   P1A_IN_A(a) -> U1_A(p1A_in_a(X1))
   P1A_IN_A(a) -> P1A_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
a  =  a

p1A_in_a(x1)  =  p1A_in_a

PB_IN_G(x1)  =  PB_IN_G(x1)

U2_G(x1)  =  U2_G(x1)

P1A_IN_A(x1)  =  P1A_IN_A

U1_A(x1)  =  U1_A(x1)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(40)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_G(a) -> U2_G(p1A_in_a(X1))
   PB_IN_G(a) -> P1A_IN_A(X1)
   P1A_IN_A(a) -> U1_A(p1A_in_a(X1))
   P1A_IN_A(a) -> P1A_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
a  =  a

p1A_in_a(x1)  =  p1A_in_a

PB_IN_G(x1)  =  PB_IN_G(x1)

U2_G(x1)  =  U2_G(x1)

P1A_IN_A(x1)  =  P1A_IN_A

U1_A(x1)  =  U1_A(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(41) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(42)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   P1A_IN_A(a) -> P1A_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
a  =  a

P1A_IN_A(x1)  =  P1A_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(43) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P1A_IN_A -> P1A_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(45) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p (b))",
                null
            ],
            [
                "(p (a))",
                "(p1 X)"
            ],
            [
                "(p1 (b))",
                null
            ],
            [
                "(p1 (a))",
                "(p1 X)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "11": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(p T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(p T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "77": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "45": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "78": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p1 X4)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "38": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "39": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(p1 X2)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(p1 X2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "41": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "74": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(p1 X2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "76": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 11,
                "label": "CASE"
            },
            {
                "from": 11,
                "to": 17,
                "label": "PARALLEL"
            },
            {
                "from": 11,
                "to": 18,
                "label": "PARALLEL"
            },
            {
                "from": 17,
                "to": 38,
                "label": "EVAL with clause\np(b).\nand substitutionT1 -> b"
            },
            {
                "from": 17,
                "to": 39,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 18,
                "to": 45,
                "label": "EVAL with clause\np(a) :- p1(X2).\nand substitutionT1 -> a"
            },
            {
                "from": 18,
                "to": 47,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 38,
                "to": 41,
                "label": "SUCCESS"
            },
            {
                "from": 45,
                "to": 73,
                "label": "CASE"
            },
            {
                "from": 73,
                "to": 74,
                "label": "PARALLEL"
            },
            {
                "from": 73,
                "to": 75,
                "label": "PARALLEL"
            },
            {
                "from": 74,
                "to": 76,
                "label": "ONLY EVAL with clause\np1(b).\nand substitutionX2 -> b"
            },
            {
                "from": 75,
                "to": 78,
                "label": "ONLY EVAL with clause\np1(a) :- p1(X4).\nand substitutionX2 -> a"
            },
            {
                "from": 76,
                "to": 77,
                "label": "SUCCESS"
            },
            {
                "from": 78,
                "to": 45,
                "label": "INSTANCE with matching:\nX2 -> X4"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(46)
Obligation:
Rules:
f73_in -> f75_in :|: TRUE
f73_in -> f74_in :|: TRUE
f74_out -> f73_out :|: TRUE
f75_out -> f73_out :|: TRUE
f78_out -> f75_out :|: TRUE
f75_in -> f78_in :|: TRUE
f73_out -> f45_out :|: TRUE
f45_in -> f73_in :|: TRUE
f78_in -> f45_in :|: TRUE
f45_out -> f78_out :|: TRUE
f1_in(T1) -> f11_in(T1) :|: TRUE
f11_out(x) -> f1_out(x) :|: TRUE
f18_out(x1) -> f11_out(x1) :|: TRUE
f17_out(x2) -> f11_out(x2) :|: TRUE
f11_in(x3) -> f17_in(x3) :|: TRUE
f11_in(x4) -> f18_in(x4) :|: TRUE
f18_in(a) -> f45_in :|: TRUE
f47_out -> f18_out(x5) :|: TRUE
f45_out -> f18_out(a) :|: TRUE
f18_in(x6) -> f47_in :|: TRUE
Start term: f1_in(T1)

----------------------------------------

(47) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f73_in -> f75_in :|: TRUE
f75_in -> f78_in :|: TRUE
f45_in -> f73_in :|: TRUE
f78_in -> f45_in :|: TRUE


----------------------------------------

(48)
Obligation:
Rules:
f73_in -> f75_in :|: TRUE
f75_in -> f78_in :|: TRUE
f45_in -> f73_in :|: TRUE
f78_in -> f45_in :|: TRUE

----------------------------------------

(49) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(50)
Obligation:
Rules:
f45_in -> f45_in :|: TRUE

----------------------------------------

(51) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(52)
Obligation:
Rules:
f45_in -> f45_in :|: TRUE

----------------------------------------

(53) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f45_in -> f45_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(54)
Obligation:

Termination digraph:
Nodes:
(1) f45_in -> f45_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(55) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f45_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(56)
Obligation:
Rules:
f45_in -> f45_in :|: TRUE

----------------------------------------

(57) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1)
----------------------------------------

(58)
NO
