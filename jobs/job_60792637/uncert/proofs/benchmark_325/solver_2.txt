MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/vNBXI.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

times(a,a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 51 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (20) YES
        (21) PiDP
            (22) UsableRulesProof [EQUIVALENT, 0 ms]
            (23) PiDP
            (24) PiDPToQDPProof [SOUND, 0 ms]
            (25) QDP
            (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (27) YES
        (28) PiDP
            (29) UsableRulesProof [EQUIVALENT, 0 ms]
            (30) PiDP
            (31) PiDPToQDPProof [SOUND, 0 ms]
            (32) QDP
            (33) NonTerminationLoopProof [COMPLETE, 0 ms]
            (34) NO
        (35) PiDP
            (36) UsableRulesProof [EQUIVALENT, 0 ms]
            (37) PiDP
            (38) PiDPToQDPProof [SOUND, 0 ms]
            (39) QDP
        (40) PiDP
            (41) UsableRulesProof [EQUIVALENT, 0 ms]
            (42) PiDP
        (43) PiDP
            (44) UsableRulesProof [EQUIVALENT, 0 ms]
            (45) PiDP
        (46) PiDP
            (47) UsableRulesProof [EQUIVALENT, 0 ms]
            (48) PiDP
(49) PrologToPiTRSProof [SOUND, 24 ms]
(50) PiTRS
    (51) DependencyPairsProof [EQUIVALENT, 62 ms]
    (52) PiDP
    (53) DependencyGraphProof [EQUIVALENT, 0 ms]
    (54) AND
        (55) PiDP
            (56) UsableRulesProof [EQUIVALENT, 0 ms]
            (57) PiDP
            (58) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (59) QDP
            (60) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (61) YES
        (62) PiDP
            (63) UsableRulesProof [EQUIVALENT, 0 ms]
            (64) PiDP
            (65) PiDPToQDPProof [SOUND, 0 ms]
            (66) QDP
            (67) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (68) YES
        (69) PiDP
            (70) UsableRulesProof [EQUIVALENT, 0 ms]
            (71) PiDP
            (72) PiDPToQDPProof [SOUND, 0 ms]
            (73) QDP
            (74) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (75) YES
        (76) PiDP
            (77) UsableRulesProof [EQUIVALENT, 0 ms]
            (78) PiDP
            (79) PiDPToQDPProof [SOUND, 0 ms]
            (80) QDP
            (81) NonTerminationLoopProof [COMPLETE, 0 ms]
            (82) NO
        (83) PiDP
            (84) UsableRulesProof [EQUIVALENT, 0 ms]
            (85) PiDP
            (86) PiDPToQDPProof [SOUND, 0 ms]
            (87) QDP
        (88) PiDP
            (89) UsableRulesProof [EQUIVALENT, 0 ms]
            (90) PiDP
        (91) PiDP
            (92) UsableRulesProof [EQUIVALENT, 0 ms]
            (93) PiDP
        (94) PiDP
            (95) UsableRulesProof [EQUIVALENT, 0 ms]
            (96) PiDP
(97) PrologToDTProblemTransformerProof [SOUND, 145 ms]
(98) TRIPLES
    (99) TriplesToPiDPProof [SOUND, 103 ms]
    (100) PiDP
    (101) DependencyGraphProof [EQUIVALENT, 0 ms]
    (102) AND
        (103) PiDP
            (104) UsableRulesProof [EQUIVALENT, 0 ms]
            (105) PiDP
            (106) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (107) QDP
            (108) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (109) YES
        (110) PiDP
            (111) UsableRulesProof [EQUIVALENT, 0 ms]
            (112) PiDP
            (113) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (114) QDP
            (115) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (116) YES
        (117) PiDP
            (118) UsableRulesProof [EQUIVALENT, 0 ms]
            (119) PiDP
            (120) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (121) QDP
            (122) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (123) YES
        (124) PiDP
            (125) UsableRulesProof [EQUIVALENT, 0 ms]
            (126) PiDP
            (127) PiDPToQDPProof [SOUND, 0 ms]
            (128) QDP
            (129) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (130) YES
        (131) PiDP
            (132) UsableRulesProof [EQUIVALENT, 0 ms]
            (133) PiDP
            (134) PiDPToQDPProof [SOUND, 1 ms]
            (135) QDP
            (136) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (137) YES
        (138) PiDP
            (139) UsableRulesProof [EQUIVALENT, 0 ms]
            (140) PiDP
            (141) PiDPToQDPProof [SOUND, 0 ms]
            (142) QDP
            (143) NonTerminationLoopProof [COMPLETE, 0 ms]
            (144) NO
        (145) PiDP
            (146) UsableRulesProof [EQUIVALENT, 0 ms]
            (147) PiDP
            (148) PiDPToQDPProof [SOUND, 0 ms]
            (149) QDP
        (150) PiDP
            (151) UsableRulesProof [EQUIVALENT, 0 ms]
            (152) PiDP
        (153) PiDP
            (154) UsableRulesProof [EQUIVALENT, 0 ms]
            (155) PiDP
        (156) PiDP
            (157) UsableRulesProof [EQUIVALENT, 0 ms]
            (158) PiDP
(159) PrologToTRSTransformerProof [SOUND, 163 ms]
(160) QTRS
(161) PrologToIRSwTTransformerProof [SOUND, 260 ms]
(162) AND
    (163) IRSwT
        (164) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (165) TRUE
    (166) IRSwT
        (167) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (168) TRUE
    (169) IRSwT
        (170) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 1 ms]
        (171) TRUE
    (172) IRSwT
        (173) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (174) TRUE
    (175) IRSwT
        (176) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (177) TRUE
    (178) IRSwT
        (179) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (180) TRUE
    (181) IRSwT
        (182) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (183) IRSwT
        (184) IntTRSCompressionProof [EQUIVALENT, 8 ms]
        (185) IRSwT
        (186) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (187) IRSwT
        (188) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (189) IRSwT
        (190) FilterProof [EQUIVALENT, 0 ms]
        (191) IntTRS
        (192) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
        (193) NO
    (194) IRSwT
        (195) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (196) IRSwT
        (197) IntTRSCompressionProof [EQUIVALENT, 1 ms]
        (198) IRSwT
        (199) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (200) IRSwT
        (201) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (202) IRSwT
        (203) TempFilterProof [SOUND, 1 ms]
        (204) IRSwT
        (205) IRSwTToQDPProof [SOUND, 0 ms]
        (206) QDP
        (207) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (208) YES


----------------------------------------

(0)
Obligation:
Clauses:

add(b, b, b).
add(X, b, X) :- binaryZ(X).
add(b, Y, Y) :- binaryZ(Y).
add(X, Y, Z) :- addz(X, Y, Z).
addx(one(X), b, one(X)) :- binary(X).
addx(zero(X), b, zero(X)) :- binaryZ(X).
addx(X, Y, Z) :- addz(X, Y, Z).
addy(b, one(Y), one(Y)) :- binary(Y).
addy(b, zero(Y), zero(Y)) :- binaryZ(Y).
addy(X, Y, Z) :- addz(X, Y, Z).
addz(zero(X), zero(Y), zero(Z)) :- addz(X, Y, Z).
addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z).
addz(one(X), zero(Y), one(Z)) :- addy(X, Y, Z).
addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z).
addc(b, b, one(b)).
addc(X, b, Z) :- succZ(X, Z).
addc(b, Y, Z) :- succZ(Y, Z).
addc(X, Y, Z) :- addC(X, Y, Z).
addX(zero(X), b, one(X)) :- binaryZ(X).
addX(one(X), b, zero(Z)) :- succ(X, Z).
addX(X, Y, Z) :- addC(X, Y, Z).
addY(b, zero(Y), one(Y)) :- binaryZ(Y).
addY(b, one(Y), zero(Z)) :- succ(Y, Z).
addY(X, Y, Z) :- addC(X, Y, Z).
addC(zero(X), zero(Y), one(Z)) :- addz(X, Y, Z).
addC(zero(X), one(Y), zero(Z)) :- addX(X, Y, Z).
addC(one(X), zero(Y), zero(Z)) :- addY(X, Y, Z).
addC(one(X), one(Y), one(Z)) :- addc(X, Y, Z).
binary(b).
binary(zero(X)) :- binaryZ(X).
binary(one(X)) :- binary(X).
binaryZ(zero(X)) :- binaryZ(X).
binaryZ(one(X)) :- binary(X).
succ(b, one(b)).
succ(zero(X), one(X)) :- binaryZ(X).
succ(one(X), zero(Z)) :- succ(X, Z).
succZ(zero(X), one(X)) :- binaryZ(X).
succZ(one(X), zero(Z)) :- succ(X, Z).
times(one(b), X, X).
times(zero(R), S, zero(RS)) :- times(R, S, RS).
times(one(R), S, RSS) :- ','(times(R, S, RS), add(S, zero(RS), RSS)).


Query: times(a,a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

times_in_3: (f,f,b) (f,f,f)

add_in_3: (f,f,f) (f,f,b)

binaryZ_in_1: (f) (b)

binary_in_1: (f) (b)

addz_in_3: (f,f,f) (f,f,b)

addx_in_3: (f,f,f) (f,f,b)

addy_in_3: (f,f,f) (f,f,b)

addc_in_3: (f,f,f) (f,f,b)

succZ_in_2: (f,f) (f,b)

succ_in_2: (f,f) (f,b)

addC_in_3: (f,f,f) (f,f,b)

addX_in_3: (f,f,f) (f,f,b)

addY_in_3: (f,f,f) (f,f,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> U35_AAG(R, S, RS, times_in_aag(R, S, RS))
   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)
   TIMES_IN_AAG(one(R), S, RSS) -> U36_AAG(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAG(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> U35_AAA(R, S, RS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(one(R), S, RSS) -> U36_AAA(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAA(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAA(S, zero(RS), RSS)
   ADD_IN_AAA(X, b, X) -> U1_AAA(X, binaryZ_in_a(X))
   ADD_IN_AAA(X, b, X) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> U29_A(X, binaryZ_in_a(X))
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(one(X)) -> U30_A(X, binary_in_a(X))
   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> U27_A(X, binaryZ_in_a(X))
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> U28_A(X, binary_in_a(X))
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)
   ADD_IN_AAA(b, Y, Y) -> U2_AAA(Y, binaryZ_in_a(Y))
   ADD_IN_AAA(b, Y, Y) -> BINARYZ_IN_A(Y)
   ADD_IN_AAA(X, Y, Z) -> U3_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADD_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> U10_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> U11_AAA(X, Y, Z, addx_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDX_IN_AAA(one(X), b, one(X)) -> U4_AAA(X, binary_in_a(X))
   ADDX_IN_AAA(one(X), b, one(X)) -> BINARY_IN_A(X)
   ADDX_IN_AAA(zero(X), b, zero(X)) -> U5_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA(zero(X), b, zero(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA(X, Y, Z) -> U6_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> U12_AAA(X, Y, Z, addy_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(b, one(Y), one(Y)) -> U7_AAA(Y, binary_in_a(Y))
   ADDY_IN_AAA(b, one(Y), one(Y)) -> BINARY_IN_A(Y)
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> U8_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA(X, Y, Z) -> U9_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> U13_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, b, Z) -> U14_AAA(X, Z, succZ_in_aa(X, Z))
   ADDC_IN_AAA(X, b, Z) -> SUCCZ_IN_AA(X, Z)
   SUCCZ_IN_AA(zero(X), one(X)) -> U33_AA(X, binaryZ_in_a(X))
   SUCCZ_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCCZ_IN_AA(one(X), zero(Z)) -> U34_AA(X, Z, succ_in_aa(X, Z))
   SUCCZ_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   SUCC_IN_AA(zero(X), one(X)) -> U31_AA(X, binaryZ_in_a(X))
   SUCC_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCC_IN_AA(one(X), zero(Z)) -> U32_AA(X, Z, succ_in_aa(X, Z))
   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDC_IN_AAA(b, Y, Z) -> U15_AAA(Y, Z, succZ_in_aa(Y, Z))
   ADDC_IN_AAA(b, Y, Z) -> SUCCZ_IN_AA(Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> U16_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> U23_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> U24_AAA(X, Y, Z, addX_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> U17_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> U18_AAA(X, Z, succ_in_aa(X, Z))
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> U19_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> U25_AAA(X, Y, Z, addY_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> U20_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> U21_AAA(Y, Z, succ_in_aa(Y, Z))
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> SUCC_IN_AA(Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> U22_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> U26_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAG(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAG(S, zero(RS), RSS)
   ADD_IN_AAG(X, b, X) -> U1_AAG(X, binaryZ_in_g(X))
   ADD_IN_AAG(X, b, X) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> U29_G(X, binaryZ_in_g(X))
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(one(X)) -> U30_G(X, binary_in_g(X))
   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> U27_G(X, binaryZ_in_g(X))
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> U28_G(X, binary_in_g(X))
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
   ADD_IN_AAG(b, Y, Y) -> U2_AAG(Y, binaryZ_in_g(Y))
   ADD_IN_AAG(b, Y, Y) -> BINARYZ_IN_G(Y)
   ADD_IN_AAG(X, Y, Z) -> U3_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADD_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> U10_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> U11_AAG(X, Y, Z, addx_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDX_IN_AAG(one(X), b, one(X)) -> U4_AAG(X, binary_in_g(X))
   ADDX_IN_AAG(one(X), b, one(X)) -> BINARY_IN_G(X)
   ADDX_IN_AAG(zero(X), b, zero(X)) -> U5_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG(zero(X), b, zero(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG(X, Y, Z) -> U6_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> U12_AAG(X, Y, Z, addy_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(b, one(Y), one(Y)) -> U7_AAG(Y, binary_in_g(Y))
   ADDY_IN_AAG(b, one(Y), one(Y)) -> BINARY_IN_G(Y)
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> U8_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG(X, Y, Z) -> U9_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> U13_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, b, Z) -> U14_AAG(X, Z, succZ_in_ag(X, Z))
   ADDC_IN_AAG(X, b, Z) -> SUCCZ_IN_AG(X, Z)
   SUCCZ_IN_AG(zero(X), one(X)) -> U33_AG(X, binaryZ_in_g(X))
   SUCCZ_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCCZ_IN_AG(one(X), zero(Z)) -> U34_AG(X, Z, succ_in_ag(X, Z))
   SUCCZ_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   SUCC_IN_AG(zero(X), one(X)) -> U31_AG(X, binaryZ_in_g(X))
   SUCC_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCC_IN_AG(one(X), zero(Z)) -> U32_AG(X, Z, succ_in_ag(X, Z))
   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDC_IN_AAG(b, Y, Z) -> U15_AAG(Y, Z, succZ_in_ag(Y, Z))
   ADDC_IN_AAG(b, Y, Z) -> SUCCZ_IN_AG(Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> U16_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> U23_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> U24_AAG(X, Y, Z, addX_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> U17_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> U18_AAG(X, Z, succ_in_ag(X, Z))
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> U19_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> U25_AAG(X, Y, Z, addY_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> U20_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> U21_AAG(Y, Z, succ_in_ag(Y, Z))
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> SUCC_IN_AG(Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> U22_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> U26_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)

U35_AAG(x1, x2, x3, x4)  =  U35_AAG(x4)

U36_AAG(x1, x2, x3, x4)  =  U36_AAG(x3, x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA

U35_AAA(x1, x2, x3, x4)  =  U35_AAA(x4)

U36_AAA(x1, x2, x3, x4)  =  U36_AAA(x4)

U37_AAA(x1, x2, x3, x4)  =  U37_AAA(x1, x4)

ADD_IN_AAA(x1, x2, x3)  =  ADD_IN_AAA

U1_AAA(x1, x2)  =  U1_AAA(x2)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

U29_A(x1, x2)  =  U29_A(x2)

U30_A(x1, x2)  =  U30_A(x2)

BINARY_IN_A(x1)  =  BINARY_IN_A

U27_A(x1, x2)  =  U27_A(x2)

U28_A(x1, x2)  =  U28_A(x2)

U2_AAA(x1, x2)  =  U2_AAA(x2)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

U10_AAA(x1, x2, x3, x4)  =  U10_AAA(x4)

U11_AAA(x1, x2, x3, x4)  =  U11_AAA(x4)

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

U4_AAA(x1, x2)  =  U4_AAA(x2)

U5_AAA(x1, x2)  =  U5_AAA(x2)

U6_AAA(x1, x2, x3, x4)  =  U6_AAA(x4)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

U7_AAA(x1, x2)  =  U7_AAA(x2)

U8_AAA(x1, x2)  =  U8_AAA(x2)

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

U14_AAA(x1, x2, x3)  =  U14_AAA(x3)

SUCCZ_IN_AA(x1, x2)  =  SUCCZ_IN_AA

U33_AA(x1, x2)  =  U33_AA(x2)

U34_AA(x1, x2, x3)  =  U34_AA(x3)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA

U31_AA(x1, x2)  =  U31_AA(x2)

U32_AA(x1, x2, x3)  =  U32_AA(x3)

U15_AAA(x1, x2, x3)  =  U15_AAA(x3)

U16_AAA(x1, x2, x3, x4)  =  U16_AAA(x4)

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

U23_AAA(x1, x2, x3, x4)  =  U23_AAA(x4)

U24_AAA(x1, x2, x3, x4)  =  U24_AAA(x4)

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

U17_AAA(x1, x2)  =  U17_AAA(x2)

U18_AAA(x1, x2, x3)  =  U18_AAA(x3)

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x1, x4)

ADD_IN_AAG(x1, x2, x3)  =  ADD_IN_AAG(x3)

U1_AAG(x1, x2)  =  U1_AAG(x1, x2)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

U29_G(x1, x2)  =  U29_G(x2)

U30_G(x1, x2)  =  U30_G(x2)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)

U27_G(x1, x2)  =  U27_G(x2)

U28_G(x1, x2)  =  U28_G(x2)

U2_AAG(x1, x2)  =  U2_AAG(x1, x2)

U3_AAG(x1, x2, x3, x4)  =  U3_AAG(x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

U10_AAG(x1, x2, x3, x4)  =  U10_AAG(x4)

U11_AAG(x1, x2, x3, x4)  =  U11_AAG(x4)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

U4_AAG(x1, x2)  =  U4_AAG(x1, x2)

U5_AAG(x1, x2)  =  U5_AAG(x1, x2)

U6_AAG(x1, x2, x3, x4)  =  U6_AAG(x4)

U12_AAG(x1, x2, x3, x4)  =  U12_AAG(x4)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

U7_AAG(x1, x2)  =  U7_AAG(x1, x2)

U8_AAG(x1, x2)  =  U8_AAG(x1, x2)

U9_AAG(x1, x2, x3, x4)  =  U9_AAG(x4)

U13_AAG(x1, x2, x3, x4)  =  U13_AAG(x4)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

U14_AAG(x1, x2, x3)  =  U14_AAG(x3)

SUCCZ_IN_AG(x1, x2)  =  SUCCZ_IN_AG(x2)

U33_AG(x1, x2)  =  U33_AG(x1, x2)

U34_AG(x1, x2, x3)  =  U34_AG(x3)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)

U31_AG(x1, x2)  =  U31_AG(x1, x2)

U32_AG(x1, x2, x3)  =  U32_AG(x3)

U15_AAG(x1, x2, x3)  =  U15_AAG(x3)

U16_AAG(x1, x2, x3, x4)  =  U16_AAG(x4)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

U23_AAG(x1, x2, x3, x4)  =  U23_AAG(x4)

U24_AAG(x1, x2, x3, x4)  =  U24_AAG(x4)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

U17_AAG(x1, x2)  =  U17_AAG(x1, x2)

U18_AAG(x1, x2, x3)  =  U18_AAG(x3)

U19_AAG(x1, x2, x3, x4)  =  U19_AAG(x4)

U25_AAG(x1, x2, x3, x4)  =  U25_AAG(x4)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)

U20_AAG(x1, x2)  =  U20_AAG(x1, x2)

U21_AAG(x1, x2, x3)  =  U21_AAG(x3)

U22_AAG(x1, x2, x3, x4)  =  U22_AAG(x4)

U26_AAG(x1, x2, x3, x4)  =  U26_AAG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> U35_AAG(R, S, RS, times_in_aag(R, S, RS))
   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)
   TIMES_IN_AAG(one(R), S, RSS) -> U36_AAG(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAG(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> U35_AAA(R, S, RS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(one(R), S, RSS) -> U36_AAA(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAA(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAA(S, zero(RS), RSS)
   ADD_IN_AAA(X, b, X) -> U1_AAA(X, binaryZ_in_a(X))
   ADD_IN_AAA(X, b, X) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> U29_A(X, binaryZ_in_a(X))
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(one(X)) -> U30_A(X, binary_in_a(X))
   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> U27_A(X, binaryZ_in_a(X))
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> U28_A(X, binary_in_a(X))
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)
   ADD_IN_AAA(b, Y, Y) -> U2_AAA(Y, binaryZ_in_a(Y))
   ADD_IN_AAA(b, Y, Y) -> BINARYZ_IN_A(Y)
   ADD_IN_AAA(X, Y, Z) -> U3_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADD_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> U10_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> U11_AAA(X, Y, Z, addx_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDX_IN_AAA(one(X), b, one(X)) -> U4_AAA(X, binary_in_a(X))
   ADDX_IN_AAA(one(X), b, one(X)) -> BINARY_IN_A(X)
   ADDX_IN_AAA(zero(X), b, zero(X)) -> U5_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA(zero(X), b, zero(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA(X, Y, Z) -> U6_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> U12_AAA(X, Y, Z, addy_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(b, one(Y), one(Y)) -> U7_AAA(Y, binary_in_a(Y))
   ADDY_IN_AAA(b, one(Y), one(Y)) -> BINARY_IN_A(Y)
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> U8_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA(X, Y, Z) -> U9_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> U13_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, b, Z) -> U14_AAA(X, Z, succZ_in_aa(X, Z))
   ADDC_IN_AAA(X, b, Z) -> SUCCZ_IN_AA(X, Z)
   SUCCZ_IN_AA(zero(X), one(X)) -> U33_AA(X, binaryZ_in_a(X))
   SUCCZ_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCCZ_IN_AA(one(X), zero(Z)) -> U34_AA(X, Z, succ_in_aa(X, Z))
   SUCCZ_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   SUCC_IN_AA(zero(X), one(X)) -> U31_AA(X, binaryZ_in_a(X))
   SUCC_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCC_IN_AA(one(X), zero(Z)) -> U32_AA(X, Z, succ_in_aa(X, Z))
   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDC_IN_AAA(b, Y, Z) -> U15_AAA(Y, Z, succZ_in_aa(Y, Z))
   ADDC_IN_AAA(b, Y, Z) -> SUCCZ_IN_AA(Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> U16_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> U23_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> U24_AAA(X, Y, Z, addX_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> U17_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> U18_AAA(X, Z, succ_in_aa(X, Z))
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> U19_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> U25_AAA(X, Y, Z, addY_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> U20_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> U21_AAA(Y, Z, succ_in_aa(Y, Z))
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> SUCC_IN_AA(Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> U22_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> U26_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAG(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAG(S, zero(RS), RSS)
   ADD_IN_AAG(X, b, X) -> U1_AAG(X, binaryZ_in_g(X))
   ADD_IN_AAG(X, b, X) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> U29_G(X, binaryZ_in_g(X))
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(one(X)) -> U30_G(X, binary_in_g(X))
   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> U27_G(X, binaryZ_in_g(X))
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> U28_G(X, binary_in_g(X))
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
   ADD_IN_AAG(b, Y, Y) -> U2_AAG(Y, binaryZ_in_g(Y))
   ADD_IN_AAG(b, Y, Y) -> BINARYZ_IN_G(Y)
   ADD_IN_AAG(X, Y, Z) -> U3_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADD_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> U10_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> U11_AAG(X, Y, Z, addx_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDX_IN_AAG(one(X), b, one(X)) -> U4_AAG(X, binary_in_g(X))
   ADDX_IN_AAG(one(X), b, one(X)) -> BINARY_IN_G(X)
   ADDX_IN_AAG(zero(X), b, zero(X)) -> U5_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG(zero(X), b, zero(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG(X, Y, Z) -> U6_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> U12_AAG(X, Y, Z, addy_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(b, one(Y), one(Y)) -> U7_AAG(Y, binary_in_g(Y))
   ADDY_IN_AAG(b, one(Y), one(Y)) -> BINARY_IN_G(Y)
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> U8_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG(X, Y, Z) -> U9_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> U13_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, b, Z) -> U14_AAG(X, Z, succZ_in_ag(X, Z))
   ADDC_IN_AAG(X, b, Z) -> SUCCZ_IN_AG(X, Z)
   SUCCZ_IN_AG(zero(X), one(X)) -> U33_AG(X, binaryZ_in_g(X))
   SUCCZ_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCCZ_IN_AG(one(X), zero(Z)) -> U34_AG(X, Z, succ_in_ag(X, Z))
   SUCCZ_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   SUCC_IN_AG(zero(X), one(X)) -> U31_AG(X, binaryZ_in_g(X))
   SUCC_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCC_IN_AG(one(X), zero(Z)) -> U32_AG(X, Z, succ_in_ag(X, Z))
   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDC_IN_AAG(b, Y, Z) -> U15_AAG(Y, Z, succZ_in_ag(Y, Z))
   ADDC_IN_AAG(b, Y, Z) -> SUCCZ_IN_AG(Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> U16_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> U23_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> U24_AAG(X, Y, Z, addX_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> U17_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> U18_AAG(X, Z, succ_in_ag(X, Z))
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> U19_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> U25_AAG(X, Y, Z, addY_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> U20_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> U21_AAG(Y, Z, succ_in_ag(Y, Z))
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> SUCC_IN_AG(Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> U22_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> U26_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)

U35_AAG(x1, x2, x3, x4)  =  U35_AAG'(x4)

U36_AAG(x1, x2, x3, x4)  =  U36_AAG(x3, x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA

U35_AAA(x1, x2, x3, x4)  =  U35_AAA(x4)

U36_AAA(x1, x2, x3, x4)  =  U36_AAA(x4)

U37_AAA(x1, x2, x3, x4)  =  U37_AAA(x1, x4)

ADD_IN_AAA(x1, x2, x3)  =  ADD_IN_AAA

U1_AAA(x1, x2)  =  U1_AAA(x2)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

U29_A(x1, x2)  =  U29_A(x2)

U30_A(x1, x2)  =  U30_A(x2)

BINARY_IN_A(x1)  =  BINARY_IN_A

U27_A(x1, x2)  =  U27_A(x2)

U28_A(x1, x2)  =  U28_A(x2)

U2_AAA(x1, x2)  =  U2_AAA(x2)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

U10_AAA(x1, x2, x3, x4)  =  U10_AAA(x4)

U11_AAA(x1, x2, x3, x4)  =  U11_AAA(x4)

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

U4_AAA(x1, x2)  =  U4_AAA(x2)

U5_AAA(x1, x2)  =  U5_AAA(x2)

U6_AAA(x1, x2, x3, x4)  =  U6_AAA(x4)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

U7_AAA(x1, x2)  =  U7_AAA(x2)

U8_AAA(x1, x2)  =  U8_AAA(x2)

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

U14_AAA(x1, x2, x3)  =  U14_AAA(x3)

SUCCZ_IN_AA(x1, x2)  =  SUCCZ_IN_AA

U33_AA(x1, x2)  =  U33_AA(x2)

U34_AA(x1, x2, x3)  =  U34_AA(x3)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA

U31_AA(x1, x2)  =  U31_AA(x2)

U32_AA(x1, x2, x3)  =  U32_AA(x3)

U15_AAA(x1, x2, x3)  =  U15_AAA(x3)

U16_AAA(x1, x2, x3, x4)  =  U16_AAA(x4)

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

U23_AAA(x1, x2, x3, x4)  =  U23_AAA(x4)

U24_AAA(x1, x2, x3, x4)  =  U24_AAA(x4)

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

U17_AAA(x1, x2)  =  U17_AAA(x2)

U18_AAA(x1, x2, x3)  =  U18_AAA(x3)

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x1, x4)

ADD_IN_AAG(x1, x2, x3)  =  ADD_IN_AAG(x3)

U1_AAG(x1, x2)  =  U1_AAG(x1, x2)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

U29_G(x1, x2)  =  U29_G(x2)

U30_G(x1, x2)  =  U30_G(x2)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)

U27_G(x1, x2)  =  U27_G(x2)

U28_G(x1, x2)  =  U28_G(x2)

U2_AAG(x1, x2)  =  U2_AAG(x1, x2)

U3_AAG(x1, x2, x3, x4)  =  U3_AAG(x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

U10_AAG(x1, x2, x3, x4)  =  U10_AAG(x4)

U11_AAG(x1, x2, x3, x4)  =  U11_AAG(x4)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

U4_AAG(x1, x2)  =  U4_AAG(x1, x2)

U5_AAG(x1, x2)  =  U5_AAG(x1, x2)

U6_AAG(x1, x2, x3, x4)  =  U6_AAG(x4)

U12_AAG(x1, x2, x3, x4)  =  U12_AAG(x4)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

U7_AAG(x1, x2)  =  U7_AAG(x1, x2)

U8_AAG(x1, x2)  =  U8_AAG(x1, x2)

U9_AAG(x1, x2, x3, x4)  =  U9_AAG(x4)

U13_AAG(x1, x2, x3, x4)  =  U13_AAG(x4)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

U14_AAG(x1, x2, x3)  =  U14_AAG(x3)

SUCCZ_IN_AG(x1, x2)  =  SUCCZ_IN_AG(x2)

U33_AG(x1, x2)  =  U33_AG(x1, x2)

U34_AG(x1, x2, x3)  =  U34_AG(x3)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)

U31_AG(x1, x2)  =  U31_AG(x1, x2)

U32_AG(x1, x2, x3)  =  U32_AG(x3)

U15_AAG(x1, x2, x3)  =  U15_AAG(x3)

U16_AAG(x1, x2, x3, x4)  =  U16_AAG(x4)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

U23_AAG(x1, x2, x3, x4)  =  U23_AAG(x4)

U24_AAG(x1, x2, x3, x4)  =  U24_AAG(x4)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

U17_AAG(x1, x2)  =  U17_AAG(x1, x2)

U18_AAG(x1, x2, x3)  =  U18_AAG(x3)

U19_AAG(x1, x2, x3, x4)  =  U19_AAG(x4)

U25_AAG(x1, x2, x3, x4)  =  U25_AAG(x4)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)

U20_AAG(x1, x2)  =  U20_AAG(x1, x2)

U21_AAG(x1, x2, x3)  =  U21_AAG(x3)

U22_AAG(x1, x2, x3, x4)  =  U22_AAG(x4)

U26_AAG(x1, x2, x3, x4)  =  U26_AAG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 8 SCCs with 109 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
The graph contains the following edges 1 > 1


*BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
The graph contains the following edges 1 > 1


*BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
The graph contains the following edges 1 > 1


*BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(zero(Z)) -> SUCC_IN_AG(Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUCC_IN_AG(zero(Z)) -> SUCC_IN_AG(Z)
The graph contains the following edges 1 > 1


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(zero(Z)) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(one(Z)) -> ADDX_IN_AAG(Z)
   ADDZ_IN_AAG(one(Z)) -> ADDY_IN_AAG(Z)
   ADDY_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(zero(Z)) -> ADDC_IN_AAG(Z)
   ADDC_IN_AAG(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(one(Z)) -> ADDZ_IN_AAG(Z)
   ADDC_IN_AAG^1(zero(Z)) -> ADDX_IN_AAG^1(Z)
   ADDX_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(zero(Z)) -> ADDY_IN_AAG^1(Z)
   ADDY_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(one(Z)) -> ADDC_IN_AAG(Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ADDZ_IN_AAG(one(Z)) -> ADDX_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(zero(Z)) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDX_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 >= 1


*ADDY_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(one(Z)) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(one(Z)) -> ADDY_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(zero(Z)) -> ADDC_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDC_IN_AAG(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(one(Z)) -> ADDC_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDX_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDY_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(zero(Z)) -> ADDX_IN_AAG^1(Z)
The graph contains the following edges 1 > 1


*ADDC_IN_AAG^1(zero(Z)) -> ADDY_IN_AAG^1(Z)
The graph contains the following edges 1 > 1


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

BINARY_IN_A(x1)  =  BINARY_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

BINARY_IN_A(x1)  =  BINARY_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A -> BINARY_IN_A
   BINARY_IN_A -> BINARYZ_IN_A
   BINARYZ_IN_A -> BINARYZ_IN_A
   BINARY_IN_A -> BINARY_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(33) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = BINARYZ_IN_A evaluates to  t =BINARYZ_IN_A

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from BINARYZ_IN_A to BINARYZ_IN_A.




----------------------------------------

(34)
NO

----------------------------------------

(35)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(36) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(37)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(38) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(39)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA -> SUCC_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(40)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1


We have to consider all (P,R,Pi)-chains
----------------------------------------

(41) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(42)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1


We have to consider all (P,R,Pi)-chains
----------------------------------------

(43)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(44) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(45)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(46)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g

U27_g(x1, x2)  =  U27_g(x2)

binaryZ_out_g(x1)  =  binaryZ_out_g

U28_g(x1, x2)  =  U28_g(x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2)

U14_aag(x1, x2, x3)  =  U14_aag(x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1)

U34_ag(x1, x2, x3)  =  U34_ag(x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x3)

U15_aag(x1, x2, x3)  =  U15_aag(x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2)

U18_aag(x1, x2, x3)  =  U18_aag(x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2)

U21_aag(x1, x2, x3)  =  U21_aag(x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(47) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(48)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(49) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

times_in_3: (f,f,b) (f,f,f)

add_in_3: (f,f,f) (f,f,b)

binaryZ_in_1: (f) (b)

binary_in_1: (f) (b)

addz_in_3: (f,f,f) (f,f,b)

addx_in_3: (f,f,f) (f,f,b)

addy_in_3: (f,f,f) (f,f,b)

addc_in_3: (f,f,f) (f,f,b)

succZ_in_2: (f,f) (f,b)

succ_in_2: (f,f) (f,b)

addC_in_3: (f,f,f) (f,f,b)

addX_in_3: (f,f,f) (f,f,b)

addY_in_3: (f,f,f) (f,f,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(50)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)



----------------------------------------

(51) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> U35_AAG(R, S, RS, times_in_aag(R, S, RS))
   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)
   TIMES_IN_AAG(one(R), S, RSS) -> U36_AAG(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAG(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> U35_AAA(R, S, RS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(one(R), S, RSS) -> U36_AAA(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAA(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAA(S, zero(RS), RSS)
   ADD_IN_AAA(X, b, X) -> U1_AAA(X, binaryZ_in_a(X))
   ADD_IN_AAA(X, b, X) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> U29_A(X, binaryZ_in_a(X))
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(one(X)) -> U30_A(X, binary_in_a(X))
   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> U27_A(X, binaryZ_in_a(X))
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> U28_A(X, binary_in_a(X))
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)
   ADD_IN_AAA(b, Y, Y) -> U2_AAA(Y, binaryZ_in_a(Y))
   ADD_IN_AAA(b, Y, Y) -> BINARYZ_IN_A(Y)
   ADD_IN_AAA(X, Y, Z) -> U3_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADD_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> U10_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> U11_AAA(X, Y, Z, addx_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDX_IN_AAA(one(X), b, one(X)) -> U4_AAA(X, binary_in_a(X))
   ADDX_IN_AAA(one(X), b, one(X)) -> BINARY_IN_A(X)
   ADDX_IN_AAA(zero(X), b, zero(X)) -> U5_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA(zero(X), b, zero(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA(X, Y, Z) -> U6_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> U12_AAA(X, Y, Z, addy_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(b, one(Y), one(Y)) -> U7_AAA(Y, binary_in_a(Y))
   ADDY_IN_AAA(b, one(Y), one(Y)) -> BINARY_IN_A(Y)
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> U8_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA(X, Y, Z) -> U9_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> U13_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, b, Z) -> U14_AAA(X, Z, succZ_in_aa(X, Z))
   ADDC_IN_AAA(X, b, Z) -> SUCCZ_IN_AA(X, Z)
   SUCCZ_IN_AA(zero(X), one(X)) -> U33_AA(X, binaryZ_in_a(X))
   SUCCZ_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCCZ_IN_AA(one(X), zero(Z)) -> U34_AA(X, Z, succ_in_aa(X, Z))
   SUCCZ_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   SUCC_IN_AA(zero(X), one(X)) -> U31_AA(X, binaryZ_in_a(X))
   SUCC_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCC_IN_AA(one(X), zero(Z)) -> U32_AA(X, Z, succ_in_aa(X, Z))
   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDC_IN_AAA(b, Y, Z) -> U15_AAA(Y, Z, succZ_in_aa(Y, Z))
   ADDC_IN_AAA(b, Y, Z) -> SUCCZ_IN_AA(Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> U16_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> U23_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> U24_AAA(X, Y, Z, addX_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> U17_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> U18_AAA(X, Z, succ_in_aa(X, Z))
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> U19_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> U25_AAA(X, Y, Z, addY_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> U20_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> U21_AAA(Y, Z, succ_in_aa(Y, Z))
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> SUCC_IN_AA(Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> U22_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> U26_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAG(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAG(S, zero(RS), RSS)
   ADD_IN_AAG(X, b, X) -> U1_AAG(X, binaryZ_in_g(X))
   ADD_IN_AAG(X, b, X) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> U29_G(X, binaryZ_in_g(X))
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(one(X)) -> U30_G(X, binary_in_g(X))
   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> U27_G(X, binaryZ_in_g(X))
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> U28_G(X, binary_in_g(X))
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
   ADD_IN_AAG(b, Y, Y) -> U2_AAG(Y, binaryZ_in_g(Y))
   ADD_IN_AAG(b, Y, Y) -> BINARYZ_IN_G(Y)
   ADD_IN_AAG(X, Y, Z) -> U3_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADD_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> U10_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> U11_AAG(X, Y, Z, addx_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDX_IN_AAG(one(X), b, one(X)) -> U4_AAG(X, binary_in_g(X))
   ADDX_IN_AAG(one(X), b, one(X)) -> BINARY_IN_G(X)
   ADDX_IN_AAG(zero(X), b, zero(X)) -> U5_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG(zero(X), b, zero(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG(X, Y, Z) -> U6_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> U12_AAG(X, Y, Z, addy_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(b, one(Y), one(Y)) -> U7_AAG(Y, binary_in_g(Y))
   ADDY_IN_AAG(b, one(Y), one(Y)) -> BINARY_IN_G(Y)
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> U8_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG(X, Y, Z) -> U9_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> U13_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, b, Z) -> U14_AAG(X, Z, succZ_in_ag(X, Z))
   ADDC_IN_AAG(X, b, Z) -> SUCCZ_IN_AG(X, Z)
   SUCCZ_IN_AG(zero(X), one(X)) -> U33_AG(X, binaryZ_in_g(X))
   SUCCZ_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCCZ_IN_AG(one(X), zero(Z)) -> U34_AG(X, Z, succ_in_ag(X, Z))
   SUCCZ_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   SUCC_IN_AG(zero(X), one(X)) -> U31_AG(X, binaryZ_in_g(X))
   SUCC_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCC_IN_AG(one(X), zero(Z)) -> U32_AG(X, Z, succ_in_ag(X, Z))
   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDC_IN_AAG(b, Y, Z) -> U15_AAG(Y, Z, succZ_in_ag(Y, Z))
   ADDC_IN_AAG(b, Y, Z) -> SUCCZ_IN_AG(Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> U16_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> U23_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> U24_AAG(X, Y, Z, addX_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> U17_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> U18_AAG(X, Z, succ_in_ag(X, Z))
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> U19_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> U25_AAG(X, Y, Z, addY_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> U20_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> U21_AAG(Y, Z, succ_in_ag(Y, Z))
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> SUCC_IN_AG(Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> U22_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> U26_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)

U35_AAG(x1, x2, x3, x4)  =  U35_AAG(x3, x4)

U36_AAG(x1, x2, x3, x4)  =  U36_AAG(x3, x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA

U35_AAA(x1, x2, x3, x4)  =  U35_AAA(x4)

U36_AAA(x1, x2, x3, x4)  =  U36_AAA(x4)

U37_AAA(x1, x2, x3, x4)  =  U37_AAA(x1, x4)

ADD_IN_AAA(x1, x2, x3)  =  ADD_IN_AAA

U1_AAA(x1, x2)  =  U1_AAA(x2)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

U29_A(x1, x2)  =  U29_A(x2)

U30_A(x1, x2)  =  U30_A(x2)

BINARY_IN_A(x1)  =  BINARY_IN_A

U27_A(x1, x2)  =  U27_A(x2)

U28_A(x1, x2)  =  U28_A(x2)

U2_AAA(x1, x2)  =  U2_AAA(x2)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

U10_AAA(x1, x2, x3, x4)  =  U10_AAA(x4)

U11_AAA(x1, x2, x3, x4)  =  U11_AAA(x4)

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

U4_AAA(x1, x2)  =  U4_AAA(x2)

U5_AAA(x1, x2)  =  U5_AAA(x2)

U6_AAA(x1, x2, x3, x4)  =  U6_AAA(x4)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

U7_AAA(x1, x2)  =  U7_AAA(x2)

U8_AAA(x1, x2)  =  U8_AAA(x2)

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

U14_AAA(x1, x2, x3)  =  U14_AAA(x3)

SUCCZ_IN_AA(x1, x2)  =  SUCCZ_IN_AA

U33_AA(x1, x2)  =  U33_AA(x2)

U34_AA(x1, x2, x3)  =  U34_AA(x3)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA

U31_AA(x1, x2)  =  U31_AA(x2)

U32_AA(x1, x2, x3)  =  U32_AA(x3)

U15_AAA(x1, x2, x3)  =  U15_AAA(x3)

U16_AAA(x1, x2, x3, x4)  =  U16_AAA(x4)

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

U23_AAA(x1, x2, x3, x4)  =  U23_AAA(x4)

U24_AAA(x1, x2, x3, x4)  =  U24_AAA(x4)

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

U17_AAA(x1, x2)  =  U17_AAA(x2)

U18_AAA(x1, x2, x3)  =  U18_AAA(x3)

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x1, x3, x4)

ADD_IN_AAG(x1, x2, x3)  =  ADD_IN_AAG(x3)

U1_AAG(x1, x2)  =  U1_AAG(x1, x2)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

U29_G(x1, x2)  =  U29_G(x1, x2)

U30_G(x1, x2)  =  U30_G(x1, x2)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)

U27_G(x1, x2)  =  U27_G(x1, x2)

U28_G(x1, x2)  =  U28_G(x1, x2)

U2_AAG(x1, x2)  =  U2_AAG(x1, x2)

U3_AAG(x1, x2, x3, x4)  =  U3_AAG(x3, x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

U10_AAG(x1, x2, x3, x4)  =  U10_AAG(x3, x4)

U11_AAG(x1, x2, x3, x4)  =  U11_AAG(x3, x4)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

U4_AAG(x1, x2)  =  U4_AAG(x1, x2)

U5_AAG(x1, x2)  =  U5_AAG(x1, x2)

U6_AAG(x1, x2, x3, x4)  =  U6_AAG(x3, x4)

U12_AAG(x1, x2, x3, x4)  =  U12_AAG(x3, x4)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

U7_AAG(x1, x2)  =  U7_AAG(x1, x2)

U8_AAG(x1, x2)  =  U8_AAG(x1, x2)

U9_AAG(x1, x2, x3, x4)  =  U9_AAG(x3, x4)

U13_AAG(x1, x2, x3, x4)  =  U13_AAG(x3, x4)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

U14_AAG(x1, x2, x3)  =  U14_AAG(x2, x3)

SUCCZ_IN_AG(x1, x2)  =  SUCCZ_IN_AG(x2)

U33_AG(x1, x2)  =  U33_AG(x1, x2)

U34_AG(x1, x2, x3)  =  U34_AG(x2, x3)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)

U31_AG(x1, x2)  =  U31_AG(x1, x2)

U32_AG(x1, x2, x3)  =  U32_AG(x2, x3)

U15_AAG(x1, x2, x3)  =  U15_AAG(x2, x3)

U16_AAG(x1, x2, x3, x4)  =  U16_AAG(x3, x4)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

U23_AAG(x1, x2, x3, x4)  =  U23_AAG(x3, x4)

U24_AAG(x1, x2, x3, x4)  =  U24_AAG(x3, x4)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

U17_AAG(x1, x2)  =  U17_AAG(x1, x2)

U18_AAG(x1, x2, x3)  =  U18_AAG(x2, x3)

U19_AAG(x1, x2, x3, x4)  =  U19_AAG(x3, x4)

U25_AAG(x1, x2, x3, x4)  =  U25_AAG(x3, x4)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)

U20_AAG(x1, x2)  =  U20_AAG(x1, x2)

U21_AAG(x1, x2, x3)  =  U21_AAG(x2, x3)

U22_AAG(x1, x2, x3, x4)  =  U22_AAG(x3, x4)

U26_AAG(x1, x2, x3, x4)  =  U26_AAG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(52)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> U35_AAG(R, S, RS, times_in_aag(R, S, RS))
   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)
   TIMES_IN_AAG(one(R), S, RSS) -> U36_AAG(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAG(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> U35_AAA(R, S, RS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(one(R), S, RSS) -> U36_AAA(R, S, RSS, times_in_aaa(R, S, RS))
   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAA(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   U36_AAA(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAA(S, zero(RS), RSS)
   ADD_IN_AAA(X, b, X) -> U1_AAA(X, binaryZ_in_a(X))
   ADD_IN_AAA(X, b, X) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> U29_A(X, binaryZ_in_a(X))
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(one(X)) -> U30_A(X, binary_in_a(X))
   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> U27_A(X, binaryZ_in_a(X))
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> U28_A(X, binary_in_a(X))
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)
   ADD_IN_AAA(b, Y, Y) -> U2_AAA(Y, binaryZ_in_a(Y))
   ADD_IN_AAA(b, Y, Y) -> BINARYZ_IN_A(Y)
   ADD_IN_AAA(X, Y, Z) -> U3_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADD_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> U10_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> U11_AAA(X, Y, Z, addx_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDX_IN_AAA(one(X), b, one(X)) -> U4_AAA(X, binary_in_a(X))
   ADDX_IN_AAA(one(X), b, one(X)) -> BINARY_IN_A(X)
   ADDX_IN_AAA(zero(X), b, zero(X)) -> U5_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA(zero(X), b, zero(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA(X, Y, Z) -> U6_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> U12_AAA(X, Y, Z, addy_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(b, one(Y), one(Y)) -> U7_AAA(Y, binary_in_a(Y))
   ADDY_IN_AAA(b, one(Y), one(Y)) -> BINARY_IN_A(Y)
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> U8_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA(b, zero(Y), zero(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA(X, Y, Z) -> U9_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> U13_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, b, Z) -> U14_AAA(X, Z, succZ_in_aa(X, Z))
   ADDC_IN_AAA(X, b, Z) -> SUCCZ_IN_AA(X, Z)
   SUCCZ_IN_AA(zero(X), one(X)) -> U33_AA(X, binaryZ_in_a(X))
   SUCCZ_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCCZ_IN_AA(one(X), zero(Z)) -> U34_AA(X, Z, succ_in_aa(X, Z))
   SUCCZ_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   SUCC_IN_AA(zero(X), one(X)) -> U31_AA(X, binaryZ_in_a(X))
   SUCC_IN_AA(zero(X), one(X)) -> BINARYZ_IN_A(X)
   SUCC_IN_AA(one(X), zero(Z)) -> U32_AA(X, Z, succ_in_aa(X, Z))
   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDC_IN_AAA(b, Y, Z) -> U15_AAA(Y, Z, succZ_in_aa(Y, Z))
   ADDC_IN_AAA(b, Y, Z) -> SUCCZ_IN_AA(Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> U16_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> U23_AAA(X, Y, Z, addz_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> U24_AAA(X, Y, Z, addX_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> U17_AAA(X, binaryZ_in_a(X))
   ADDX_IN_AAA^1(zero(X), b, one(X)) -> BINARYZ_IN_A(X)
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> U18_AAA(X, Z, succ_in_aa(X, Z))
   ADDX_IN_AAA^1(one(X), b, zero(Z)) -> SUCC_IN_AA(X, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> U19_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> U25_AAA(X, Y, Z, addY_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> U20_AAA(Y, binaryZ_in_a(Y))
   ADDY_IN_AAA^1(b, zero(Y), one(Y)) -> BINARYZ_IN_A(Y)
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> U21_AAA(Y, Z, succ_in_aa(Y, Z))
   ADDY_IN_AAA^1(b, one(Y), zero(Z)) -> SUCC_IN_AA(Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> U22_AAA(X, Y, Z, addC_in_aaa(X, Y, Z))
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> U26_AAA(X, Y, Z, addc_in_aaa(X, Y, Z))
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_AAG(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   U36_AAG(R, S, RSS, times_out_aaa(R, S, RS)) -> ADD_IN_AAG(S, zero(RS), RSS)
   ADD_IN_AAG(X, b, X) -> U1_AAG(X, binaryZ_in_g(X))
   ADD_IN_AAG(X, b, X) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> U29_G(X, binaryZ_in_g(X))
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(one(X)) -> U30_G(X, binary_in_g(X))
   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> U27_G(X, binaryZ_in_g(X))
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> U28_G(X, binary_in_g(X))
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
   ADD_IN_AAG(b, Y, Y) -> U2_AAG(Y, binaryZ_in_g(Y))
   ADD_IN_AAG(b, Y, Y) -> BINARYZ_IN_G(Y)
   ADD_IN_AAG(X, Y, Z) -> U3_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADD_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> U10_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> U11_AAG(X, Y, Z, addx_in_aag(X, Y, Z))
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDX_IN_AAG(one(X), b, one(X)) -> U4_AAG(X, binary_in_g(X))
   ADDX_IN_AAG(one(X), b, one(X)) -> BINARY_IN_G(X)
   ADDX_IN_AAG(zero(X), b, zero(X)) -> U5_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG(zero(X), b, zero(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG(X, Y, Z) -> U6_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> U12_AAG(X, Y, Z, addy_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(b, one(Y), one(Y)) -> U7_AAG(Y, binary_in_g(Y))
   ADDY_IN_AAG(b, one(Y), one(Y)) -> BINARY_IN_G(Y)
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> U8_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG(b, zero(Y), zero(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG(X, Y, Z) -> U9_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> U13_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, b, Z) -> U14_AAG(X, Z, succZ_in_ag(X, Z))
   ADDC_IN_AAG(X, b, Z) -> SUCCZ_IN_AG(X, Z)
   SUCCZ_IN_AG(zero(X), one(X)) -> U33_AG(X, binaryZ_in_g(X))
   SUCCZ_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCCZ_IN_AG(one(X), zero(Z)) -> U34_AG(X, Z, succ_in_ag(X, Z))
   SUCCZ_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   SUCC_IN_AG(zero(X), one(X)) -> U31_AG(X, binaryZ_in_g(X))
   SUCC_IN_AG(zero(X), one(X)) -> BINARYZ_IN_G(X)
   SUCC_IN_AG(one(X), zero(Z)) -> U32_AG(X, Z, succ_in_ag(X, Z))
   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDC_IN_AAG(b, Y, Z) -> U15_AAG(Y, Z, succZ_in_ag(Y, Z))
   ADDC_IN_AAG(b, Y, Z) -> SUCCZ_IN_AG(Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> U16_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> U23_AAG(X, Y, Z, addz_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> U24_AAG(X, Y, Z, addX_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> U17_AAG(X, binaryZ_in_g(X))
   ADDX_IN_AAG^1(zero(X), b, one(X)) -> BINARYZ_IN_G(X)
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> U18_AAG(X, Z, succ_in_ag(X, Z))
   ADDX_IN_AAG^1(one(X), b, zero(Z)) -> SUCC_IN_AG(X, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> U19_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> U25_AAG(X, Y, Z, addY_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> U20_AAG(Y, binaryZ_in_g(Y))
   ADDY_IN_AAG^1(b, zero(Y), one(Y)) -> BINARYZ_IN_G(Y)
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> U21_AAG(Y, Z, succ_in_ag(Y, Z))
   ADDY_IN_AAG^1(b, one(Y), zero(Z)) -> SUCC_IN_AG(Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> U22_AAG(X, Y, Z, addC_in_aag(X, Y, Z))
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> U26_AAG(X, Y, Z, addc_in_aag(X, Y, Z))
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)

U35_AAG(x1, x2, x3, x4)  =  U35_AAG(x3, x4)

U36_AAG(x1, x2, x3, x4)  =  U36_AAG(x3, x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA

U35_AAA(x1, x2, x3, x4)  =  U35_AAA(x4)

U36_AAA(x1, x2, x3, x4)  =  U36_AAA(x4)

U37_AAA(x1, x2, x3, x4)  =  U37_AAA(x1, x4)

ADD_IN_AAA(x1, x2, x3)  =  ADD_IN_AAA

U1_AAA(x1, x2)  =  U1_AAA(x2)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

U29_A(x1, x2)  =  U29_A(x2)

U30_A(x1, x2)  =  U30_A(x2)

BINARY_IN_A(x1)  =  BINARY_IN_A

U27_A(x1, x2)  =  U27_A(x2)

U28_A(x1, x2)  =  U28_A(x2)

U2_AAA(x1, x2)  =  U2_AAA(x2)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

U10_AAA(x1, x2, x3, x4)  =  U10_AAA(x4)

U11_AAA(x1, x2, x3, x4)  =  U11_AAA(x4)

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

U4_AAA(x1, x2)  =  U4_AAA(x2)

U5_AAA(x1, x2)  =  U5_AAA(x2)

U6_AAA(x1, x2, x3, x4)  =  U6_AAA(x4)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

U7_AAA(x1, x2)  =  U7_AAA(x2)

U8_AAA(x1, x2)  =  U8_AAA(x2)

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

U14_AAA(x1, x2, x3)  =  U14_AAA(x3)

SUCCZ_IN_AA(x1, x2)  =  SUCCZ_IN_AA

U33_AA(x1, x2)  =  U33_AA(x2)

U34_AA(x1, x2, x3)  =  U34_AA(x3)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA

U31_AA(x1, x2)  =  U31_AA(x2)

U32_AA(x1, x2, x3)  =  U32_AA(x3)

U15_AAA(x1, x2, x3)  =  U15_AAA(x3)

U16_AAA(x1, x2, x3, x4)  =  U16_AAA(x4)

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

U23_AAA(x1, x2, x3, x4)  =  U23_AAA(x4)

U24_AAA(x1, x2, x3, x4)  =  U24_AAA(x4)

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

U17_AAA(x1, x2)  =  U17_AAA(x2)

U18_AAA(x1, x2, x3)  =  U18_AAA(x3)

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x1, x3, x4)

ADD_IN_AAG(x1, x2, x3)  =  ADD_IN_AAG(x3)

U1_AAG(x1, x2)  =  U1_AAG(x1, x2)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

U29_G(x1, x2)  =  U29_G(x1, x2)

U30_G(x1, x2)  =  U30_G(x1, x2)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)

U27_G(x1, x2)  =  U27_G(x1, x2)

U28_G(x1, x2)  =  U28_G(x1, x2)

U2_AAG(x1, x2)  =  U2_AAG(x1, x2)

U3_AAG(x1, x2, x3, x4)  =  U3_AAG(x3, x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

U10_AAG(x1, x2, x3, x4)  =  U10_AAG(x3, x4)

U11_AAG(x1, x2, x3, x4)  =  U11_AAG(x3, x4)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

U4_AAG(x1, x2)  =  U4_AAG(x1, x2)

U5_AAG(x1, x2)  =  U5_AAG(x1, x2)

U6_AAG(x1, x2, x3, x4)  =  U6_AAG(x3, x4)

U12_AAG(x1, x2, x3, x4)  =  U12_AAG(x3, x4)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

U7_AAG(x1, x2)  =  U7_AAG(x1, x2)

U8_AAG(x1, x2)  =  U8_AAG(x1, x2)

U9_AAG(x1, x2, x3, x4)  =  U9_AAG(x3, x4)

U13_AAG(x1, x2, x3, x4)  =  U13_AAG(x3, x4)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

U14_AAG(x1, x2, x3)  =  U14_AAG(x2, x3)

SUCCZ_IN_AG(x1, x2)  =  SUCCZ_IN_AG(x2)

U33_AG(x1, x2)  =  U33_AG(x1, x2)

U34_AG(x1, x2, x3)  =  U34_AG(x2, x3)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)

U31_AG(x1, x2)  =  U31_AG(x1, x2)

U32_AG(x1, x2, x3)  =  U32_AG(x2, x3)

U15_AAG(x1, x2, x3)  =  U15_AAG(x2, x3)

U16_AAG(x1, x2, x3, x4)  =  U16_AAG(x3, x4)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

U23_AAG(x1, x2, x3, x4)  =  U23_AAG(x3, x4)

U24_AAG(x1, x2, x3, x4)  =  U24_AAG(x3, x4)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

U17_AAG(x1, x2)  =  U17_AAG(x1, x2)

U18_AAG(x1, x2, x3)  =  U18_AAG(x2, x3)

U19_AAG(x1, x2, x3, x4)  =  U19_AAG(x3, x4)

U25_AAG(x1, x2, x3, x4)  =  U25_AAG(x3, x4)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)

U20_AAG(x1, x2)  =  U20_AAG(x1, x2)

U21_AAG(x1, x2, x3)  =  U21_AAG(x2, x3)

U22_AAG(x1, x2, x3, x4)  =  U22_AAG(x3, x4)

U26_AAG(x1, x2, x3, x4)  =  U26_AAG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(53) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 8 SCCs with 109 less nodes.
----------------------------------------

(54)
Complex Obligation (AND)

----------------------------------------

(55)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

BINARYZ_IN_G(x1)  =  BINARYZ_IN_G(x1)

BINARY_IN_G(x1)  =  BINARY_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(56) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(57)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(58) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(59)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
   BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
   BINARY_IN_G(one(X)) -> BINARY_IN_G(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(60) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*BINARY_IN_G(zero(X)) -> BINARYZ_IN_G(X)
The graph contains the following edges 1 > 1


*BINARY_IN_G(one(X)) -> BINARY_IN_G(X)
The graph contains the following edges 1 > 1


*BINARYZ_IN_G(zero(X)) -> BINARYZ_IN_G(X)
The graph contains the following edges 1 > 1


*BINARYZ_IN_G(one(X)) -> BINARY_IN_G(X)
The graph contains the following edges 1 > 1


----------------------------------------

(61)
YES

----------------------------------------

(62)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(63) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(64)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(one(X), zero(Z)) -> SUCC_IN_AG(X, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCC_IN_AG(x1, x2)  =  SUCC_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(65) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AG(zero(Z)) -> SUCC_IN_AG(Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(67) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUCC_IN_AG(zero(Z)) -> SUCC_IN_AG(Z)
The graph contains the following edges 1 > 1


----------------------------------------

(68)
YES

----------------------------------------

(69)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(70) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(71)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(zero(X), one(Y), one(Z)) -> ADDX_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), zero(Y), one(Z)) -> ADDY_IN_AAG(X, Y, Z)
   ADDY_IN_AAG(X, Y, Z) -> ADDZ_IN_AAG(X, Y, Z)
   ADDZ_IN_AAG(one(X), one(Y), zero(Z)) -> ADDC_IN_AAG(X, Y, Z)
   ADDC_IN_AAG(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAG(X, Y, Z)
   ADDC_IN_AAG^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAG^1(X, Y, Z)
   ADDX_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAG^1(X, Y, Z)
   ADDY_IN_AAG^1(X, Y, Z) -> ADDC_IN_AAG^1(X, Y, Z)
   ADDC_IN_AAG^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAG(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZ_IN_AAG(x1, x2, x3)  =  ADDZ_IN_AAG(x3)

ADDX_IN_AAG(x1, x2, x3)  =  ADDX_IN_AAG(x3)

ADDY_IN_AAG(x1, x2, x3)  =  ADDY_IN_AAG(x3)

ADDC_IN_AAG(x1, x2, x3)  =  ADDC_IN_AAG(x3)

ADDC_IN_AAG^1(x1, x2, x3)  =  ADDC_IN_AAG^1(x3)

ADDX_IN_AAG^1(x1, x2, x3)  =  ADDX_IN_AAG^1(x3)

ADDY_IN_AAG^1(x1, x2, x3)  =  ADDY_IN_AAG^1(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(72) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(73)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(zero(Z)) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(one(Z)) -> ADDX_IN_AAG(Z)
   ADDZ_IN_AAG(one(Z)) -> ADDY_IN_AAG(Z)
   ADDY_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
   ADDZ_IN_AAG(zero(Z)) -> ADDC_IN_AAG(Z)
   ADDC_IN_AAG(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(one(Z)) -> ADDZ_IN_AAG(Z)
   ADDC_IN_AAG^1(zero(Z)) -> ADDX_IN_AAG^1(Z)
   ADDX_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(zero(Z)) -> ADDY_IN_AAG^1(Z)
   ADDY_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
   ADDC_IN_AAG^1(one(Z)) -> ADDC_IN_AAG(Z)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(74) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ADDZ_IN_AAG(one(Z)) -> ADDX_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(zero(Z)) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDX_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 >= 1


*ADDY_IN_AAG(Z) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(one(Z)) -> ADDZ_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(one(Z)) -> ADDY_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDZ_IN_AAG(zero(Z)) -> ADDC_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDC_IN_AAG(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(one(Z)) -> ADDC_IN_AAG(Z)
The graph contains the following edges 1 > 1


*ADDX_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDY_IN_AAG^1(Z) -> ADDC_IN_AAG^1(Z)
The graph contains the following edges 1 >= 1


*ADDC_IN_AAG^1(zero(Z)) -> ADDX_IN_AAG^1(Z)
The graph contains the following edges 1 > 1


*ADDC_IN_AAG^1(zero(Z)) -> ADDY_IN_AAG^1(Z)
The graph contains the following edges 1 > 1


----------------------------------------

(75)
YES

----------------------------------------

(76)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

BINARY_IN_A(x1)  =  BINARY_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(77) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(78)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A(one(X)) -> BINARY_IN_A(X)
   BINARY_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARYZ_IN_A(zero(X)) -> BINARYZ_IN_A(X)
   BINARY_IN_A(one(X)) -> BINARY_IN_A(X)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

BINARYZ_IN_A(x1)  =  BINARYZ_IN_A

BINARY_IN_A(x1)  =  BINARY_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(79) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(80)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZ_IN_A -> BINARY_IN_A
   BINARY_IN_A -> BINARYZ_IN_A
   BINARYZ_IN_A -> BINARYZ_IN_A
   BINARY_IN_A -> BINARY_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(81) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = BINARYZ_IN_A evaluates to  t =BINARYZ_IN_A

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from BINARYZ_IN_A to BINARYZ_IN_A.




----------------------------------------

(82)
NO

----------------------------------------

(83)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(84) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(85)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA(one(X), zero(Z)) -> SUCC_IN_AA(X, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCC_IN_AA(x1, x2)  =  SUCC_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(86) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(87)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCC_IN_AA -> SUCC_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(88)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1


We have to consider all (P,R,Pi)-chains
----------------------------------------

(89) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(90)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDX_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), zero(Y), zero(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(zero(X), one(Y), one(Z)) -> ADDX_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), zero(Y), one(Z)) -> ADDY_IN_AAA(X, Y, Z)
   ADDY_IN_AAA(X, Y, Z) -> ADDZ_IN_AAA(X, Y, Z)
   ADDZ_IN_AAA(one(X), one(Y), zero(Z)) -> ADDC_IN_AAA(X, Y, Z)
   ADDC_IN_AAA(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), zero(Y), one(Z)) -> ADDZ_IN_AAA(X, Y, Z)
   ADDC_IN_AAA^1(zero(X), one(Y), zero(Z)) -> ADDX_IN_AAA^1(X, Y, Z)
   ADDX_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), zero(Y), zero(Z)) -> ADDY_IN_AAA^1(X, Y, Z)
   ADDY_IN_AAA^1(X, Y, Z) -> ADDC_IN_AAA^1(X, Y, Z)
   ADDC_IN_AAA^1(one(X), one(Y), one(Z)) -> ADDC_IN_AAA(X, Y, Z)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZ_IN_AAA(x1, x2, x3)  =  ADDZ_IN_AAA

ADDX_IN_AAA(x1, x2, x3)  =  ADDX_IN_AAA

ADDY_IN_AAA(x1, x2, x3)  =  ADDY_IN_AAA

ADDC_IN_AAA(x1, x2, x3)  =  ADDC_IN_AAA

ADDC_IN_AAA^1(x1, x2, x3)  =  ADDC_IN_AAA^1

ADDX_IN_AAA^1(x1, x2, x3)  =  ADDX_IN_AAA^1

ADDY_IN_AAA^1(x1, x2, x3)  =  ADDY_IN_AAA^1


We have to consider all (P,R,Pi)-chains
----------------------------------------

(91)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(92) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(93)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAA(one(R), S, RSS) -> TIMES_IN_AAA(R, S, RS)
   TIMES_IN_AAA(zero(R), S, zero(RS)) -> TIMES_IN_AAA(R, S, RS)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

TIMES_IN_AAA(x1, x2, x3)  =  TIMES_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(94)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)

The TRS R consists of the following rules:

   times_in_aag(one(b), X, X) -> times_out_aag(one(b), X, X)
   times_in_aag(zero(R), S, zero(RS)) -> U35_aag(R, S, RS, times_in_aag(R, S, RS))
   times_in_aag(one(R), S, RSS) -> U36_aag(R, S, RSS, times_in_aaa(R, S, RS))
   times_in_aaa(one(b), X, X) -> times_out_aaa(one(b), X, X)
   times_in_aaa(zero(R), S, zero(RS)) -> U35_aaa(R, S, RS, times_in_aaa(R, S, RS))
   times_in_aaa(one(R), S, RSS) -> U36_aaa(R, S, RSS, times_in_aaa(R, S, RS))
   U36_aaa(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aaa(R, S, RSS, add_in_aaa(S, zero(RS), RSS))
   add_in_aaa(b, b, b) -> add_out_aaa(b, b, b)
   add_in_aaa(X, b, X) -> U1_aaa(X, binaryZ_in_a(X))
   binaryZ_in_a(zero(X)) -> U29_a(X, binaryZ_in_a(X))
   binaryZ_in_a(one(X)) -> U30_a(X, binary_in_a(X))
   binary_in_a(b) -> binary_out_a(b)
   binary_in_a(zero(X)) -> U27_a(X, binaryZ_in_a(X))
   U27_a(X, binaryZ_out_a(X)) -> binary_out_a(zero(X))
   binary_in_a(one(X)) -> U28_a(X, binary_in_a(X))
   U28_a(X, binary_out_a(X)) -> binary_out_a(one(X))
   U30_a(X, binary_out_a(X)) -> binaryZ_out_a(one(X))
   U29_a(X, binaryZ_out_a(X)) -> binaryZ_out_a(zero(X))
   U1_aaa(X, binaryZ_out_a(X)) -> add_out_aaa(X, b, X)
   add_in_aaa(b, Y, Y) -> U2_aaa(Y, binaryZ_in_a(Y))
   U2_aaa(Y, binaryZ_out_a(Y)) -> add_out_aaa(b, Y, Y)
   add_in_aaa(X, Y, Z) -> U3_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), zero(Y), zero(Z)) -> U10_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(zero(X), one(Y), one(Z)) -> U11_aaa(X, Y, Z, addx_in_aaa(X, Y, Z))
   addx_in_aaa(one(X), b, one(X)) -> U4_aaa(X, binary_in_a(X))
   U4_aaa(X, binary_out_a(X)) -> addx_out_aaa(one(X), b, one(X))
   addx_in_aaa(zero(X), b, zero(X)) -> U5_aaa(X, binaryZ_in_a(X))
   U5_aaa(X, binaryZ_out_a(X)) -> addx_out_aaa(zero(X), b, zero(X))
   addx_in_aaa(X, Y, Z) -> U6_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), zero(Y), one(Z)) -> U12_aaa(X, Y, Z, addy_in_aaa(X, Y, Z))
   addy_in_aaa(b, one(Y), one(Y)) -> U7_aaa(Y, binary_in_a(Y))
   U7_aaa(Y, binary_out_a(Y)) -> addy_out_aaa(b, one(Y), one(Y))
   addy_in_aaa(b, zero(Y), zero(Y)) -> U8_aaa(Y, binaryZ_in_a(Y))
   U8_aaa(Y, binaryZ_out_a(Y)) -> addy_out_aaa(b, zero(Y), zero(Y))
   addy_in_aaa(X, Y, Z) -> U9_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   addz_in_aaa(one(X), one(Y), zero(Z)) -> U13_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   addc_in_aaa(b, b, one(b)) -> addc_out_aaa(b, b, one(b))
   addc_in_aaa(X, b, Z) -> U14_aaa(X, Z, succZ_in_aa(X, Z))
   succZ_in_aa(zero(X), one(X)) -> U33_aa(X, binaryZ_in_a(X))
   U33_aa(X, binaryZ_out_a(X)) -> succZ_out_aa(zero(X), one(X))
   succZ_in_aa(one(X), zero(Z)) -> U34_aa(X, Z, succ_in_aa(X, Z))
   succ_in_aa(b, one(b)) -> succ_out_aa(b, one(b))
   succ_in_aa(zero(X), one(X)) -> U31_aa(X, binaryZ_in_a(X))
   U31_aa(X, binaryZ_out_a(X)) -> succ_out_aa(zero(X), one(X))
   succ_in_aa(one(X), zero(Z)) -> U32_aa(X, Z, succ_in_aa(X, Z))
   U32_aa(X, Z, succ_out_aa(X, Z)) -> succ_out_aa(one(X), zero(Z))
   U34_aa(X, Z, succ_out_aa(X, Z)) -> succZ_out_aa(one(X), zero(Z))
   U14_aaa(X, Z, succZ_out_aa(X, Z)) -> addc_out_aaa(X, b, Z)
   addc_in_aaa(b, Y, Z) -> U15_aaa(Y, Z, succZ_in_aa(Y, Z))
   U15_aaa(Y, Z, succZ_out_aa(Y, Z)) -> addc_out_aaa(b, Y, Z)
   addc_in_aaa(X, Y, Z) -> U16_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(zero(X), zero(Y), one(Z)) -> U23_aaa(X, Y, Z, addz_in_aaa(X, Y, Z))
   U23_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), zero(Y), one(Z))
   addC_in_aaa(zero(X), one(Y), zero(Z)) -> U24_aaa(X, Y, Z, addX_in_aaa(X, Y, Z))
   addX_in_aaa(zero(X), b, one(X)) -> U17_aaa(X, binaryZ_in_a(X))
   U17_aaa(X, binaryZ_out_a(X)) -> addX_out_aaa(zero(X), b, one(X))
   addX_in_aaa(one(X), b, zero(Z)) -> U18_aaa(X, Z, succ_in_aa(X, Z))
   U18_aaa(X, Z, succ_out_aa(X, Z)) -> addX_out_aaa(one(X), b, zero(Z))
   addX_in_aaa(X, Y, Z) -> U19_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), zero(Y), zero(Z)) -> U25_aaa(X, Y, Z, addY_in_aaa(X, Y, Z))
   addY_in_aaa(b, zero(Y), one(Y)) -> U20_aaa(Y, binaryZ_in_a(Y))
   U20_aaa(Y, binaryZ_out_a(Y)) -> addY_out_aaa(b, zero(Y), one(Y))
   addY_in_aaa(b, one(Y), zero(Z)) -> U21_aaa(Y, Z, succ_in_aa(Y, Z))
   U21_aaa(Y, Z, succ_out_aa(Y, Z)) -> addY_out_aaa(b, one(Y), zero(Z))
   addY_in_aaa(X, Y, Z) -> U22_aaa(X, Y, Z, addC_in_aaa(X, Y, Z))
   addC_in_aaa(one(X), one(Y), one(Z)) -> U26_aaa(X, Y, Z, addc_in_aaa(X, Y, Z))
   U26_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), one(Y), one(Z))
   U22_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addY_out_aaa(X, Y, Z)
   U25_aaa(X, Y, Z, addY_out_aaa(X, Y, Z)) -> addC_out_aaa(one(X), zero(Y), zero(Z))
   U19_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addX_out_aaa(X, Y, Z)
   U24_aaa(X, Y, Z, addX_out_aaa(X, Y, Z)) -> addC_out_aaa(zero(X), one(Y), zero(Z))
   U16_aaa(X, Y, Z, addC_out_aaa(X, Y, Z)) -> addc_out_aaa(X, Y, Z)
   U13_aaa(X, Y, Z, addc_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), one(Y), zero(Z))
   U9_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addy_out_aaa(X, Y, Z)
   U12_aaa(X, Y, Z, addy_out_aaa(X, Y, Z)) -> addz_out_aaa(one(X), zero(Y), one(Z))
   U6_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addx_out_aaa(X, Y, Z)
   U11_aaa(X, Y, Z, addx_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), one(Y), one(Z))
   U10_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> addz_out_aaa(zero(X), zero(Y), zero(Z))
   U3_aaa(X, Y, Z, addz_out_aaa(X, Y, Z)) -> add_out_aaa(X, Y, Z)
   U37_aaa(R, S, RSS, add_out_aaa(S, zero(RS), RSS)) -> times_out_aaa(one(R), S, RSS)
   U35_aaa(R, S, RS, times_out_aaa(R, S, RS)) -> times_out_aaa(zero(R), S, zero(RS))
   U36_aag(R, S, RSS, times_out_aaa(R, S, RS)) -> U37_aag(R, S, RSS, add_in_aag(S, zero(RS), RSS))
   add_in_aag(b, b, b) -> add_out_aag(b, b, b)
   add_in_aag(X, b, X) -> U1_aag(X, binaryZ_in_g(X))
   binaryZ_in_g(zero(X)) -> U29_g(X, binaryZ_in_g(X))
   binaryZ_in_g(one(X)) -> U30_g(X, binary_in_g(X))
   binary_in_g(b) -> binary_out_g(b)
   binary_in_g(zero(X)) -> U27_g(X, binaryZ_in_g(X))
   U27_g(X, binaryZ_out_g(X)) -> binary_out_g(zero(X))
   binary_in_g(one(X)) -> U28_g(X, binary_in_g(X))
   U28_g(X, binary_out_g(X)) -> binary_out_g(one(X))
   U30_g(X, binary_out_g(X)) -> binaryZ_out_g(one(X))
   U29_g(X, binaryZ_out_g(X)) -> binaryZ_out_g(zero(X))
   U1_aag(X, binaryZ_out_g(X)) -> add_out_aag(X, b, X)
   add_in_aag(b, Y, Y) -> U2_aag(Y, binaryZ_in_g(Y))
   U2_aag(Y, binaryZ_out_g(Y)) -> add_out_aag(b, Y, Y)
   add_in_aag(X, Y, Z) -> U3_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), zero(Y), zero(Z)) -> U10_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(zero(X), one(Y), one(Z)) -> U11_aag(X, Y, Z, addx_in_aag(X, Y, Z))
   addx_in_aag(one(X), b, one(X)) -> U4_aag(X, binary_in_g(X))
   U4_aag(X, binary_out_g(X)) -> addx_out_aag(one(X), b, one(X))
   addx_in_aag(zero(X), b, zero(X)) -> U5_aag(X, binaryZ_in_g(X))
   U5_aag(X, binaryZ_out_g(X)) -> addx_out_aag(zero(X), b, zero(X))
   addx_in_aag(X, Y, Z) -> U6_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), zero(Y), one(Z)) -> U12_aag(X, Y, Z, addy_in_aag(X, Y, Z))
   addy_in_aag(b, one(Y), one(Y)) -> U7_aag(Y, binary_in_g(Y))
   U7_aag(Y, binary_out_g(Y)) -> addy_out_aag(b, one(Y), one(Y))
   addy_in_aag(b, zero(Y), zero(Y)) -> U8_aag(Y, binaryZ_in_g(Y))
   U8_aag(Y, binaryZ_out_g(Y)) -> addy_out_aag(b, zero(Y), zero(Y))
   addy_in_aag(X, Y, Z) -> U9_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   addz_in_aag(one(X), one(Y), zero(Z)) -> U13_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   addc_in_aag(b, b, one(b)) -> addc_out_aag(b, b, one(b))
   addc_in_aag(X, b, Z) -> U14_aag(X, Z, succZ_in_ag(X, Z))
   succZ_in_ag(zero(X), one(X)) -> U33_ag(X, binaryZ_in_g(X))
   U33_ag(X, binaryZ_out_g(X)) -> succZ_out_ag(zero(X), one(X))
   succZ_in_ag(one(X), zero(Z)) -> U34_ag(X, Z, succ_in_ag(X, Z))
   succ_in_ag(b, one(b)) -> succ_out_ag(b, one(b))
   succ_in_ag(zero(X), one(X)) -> U31_ag(X, binaryZ_in_g(X))
   U31_ag(X, binaryZ_out_g(X)) -> succ_out_ag(zero(X), one(X))
   succ_in_ag(one(X), zero(Z)) -> U32_ag(X, Z, succ_in_ag(X, Z))
   U32_ag(X, Z, succ_out_ag(X, Z)) -> succ_out_ag(one(X), zero(Z))
   U34_ag(X, Z, succ_out_ag(X, Z)) -> succZ_out_ag(one(X), zero(Z))
   U14_aag(X, Z, succZ_out_ag(X, Z)) -> addc_out_aag(X, b, Z)
   addc_in_aag(b, Y, Z) -> U15_aag(Y, Z, succZ_in_ag(Y, Z))
   U15_aag(Y, Z, succZ_out_ag(Y, Z)) -> addc_out_aag(b, Y, Z)
   addc_in_aag(X, Y, Z) -> U16_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(zero(X), zero(Y), one(Z)) -> U23_aag(X, Y, Z, addz_in_aag(X, Y, Z))
   U23_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), zero(Y), one(Z))
   addC_in_aag(zero(X), one(Y), zero(Z)) -> U24_aag(X, Y, Z, addX_in_aag(X, Y, Z))
   addX_in_aag(zero(X), b, one(X)) -> U17_aag(X, binaryZ_in_g(X))
   U17_aag(X, binaryZ_out_g(X)) -> addX_out_aag(zero(X), b, one(X))
   addX_in_aag(one(X), b, zero(Z)) -> U18_aag(X, Z, succ_in_ag(X, Z))
   U18_aag(X, Z, succ_out_ag(X, Z)) -> addX_out_aag(one(X), b, zero(Z))
   addX_in_aag(X, Y, Z) -> U19_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), zero(Y), zero(Z)) -> U25_aag(X, Y, Z, addY_in_aag(X, Y, Z))
   addY_in_aag(b, zero(Y), one(Y)) -> U20_aag(Y, binaryZ_in_g(Y))
   U20_aag(Y, binaryZ_out_g(Y)) -> addY_out_aag(b, zero(Y), one(Y))
   addY_in_aag(b, one(Y), zero(Z)) -> U21_aag(Y, Z, succ_in_ag(Y, Z))
   U21_aag(Y, Z, succ_out_ag(Y, Z)) -> addY_out_aag(b, one(Y), zero(Z))
   addY_in_aag(X, Y, Z) -> U22_aag(X, Y, Z, addC_in_aag(X, Y, Z))
   addC_in_aag(one(X), one(Y), one(Z)) -> U26_aag(X, Y, Z, addc_in_aag(X, Y, Z))
   U26_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addC_out_aag(one(X), one(Y), one(Z))
   U22_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addY_out_aag(X, Y, Z)
   U25_aag(X, Y, Z, addY_out_aag(X, Y, Z)) -> addC_out_aag(one(X), zero(Y), zero(Z))
   U19_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addX_out_aag(X, Y, Z)
   U24_aag(X, Y, Z, addX_out_aag(X, Y, Z)) -> addC_out_aag(zero(X), one(Y), zero(Z))
   U16_aag(X, Y, Z, addC_out_aag(X, Y, Z)) -> addc_out_aag(X, Y, Z)
   U13_aag(X, Y, Z, addc_out_aag(X, Y, Z)) -> addz_out_aag(one(X), one(Y), zero(Z))
   U9_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addy_out_aag(X, Y, Z)
   U12_aag(X, Y, Z, addy_out_aag(X, Y, Z)) -> addz_out_aag(one(X), zero(Y), one(Z))
   U6_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addx_out_aag(X, Y, Z)
   U11_aag(X, Y, Z, addx_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), one(Y), one(Z))
   U10_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> addz_out_aag(zero(X), zero(Y), zero(Z))
   U3_aag(X, Y, Z, addz_out_aag(X, Y, Z)) -> add_out_aag(X, Y, Z)
   U37_aag(R, S, RSS, add_out_aag(S, zero(RS), RSS)) -> times_out_aag(one(R), S, RSS)
   U35_aag(R, S, RS, times_out_aag(R, S, RS)) -> times_out_aag(zero(R), S, zero(RS))

The argument filtering Pi contains the following mapping:
times_in_aag(x1, x2, x3)  =  times_in_aag(x3)

times_out_aag(x1, x2, x3)  =  times_out_aag(x1, x2, x3)

zero(x1)  =  zero(x1)

U35_aag(x1, x2, x3, x4)  =  U35_aag(x3, x4)

U36_aag(x1, x2, x3, x4)  =  U36_aag(x3, x4)

times_in_aaa(x1, x2, x3)  =  times_in_aaa

times_out_aaa(x1, x2, x3)  =  times_out_aaa(x1)

U35_aaa(x1, x2, x3, x4)  =  U35_aaa(x4)

U36_aaa(x1, x2, x3, x4)  =  U36_aaa(x4)

U37_aaa(x1, x2, x3, x4)  =  U37_aaa(x1, x4)

add_in_aaa(x1, x2, x3)  =  add_in_aaa

add_out_aaa(x1, x2, x3)  =  add_out_aaa(x1, x2, x3)

U1_aaa(x1, x2)  =  U1_aaa(x2)

binaryZ_in_a(x1)  =  binaryZ_in_a

U29_a(x1, x2)  =  U29_a(x2)

U30_a(x1, x2)  =  U30_a(x2)

binary_in_a(x1)  =  binary_in_a

binary_out_a(x1)  =  binary_out_a(x1)

U27_a(x1, x2)  =  U27_a(x2)

binaryZ_out_a(x1)  =  binaryZ_out_a(x1)

U28_a(x1, x2)  =  U28_a(x2)

U2_aaa(x1, x2)  =  U2_aaa(x2)

U3_aaa(x1, x2, x3, x4)  =  U3_aaa(x4)

addz_in_aaa(x1, x2, x3)  =  addz_in_aaa

U10_aaa(x1, x2, x3, x4)  =  U10_aaa(x4)

U11_aaa(x1, x2, x3, x4)  =  U11_aaa(x4)

addx_in_aaa(x1, x2, x3)  =  addx_in_aaa

U4_aaa(x1, x2)  =  U4_aaa(x2)

addx_out_aaa(x1, x2, x3)  =  addx_out_aaa(x1, x2, x3)

U5_aaa(x1, x2)  =  U5_aaa(x2)

U6_aaa(x1, x2, x3, x4)  =  U6_aaa(x4)

U12_aaa(x1, x2, x3, x4)  =  U12_aaa(x4)

addy_in_aaa(x1, x2, x3)  =  addy_in_aaa

U7_aaa(x1, x2)  =  U7_aaa(x2)

addy_out_aaa(x1, x2, x3)  =  addy_out_aaa(x1, x2, x3)

U8_aaa(x1, x2)  =  U8_aaa(x2)

U9_aaa(x1, x2, x3, x4)  =  U9_aaa(x4)

U13_aaa(x1, x2, x3, x4)  =  U13_aaa(x4)

addc_in_aaa(x1, x2, x3)  =  addc_in_aaa

addc_out_aaa(x1, x2, x3)  =  addc_out_aaa(x1, x2, x3)

U14_aaa(x1, x2, x3)  =  U14_aaa(x3)

succZ_in_aa(x1, x2)  =  succZ_in_aa

U33_aa(x1, x2)  =  U33_aa(x2)

succZ_out_aa(x1, x2)  =  succZ_out_aa(x1, x2)

U34_aa(x1, x2, x3)  =  U34_aa(x3)

succ_in_aa(x1, x2)  =  succ_in_aa

succ_out_aa(x1, x2)  =  succ_out_aa(x1, x2)

U31_aa(x1, x2)  =  U31_aa(x2)

U32_aa(x1, x2, x3)  =  U32_aa(x3)

U15_aaa(x1, x2, x3)  =  U15_aaa(x3)

U16_aaa(x1, x2, x3, x4)  =  U16_aaa(x4)

addC_in_aaa(x1, x2, x3)  =  addC_in_aaa

U23_aaa(x1, x2, x3, x4)  =  U23_aaa(x4)

addz_out_aaa(x1, x2, x3)  =  addz_out_aaa(x1, x2, x3)

addC_out_aaa(x1, x2, x3)  =  addC_out_aaa(x1, x2, x3)

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

addX_in_aaa(x1, x2, x3)  =  addX_in_aaa

U17_aaa(x1, x2)  =  U17_aaa(x2)

addX_out_aaa(x1, x2, x3)  =  addX_out_aaa(x1, x2, x3)

U18_aaa(x1, x2, x3)  =  U18_aaa(x3)

U19_aaa(x1, x2, x3, x4)  =  U19_aaa(x4)

U25_aaa(x1, x2, x3, x4)  =  U25_aaa(x4)

addY_in_aaa(x1, x2, x3)  =  addY_in_aaa

U20_aaa(x1, x2)  =  U20_aaa(x2)

addY_out_aaa(x1, x2, x3)  =  addY_out_aaa(x1, x2, x3)

U21_aaa(x1, x2, x3)  =  U21_aaa(x3)

U22_aaa(x1, x2, x3, x4)  =  U22_aaa(x4)

U26_aaa(x1, x2, x3, x4)  =  U26_aaa(x4)

U37_aag(x1, x2, x3, x4)  =  U37_aag(x1, x3, x4)

add_in_aag(x1, x2, x3)  =  add_in_aag(x3)

b  =  b

add_out_aag(x1, x2, x3)  =  add_out_aag(x1, x2, x3)

U1_aag(x1, x2)  =  U1_aag(x1, x2)

binaryZ_in_g(x1)  =  binaryZ_in_g(x1)

U29_g(x1, x2)  =  U29_g(x1, x2)

one(x1)  =  one(x1)

U30_g(x1, x2)  =  U30_g(x1, x2)

binary_in_g(x1)  =  binary_in_g(x1)

binary_out_g(x1)  =  binary_out_g(x1)

U27_g(x1, x2)  =  U27_g(x1, x2)

binaryZ_out_g(x1)  =  binaryZ_out_g(x1)

U28_g(x1, x2)  =  U28_g(x1, x2)

U2_aag(x1, x2)  =  U2_aag(x1, x2)

U3_aag(x1, x2, x3, x4)  =  U3_aag(x3, x4)

addz_in_aag(x1, x2, x3)  =  addz_in_aag(x3)

U10_aag(x1, x2, x3, x4)  =  U10_aag(x3, x4)

U11_aag(x1, x2, x3, x4)  =  U11_aag(x3, x4)

addx_in_aag(x1, x2, x3)  =  addx_in_aag(x3)

U4_aag(x1, x2)  =  U4_aag(x1, x2)

addx_out_aag(x1, x2, x3)  =  addx_out_aag(x1, x2, x3)

U5_aag(x1, x2)  =  U5_aag(x1, x2)

U6_aag(x1, x2, x3, x4)  =  U6_aag(x3, x4)

U12_aag(x1, x2, x3, x4)  =  U12_aag(x3, x4)

addy_in_aag(x1, x2, x3)  =  addy_in_aag(x3)

U7_aag(x1, x2)  =  U7_aag(x1, x2)

addy_out_aag(x1, x2, x3)  =  addy_out_aag(x1, x2, x3)

U8_aag(x1, x2)  =  U8_aag(x1, x2)

U9_aag(x1, x2, x3, x4)  =  U9_aag(x3, x4)

U13_aag(x1, x2, x3, x4)  =  U13_aag(x3, x4)

addc_in_aag(x1, x2, x3)  =  addc_in_aag(x3)

addc_out_aag(x1, x2, x3)  =  addc_out_aag(x1, x2, x3)

U14_aag(x1, x2, x3)  =  U14_aag(x2, x3)

succZ_in_ag(x1, x2)  =  succZ_in_ag(x2)

U33_ag(x1, x2)  =  U33_ag(x1, x2)

succZ_out_ag(x1, x2)  =  succZ_out_ag(x1, x2)

U34_ag(x1, x2, x3)  =  U34_ag(x2, x3)

succ_in_ag(x1, x2)  =  succ_in_ag(x2)

succ_out_ag(x1, x2)  =  succ_out_ag(x1, x2)

U31_ag(x1, x2)  =  U31_ag(x1, x2)

U32_ag(x1, x2, x3)  =  U32_ag(x2, x3)

U15_aag(x1, x2, x3)  =  U15_aag(x2, x3)

U16_aag(x1, x2, x3, x4)  =  U16_aag(x3, x4)

addC_in_aag(x1, x2, x3)  =  addC_in_aag(x3)

U23_aag(x1, x2, x3, x4)  =  U23_aag(x3, x4)

addz_out_aag(x1, x2, x3)  =  addz_out_aag(x1, x2, x3)

addC_out_aag(x1, x2, x3)  =  addC_out_aag(x1, x2, x3)

U24_aag(x1, x2, x3, x4)  =  U24_aag(x3, x4)

addX_in_aag(x1, x2, x3)  =  addX_in_aag(x3)

U17_aag(x1, x2)  =  U17_aag(x1, x2)

addX_out_aag(x1, x2, x3)  =  addX_out_aag(x1, x2, x3)

U18_aag(x1, x2, x3)  =  U18_aag(x2, x3)

U19_aag(x1, x2, x3, x4)  =  U19_aag(x3, x4)

U25_aag(x1, x2, x3, x4)  =  U25_aag(x3, x4)

addY_in_aag(x1, x2, x3)  =  addY_in_aag(x3)

U20_aag(x1, x2)  =  U20_aag(x1, x2)

addY_out_aag(x1, x2, x3)  =  addY_out_aag(x1, x2, x3)

U21_aag(x1, x2, x3)  =  U21_aag(x2, x3)

U22_aag(x1, x2, x3, x4)  =  U22_aag(x3, x4)

U26_aag(x1, x2, x3, x4)  =  U26_aag(x3, x4)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(95) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(96)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMES_IN_AAG(zero(R), S, zero(RS)) -> TIMES_IN_AAG(R, S, RS)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

TIMES_IN_AAG(x1, x2, x3)  =  TIMES_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(97) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 7,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(add (b) (b) (b))",
                null
            ],
            [
                "(add X (b) X)",
                "(binaryZ X)"
            ],
            [
                "(add (b) Y Y)",
                "(binaryZ Y)"
            ],
            [
                "(add X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addx (one X) (b) (one X))",
                "(binary X)"
            ],
            [
                "(addx (zero X) (b) (zero X))",
                "(binaryZ X)"
            ],
            [
                "(addx X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addy (b) (one Y) (one Y))",
                "(binary Y)"
            ],
            [
                "(addy (b) (zero Y) (zero Y))",
                "(binaryZ Y)"
            ],
            [
                "(addy X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (zero Y) (zero Z))",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (one Y) (one Z))",
                "(addx X Y Z)"
            ],
            [
                "(addz (one X) (zero Y) (one Z))",
                "(addy X Y Z)"
            ],
            [
                "(addz (one X) (one Y) (zero Z))",
                "(addc X Y Z)"
            ],
            [
                "(addc (b) (b) (one (b)))",
                null
            ],
            [
                "(addc X (b) Z)",
                "(succZ X Z)"
            ],
            [
                "(addc (b) Y Z)",
                "(succZ Y Z)"
            ],
            [
                "(addc X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addX (zero X) (b) (one X))",
                "(binaryZ X)"
            ],
            [
                "(addX (one X) (b) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(addX X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addY (b) (zero Y) (one Y))",
                "(binaryZ Y)"
            ],
            [
                "(addY (b) (one Y) (zero Z))",
                "(succ Y Z)"
            ],
            [
                "(addY X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addC (zero X) (zero Y) (one Z))",
                "(addz X Y Z)"
            ],
            [
                "(addC (zero X) (one Y) (zero Z))",
                "(addX X Y Z)"
            ],
            [
                "(addC (one X) (zero Y) (zero Z))",
                "(addY X Y Z)"
            ],
            [
                "(addC (one X) (one Y) (one Z))",
                "(addc X Y Z)"
            ],
            [
                "(binary (b))",
                null
            ],
            [
                "(binary (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binary (one X))",
                "(binary X)"
            ],
            [
                "(binaryZ (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binaryZ (one X))",
                "(binary X)"
            ],
            [
                "(succ (b) (one (b)))",
                null
            ],
            [
                "(succ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(succZ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succZ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(times (one (b)) X X)",
                null
            ],
            [
                "(times (zero R) S (zero RS))",
                "(times R S RS)"
            ],
            [
                "(times (one R) S RSS)",
                "(',' (times R S RS) (add S (zero RS) RSS))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "907": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2550": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 (zero T905))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "1217": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2304": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T589 T590 T588)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T588"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2546": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1456": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 13,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "2303": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2545": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T947 T948 X1052) (add T948 (zero X1052) T946))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T946))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T946"],
                    "free": [
                        "X2",
                        "X1052"
                    ],
                    "exprvars": []
                }
            },
            "1213": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 3,
                        "term": "(times T53 T54 X48)"
                    },
                    {
                        "clause": 40,
                        "scope": 3,
                        "term": "(times T53 T54 X48)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "1455": {
                "goal": [{
                    "clause": 11,
                    "scope": 9,
                    "term": "(addz T159 T160 X171)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "2302": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T573)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T573"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2301": {
                "goal": [{
                    "clause": 9,
                    "scope": 22,
                    "term": "(addy T561 T562 T560)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1211": {
                "goal": [{
                    "clause": 38,
                    "scope": 3,
                    "term": "(times T53 T54 X48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "2300": {
                "goal": [{
                    "clause": 8,
                    "scope": 22,
                    "term": "(addy T561 T562 T560)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2420": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1219": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1218": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2307": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T603 T604 T602)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1224": {
                "goal": [{
                    "clause": 40,
                    "scope": 3,
                    "term": "(times T53 T54 X48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "1223": {
                "goal": [{
                    "clause": 39,
                    "scope": 3,
                    "term": "(times T53 T54 X48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "805": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2452": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T728 T727)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T727"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2328": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2327": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2326": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 16,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 17,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2447": {
                "goal": [{
                    "clause": 20,
                    "scope": 27,
                    "term": "(addX T709 T710 T708)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1599": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2325": {
                "goal": [{
                    "clause": 14,
                    "scope": 23,
                    "term": "(addc T603 T604 T602)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2446": {
                "goal": [{
                    "clause": 19,
                    "scope": 27,
                    "term": "(addX T709 T710 T708)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1598": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T187 T188 X219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "2323": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 15,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 16,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 17,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "810": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2321": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2329": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2100": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T387)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2584": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2583": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T960 T961 X1065) (add T961 (zero X1065) (zero T959)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T959))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T959"],
                    "free": [
                        "X2",
                        "X1065"
                    ],
                    "exprvars": []
                }
            },
            "2339": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2338": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T615 T614)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T614"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2333": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    },
                    {
                        "clause": 17,
                        "scope": 23,
                        "term": "(addc T603 T604 T602)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "700": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 T5)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T5)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "2332": {
                "goal": [{
                    "clause": 15,
                    "scope": 23,
                    "term": "(addc T603 T604 T602)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2453": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "946": {
                "goal": [{
                    "clause": 40,
                    "scope": 2,
                    "term": "(times T12 T13 T11)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "947": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T11))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "948": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T53 T54 X48) (add T54 (zero X48) T52))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "2353": {
                "goal": [{
                    "clause": 33,
                    "scope": 25,
                    "term": "(succ T629 T628)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2474": {
                "goal": [{
                    "clause": 21,
                    "scope": 28,
                    "term": "(addY T763 T764 T762)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2595": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1384": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "2231": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 12,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 13,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2352": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 25,
                        "term": "(succ T629 T628)"
                    },
                    {
                        "clause": 34,
                        "scope": 25,
                        "term": "(succ T629 T628)"
                    },
                    {
                        "clause": 35,
                        "scope": 25,
                        "term": "(succ T629 T628)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2473": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 28,
                        "term": "(addY T763 T764 T762)"
                    },
                    {
                        "clause": 22,
                        "scope": 28,
                        "term": "(addY T763 T764 T762)"
                    },
                    {
                        "clause": 23,
                        "scope": 28,
                        "term": "(addY T763 T764 T762)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2594": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "2230": {
                "goal": [{
                    "clause": 10,
                    "scope": 19,
                    "term": "(addz T453 (zero T454) T452)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2351": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2472": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1261": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T76 T77 X77)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X77"],
                    "exprvars": []
                }
            },
            "2350": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T629 T628)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2471": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T763 T764 T762)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2470": {
                "goal": [{
                    "clause": 27,
                    "scope": 26,
                    "term": "(addC T669 T670 T668)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2229": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 11,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 12,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 13,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2228": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T453 (zero T454) T452)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2349": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2348": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T621)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T621"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2469": {
                "goal": [{
                    "clause": 26,
                    "scope": 26,
                    "term": "(addC T669 T670 T668)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2105": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2468": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T743 T744 T742)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T742"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2104": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T394 X525)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X525"],
                    "exprvars": []
                }
            },
            "2346": {
                "goal": [{
                    "clause": 37,
                    "scope": 24,
                    "term": "(succZ T615 T614)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T614"],
                    "free": [],
                    "exprvars": []
                }
            },
            "951": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2103": {
                "goal": [{
                    "clause": 23,
                    "scope": 17,
                    "term": "(addY T379 T380 X503)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "2345": {
                "goal": [{
                    "clause": 36,
                    "scope": 24,
                    "term": "(succZ T615 T614)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T614"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2102": {
                "goal": [{
                    "clause": 22,
                    "scope": 17,
                    "term": "(addY T379 T380 X503)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "2101": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2343": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 24,
                        "term": "(succZ T615 T614)"
                    },
                    {
                        "clause": 37,
                        "scope": 24,
                        "term": "(succZ T615 T614)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T614"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1817": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1816": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T282 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "716": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T11))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "839": {
                "goal": [{
                    "clause": 39,
                    "scope": 2,
                    "term": "(times T12 T13 T11)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1396": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "2485": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    },
                    {
                        "clause": 13,
                        "scope": 19,
                        "term": "(addz T453 (zero T454) T452)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2363": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2484": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2362": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T642 T641)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T641"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2483": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T811 T812 T810)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T810"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2361": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2482": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T797 T798 T796)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T796"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2360": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T634)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T634"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2481": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2480": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T782 T781)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T781"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2359": {
                "goal": [{
                    "clause": 35,
                    "scope": 25,
                    "term": "(succ T629 T628)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2116": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T405 T406 X541)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X541"],
                    "exprvars": []
                }
            },
            "2358": {
                "goal": [{
                    "clause": 34,
                    "scope": 25,
                    "term": "(succ T629 T628)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2479": {
                "goal": [{
                    "clause": 23,
                    "scope": 28,
                    "term": "(addY T763 T764 T762)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2357": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2478": {
                "goal": [{
                    "clause": 22,
                    "scope": 28,
                    "term": "(addY T763 T764 T762)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1388": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(add T91 (zero T90) X93)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "2356": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2477": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1266": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2355": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2476": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T770)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T770"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2354": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 25,
                        "term": "(succ T629 T628)"
                    },
                    {
                        "clause": 35,
                        "scope": 25,
                        "term": "(succ T629 T628)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T628"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2475": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 28,
                        "term": "(addY T763 T764 T762)"
                    },
                    {
                        "clause": 23,
                        "scope": 28,
                        "term": "(addY T763 T764 T762)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T762"],
                    "free": [],
                    "exprvars": []
                }
            },
            "844": {
                "goal": [
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T11))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2496": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 29,
                        "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                    },
                    {
                        "clause": 39,
                        "scope": 29,
                        "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                    },
                    {
                        "clause": 40,
                        "scope": 29,
                        "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "2495": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1284": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2131": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2373": {
                "goal": [{
                    "clause": 17,
                    "scope": 23,
                    "term": "(addc T603 T604 T602)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2494": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "1283": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T86 T87 X92) (add T87 (zero X92) X93))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X93",
                        "X92"
                    ],
                    "exprvars": []
                }
            },
            "2130": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T415 T416 X557)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X557"],
                    "exprvars": []
                }
            },
            "2372": {
                "goal": [{
                    "clause": 16,
                    "scope": 23,
                    "term": "(addc T603 T604 T602)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T602"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2493": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2492": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T842 T843 X950) (add T843 (zero X950) (zero T841)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T841"],
                    "free": ["X950"],
                    "exprvars": []
                }
            },
            "2491": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 (zero T11))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2490": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2248": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 11,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 12,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 13,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2247": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2489": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2246": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T473 T474 T472)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2488": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T829 T830 T828)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T828"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2487": {
                "goal": [{
                    "clause": 13,
                    "scope": 19,
                    "term": "(addz T453 (zero T454) T452)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2486": {
                "goal": [{
                    "clause": 12,
                    "scope": 19,
                    "term": "(addz T453 (zero T454) T452)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T452"],
                    "free": [],
                    "exprvars": []
                }
            },
            "615": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T5)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "978": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T53 T54 X48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "979": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T58 (zero T57) T52)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2386": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 25,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 26,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 27,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2385": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T669 T670 T668)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2140": {
                "goal": [{
                    "clause": 13,
                    "scope": 8,
                    "term": "(addz T145 (zero T146) X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "2261": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 12,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 13,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2260": {
                "goal": [{
                    "clause": 10,
                    "scope": 20,
                    "term": "(addz T473 T474 T472)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1602": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 10,
                        "term": "(addx T187 T188 X219)"
                    },
                    {
                        "clause": 6,
                        "scope": 10,
                        "term": "(addx T187 T188 X219)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "1601": {
                "goal": [{
                    "clause": 4,
                    "scope": 10,
                    "term": "(addx T187 T188 X219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "1600": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 10,
                        "term": "(addx T187 T188 X219)"
                    },
                    {
                        "clause": 5,
                        "scope": 10,
                        "term": "(addx T187 T188 X219)"
                    },
                    {
                        "clause": 6,
                        "scope": 10,
                        "term": "(addx T187 T188 X219)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "2139": {
                "goal": [{
                    "clause": 12,
                    "scope": 8,
                    "term": "(addz T145 (zero T146) X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "2138": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "2378": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2499": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T859 (zero T859) T851)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "1288": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T91 (zero T90) X93)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "2377": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T653 T652)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T652"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2498": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 29,
                        "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                    },
                    {
                        "clause": 40,
                        "scope": 29,
                        "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "1287": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T86 T87 X92)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X92"],
                    "exprvars": []
                }
            },
            "2497": {
                "goal": [{
                    "clause": 38,
                    "scope": 29,
                    "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "1609": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T213 T214 X247)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X247"],
                    "exprvars": []
                }
            },
            "1608": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1607": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T201)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1606": {
                "goal": [{
                    "clause": 6,
                    "scope": 10,
                    "term": "(addx T187 T188 X219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "1605": {
                "goal": [{
                    "clause": 5,
                    "scope": 10,
                    "term": "(addx T187 T188 X219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X219"],
                    "exprvars": []
                }
            },
            "1604": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1603": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T195)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2276": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T513 T514 T512)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2395": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 27,
                        "term": "(addX T709 T710 T708)"
                    },
                    {
                        "clause": 19,
                        "scope": 27,
                        "term": "(addX T709 T710 T708)"
                    },
                    {
                        "clause": 20,
                        "scope": 27,
                        "term": "(addX T709 T710 T708)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2273": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    },
                    {
                        "clause": 13,
                        "scope": 20,
                        "term": "(addz T473 T474 T472)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2394": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2272": {
                "goal": [{
                    "clause": 11,
                    "scope": 20,
                    "term": "(addz T473 T474 T472)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2393": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T709 T710 T708)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2392": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 27,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2391": {
                "goal": [{
                    "clause": 25,
                    "scope": 26,
                    "term": "(addC T669 T670 T668)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2390": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1613": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1612": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T227 T228 X271)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "750": {
                "goal": [{
                    "clause": 38,
                    "scope": 2,
                    "term": "(times T12 T13 T11)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1611": {
                "goal": [{
                    "clause": 13,
                    "scope": 9,
                    "term": "(addz T159 T160 X171)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "1610": {
                "goal": [{
                    "clause": 12,
                    "scope": 9,
                    "term": "(addz T159 T160 X171)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "631": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T3)",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "752": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T11))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2389": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T689 T690 T688)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T688"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2267": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2388": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 26,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    },
                    {
                        "clause": 27,
                        "scope": 26,
                        "term": "(addC T669 T670 T668)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T493 T494 T492)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T492"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2387": {
                "goal": [{
                    "clause": 24,
                    "scope": 26,
                    "term": "(addC T669 T670 T668)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T668"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1619": {
                "goal": [{
                    "clause": 8,
                    "scope": 11,
                    "term": "(addy T227 T228 X271)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "638": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T5)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1618": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1617": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T235)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1616": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 11,
                        "term": "(addy T227 T228 X271)"
                    },
                    {
                        "clause": 9,
                        "scope": 11,
                        "term": "(addy T227 T228 X271)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "1615": {
                "goal": [{
                    "clause": 7,
                    "scope": 11,
                    "term": "(addy T227 T228 X271)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "1614": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 11,
                        "term": "(addy T227 T228 X271)"
                    },
                    {
                        "clause": 8,
                        "scope": 11,
                        "term": "(addy T227 T228 X271)"
                    },
                    {
                        "clause": 9,
                        "scope": 11,
                        "term": "(addy T227 T228 X271)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "2166": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T437))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T437"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2287": {
                "goal": [{
                    "clause": 6,
                    "scope": 21,
                    "term": "(addx T513 T514 T512)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2165": {
                "goal": [{
                    "clause": 3,
                    "scope": 18,
                    "term": "(add T58 (zero T57) T52)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2286": {
                "goal": [{
                    "clause": 5,
                    "scope": 21,
                    "term": "(addx T513 T514 T512)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2164": {
                "goal": [{
                    "clause": 2,
                    "scope": 18,
                    "term": "(add T58 (zero T57) T52)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2285": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2163": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 3,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2284": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T520)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T520"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2162": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 2,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 3,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2283": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 21,
                        "term": "(addx T513 T514 T512)"
                    },
                    {
                        "clause": 6,
                        "scope": 21,
                        "term": "(addx T513 T514 T512)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2161": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 1,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 2,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    },
                    {
                        "clause": 3,
                        "scope": 18,
                        "term": "(add T58 (zero T57) T52)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2282": {
                "goal": [{
                    "clause": 4,
                    "scope": 21,
                    "term": "(addx T513 T514 T512)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2160": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2280": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 21,
                        "term": "(addx T513 T514 T512)"
                    },
                    {
                        "clause": 5,
                        "scope": 21,
                        "term": "(addx T513 T514 T512)"
                    },
                    {
                        "clause": 6,
                        "scope": 21,
                        "term": "(addx T513 T514 T512)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T512"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1624": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T263 T264 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1866": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1623": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T253 T254 X299)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X299"],
                    "exprvars": []
                }
            },
            "1865": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1622": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1864": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1621": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T241)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1863": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 14,
                        "term": "(succ T282 X346)"
                    },
                    {
                        "clause": 35,
                        "scope": 14,
                        "term": "(succ T282 X346)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "1620": {
                "goal": [{
                    "clause": 9,
                    "scope": 11,
                    "term": "(addy T227 T228 X271)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X271"],
                    "exprvars": []
                }
            },
            "1862": {
                "goal": [{
                    "clause": 33,
                    "scope": 14,
                    "term": "(succ T282 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "1861": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 14,
                        "term": "(succ T282 X346)"
                    },
                    {
                        "clause": 34,
                        "scope": 14,
                        "term": "(succ T282 X346)"
                    },
                    {
                        "clause": 35,
                        "scope": 14,
                        "term": "(succ T282 X346)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "2158": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2157": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T428 T429 X580)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X580"],
                    "exprvars": []
                }
            },
            "2277": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1629": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1628": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 16,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 17,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1627": {
                "goal": [{
                    "clause": 14,
                    "scope": 12,
                    "term": "(addc T263 T264 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1869": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T288)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1626": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 15,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 16,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 17,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1868": {
                "goal": [{
                    "clause": 35,
                    "scope": 14,
                    "term": "(succ T282 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "1625": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1867": {
                "goal": [{
                    "clause": 34,
                    "scope": 14,
                    "term": "(succ T282 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "2290": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T541 T542 T540)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T540"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1880": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2056": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2298": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T568)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T568"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2055": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T339 T340 X441)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "2297": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 22,
                        "term": "(addy T561 T562 T560)"
                    },
                    {
                        "clause": 9,
                        "scope": 22,
                        "term": "(addy T561 T562 T560)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2054": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 27,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2296": {
                "goal": [{
                    "clause": 7,
                    "scope": 22,
                    "term": "(addy T561 T562 T560)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2053": {
                "goal": [{
                    "clause": 25,
                    "scope": 15,
                    "term": "(addC T311 T312 X393)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2295": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 22,
                        "term": "(addy T561 T562 T560)"
                    },
                    {
                        "clause": 8,
                        "scope": 22,
                        "term": "(addy T561 T562 T560)"
                    },
                    {
                        "clause": 9,
                        "scope": 22,
                        "term": "(addy T561 T562 T560)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2294": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2293": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T561 T562 T560)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T560"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2292": {
                "goal": [{
                    "clause": 13,
                    "scope": 20,
                    "term": "(addz T473 T474 T472)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2291": {
                "goal": [{
                    "clause": 12,
                    "scope": 20,
                    "term": "(addz T473 T474 T472)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T472"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1635": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1877": {
                "goal": [{
                    "clause": 16,
                    "scope": 12,
                    "term": "(addc T263 T264 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1634": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T270 X330)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X330"],
                    "exprvars": []
                }
            },
            "1633": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    },
                    {
                        "clause": 17,
                        "scope": 12,
                        "term": "(addc T263 T264 X315)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2601": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 31,
                        "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                    },
                    {
                        "clause": 39,
                        "scope": 31,
                        "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                    },
                    {
                        "clause": 40,
                        "scope": 31,
                        "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "1632": {
                "goal": [{
                    "clause": 15,
                    "scope": 12,
                    "term": "(addc T263 T264 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1874": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1631": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1873": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T293 X361)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X361"],
                    "exprvars": []
                }
            },
            "2049": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "896": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T34 T35 T33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T33"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1630": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2048": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T325 T326 X417)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X417"],
                    "exprvars": []
                }
            },
            "2289": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1870": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2167": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2288": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T525)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T525"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2609": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2608": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T977 (zero T977) T969)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012"
                    ],
                    "exprvars": []
                }
            },
            "1639": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T277)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1638": {
                "goal": [{
                    "clause": 37,
                    "scope": 13,
                    "term": "(succZ T270 X330)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X330"],
                    "exprvars": []
                }
            },
            "2606": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 31,
                        "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                    },
                    {
                        "clause": 40,
                        "scope": 31,
                        "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "1637": {
                "goal": [{
                    "clause": 36,
                    "scope": 13,
                    "term": "(succZ T270 X330)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X330"],
                    "exprvars": []
                }
            },
            "1879": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T299 X376)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X376"],
                    "exprvars": []
                }
            },
            "2605": {
                "goal": [{
                    "clause": 38,
                    "scope": 31,
                    "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "1636": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 13,
                        "term": "(succZ T270 X330)"
                    },
                    {
                        "clause": 37,
                        "scope": 13,
                        "term": "(succZ T270 X330)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X330"],
                    "exprvars": []
                }
            },
            "1878": {
                "goal": [{
                    "clause": 17,
                    "scope": 12,
                    "term": "(addc T263 T264 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2066": {
                "goal": [{
                    "clause": 20,
                    "scope": 16,
                    "term": "(addX T339 T340 X441)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "2065": {
                "goal": [{
                    "clause": 19,
                    "scope": 16,
                    "term": "(addX T339 T340 X441)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "2063": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2062": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T347)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2061": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 16,
                        "term": "(addX T339 T340 X441)"
                    },
                    {
                        "clause": 20,
                        "scope": 16,
                        "term": "(addX T339 T340 X441)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "2060": {
                "goal": [{
                    "clause": 18,
                    "scope": 16,
                    "term": "(addX T339 T340 X441)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "1404": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(add T91 (zero T90) X93)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "1884": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 26,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 27,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "1883": {
                "goal": [{
                    "clause": 24,
                    "scope": 15,
                    "term": "(addC T311 T312 X393)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2059": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 16,
                        "term": "(addX T339 T340 X441)"
                    },
                    {
                        "clause": 19,
                        "scope": 16,
                        "term": "(addX T339 T340 X441)"
                    },
                    {
                        "clause": 20,
                        "scope": 16,
                        "term": "(addX T339 T340 X441)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X441"],
                    "exprvars": []
                }
            },
            "1640": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1882": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 25,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 26,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    },
                    {
                        "clause": 27,
                        "scope": 15,
                        "term": "(addC T311 T312 X393)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "1881": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T311 T312 X393)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2299": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1409": {
                "goal": [{
                    "clause": 31,
                    "scope": 5,
                    "term": "(binaryZ (zero T100))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1408": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 5,
                        "term": "(binaryZ (zero T100))"
                    },
                    {
                        "clause": 32,
                        "scope": 5,
                        "term": "(binaryZ (zero T100))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2618": {
                "goal": [{
                    "clause": 40,
                    "scope": 31,
                    "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "1407": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2617": {
                "goal": [{
                    "clause": 39,
                    "scope": 31,
                    "term": "(',' (times T970 T971 X1074) (add T971 (zero X1074) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1074"
                    ],
                    "exprvars": []
                }
            },
            "1406": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T100))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1405": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(add T91 (zero T90) X93)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "1415": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T118)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2504": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1414": {
                "goal": [{
                    "clause": 32,
                    "scope": 6,
                    "term": "(binaryZ T111)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2503": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T870 T871 X984) (add T871 (zero (zero X984)) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X984"
                    ],
                    "exprvars": []
                }
            },
            "1413": {
                "goal": [{
                    "clause": 31,
                    "scope": 6,
                    "term": "(binaryZ T111)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2502": {
                "goal": [{
                    "clause": 40,
                    "scope": 29,
                    "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "1412": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 6,
                        "term": "(binaryZ T111)"
                    },
                    {
                        "clause": 32,
                        "scope": 6,
                        "term": "(binaryZ T111)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2501": {
                "goal": [{
                    "clause": 39,
                    "scope": 29,
                    "term": "(',' (times T852 T853 X959) (add T853 (zero X959) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X959"
                    ],
                    "exprvars": []
                }
            },
            "1411": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T111)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2500": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "797": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1410": {
                "goal": [{
                    "clause": 32,
                    "scope": 5,
                    "term": "(binaryZ (zero T100))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2069": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2068": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T354 X463)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X463"],
                    "exprvars": []
                }
            },
            "2509": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T886 T887 X1001)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1001"],
                    "exprvars": []
                }
            },
            "1419": {
                "goal": [
                    {
                        "clause": 28,
                        "scope": 7,
                        "term": "(binary T123)"
                    },
                    {
                        "clause": 29,
                        "scope": 7,
                        "term": "(binary T123)"
                    },
                    {
                        "clause": 30,
                        "scope": 7,
                        "term": "(binary T123)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2508": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2629": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1418": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2507": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (times T886 T887 X1001) (add T887 (zero X1001) X1002)) (add T887 (zero X1002) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X1002",
                        "X1001"
                    ],
                    "exprvars": []
                }
            },
            "2628": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T988 T989 X1099) (add T989 (zero (zero X1099)) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1099"
                    ],
                    "exprvars": []
                }
            },
            "1417": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2506": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T875 (zero (zero T874)) T851)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T876 T877 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "1416": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2505": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T870 T871 X984)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X984"],
                    "exprvars": []
                }
            },
            "2085": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T365 T366 X479)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X479"],
                    "exprvars": []
                }
            },
            "682": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(times T12 T13 T11)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T11))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1426": {
                "goal": [{
                    "clause": 30,
                    "scope": 7,
                    "term": "(binary T123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2515": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T897 (zero T896) T851)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T898 T899 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T851",
                        "T897",
                        "T896"
                    ],
                    "free": [
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "2636": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1425": {
                "goal": [{
                    "clause": 29,
                    "scope": 7,
                    "term": "(binary T123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2514": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T891 (zero T890) X1002)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1002"],
                    "exprvars": []
                }
            },
            "2635": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (times T998 T999 X1114) (add T999 (zero X1114) X1115)) (add T999 (zero X1115) T969))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T969)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T969)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T969"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012",
                        "X1115",
                        "X1114"
                    ],
                    "exprvars": []
                }
            },
            "1424": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1423": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1422": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1421": {
                "goal": [
                    {
                        "clause": 29,
                        "scope": 7,
                        "term": "(binary T123)"
                    },
                    {
                        "clause": 30,
                        "scope": 7,
                        "term": "(binary T123)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2510": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (add T891 (zero T890) X1002) (add T891 (zero X1002) T851))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T892 T893 T851)",
                        "(times (zero X6) X7 (zero X8))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T851"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X1002"
                    ],
                    "exprvars": []
                }
            },
            "1420": {
                "goal": [{
                    "clause": 28,
                    "scope": 7,
                    "term": "(binary T123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1429": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T134)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1428": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2517": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(times T1 T2 T3)",
                            "(times (one (b)) X2 X2)"
                        ],
                        [
                            "(times T1 T2 T3)",
                            "(times (zero X1010) X1011 (zero X1012))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X2",
                        "X1010",
                        "X1011",
                        "X1012"
                    ],
                    "exprvars": []
                }
            },
            "1427": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T129)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2516": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T905))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "2092": {
                "goal": [{
                    "clause": 27,
                    "scope": 15,
                    "term": "(addC T311 T312 X393)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2091": {
                "goal": [{
                    "clause": 26,
                    "scope": 15,
                    "term": "(addC T311 T312 X393)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X393"],
                    "exprvars": []
                }
            },
            "2099": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 17,
                        "term": "(addY T379 T380 X503)"
                    },
                    {
                        "clause": 23,
                        "scope": 17,
                        "term": "(addY T379 T380 X503)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "2098": {
                "goal": [{
                    "clause": 21,
                    "scope": 17,
                    "term": "(addY T379 T380 X503)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "2097": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 17,
                        "term": "(addY T379 T380 X503)"
                    },
                    {
                        "clause": 22,
                        "scope": 17,
                        "term": "(addY T379 T380 X503)"
                    },
                    {
                        "clause": 23,
                        "scope": 17,
                        "term": "(addY T379 T380 X503)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "2096": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2095": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T379 T380 X503)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X503"],
                    "exprvars": []
                }
            },
            "1437": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1436": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T159 T160 X171)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "1435": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "1434": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(addz T145 (zero T146) X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "1433": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T145 (zero T146) X147)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "2522": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": 40,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": -1,
                        "scope": 30,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T905))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "1432": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T145 (zero T146) X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "2521": {
                "goal": [{
                    "clause": 38,
                    "scope": 30,
                    "term": "(times T906 T907 T905)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "1431": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2520": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": 39,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": 40,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": -1,
                        "scope": 30,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T905))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "1430": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1438": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 11,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 12,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 13,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "1448": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T173 T174 X195)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X195"],
                    "exprvars": []
                }
            },
            "2537": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2536": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T928 T929 T927)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero (zero T927)))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T927"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "2535": {
                "goal": [
                    {
                        "clause": 40,
                        "scope": 30,
                        "term": "(times T906 T907 T905)"
                    },
                    {
                        "clause": -1,
                        "scope": 30,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T905))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "2534": {
                "goal": [{
                    "clause": 39,
                    "scope": 30,
                    "term": "(times T906 T907 T905)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "2533": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2532": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1442": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 12,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    },
                    {
                        "clause": 13,
                        "scope": 9,
                        "term": "(addz T159 T160 X171)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "2531": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1441": {
                "goal": [{
                    "clause": 10,
                    "scope": 9,
                    "term": "(addz T159 T160 X171)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X171"],
                    "exprvars": []
                }
            },
            "2419": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T716)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T716"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1208": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 3,
                        "term": "(times T53 T54 X48)"
                    },
                    {
                        "clause": 39,
                        "scope": 3,
                        "term": "(times T53 T54 X48)"
                    },
                    {
                        "clause": 40,
                        "scope": 3,
                        "term": "(times T53 T54 X48)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X48"],
                    "exprvars": []
                }
            },
            "2418": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 27,
                        "term": "(addX T709 T710 T708)"
                    },
                    {
                        "clause": 20,
                        "scope": 27,
                        "term": "(addX T709 T710 T708)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2539": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 30,
                        "term": null
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 (zero T905))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "1449": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2417": {
                "goal": [{
                    "clause": 18,
                    "scope": 27,
                    "term": "(addX T709 T710 T708)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T708"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2538": {
                "goal": [{
                    "clause": 40,
                    "scope": 30,
                    "term": "(times T906 T907 T905)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(times T1 T2 (zero T905))",
                        "(times (one (b)) X2 X2)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T905"],
                    "free": ["X2"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 7,
                "to": 8,
                "label": "CASE"
            },
            {
                "from": 8,
                "to": 615,
                "label": "EVAL with clause\ntimes(one(b), X2, X2).\nand substitutionT1 -> one(b),\nT2 -> T5,\nX2 -> T5,\nT3 -> T5"
            },
            {
                "from": 8,
                "to": 631,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 615,
                "to": 638,
                "label": "SUCCESS"
            },
            {
                "from": 631,
                "to": 2516,
                "label": "EVAL with clause\ntimes(zero(X1010), X1011, zero(X1012)) :- times(X1010, X1011, X1012).\nand substitutionX1010 -> T906,\nT1 -> zero(T906),\nT2 -> T907,\nX1011 -> T907,\nX1012 -> T905,\nT3 -> zero(T905),\nT903 -> T906,\nT904 -> T907"
            },
            {
                "from": 631,
                "to": 2517,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 638,
                "to": 682,
                "label": "EVAL with clause\ntimes(zero(X6), X7, zero(X8)) :- times(X6, X7, X8).\nand substitutionX6 -> T12,\nT1 -> zero(T12),\nT2 -> T13,\nX7 -> T13,\nX8 -> T11,\nT5 -> zero(T11),\nT9 -> T12,\nT10 -> T13"
            },
            {
                "from": 638,
                "to": 700,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 682,
                "to": 716,
                "label": "CASE"
            },
            {
                "from": 700,
                "to": 2494,
                "label": "EVAL with clause\ntimes(one(X956), X957, X958) :- ','(times(X956, X957, X959), add(X957, zero(X959), X958)).\nand substitutionX956 -> T852,\nT1 -> one(T852),\nT2 -> T853,\nX957 -> T853,\nT5 -> T851,\nX958 -> T851,\nT849 -> T852,\nT850 -> T853"
            },
            {
                "from": 700,
                "to": 2495,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 716,
                "to": 750,
                "label": "PARALLEL"
            },
            {
                "from": 716,
                "to": 752,
                "label": "PARALLEL"
            },
            {
                "from": 750,
                "to": 797,
                "label": "EVAL with clause\ntimes(one(b), X13, X13).\nand substitutionT12 -> one(b),\nT13 -> T18,\nX13 -> T18,\nT11 -> T18"
            },
            {
                "from": 750,
                "to": 805,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 752,
                "to": 839,
                "label": "PARALLEL"
            },
            {
                "from": 752,
                "to": 844,
                "label": "PARALLEL"
            },
            {
                "from": 797,
                "to": 810,
                "label": "SUCCESS"
            },
            {
                "from": 839,
                "to": 896,
                "label": "EVAL with clause\ntimes(zero(X26), X27, zero(X28)) :- times(X26, X27, X28).\nand substitutionX26 -> T34,\nT12 -> zero(T34),\nT13 -> T35,\nX27 -> T35,\nX28 -> T33,\nT11 -> zero(T33),\nT31 -> T34,\nT32 -> T35"
            },
            {
                "from": 839,
                "to": 907,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 844,
                "to": 946,
                "label": "PARALLEL"
            },
            {
                "from": 844,
                "to": 947,
                "label": "PARALLEL"
            },
            {
                "from": 896,
                "to": 7,
                "label": "INSTANCE with matching:\nT1 -> T34\nT2 -> T35\nT3 -> T33"
            },
            {
                "from": 946,
                "to": 948,
                "label": "EVAL with clause\ntimes(one(X45), X46, X47) :- ','(times(X45, X46, X48), add(X46, zero(X48), X47)).\nand substitutionX45 -> T53,\nT12 -> one(T53),\nT13 -> T54,\nX46 -> T54,\nT11 -> T52,\nX47 -> T52,\nT50 -> T53,\nT51 -> T54"
            },
            {
                "from": 946,
                "to": 951,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 947,
                "to": 2491,
                "label": "FAILURE"
            },
            {
                "from": 948,
                "to": 978,
                "label": "SPLIT 1"
            },
            {
                "from": 948,
                "to": 979,
                "label": "SPLIT 2\nnew knowledge:\nT53 is ground\nreplacements:X48 -> T57,\nT54 -> T58"
            },
            {
                "from": 978,
                "to": 1208,
                "label": "CASE"
            },
            {
                "from": 979,
                "to": 2161,
                "label": "CASE"
            },
            {
                "from": 1208,
                "to": 1211,
                "label": "PARALLEL"
            },
            {
                "from": 1208,
                "to": 1213,
                "label": "PARALLEL"
            },
            {
                "from": 1211,
                "to": 1217,
                "label": "EVAL with clause\ntimes(one(b), X57, X57).\nand substitutionT53 -> one(b),\nT54 -> T65,\nX57 -> T65,\nX48 -> T65"
            },
            {
                "from": 1211,
                "to": 1218,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1213,
                "to": 1223,
                "label": "PARALLEL"
            },
            {
                "from": 1213,
                "to": 1224,
                "label": "PARALLEL"
            },
            {
                "from": 1217,
                "to": 1219,
                "label": "SUCCESS"
            },
            {
                "from": 1223,
                "to": 1261,
                "label": "EVAL with clause\ntimes(zero(X74), X75, zero(X76)) :- times(X74, X75, X76).\nand substitutionX74 -> T76,\nT53 -> zero(T76),\nT54 -> T77,\nX75 -> T77,\nX76 -> X77,\nX48 -> zero(X77),\nT74 -> T76,\nT75 -> T77"
            },
            {
                "from": 1223,
                "to": 1266,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1224,
                "to": 1283,
                "label": "EVAL with clause\ntimes(one(X89), X90, X91) :- ','(times(X89, X90, X92), add(X90, zero(X92), X91)).\nand substitutionX89 -> T86,\nT53 -> one(T86),\nT54 -> T87,\nX90 -> T87,\nX48 -> X93,\nX91 -> X93,\nT84 -> T86,\nT85 -> T87"
            },
            {
                "from": 1224,
                "to": 1284,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1261,
                "to": 978,
                "label": "INSTANCE with matching:\nT53 -> T76\nT54 -> T77\nX48 -> X77"
            },
            {
                "from": 1283,
                "to": 1287,
                "label": "SPLIT 1"
            },
            {
                "from": 1283,
                "to": 1288,
                "label": "SPLIT 2\nnew knowledge:\nT86 is ground\nreplacements:X92 -> T90,\nT87 -> T91"
            },
            {
                "from": 1287,
                "to": 978,
                "label": "INSTANCE with matching:\nT53 -> T86\nT54 -> T87\nX48 -> X92"
            },
            {
                "from": 1288,
                "to": 1384,
                "label": "CASE"
            },
            {
                "from": 1384,
                "to": 1388,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 1388,
                "to": 1396,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 1396,
                "to": 1404,
                "label": "PARALLEL"
            },
            {
                "from": 1396,
                "to": 1405,
                "label": "PARALLEL"
            },
            {
                "from": 1404,
                "to": 1406,
                "label": "EVAL with clause\nadd(b, X103, X103) :- binaryZ(X103).\nand substitutionT91 -> b,\nT90 -> T100,\nX103 -> zero(T100),\nX93 -> zero(T100),\nT99 -> T100"
            },
            {
                "from": 1404,
                "to": 1407,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1405,
                "to": 1432,
                "label": "ONLY EVAL with clause\nadd(X144, X145, X146) :- addz(X144, X145, X146).\nand substitutionT91 -> T145,\nX144 -> T145,\nT90 -> T146,\nX145 -> zero(T146),\nX93 -> X147,\nX146 -> X147,\nT143 -> T145,\nT144 -> T146"
            },
            {
                "from": 1406,
                "to": 1408,
                "label": "CASE"
            },
            {
                "from": 1408,
                "to": 1409,
                "label": "PARALLEL"
            },
            {
                "from": 1408,
                "to": 1410,
                "label": "PARALLEL"
            },
            {
                "from": 1409,
                "to": 1411,
                "label": "ONLY EVAL with clause\nbinaryZ(zero(X111)) :- binaryZ(X111).\nand substitutionT100 -> T111,\nX111 -> T111,\nT110 -> T111"
            },
            {
                "from": 1410,
                "to": 1431,
                "label": "BACKTRACK\nfor clause: binaryZ(one(X)) :- binary(X)because of non-unification"
            },
            {
                "from": 1411,
                "to": 1412,
                "label": "CASE"
            },
            {
                "from": 1412,
                "to": 1413,
                "label": "PARALLEL"
            },
            {
                "from": 1412,
                "to": 1414,
                "label": "PARALLEL"
            },
            {
                "from": 1413,
                "to": 1415,
                "label": "EVAL with clause\nbinaryZ(zero(X117)) :- binaryZ(X117).\nand substitutionX117 -> T118,\nT111 -> zero(T118),\nT117 -> T118"
            },
            {
                "from": 1413,
                "to": 1416,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1414,
                "to": 1417,
                "label": "EVAL with clause\nbinaryZ(one(X121)) :- binary(X121).\nand substitutionX121 -> T123,\nT111 -> one(T123),\nT122 -> T123"
            },
            {
                "from": 1414,
                "to": 1418,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1415,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T118"
            },
            {
                "from": 1417,
                "to": 1419,
                "label": "CASE"
            },
            {
                "from": 1419,
                "to": 1420,
                "label": "PARALLEL"
            },
            {
                "from": 1419,
                "to": 1421,
                "label": "PARALLEL"
            },
            {
                "from": 1420,
                "to": 1422,
                "label": "EVAL with clause\nbinary(b).\nand substitutionT123 -> b"
            },
            {
                "from": 1420,
                "to": 1423,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1421,
                "to": 1425,
                "label": "PARALLEL"
            },
            {
                "from": 1421,
                "to": 1426,
                "label": "PARALLEL"
            },
            {
                "from": 1422,
                "to": 1424,
                "label": "SUCCESS"
            },
            {
                "from": 1425,
                "to": 1427,
                "label": "EVAL with clause\nbinary(zero(X126)) :- binaryZ(X126).\nand substitutionX126 -> T129,\nT123 -> zero(T129),\nT128 -> T129"
            },
            {
                "from": 1425,
                "to": 1428,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1426,
                "to": 1429,
                "label": "EVAL with clause\nbinary(one(X130)) :- binary(X130).\nand substitutionX130 -> T134,\nT123 -> one(T134),\nT133 -> T134"
            },
            {
                "from": 1426,
                "to": 1430,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1427,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T129"
            },
            {
                "from": 1429,
                "to": 1417,
                "label": "INSTANCE with matching:\nT123 -> T134"
            },
            {
                "from": 1432,
                "to": 1433,
                "label": "CASE"
            },
            {
                "from": 1433,
                "to": 1434,
                "label": "PARALLEL"
            },
            {
                "from": 1433,
                "to": 1435,
                "label": "PARALLEL"
            },
            {
                "from": 1434,
                "to": 1436,
                "label": "EVAL with clause\naddz(zero(X168), zero(X169), zero(X170)) :- addz(X168, X169, X170).\nand substitutionX168 -> T159,\nT145 -> zero(T159),\nT146 -> T160,\nX169 -> T160,\nX170 -> X171,\nX147 -> zero(X171),\nT157 -> T159,\nT158 -> T160"
            },
            {
                "from": 1434,
                "to": 1437,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1435,
                "to": 2138,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 1436,
                "to": 1438,
                "label": "CASE"
            },
            {
                "from": 1438,
                "to": 1441,
                "label": "PARALLEL"
            },
            {
                "from": 1438,
                "to": 1442,
                "label": "PARALLEL"
            },
            {
                "from": 1441,
                "to": 1448,
                "label": "EVAL with clause\naddz(zero(X192), zero(X193), zero(X194)) :- addz(X192, X193, X194).\nand substitutionX192 -> T173,\nT159 -> zero(T173),\nX193 -> T174,\nT160 -> zero(T174),\nX194 -> X195,\nX171 -> zero(X195),\nT171 -> T173,\nT172 -> T174"
            },
            {
                "from": 1441,
                "to": 1449,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1442,
                "to": 1455,
                "label": "PARALLEL"
            },
            {
                "from": 1442,
                "to": 1456,
                "label": "PARALLEL"
            },
            {
                "from": 1448,
                "to": 1436,
                "label": "INSTANCE with matching:\nT159 -> T173\nT160 -> T174\nX171 -> X195"
            },
            {
                "from": 1455,
                "to": 1598,
                "label": "EVAL with clause\naddz(zero(X216), one(X217), one(X218)) :- addx(X216, X217, X218).\nand substitutionX216 -> T187,\nT159 -> zero(T187),\nX217 -> T188,\nT160 -> one(T188),\nX218 -> X219,\nX171 -> one(X219),\nT185 -> T187,\nT186 -> T188"
            },
            {
                "from": 1455,
                "to": 1599,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1456,
                "to": 1610,
                "label": "PARALLEL"
            },
            {
                "from": 1456,
                "to": 1611,
                "label": "PARALLEL"
            },
            {
                "from": 1598,
                "to": 1600,
                "label": "CASE"
            },
            {
                "from": 1600,
                "to": 1601,
                "label": "PARALLEL"
            },
            {
                "from": 1600,
                "to": 1602,
                "label": "PARALLEL"
            },
            {
                "from": 1601,
                "to": 1603,
                "label": "EVAL with clause\naddx(one(X225), b, one(X225)) :- binary(X225).\nand substitutionX225 -> T195,\nT187 -> one(T195),\nT188 -> b,\nX219 -> one(T195),\nT194 -> T195"
            },
            {
                "from": 1601,
                "to": 1604,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1602,
                "to": 1605,
                "label": "PARALLEL"
            },
            {
                "from": 1602,
                "to": 1606,
                "label": "PARALLEL"
            },
            {
                "from": 1603,
                "to": 1417,
                "label": "INSTANCE with matching:\nT123 -> T195"
            },
            {
                "from": 1605,
                "to": 1607,
                "label": "EVAL with clause\naddx(zero(X230), b, zero(X230)) :- binaryZ(X230).\nand substitutionX230 -> T201,\nT187 -> zero(T201),\nT188 -> b,\nX219 -> zero(T201),\nT200 -> T201"
            },
            {
                "from": 1605,
                "to": 1608,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1606,
                "to": 1609,
                "label": "ONLY EVAL with clause\naddx(X244, X245, X246) :- addz(X244, X245, X246).\nand substitutionT187 -> T213,\nX244 -> T213,\nT188 -> T214,\nX245 -> T214,\nX219 -> X247,\nX246 -> X247,\nT211 -> T213,\nT212 -> T214"
            },
            {
                "from": 1607,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T201"
            },
            {
                "from": 1609,
                "to": 1436,
                "label": "INSTANCE with matching:\nT159 -> T213\nT160 -> T214\nX171 -> X247"
            },
            {
                "from": 1610,
                "to": 1612,
                "label": "EVAL with clause\naddz(one(X268), zero(X269), one(X270)) :- addy(X268, X269, X270).\nand substitutionX268 -> T227,\nT159 -> one(T227),\nX269 -> T228,\nT160 -> zero(T228),\nX270 -> X271,\nX171 -> one(X271),\nT225 -> T227,\nT226 -> T228"
            },
            {
                "from": 1610,
                "to": 1613,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1611,
                "to": 1624,
                "label": "EVAL with clause\naddz(one(X312), one(X313), zero(X314)) :- addc(X312, X313, X314).\nand substitutionX312 -> T263,\nT159 -> one(T263),\nX313 -> T264,\nT160 -> one(T264),\nX314 -> X315,\nX171 -> zero(X315),\nT261 -> T263,\nT262 -> T264"
            },
            {
                "from": 1611,
                "to": 1625,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1612,
                "to": 1614,
                "label": "CASE"
            },
            {
                "from": 1614,
                "to": 1615,
                "label": "PARALLEL"
            },
            {
                "from": 1614,
                "to": 1616,
                "label": "PARALLEL"
            },
            {
                "from": 1615,
                "to": 1617,
                "label": "EVAL with clause\naddy(b, one(X277), one(X277)) :- binary(X277).\nand substitutionT227 -> b,\nX277 -> T235,\nT228 -> one(T235),\nX271 -> one(T235),\nT234 -> T235"
            },
            {
                "from": 1615,
                "to": 1618,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1616,
                "to": 1619,
                "label": "PARALLEL"
            },
            {
                "from": 1616,
                "to": 1620,
                "label": "PARALLEL"
            },
            {
                "from": 1617,
                "to": 1417,
                "label": "INSTANCE with matching:\nT123 -> T235"
            },
            {
                "from": 1619,
                "to": 1621,
                "label": "EVAL with clause\naddy(b, zero(X282), zero(X282)) :- binaryZ(X282).\nand substitutionT227 -> b,\nX282 -> T241,\nT228 -> zero(T241),\nX271 -> zero(T241),\nT240 -> T241"
            },
            {
                "from": 1619,
                "to": 1622,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1620,
                "to": 1623,
                "label": "ONLY EVAL with clause\naddy(X296, X297, X298) :- addz(X296, X297, X298).\nand substitutionT227 -> T253,\nX296 -> T253,\nT228 -> T254,\nX297 -> T254,\nX271 -> X299,\nX298 -> X299,\nT251 -> T253,\nT252 -> T254"
            },
            {
                "from": 1621,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T241"
            },
            {
                "from": 1623,
                "to": 1436,
                "label": "INSTANCE with matching:\nT159 -> T253\nT160 -> T254\nX171 -> X299"
            },
            {
                "from": 1624,
                "to": 1626,
                "label": "CASE"
            },
            {
                "from": 1626,
                "to": 1627,
                "label": "PARALLEL"
            },
            {
                "from": 1626,
                "to": 1628,
                "label": "PARALLEL"
            },
            {
                "from": 1627,
                "to": 1629,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT263 -> b,\nT264 -> b,\nX315 -> one(b)"
            },
            {
                "from": 1627,
                "to": 1630,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1628,
                "to": 1632,
                "label": "PARALLEL"
            },
            {
                "from": 1628,
                "to": 1633,
                "label": "PARALLEL"
            },
            {
                "from": 1629,
                "to": 1631,
                "label": "SUCCESS"
            },
            {
                "from": 1632,
                "to": 1634,
                "label": "EVAL with clause\naddc(X328, b, X329) :- succZ(X328, X329).\nand substitutionT263 -> T270,\nX328 -> T270,\nT264 -> b,\nX315 -> X330,\nX329 -> X330,\nT269 -> T270"
            },
            {
                "from": 1632,
                "to": 1635,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1633,
                "to": 1877,
                "label": "PARALLEL"
            },
            {
                "from": 1633,
                "to": 1878,
                "label": "PARALLEL"
            },
            {
                "from": 1634,
                "to": 1636,
                "label": "CASE"
            },
            {
                "from": 1636,
                "to": 1637,
                "label": "PARALLEL"
            },
            {
                "from": 1636,
                "to": 1638,
                "label": "PARALLEL"
            },
            {
                "from": 1637,
                "to": 1639,
                "label": "EVAL with clause\nsuccZ(zero(X336), one(X336)) :- binaryZ(X336).\nand substitutionX336 -> T277,\nT270 -> zero(T277),\nX330 -> one(T277),\nT276 -> T277"
            },
            {
                "from": 1637,
                "to": 1640,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1638,
                "to": 1816,
                "label": "EVAL with clause\nsuccZ(one(X344), zero(X345)) :- succ(X344, X345).\nand substitutionX344 -> T282,\nT270 -> one(T282),\nX345 -> X346,\nX330 -> zero(X346),\nT281 -> T282"
            },
            {
                "from": 1638,
                "to": 1817,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1639,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T277"
            },
            {
                "from": 1816,
                "to": 1861,
                "label": "CASE"
            },
            {
                "from": 1861,
                "to": 1862,
                "label": "PARALLEL"
            },
            {
                "from": 1861,
                "to": 1863,
                "label": "PARALLEL"
            },
            {
                "from": 1862,
                "to": 1864,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT282 -> b,\nX346 -> one(b)"
            },
            {
                "from": 1862,
                "to": 1865,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1863,
                "to": 1867,
                "label": "PARALLEL"
            },
            {
                "from": 1863,
                "to": 1868,
                "label": "PARALLEL"
            },
            {
                "from": 1864,
                "to": 1866,
                "label": "SUCCESS"
            },
            {
                "from": 1867,
                "to": 1869,
                "label": "EVAL with clause\nsucc(zero(X351), one(X351)) :- binaryZ(X351).\nand substitutionX351 -> T288,\nT282 -> zero(T288),\nX346 -> one(T288),\nT287 -> T288"
            },
            {
                "from": 1867,
                "to": 1870,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1868,
                "to": 1873,
                "label": "EVAL with clause\nsucc(one(X359), zero(X360)) :- succ(X359, X360).\nand substitutionX359 -> T293,\nT282 -> one(T293),\nX360 -> X361,\nX346 -> zero(X361),\nT292 -> T293"
            },
            {
                "from": 1868,
                "to": 1874,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1869,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T288"
            },
            {
                "from": 1873,
                "to": 1816,
                "label": "INSTANCE with matching:\nT282 -> T293\nX346 -> X361"
            },
            {
                "from": 1877,
                "to": 1879,
                "label": "EVAL with clause\naddc(b, X374, X375) :- succZ(X374, X375).\nand substitutionT263 -> b,\nT264 -> T299,\nX374 -> T299,\nX315 -> X376,\nX375 -> X376,\nT298 -> T299"
            },
            {
                "from": 1877,
                "to": 1880,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1878,
                "to": 1881,
                "label": "ONLY EVAL with clause\naddc(X390, X391, X392) :- addC(X390, X391, X392).\nand substitutionT263 -> T311,\nX390 -> T311,\nT264 -> T312,\nX391 -> T312,\nX315 -> X393,\nX392 -> X393,\nT309 -> T311,\nT310 -> T312"
            },
            {
                "from": 1879,
                "to": 1634,
                "label": "INSTANCE with matching:\nT270 -> T299\nX330 -> X376"
            },
            {
                "from": 1881,
                "to": 1882,
                "label": "CASE"
            },
            {
                "from": 1882,
                "to": 1883,
                "label": "PARALLEL"
            },
            {
                "from": 1882,
                "to": 1884,
                "label": "PARALLEL"
            },
            {
                "from": 1883,
                "to": 2048,
                "label": "EVAL with clause\naddC(zero(X414), zero(X415), one(X416)) :- addz(X414, X415, X416).\nand substitutionX414 -> T325,\nT311 -> zero(T325),\nX415 -> T326,\nT312 -> zero(T326),\nX416 -> X417,\nX393 -> one(X417),\nT323 -> T325,\nT324 -> T326"
            },
            {
                "from": 1883,
                "to": 2049,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1884,
                "to": 2053,
                "label": "PARALLEL"
            },
            {
                "from": 1884,
                "to": 2054,
                "label": "PARALLEL"
            },
            {
                "from": 2048,
                "to": 1436,
                "label": "INSTANCE with matching:\nT159 -> T325\nT160 -> T326\nX171 -> X417"
            },
            {
                "from": 2053,
                "to": 2055,
                "label": "EVAL with clause\naddC(zero(X438), one(X439), zero(X440)) :- addX(X438, X439, X440).\nand substitutionX438 -> T339,\nT311 -> zero(T339),\nX439 -> T340,\nT312 -> one(T340),\nX440 -> X441,\nX393 -> zero(X441),\nT337 -> T339,\nT338 -> T340"
            },
            {
                "from": 2053,
                "to": 2056,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2054,
                "to": 2091,
                "label": "PARALLEL"
            },
            {
                "from": 2054,
                "to": 2092,
                "label": "PARALLEL"
            },
            {
                "from": 2055,
                "to": 2059,
                "label": "CASE"
            },
            {
                "from": 2059,
                "to": 2060,
                "label": "PARALLEL"
            },
            {
                "from": 2059,
                "to": 2061,
                "label": "PARALLEL"
            },
            {
                "from": 2060,
                "to": 2062,
                "label": "EVAL with clause\naddX(zero(X447), b, one(X447)) :- binaryZ(X447).\nand substitutionX447 -> T347,\nT339 -> zero(T347),\nT340 -> b,\nX441 -> one(T347),\nT346 -> T347"
            },
            {
                "from": 2060,
                "to": 2063,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2061,
                "to": 2065,
                "label": "PARALLEL"
            },
            {
                "from": 2061,
                "to": 2066,
                "label": "PARALLEL"
            },
            {
                "from": 2062,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T347"
            },
            {
                "from": 2065,
                "to": 2068,
                "label": "EVAL with clause\naddX(one(X461), b, zero(X462)) :- succ(X461, X462).\nand substitutionX461 -> T354,\nT339 -> one(T354),\nT340 -> b,\nX462 -> X463,\nX441 -> zero(X463),\nT353 -> T354"
            },
            {
                "from": 2065,
                "to": 2069,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2066,
                "to": 2085,
                "label": "ONLY EVAL with clause\naddX(X476, X477, X478) :- addC(X476, X477, X478).\nand substitutionT339 -> T365,\nX476 -> T365,\nT340 -> T366,\nX477 -> T366,\nX441 -> X479,\nX478 -> X479,\nT363 -> T365,\nT364 -> T366"
            },
            {
                "from": 2068,
                "to": 1816,
                "label": "INSTANCE with matching:\nT282 -> T354\nX346 -> X463"
            },
            {
                "from": 2085,
                "to": 1881,
                "label": "INSTANCE with matching:\nT311 -> T365\nT312 -> T366\nX393 -> X479"
            },
            {
                "from": 2091,
                "to": 2095,
                "label": "EVAL with clause\naddC(one(X500), zero(X501), zero(X502)) :- addY(X500, X501, X502).\nand substitutionX500 -> T379,\nT311 -> one(T379),\nX501 -> T380,\nT312 -> zero(T380),\nX502 -> X503,\nX393 -> zero(X503),\nT377 -> T379,\nT378 -> T380"
            },
            {
                "from": 2091,
                "to": 2096,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2092,
                "to": 2130,
                "label": "EVAL with clause\naddC(one(X554), one(X555), one(X556)) :- addc(X554, X555, X556).\nand substitutionX554 -> T415,\nT311 -> one(T415),\nX555 -> T416,\nT312 -> one(T416),\nX556 -> X557,\nX393 -> one(X557),\nT413 -> T415,\nT414 -> T416"
            },
            {
                "from": 2092,
                "to": 2131,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2095,
                "to": 2097,
                "label": "CASE"
            },
            {
                "from": 2097,
                "to": 2098,
                "label": "PARALLEL"
            },
            {
                "from": 2097,
                "to": 2099,
                "label": "PARALLEL"
            },
            {
                "from": 2098,
                "to": 2100,
                "label": "EVAL with clause\naddY(b, zero(X509), one(X509)) :- binaryZ(X509).\nand substitutionT379 -> b,\nX509 -> T387,\nT380 -> zero(T387),\nX503 -> one(T387),\nT386 -> T387"
            },
            {
                "from": 2098,
                "to": 2101,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2099,
                "to": 2102,
                "label": "PARALLEL"
            },
            {
                "from": 2099,
                "to": 2103,
                "label": "PARALLEL"
            },
            {
                "from": 2100,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T387"
            },
            {
                "from": 2102,
                "to": 2104,
                "label": "EVAL with clause\naddY(b, one(X523), zero(X524)) :- succ(X523, X524).\nand substitutionT379 -> b,\nX523 -> T394,\nT380 -> one(T394),\nX524 -> X525,\nX503 -> zero(X525),\nT393 -> T394"
            },
            {
                "from": 2102,
                "to": 2105,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2103,
                "to": 2116,
                "label": "ONLY EVAL with clause\naddY(X538, X539, X540) :- addC(X538, X539, X540).\nand substitutionT379 -> T405,\nX538 -> T405,\nT380 -> T406,\nX539 -> T406,\nX503 -> X541,\nX540 -> X541,\nT403 -> T405,\nT404 -> T406"
            },
            {
                "from": 2104,
                "to": 1816,
                "label": "INSTANCE with matching:\nT282 -> T394\nX346 -> X525"
            },
            {
                "from": 2116,
                "to": 1881,
                "label": "INSTANCE with matching:\nT311 -> T405\nT312 -> T406\nX393 -> X541"
            },
            {
                "from": 2130,
                "to": 1624,
                "label": "INSTANCE with matching:\nT263 -> T415\nT264 -> T416\nX315 -> X557"
            },
            {
                "from": 2138,
                "to": 2139,
                "label": "PARALLEL"
            },
            {
                "from": 2138,
                "to": 2140,
                "label": "PARALLEL"
            },
            {
                "from": 2139,
                "to": 2157,
                "label": "EVAL with clause\naddz(one(X577), zero(X578), one(X579)) :- addy(X577, X578, X579).\nand substitutionX577 -> T428,\nT145 -> one(T428),\nT146 -> T429,\nX578 -> T429,\nX579 -> X580,\nX147 -> one(X580),\nT426 -> T428,\nT427 -> T429"
            },
            {
                "from": 2139,
                "to": 2158,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2140,
                "to": 2160,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 2157,
                "to": 1612,
                "label": "INSTANCE with matching:\nT227 -> T428\nT228 -> T429\nX271 -> X580"
            },
            {
                "from": 2161,
                "to": 2162,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 2162,
                "to": 2163,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 2163,
                "to": 2164,
                "label": "PARALLEL"
            },
            {
                "from": 2163,
                "to": 2165,
                "label": "PARALLEL"
            },
            {
                "from": 2164,
                "to": 2166,
                "label": "EVAL with clause\nadd(b, X590, X590) :- binaryZ(X590).\nand substitutionT58 -> b,\nT57 -> T437,\nX590 -> zero(T437),\nT52 -> zero(T437)"
            },
            {
                "from": 2164,
                "to": 2167,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2165,
                "to": 2228,
                "label": "ONLY EVAL with clause\nadd(X601, X602, X603) :- addz(X601, X602, X603).\nand substitutionT58 -> T453,\nX601 -> T453,\nT57 -> T454,\nX602 -> zero(T454),\nT52 -> T452,\nX603 -> T452,\nT450 -> T453,\nT451 -> T454"
            },
            {
                "from": 2166,
                "to": 1406,
                "label": "INSTANCE with matching:\nT100 -> T437"
            },
            {
                "from": 2228,
                "to": 2229,
                "label": "CASE"
            },
            {
                "from": 2229,
                "to": 2230,
                "label": "PARALLEL"
            },
            {
                "from": 2229,
                "to": 2231,
                "label": "PARALLEL"
            },
            {
                "from": 2230,
                "to": 2246,
                "label": "EVAL with clause\naddz(zero(X619), zero(X620), zero(X621)) :- addz(X619, X620, X621).\nand substitutionX619 -> T473,\nT453 -> zero(T473),\nT454 -> T474,\nX620 -> T474,\nX621 -> T472,\nT452 -> zero(T472),\nT470 -> T473,\nT471 -> T474"
            },
            {
                "from": 2230,
                "to": 2247,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2231,
                "to": 2485,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 2246,
                "to": 2248,
                "label": "CASE"
            },
            {
                "from": 2248,
                "to": 2260,
                "label": "PARALLEL"
            },
            {
                "from": 2248,
                "to": 2261,
                "label": "PARALLEL"
            },
            {
                "from": 2260,
                "to": 2266,
                "label": "EVAL with clause\naddz(zero(X637), zero(X638), zero(X639)) :- addz(X637, X638, X639).\nand substitutionX637 -> T493,\nT473 -> zero(T493),\nX638 -> T494,\nT474 -> zero(T494),\nX639 -> T492,\nT472 -> zero(T492),\nT490 -> T493,\nT491 -> T494"
            },
            {
                "from": 2260,
                "to": 2267,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2261,
                "to": 2272,
                "label": "PARALLEL"
            },
            {
                "from": 2261,
                "to": 2273,
                "label": "PARALLEL"
            },
            {
                "from": 2266,
                "to": 2246,
                "label": "INSTANCE with matching:\nT473 -> T493\nT474 -> T494\nT472 -> T492"
            },
            {
                "from": 2272,
                "to": 2276,
                "label": "EVAL with clause\naddz(zero(X655), one(X656), one(X657)) :- addx(X655, X656, X657).\nand substitutionX655 -> T513,\nT473 -> zero(T513),\nX656 -> T514,\nT474 -> one(T514),\nX657 -> T512,\nT472 -> one(T512),\nT510 -> T513,\nT511 -> T514"
            },
            {
                "from": 2272,
                "to": 2277,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2273,
                "to": 2291,
                "label": "PARALLEL"
            },
            {
                "from": 2273,
                "to": 2292,
                "label": "PARALLEL"
            },
            {
                "from": 2276,
                "to": 2280,
                "label": "CASE"
            },
            {
                "from": 2280,
                "to": 2282,
                "label": "PARALLEL"
            },
            {
                "from": 2280,
                "to": 2283,
                "label": "PARALLEL"
            },
            {
                "from": 2282,
                "to": 2284,
                "label": "EVAL with clause\naddx(one(X663), b, one(X663)) :- binary(X663).\nand substitutionX663 -> T520,\nT513 -> one(T520),\nT514 -> b,\nT512 -> one(T520)"
            },
            {
                "from": 2282,
                "to": 2285,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2283,
                "to": 2286,
                "label": "PARALLEL"
            },
            {
                "from": 2283,
                "to": 2287,
                "label": "PARALLEL"
            },
            {
                "from": 2284,
                "to": 1417,
                "label": "INSTANCE with matching:\nT123 -> T520"
            },
            {
                "from": 2286,
                "to": 2288,
                "label": "EVAL with clause\naddx(zero(X668), b, zero(X668)) :- binaryZ(X668).\nand substitutionX668 -> T525,\nT513 -> zero(T525),\nT514 -> b,\nT512 -> zero(T525)"
            },
            {
                "from": 2286,
                "to": 2289,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2287,
                "to": 2290,
                "label": "ONLY EVAL with clause\naddx(X679, X680, X681) :- addz(X679, X680, X681).\nand substitutionT513 -> T541,\nX679 -> T541,\nT514 -> T542,\nX680 -> T542,\nT512 -> T540,\nX681 -> T540,\nT538 -> T541,\nT539 -> T542"
            },
            {
                "from": 2288,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T525"
            },
            {
                "from": 2290,
                "to": 2246,
                "label": "INSTANCE with matching:\nT473 -> T541\nT474 -> T542\nT472 -> T540"
            },
            {
                "from": 2291,
                "to": 2293,
                "label": "EVAL with clause\naddz(one(X697), zero(X698), one(X699)) :- addy(X697, X698, X699).\nand substitutionX697 -> T561,\nT473 -> one(T561),\nX698 -> T562,\nT474 -> zero(T562),\nX699 -> T560,\nT472 -> one(T560),\nT558 -> T561,\nT559 -> T562"
            },
            {
                "from": 2291,
                "to": 2294,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2292,
                "to": 2307,
                "label": "EVAL with clause\naddz(one(X733), one(X734), zero(X735)) :- addc(X733, X734, X735).\nand substitutionX733 -> T603,\nT473 -> one(T603),\nX734 -> T604,\nT474 -> one(T604),\nX735 -> T602,\nT472 -> zero(T602),\nT600 -> T603,\nT601 -> T604"
            },
            {
                "from": 2292,
                "to": 2321,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2293,
                "to": 2295,
                "label": "CASE"
            },
            {
                "from": 2295,
                "to": 2296,
                "label": "PARALLEL"
            },
            {
                "from": 2295,
                "to": 2297,
                "label": "PARALLEL"
            },
            {
                "from": 2296,
                "to": 2298,
                "label": "EVAL with clause\naddy(b, one(X705), one(X705)) :- binary(X705).\nand substitutionT561 -> b,\nX705 -> T568,\nT562 -> one(T568),\nT560 -> one(T568)"
            },
            {
                "from": 2296,
                "to": 2299,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2297,
                "to": 2300,
                "label": "PARALLEL"
            },
            {
                "from": 2297,
                "to": 2301,
                "label": "PARALLEL"
            },
            {
                "from": 2298,
                "to": 1417,
                "label": "INSTANCE with matching:\nT123 -> T568"
            },
            {
                "from": 2300,
                "to": 2302,
                "label": "EVAL with clause\naddy(b, zero(X710), zero(X710)) :- binaryZ(X710).\nand substitutionT561 -> b,\nX710 -> T573,\nT562 -> zero(T573),\nT560 -> zero(T573)"
            },
            {
                "from": 2300,
                "to": 2303,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2301,
                "to": 2304,
                "label": "ONLY EVAL with clause\naddy(X721, X722, X723) :- addz(X721, X722, X723).\nand substitutionT561 -> T589,\nX721 -> T589,\nT562 -> T590,\nX722 -> T590,\nT560 -> T588,\nX723 -> T588,\nT586 -> T589,\nT587 -> T590"
            },
            {
                "from": 2302,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T573"
            },
            {
                "from": 2304,
                "to": 2246,
                "label": "INSTANCE with matching:\nT473 -> T589\nT474 -> T590\nT472 -> T588"
            },
            {
                "from": 2307,
                "to": 2323,
                "label": "CASE"
            },
            {
                "from": 2323,
                "to": 2325,
                "label": "PARALLEL"
            },
            {
                "from": 2323,
                "to": 2326,
                "label": "PARALLEL"
            },
            {
                "from": 2325,
                "to": 2327,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT603 -> b,\nT604 -> b,\nT602 -> one(b)"
            },
            {
                "from": 2325,
                "to": 2328,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2326,
                "to": 2332,
                "label": "PARALLEL"
            },
            {
                "from": 2326,
                "to": 2333,
                "label": "PARALLEL"
            },
            {
                "from": 2327,
                "to": 2329,
                "label": "SUCCESS"
            },
            {
                "from": 2332,
                "to": 2338,
                "label": "EVAL with clause\naddc(X744, b, X745) :- succZ(X744, X745).\nand substitutionT603 -> T615,\nX744 -> T615,\nT604 -> b,\nT602 -> T614,\nX745 -> T614,\nT613 -> T615"
            },
            {
                "from": 2332,
                "to": 2339,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2333,
                "to": 2372,
                "label": "PARALLEL"
            },
            {
                "from": 2333,
                "to": 2373,
                "label": "PARALLEL"
            },
            {
                "from": 2338,
                "to": 2343,
                "label": "CASE"
            },
            {
                "from": 2343,
                "to": 2345,
                "label": "PARALLEL"
            },
            {
                "from": 2343,
                "to": 2346,
                "label": "PARALLEL"
            },
            {
                "from": 2345,
                "to": 2348,
                "label": "EVAL with clause\nsuccZ(zero(X751), one(X751)) :- binaryZ(X751).\nand substitutionX751 -> T621,\nT615 -> zero(T621),\nT614 -> one(T621)"
            },
            {
                "from": 2345,
                "to": 2349,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2346,
                "to": 2350,
                "label": "EVAL with clause\nsuccZ(one(X757), zero(X758)) :- succ(X757, X758).\nand substitutionX757 -> T629,\nT615 -> one(T629),\nX758 -> T628,\nT614 -> zero(T628),\nT627 -> T629"
            },
            {
                "from": 2346,
                "to": 2351,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2348,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T621"
            },
            {
                "from": 2350,
                "to": 2352,
                "label": "CASE"
            },
            {
                "from": 2352,
                "to": 2353,
                "label": "PARALLEL"
            },
            {
                "from": 2352,
                "to": 2354,
                "label": "PARALLEL"
            },
            {
                "from": 2353,
                "to": 2355,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT629 -> b,\nT628 -> one(b)"
            },
            {
                "from": 2353,
                "to": 2356,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2354,
                "to": 2358,
                "label": "PARALLEL"
            },
            {
                "from": 2354,
                "to": 2359,
                "label": "PARALLEL"
            },
            {
                "from": 2355,
                "to": 2357,
                "label": "SUCCESS"
            },
            {
                "from": 2358,
                "to": 2360,
                "label": "EVAL with clause\nsucc(zero(X763), one(X763)) :- binaryZ(X763).\nand substitutionX763 -> T634,\nT629 -> zero(T634),\nT628 -> one(T634)"
            },
            {
                "from": 2358,
                "to": 2361,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2359,
                "to": 2362,
                "label": "EVAL with clause\nsucc(one(X769), zero(X770)) :- succ(X769, X770).\nand substitutionX769 -> T642,\nT629 -> one(T642),\nX770 -> T641,\nT628 -> zero(T641),\nT640 -> T642"
            },
            {
                "from": 2359,
                "to": 2363,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2360,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T634"
            },
            {
                "from": 2362,
                "to": 2350,
                "label": "INSTANCE with matching:\nT629 -> T642\nT628 -> T641"
            },
            {
                "from": 2372,
                "to": 2377,
                "label": "EVAL with clause\naddc(b, X779, X780) :- succZ(X779, X780).\nand substitutionT603 -> b,\nT604 -> T653,\nX779 -> T653,\nT602 -> T652,\nX780 -> T652,\nT651 -> T653"
            },
            {
                "from": 2372,
                "to": 2378,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2373,
                "to": 2385,
                "label": "ONLY EVAL with clause\naddc(X791, X792, X793) :- addC(X791, X792, X793).\nand substitutionT603 -> T669,\nX791 -> T669,\nT604 -> T670,\nX792 -> T670,\nT602 -> T668,\nX793 -> T668,\nT666 -> T669,\nT667 -> T670"
            },
            {
                "from": 2377,
                "to": 2338,
                "label": "INSTANCE with matching:\nT615 -> T653\nT614 -> T652"
            },
            {
                "from": 2385,
                "to": 2386,
                "label": "CASE"
            },
            {
                "from": 2386,
                "to": 2387,
                "label": "PARALLEL"
            },
            {
                "from": 2386,
                "to": 2388,
                "label": "PARALLEL"
            },
            {
                "from": 2387,
                "to": 2389,
                "label": "EVAL with clause\naddC(zero(X809), zero(X810), one(X811)) :- addz(X809, X810, X811).\nand substitutionX809 -> T689,\nT669 -> zero(T689),\nX810 -> T690,\nT670 -> zero(T690),\nX811 -> T688,\nT668 -> one(T688),\nT686 -> T689,\nT687 -> T690"
            },
            {
                "from": 2387,
                "to": 2390,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2388,
                "to": 2391,
                "label": "PARALLEL"
            },
            {
                "from": 2388,
                "to": 2392,
                "label": "PARALLEL"
            },
            {
                "from": 2389,
                "to": 2246,
                "label": "INSTANCE with matching:\nT473 -> T689\nT474 -> T690\nT472 -> T688"
            },
            {
                "from": 2391,
                "to": 2393,
                "label": "EVAL with clause\naddC(zero(X827), one(X828), zero(X829)) :- addX(X827, X828, X829).\nand substitutionX827 -> T709,\nT669 -> zero(T709),\nX828 -> T710,\nT670 -> one(T710),\nX829 -> T708,\nT668 -> zero(T708),\nT706 -> T709,\nT707 -> T710"
            },
            {
                "from": 2391,
                "to": 2394,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2392,
                "to": 2469,
                "label": "PARALLEL"
            },
            {
                "from": 2392,
                "to": 2470,
                "label": "PARALLEL"
            },
            {
                "from": 2393,
                "to": 2395,
                "label": "CASE"
            },
            {
                "from": 2395,
                "to": 2417,
                "label": "PARALLEL"
            },
            {
                "from": 2395,
                "to": 2418,
                "label": "PARALLEL"
            },
            {
                "from": 2417,
                "to": 2419,
                "label": "EVAL with clause\naddX(zero(X835), b, one(X835)) :- binaryZ(X835).\nand substitutionX835 -> T716,\nT709 -> zero(T716),\nT710 -> b,\nT708 -> one(T716)"
            },
            {
                "from": 2417,
                "to": 2420,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2418,
                "to": 2446,
                "label": "PARALLEL"
            },
            {
                "from": 2418,
                "to": 2447,
                "label": "PARALLEL"
            },
            {
                "from": 2419,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T716"
            },
            {
                "from": 2446,
                "to": 2452,
                "label": "EVAL with clause\naddX(one(X845), b, zero(X846)) :- succ(X845, X846).\nand substitutionX845 -> T728,\nT709 -> one(T728),\nT710 -> b,\nX846 -> T727,\nT708 -> zero(T727),\nT726 -> T728"
            },
            {
                "from": 2446,
                "to": 2453,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2447,
                "to": 2468,
                "label": "ONLY EVAL with clause\naddX(X856, X857, X858) :- addC(X856, X857, X858).\nand substitutionT709 -> T743,\nX856 -> T743,\nT710 -> T744,\nX857 -> T744,\nT708 -> T742,\nX858 -> T742,\nT740 -> T743,\nT741 -> T744"
            },
            {
                "from": 2452,
                "to": 2350,
                "label": "INSTANCE with matching:\nT629 -> T728\nT628 -> T727"
            },
            {
                "from": 2468,
                "to": 2385,
                "label": "INSTANCE with matching:\nT669 -> T743\nT670 -> T744\nT668 -> T742"
            },
            {
                "from": 2469,
                "to": 2471,
                "label": "EVAL with clause\naddC(one(X874), zero(X875), zero(X876)) :- addY(X874, X875, X876).\nand substitutionX874 -> T763,\nT669 -> one(T763),\nX875 -> T764,\nT670 -> zero(T764),\nX876 -> T762,\nT668 -> zero(T762),\nT760 -> T763,\nT761 -> T764"
            },
            {
                "from": 2469,
                "to": 2472,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2470,
                "to": 2483,
                "label": "EVAL with clause\naddC(one(X915), one(X916), one(X917)) :- addc(X915, X916, X917).\nand substitutionX915 -> T811,\nT669 -> one(T811),\nX916 -> T812,\nT670 -> one(T812),\nX917 -> T810,\nT668 -> one(T810),\nT808 -> T811,\nT809 -> T812"
            },
            {
                "from": 2470,
                "to": 2484,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2471,
                "to": 2473,
                "label": "CASE"
            },
            {
                "from": 2473,
                "to": 2474,
                "label": "PARALLEL"
            },
            {
                "from": 2473,
                "to": 2475,
                "label": "PARALLEL"
            },
            {
                "from": 2474,
                "to": 2476,
                "label": "EVAL with clause\naddY(b, zero(X882), one(X882)) :- binaryZ(X882).\nand substitutionT763 -> b,\nX882 -> T770,\nT764 -> zero(T770),\nT762 -> one(T770)"
            },
            {
                "from": 2474,
                "to": 2477,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2475,
                "to": 2478,
                "label": "PARALLEL"
            },
            {
                "from": 2475,
                "to": 2479,
                "label": "PARALLEL"
            },
            {
                "from": 2476,
                "to": 1411,
                "label": "INSTANCE with matching:\nT111 -> T770"
            },
            {
                "from": 2478,
                "to": 2480,
                "label": "EVAL with clause\naddY(b, one(X892), zero(X893)) :- succ(X892, X893).\nand substitutionT763 -> b,\nX892 -> T782,\nT764 -> one(T782),\nX893 -> T781,\nT762 -> zero(T781),\nT780 -> T782"
            },
            {
                "from": 2478,
                "to": 2481,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2479,
                "to": 2482,
                "label": "ONLY EVAL with clause\naddY(X903, X904, X905) :- addC(X903, X904, X905).\nand substitutionT763 -> T797,\nX903 -> T797,\nT764 -> T798,\nX904 -> T798,\nT762 -> T796,\nX905 -> T796,\nT794 -> T797,\nT795 -> T798"
            },
            {
                "from": 2480,
                "to": 2350,
                "label": "INSTANCE with matching:\nT629 -> T782\nT628 -> T781"
            },
            {
                "from": 2482,
                "to": 2385,
                "label": "INSTANCE with matching:\nT669 -> T797\nT670 -> T798\nT668 -> T796"
            },
            {
                "from": 2483,
                "to": 2307,
                "label": "INSTANCE with matching:\nT603 -> T811\nT604 -> T812\nT602 -> T810"
            },
            {
                "from": 2485,
                "to": 2486,
                "label": "PARALLEL"
            },
            {
                "from": 2485,
                "to": 2487,
                "label": "PARALLEL"
            },
            {
                "from": 2486,
                "to": 2488,
                "label": "EVAL with clause\naddz(one(X933), zero(X934), one(X935)) :- addy(X933, X934, X935).\nand substitutionX933 -> T829,\nT453 -> one(T829),\nT454 -> T830,\nX934 -> T830,\nX935 -> T828,\nT452 -> one(T828),\nT826 -> T829,\nT827 -> T830"
            },
            {
                "from": 2486,
                "to": 2489,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2487,
                "to": 2490,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 2488,
                "to": 2293,
                "label": "INSTANCE with matching:\nT561 -> T829\nT562 -> T830\nT560 -> T828"
            },
            {
                "from": 2491,
                "to": 2492,
                "label": "EVAL with clause\ntimes(one(X947), X948, X949) :- ','(times(X947, X948, X950), add(X948, zero(X950), X949)).\nand substitutionX947 -> T842,\nT1 -> one(T842),\nT2 -> T843,\nX948 -> T843,\nT11 -> T841,\nX949 -> zero(T841),\nT839 -> T842,\nT840 -> T843"
            },
            {
                "from": 2491,
                "to": 2493,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2492,
                "to": 948,
                "label": "INSTANCE with matching:\nT53 -> T842\nT54 -> T843\nX48 -> X950\nT52 -> zero(T841)"
            },
            {
                "from": 2494,
                "to": 2496,
                "label": "CASE"
            },
            {
                "from": 2496,
                "to": 2497,
                "label": "PARALLEL"
            },
            {
                "from": 2496,
                "to": 2498,
                "label": "PARALLEL"
            },
            {
                "from": 2497,
                "to": 2499,
                "label": "EVAL with clause\ntimes(one(b), X964, X964).\nand substitutionT852 -> one(b),\nT853 -> T859,\nX964 -> T859,\nX959 -> T859,\nT858 -> T859"
            },
            {
                "from": 2497,
                "to": 2500,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2498,
                "to": 2501,
                "label": "PARALLEL"
            },
            {
                "from": 2498,
                "to": 2502,
                "label": "PARALLEL"
            },
            {
                "from": 2499,
                "to": 979,
                "label": "INSTANCE with matching:\nT58 -> T859\nT57 -> T859\nT52 -> T851"
            },
            {
                "from": 2501,
                "to": 2503,
                "label": "EVAL with clause\ntimes(zero(X981), X982, zero(X983)) :- times(X981, X982, X983).\nand substitutionX981 -> T870,\nT852 -> zero(T870),\nT853 -> T871,\nX982 -> T871,\nX983 -> X984,\nX959 -> zero(X984),\nT868 -> T870,\nT869 -> T871"
            },
            {
                "from": 2501,
                "to": 2504,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2502,
                "to": 2507,
                "label": "EVAL with clause\ntimes(one(X998), X999, X1000) :- ','(times(X998, X999, X1001), add(X999, zero(X1001), X1000)).\nand substitutionX998 -> T886,\nT852 -> one(T886),\nT853 -> T887,\nX999 -> T887,\nX959 -> X1002,\nX1000 -> X1002,\nT884 -> T886,\nT885 -> T887"
            },
            {
                "from": 2502,
                "to": 2508,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2503,
                "to": 2505,
                "label": "SPLIT 1"
            },
            {
                "from": 2503,
                "to": 2506,
                "label": "SPLIT 2\nnew knowledge:\nT870 is ground\nreplacements:X984 -> T874,\nT871 -> T875,\nT1 -> T876,\nT2 -> T877"
            },
            {
                "from": 2505,
                "to": 978,
                "label": "INSTANCE with matching:\nT53 -> T870\nT54 -> T871\nX48 -> X984"
            },
            {
                "from": 2506,
                "to": 979,
                "label": "INSTANCE with matching:\nT58 -> T875\nT57 -> zero(T874)\nT52 -> T851"
            },
            {
                "from": 2507,
                "to": 2509,
                "label": "SPLIT 1"
            },
            {
                "from": 2507,
                "to": 2510,
                "label": "SPLIT 2\nnew knowledge:\nT886 is ground\nreplacements:X1001 -> T890,\nT887 -> T891,\nT1 -> T892,\nT2 -> T893"
            },
            {
                "from": 2509,
                "to": 978,
                "label": "INSTANCE with matching:\nT53 -> T886\nT54 -> T887\nX48 -> X1001"
            },
            {
                "from": 2510,
                "to": 2514,
                "label": "SPLIT 1"
            },
            {
                "from": 2510,
                "to": 2515,
                "label": "SPLIT 2\nnew knowledge:\nT897 is ground\nT890 is ground\nT896 is ground\nreplacements:X1002 -> T896,\nT891 -> T897,\nT892 -> T898,\nT893 -> T899"
            },
            {
                "from": 2514,
                "to": 1288,
                "label": "INSTANCE with matching:\nT91 -> T891\nT90 -> T890\nX93 -> X1002"
            },
            {
                "from": 2515,
                "to": 979,
                "label": "INSTANCE with matching:\nT58 -> T897\nT57 -> T896\nT52 -> T851"
            },
            {
                "from": 2516,
                "to": 2520,
                "label": "CASE"
            },
            {
                "from": 2517,
                "to": 2594,
                "label": "EVAL with clause\ntimes(one(X1071), X1072, X1073) :- ','(times(X1071, X1072, X1074), add(X1072, zero(X1074), X1073)).\nand substitutionX1071 -> T970,\nT1 -> one(T970),\nT2 -> T971,\nX1072 -> T971,\nT3 -> T969,\nX1073 -> T969,\nT967 -> T970,\nT968 -> T971"
            },
            {
                "from": 2517,
                "to": 2595,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2520,
                "to": 2521,
                "label": "PARALLEL"
            },
            {
                "from": 2520,
                "to": 2522,
                "label": "PARALLEL"
            },
            {
                "from": 2521,
                "to": 2531,
                "label": "EVAL with clause\ntimes(one(b), X1017, X1017).\nand substitutionT906 -> one(b),\nT907 -> T912,\nX1017 -> T912,\nT905 -> T912"
            },
            {
                "from": 2521,
                "to": 2532,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2522,
                "to": 2534,
                "label": "PARALLEL"
            },
            {
                "from": 2522,
                "to": 2535,
                "label": "PARALLEL"
            },
            {
                "from": 2531,
                "to": 2533,
                "label": "SUCCESS"
            },
            {
                "from": 2534,
                "to": 2536,
                "label": "EVAL with clause\ntimes(zero(X1030), X1031, zero(X1032)) :- times(X1030, X1031, X1032).\nand substitutionX1030 -> T928,\nT906 -> zero(T928),\nT907 -> T929,\nX1031 -> T929,\nX1032 -> T927,\nT905 -> zero(T927),\nT925 -> T928,\nT926 -> T929"
            },
            {
                "from": 2534,
                "to": 2537,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2535,
                "to": 2538,
                "label": "PARALLEL"
            },
            {
                "from": 2535,
                "to": 2539,
                "label": "PARALLEL"
            },
            {
                "from": 2536,
                "to": 7,
                "label": "INSTANCE with matching:\nT1 -> T928\nT2 -> T929\nT3 -> T927"
            },
            {
                "from": 2538,
                "to": 2545,
                "label": "EVAL with clause\ntimes(one(X1049), X1050, X1051) :- ','(times(X1049, X1050, X1052), add(X1050, zero(X1052), X1051)).\nand substitutionX1049 -> T947,\nT906 -> one(T947),\nT907 -> T948,\nX1050 -> T948,\nT905 -> T946,\nX1051 -> T946,\nT944 -> T947,\nT945 -> T948"
            },
            {
                "from": 2538,
                "to": 2546,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2539,
                "to": 2550,
                "label": "FAILURE"
            },
            {
                "from": 2545,
                "to": 948,
                "label": "INSTANCE with matching:\nT53 -> T947\nT54 -> T948\nX48 -> X1052\nT52 -> T946"
            },
            {
                "from": 2550,
                "to": 2583,
                "label": "EVAL with clause\ntimes(one(X1062), X1063, X1064) :- ','(times(X1062, X1063, X1065), add(X1063, zero(X1065), X1064)).\nand substitutionX1062 -> T960,\nT1 -> one(T960),\nT2 -> T961,\nX1063 -> T961,\nT905 -> T959,\nX1064 -> zero(T959),\nT957 -> T960,\nT958 -> T961"
            },
            {
                "from": 2550,
                "to": 2584,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2583,
                "to": 948,
                "label": "INSTANCE with matching:\nT53 -> T960\nT54 -> T961\nX48 -> X1065\nT52 -> zero(T959)"
            },
            {
                "from": 2594,
                "to": 2601,
                "label": "CASE"
            },
            {
                "from": 2601,
                "to": 2605,
                "label": "PARALLEL"
            },
            {
                "from": 2601,
                "to": 2606,
                "label": "PARALLEL"
            },
            {
                "from": 2605,
                "to": 2608,
                "label": "EVAL with clause\ntimes(one(b), X1079, X1079).\nand substitutionT970 -> one(b),\nT971 -> T977,\nX1079 -> T977,\nX1074 -> T977,\nT976 -> T977"
            },
            {
                "from": 2605,
                "to": 2609,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2606,
                "to": 2617,
                "label": "PARALLEL"
            },
            {
                "from": 2606,
                "to": 2618,
                "label": "PARALLEL"
            },
            {
                "from": 2608,
                "to": 979,
                "label": "INSTANCE with matching:\nT58 -> T977\nT57 -> T977\nT52 -> T969"
            },
            {
                "from": 2617,
                "to": 2628,
                "label": "EVAL with clause\ntimes(zero(X1096), X1097, zero(X1098)) :- times(X1096, X1097, X1098).\nand substitutionX1096 -> T988,\nT970 -> zero(T988),\nT971 -> T989,\nX1097 -> T989,\nX1098 -> X1099,\nX1074 -> zero(X1099),\nT986 -> T988,\nT987 -> T989"
            },
            {
                "from": 2617,
                "to": 2629,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2618,
                "to": 2635,
                "label": "EVAL with clause\ntimes(one(X1111), X1112, X1113) :- ','(times(X1111, X1112, X1114), add(X1112, zero(X1114), X1113)).\nand substitutionX1111 -> T998,\nT970 -> one(T998),\nT971 -> T999,\nX1112 -> T999,\nX1074 -> X1115,\nX1113 -> X1115,\nT996 -> T998,\nT997 -> T999"
            },
            {
                "from": 2618,
                "to": 2636,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2628,
                "to": 2503,
                "label": "INSTANCE with matching:\nT870 -> T988\nT871 -> T989\nX984 -> X1099\nT851 -> T969\nX6 -> X1010\nX7 -> X1011\nX8 -> X1012"
            },
            {
                "from": 2635,
                "to": 2507,
                "label": "INSTANCE with matching:\nT886 -> T998\nT887 -> T999\nX1001 -> X1114\nX1002 -> X1115\nT851 -> T969\nX6 -> X1010\nX7 -> X1011\nX8 -> X1012"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(98)
Obligation:
Triples:

timesF(zero(X1), X2, zero(X3)) :- timesF(X1, X2, X3).
timesF(one(X1), X2, X3) :- timesF(X1, X2, X4).
timesF(one(X1), X2, X3) :- ','(timescF(X1, X2, X4), addG(X2, X4, X3)).
binaryZH(zero(X1)) :- binaryZH(X1).
binaryZH(one(X1)) :- binaryI(X1).
binaryI(zero(X1)) :- binaryZH(X1).
binaryI(one(X1)) :- binaryI(X1).
addzJ(zero(X1), zero(X2), zero(X3)) :- addzJ(X1, X2, X3).
addzJ(zero(one(X1)), one(b), one(one(X1))) :- binaryI(X1).
addzJ(zero(zero(X1)), one(b), one(zero(X1))) :- binaryZH(X1).
addzJ(zero(X1), one(X2), one(X3)) :- addzJ(X1, X2, X3).
addzJ(one(X1), zero(X2), one(X3)) :- addyK(X1, X2, X3).
addzJ(one(X1), one(X2), zero(X3)) :- addcL(X1, X2, X3).
succM(zero(X1), one(X1)) :- binaryZH(X1).
succM(one(X1), zero(X2)) :- succM(X1, X2).
succZN(zero(X1), one(X1)) :- binaryZH(X1).
succZN(one(X1), zero(X2)) :- succM(X1, X2).
addCO(zero(X1), zero(X2), one(X3)) :- addzJ(X1, X2, X3).
addCO(zero(zero(X1)), one(b), zero(one(X1))) :- binaryZH(X1).
addCO(zero(one(X1)), one(b), zero(zero(X2))) :- succM(X1, X2).
addCO(zero(X1), one(X2), zero(X3)) :- addCO(X1, X2, X3).
addCO(one(b), zero(zero(X1)), zero(one(X1))) :- binaryZH(X1).
addCO(one(b), zero(one(X1)), zero(zero(X2))) :- succM(X1, X2).
addCO(one(X1), zero(X2), zero(X3)) :- addCO(X1, X2, X3).
addCO(one(X1), one(X2), one(X3)) :- addcL(X1, X2, X3).
addcL(X1, b, X2) :- succZN(X1, X2).
addcL(b, X1, X2) :- succZN(X1, X2).
addcL(X1, X2, X3) :- addCO(X1, X2, X3).
addyK(b, one(X1), one(X1)) :- binaryI(X1).
addyK(b, zero(X1), zero(X1)) :- binaryZH(X1).
addyK(X1, X2, X3) :- addzJ(X1, X2, X3).
binaryZP(X1) :- binaryZH(X1).
addzQ(zero(X1), zero(X2), zero(X3)) :- addzQ(X1, X2, X3).
addzQ(zero(one(X1)), one(b), one(one(X1))) :- binaryI(X1).
addzQ(zero(zero(X1)), one(b), one(zero(X1))) :- binaryZH(X1).
addzQ(zero(X1), one(X2), one(X3)) :- addzQ(X1, X2, X3).
addzQ(one(X1), zero(X2), one(X3)) :- addyR(X1, X2, X3).
addzQ(one(X1), one(X2), zero(X3)) :- addcS(X1, X2, X3).
succT(zero(X1), one(X1)) :- binaryZH(X1).
succT(one(X1), zero(X2)) :- succT(X1, X2).
succZU(zero(X1), one(X1)) :- binaryZH(X1).
succZU(one(X1), zero(X2)) :- succT(X1, X2).
addCV(zero(X1), zero(X2), one(X3)) :- addzQ(X1, X2, X3).
addCV(zero(zero(X1)), one(b), zero(one(X1))) :- binaryZH(X1).
addCV(zero(one(X1)), one(b), zero(zero(X2))) :- succT(X1, X2).
addCV(zero(X1), one(X2), zero(X3)) :- addCV(X1, X2, X3).
addCV(one(b), zero(zero(X1)), zero(one(X1))) :- binaryZH(X1).
addCV(one(b), zero(one(X1)), zero(zero(X2))) :- succT(X1, X2).
addCV(one(X1), zero(X2), zero(X3)) :- addCV(X1, X2, X3).
addCV(one(X1), one(X2), one(X3)) :- addcS(X1, X2, X3).
addcS(X1, b, X2) :- succZU(X1, X2).
addcS(b, X1, X2) :- succZU(X1, X2).
addcS(X1, X2, X3) :- addCV(X1, X2, X3).
addyR(b, one(X1), one(X1)) :- binaryI(X1).
addyR(b, zero(X1), zero(X1)) :- binaryZH(X1).
addyR(X1, X2, X3) :- addzQ(X1, X2, X3).
pB(X1, X2, X3, X4) :- timesF(X1, X2, X3).
pB(X1, X2, X3, X4) :- ','(timescF(X1, X2, X3), addC1(X2, X3, X4)).
addC1(b, X1, zero(X1)) :- binaryZP(X1).
addC1(zero(X1), X2, zero(X3)) :- addzQ(X1, X2, X3).
addC1(one(X1), X2, one(X3)) :- addyR(X1, X2, X3).
addG(b, X1, zero(X1)) :- binaryZP(X1).
addG(zero(X1), X2, zero(X3)) :- addzJ(X1, X2, X3).
addG(one(X1), X2, one(X3)) :- addyK(X1, X2, X3).
pD(X1, X2, X3, X4) :- timesF(X1, X2, X3).
pD(X1, X2, X3, X4) :- ','(timescF(X1, X2, X3), addC1(X2, zero(X3), X4)).
pE(X1, X2, X3, X4, X5) :- timesF(X1, X2, X3).
pE(X1, X2, X3, X4, X5) :- ','(timescF(X1, X2, X3), addG(X2, X3, X4)).
pE(X1, X2, X3, X4, X5) :- ','(timescF(X1, X2, X3), ','(addcG(X2, X3, X4), addC1(X2, X4, X5))).
timesA(zero(zero(X1)), X2, zero(zero(X3))) :- timesA(X1, X2, X3).
timesA(zero(one(X1)), X2, zero(X3)) :- pB(X1, X2, X4, X3).
timesA(one(X1), X2, zero(X3)) :- pB(X1, X2, X4, zero(X3)).
timesA(one(one(b)), X1, X2) :- addC1(X1, X1, X2).
timesA(one(zero(X1)), X2, X3) :- pD(X1, X2, X4, X3).
timesA(one(one(X1)), X2, X3) :- pE(X1, X2, X4, X5, X3).
timesA(zero(zero(X1)), X2, zero(zero(X3))) :- timesA(X1, X2, X3).
timesA(zero(one(X1)), X2, zero(X3)) :- pB(X1, X2, X4, X3).
timesA(one(X1), X2, zero(X3)) :- pB(X1, X2, X4, zero(X3)).
timesA(one(one(b)), X1, X2) :- addC1(X1, X1, X2).
timesA(one(zero(X1)), X2, X3) :- pD(X1, X2, X4, X3).
timesA(one(one(X1)), X2, X3) :- pE(X1, X2, X4, X5, X3).

Clauses:

timescA(one(b), X1, X1).
timescA(zero(one(b)), X1, zero(X1)).
timescA(zero(zero(X1)), X2, zero(zero(X3))) :- timescA(X1, X2, X3).
timescA(zero(one(X1)), X2, zero(X3)) :- qcB(X1, X2, X4, X3).
timescA(one(X1), X2, zero(X3)) :- qcB(X1, X2, X4, zero(X3)).
timescA(one(one(b)), X1, X2) :- addcC(X1, X1, X2).
timescA(one(zero(X1)), X2, X3) :- qcD(X1, X2, X4, X3).
timescA(one(one(X1)), X2, X3) :- qcE(X1, X2, X4, X5, X3).
timescA(zero(one(b)), X1, zero(X1)).
timescA(zero(zero(X1)), X2, zero(zero(X3))) :- timescA(X1, X2, X3).
timescA(zero(one(X1)), X2, zero(X3)) :- qcB(X1, X2, X4, X3).
timescA(one(X1), X2, zero(X3)) :- qcB(X1, X2, X4, zero(X3)).
timescA(one(one(b)), X1, X2) :- addcC(X1, X1, X2).
timescA(one(zero(X1)), X2, X3) :- qcD(X1, X2, X4, X3).
timescA(one(one(X1)), X2, X3) :- qcE(X1, X2, X4, X5, X3).
timescF(one(b), X1, X1).
timescF(zero(X1), X2, zero(X3)) :- timescF(X1, X2, X3).
timescF(one(X1), X2, X3) :- ','(timescF(X1, X2, X4), addcG(X2, X4, X3)).
binaryZcH(zero(X1)) :- binaryZcH(X1).
binaryZcH(one(X1)) :- binarycI(X1).
binarycI(b).
binarycI(zero(X1)) :- binaryZcH(X1).
binarycI(one(X1)) :- binarycI(X1).
addzcJ(zero(X1), zero(X2), zero(X3)) :- addzcJ(X1, X2, X3).
addzcJ(zero(one(X1)), one(b), one(one(X1))) :- binarycI(X1).
addzcJ(zero(zero(X1)), one(b), one(zero(X1))) :- binaryZcH(X1).
addzcJ(zero(X1), one(X2), one(X3)) :- addzcJ(X1, X2, X3).
addzcJ(one(X1), zero(X2), one(X3)) :- addycK(X1, X2, X3).
addzcJ(one(X1), one(X2), zero(X3)) :- addccL(X1, X2, X3).
succcM(b, one(b)).
succcM(zero(X1), one(X1)) :- binaryZcH(X1).
succcM(one(X1), zero(X2)) :- succcM(X1, X2).
succZcN(zero(X1), one(X1)) :- binaryZcH(X1).
succZcN(one(X1), zero(X2)) :- succcM(X1, X2).
addCcO(zero(X1), zero(X2), one(X3)) :- addzcJ(X1, X2, X3).
addCcO(zero(zero(X1)), one(b), zero(one(X1))) :- binaryZcH(X1).
addCcO(zero(one(X1)), one(b), zero(zero(X2))) :- succcM(X1, X2).
addCcO(zero(X1), one(X2), zero(X3)) :- addCcO(X1, X2, X3).
addCcO(one(b), zero(zero(X1)), zero(one(X1))) :- binaryZcH(X1).
addCcO(one(b), zero(one(X1)), zero(zero(X2))) :- succcM(X1, X2).
addCcO(one(X1), zero(X2), zero(X3)) :- addCcO(X1, X2, X3).
addCcO(one(X1), one(X2), one(X3)) :- addccL(X1, X2, X3).
addccL(b, b, one(b)).
addccL(X1, b, X2) :- succZcN(X1, X2).
addccL(b, X1, X2) :- succZcN(X1, X2).
addccL(X1, X2, X3) :- addCcO(X1, X2, X3).
addycK(b, one(X1), one(X1)) :- binarycI(X1).
addycK(b, zero(X1), zero(X1)) :- binaryZcH(X1).
addycK(X1, X2, X3) :- addzcJ(X1, X2, X3).
binaryZcP(X1) :- binaryZcH(X1).
addzcQ(zero(X1), zero(X2), zero(X3)) :- addzcQ(X1, X2, X3).
addzcQ(zero(one(X1)), one(b), one(one(X1))) :- binarycI(X1).
addzcQ(zero(zero(X1)), one(b), one(zero(X1))) :- binaryZcH(X1).
addzcQ(zero(X1), one(X2), one(X3)) :- addzcQ(X1, X2, X3).
addzcQ(one(X1), zero(X2), one(X3)) :- addycR(X1, X2, X3).
addzcQ(one(X1), one(X2), zero(X3)) :- addccS(X1, X2, X3).
succcT(b, one(b)).
succcT(zero(X1), one(X1)) :- binaryZcH(X1).
succcT(one(X1), zero(X2)) :- succcT(X1, X2).
succZcU(zero(X1), one(X1)) :- binaryZcH(X1).
succZcU(one(X1), zero(X2)) :- succcT(X1, X2).
addCcV(zero(X1), zero(X2), one(X3)) :- addzcQ(X1, X2, X3).
addCcV(zero(zero(X1)), one(b), zero(one(X1))) :- binaryZcH(X1).
addCcV(zero(one(X1)), one(b), zero(zero(X2))) :- succcT(X1, X2).
addCcV(zero(X1), one(X2), zero(X3)) :- addCcV(X1, X2, X3).
addCcV(one(b), zero(zero(X1)), zero(one(X1))) :- binaryZcH(X1).
addCcV(one(b), zero(one(X1)), zero(zero(X2))) :- succcT(X1, X2).
addCcV(one(X1), zero(X2), zero(X3)) :- addCcV(X1, X2, X3).
addCcV(one(X1), one(X2), one(X3)) :- addccS(X1, X2, X3).
addccS(b, b, one(b)).
addccS(X1, b, X2) :- succZcU(X1, X2).
addccS(b, X1, X2) :- succZcU(X1, X2).
addccS(X1, X2, X3) :- addCcV(X1, X2, X3).
addycR(b, one(X1), one(X1)) :- binarycI(X1).
addycR(b, zero(X1), zero(X1)) :- binaryZcH(X1).
addycR(X1, X2, X3) :- addzcQ(X1, X2, X3).
qcB(X1, X2, X3, X4) :- ','(timescF(X1, X2, X3), addcC(X2, X3, X4)).
addcC(b, X1, zero(X1)) :- binaryZcP(X1).
addcC(zero(X1), X2, zero(X3)) :- addzcQ(X1, X2, X3).
addcC(one(X1), X2, one(X3)) :- addycR(X1, X2, X3).
addcG(b, X1, zero(X1)) :- binaryZcP(X1).
addcG(zero(X1), X2, zero(X3)) :- addzcJ(X1, X2, X3).
addcG(one(X1), X2, one(X3)) :- addycK(X1, X2, X3).
qcD(X1, X2, X3, X4) :- ','(timescF(X1, X2, X3), addcC(X2, zero(X3), X4)).
qcE(X1, X2, X3, X4, X5) :- ','(timescF(X1, X2, X3), ','(addcG(X2, X3, X4), addcC(X2, X4, X5))).

Afs:

timesA(x1, x2, x3)  =  timesA(x3)


----------------------------------------

(99) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

timesA_in_3: (f,f,b)

pB_in_4: (f,f,f,b)

timesF_in_3: (f,f,f)

timescF_in_3: (f,f,f)

addcG_in_3: (f,f,f)

binaryZcP_in_1: (f)

binaryZcH_in_1: (f)

binarycI_in_1: (f)

addzcJ_in_3: (f,f,f)

addycK_in_3: (f,f,f)

addccL_in_3: (f,f,f)

succZcN_in_2: (f,f)

succcM_in_2: (f,f)

addCcO_in_3: (f,f,f)

addG_in_3: (f,f,f)

binaryZP_in_1: (f) (b)

binaryZH_in_1: (f) (b)

binaryI_in_1: (f) (b)

addzJ_in_3: (f,f,f)

addyK_in_3: (f,f,f)

addcL_in_3: (f,f,f)

succZN_in_2: (f,f)

succM_in_2: (f,f)

addCO_in_3: (f,f,f)

addC1_in_3: (f,f,b) (b,b,b)

addzQ_in_3: (f,f,b) (b,b,b)

addyR_in_3: (f,f,b) (b,b,b)

addcS_in_3: (f,f,b) (b,b,b)

succZU_in_2: (f,b) (b,b)

succT_in_2: (f,b) (b,b)

addCV_in_3: (f,f,b) (b,b,b)

pD_in_4: (f,f,f,b)

pE_in_5: (f,f,f,f,b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> U75_AAG(X1, X2, X3, timesA_in_aag(X1, X2, X3))
   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> TIMESA_IN_AAG(X1, X2, X3)
   TIMESA_IN_AAG(zero(one(X1)), X2, zero(X3)) -> U76_AAG(X1, X2, X3, pB_in_aaag(X1, X2, X4, X3))
   TIMESA_IN_AAG(zero(one(X1)), X2, zero(X3)) -> PB_IN_AAAG(X1, X2, X4, X3)
   PB_IN_AAAG(X1, X2, X3, X4) -> U58_AAAG(X1, X2, X3, X4, timesF_in_aaa(X1, X2, X3))
   PB_IN_AAAG(X1, X2, X3, X4) -> TIMESF_IN_AAA(X1, X2, X3)
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> U1_AAA(X1, X2, X3, timesF_in_aaa(X1, X2, X3))
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> TIMESF_IN_AAA(X1, X2, X3)
   TIMESF_IN_AAA(one(X1), X2, X3) -> U2_AAA(X1, X2, X3, timesF_in_aaa(X1, X2, X4))
   TIMESF_IN_AAA(one(X1), X2, X3) -> TIMESF_IN_AAA(X1, X2, X4)
   TIMESF_IN_AAA(one(X1), X2, X3) -> U3_AAA(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U3_AAA(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U4_AAA(X1, X2, X3, addG_in_aaa(X2, X4, X3))
   U3_AAA(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> ADDG_IN_AAA(X2, X4, X3)
   ADDG_IN_AAA(b, X1, zero(X1)) -> U64_AAA(X1, binaryZP_in_a(X1))
   ADDG_IN_AAA(b, X1, zero(X1)) -> BINARYZP_IN_A(X1)
   BINARYZP_IN_A(X1) -> U33_A(X1, binaryZH_in_a(X1))
   BINARYZP_IN_A(X1) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(zero(X1)) -> U5_A(X1, binaryZH_in_a(X1))
   BINARYZH_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(one(X1)) -> U6_A(X1, binaryI_in_a(X1))
   BINARYZH_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   BINARYI_IN_A(zero(X1)) -> U7_A(X1, binaryZH_in_a(X1))
   BINARYI_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYI_IN_A(one(X1)) -> U8_A(X1, binaryI_in_a(X1))
   BINARYI_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   ADDG_IN_AAA(zero(X1), X2, zero(X3)) -> U65_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDG_IN_AAA(zero(X1), X2, zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> U9_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(one(X1)), one(b), one(one(X1))) -> U10_AAA(X1, binaryI_in_a(X1))
   ADDZJ_IN_AAA(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_A(X1)
   ADDZJ_IN_AAA(zero(zero(X1)), one(b), one(zero(X1))) -> U11_AAA(X1, binaryZH_in_a(X1))
   ADDZJ_IN_AAA(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_A(X1)
   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> U12_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> U13_AAA(X1, X2, X3, addyK_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   ADDYK_IN_AAA(b, one(X1), one(X1)) -> U30_AAA(X1, binaryI_in_a(X1))
   ADDYK_IN_AAA(b, one(X1), one(X1)) -> BINARYI_IN_A(X1)
   ADDYK_IN_AAA(b, zero(X1), zero(X1)) -> U31_AAA(X1, binaryZH_in_a(X1))
   ADDYK_IN_AAA(b, zero(X1), zero(X1)) -> BINARYZH_IN_A(X1)
   ADDYK_IN_AAA(X1, X2, X3) -> U32_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDYK_IN_AAA(X1, X2, X3) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> U14_AAA(X1, X2, X3, addcL_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDCL_IN_AAA(X1, b, X2) -> U27_AAA(X1, X2, succZN_in_aa(X1, X2))
   ADDCL_IN_AAA(X1, b, X2) -> SUCCZN_IN_AA(X1, X2)
   SUCCZN_IN_AA(zero(X1), one(X1)) -> U17_AA(X1, binaryZH_in_a(X1))
   SUCCZN_IN_AA(zero(X1), one(X1)) -> BINARYZH_IN_A(X1)
   SUCCZN_IN_AA(one(X1), zero(X2)) -> U18_AA(X1, X2, succM_in_aa(X1, X2))
   SUCCZN_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)
   SUCCM_IN_AA(zero(X1), one(X1)) -> U15_AA(X1, binaryZH_in_a(X1))
   SUCCM_IN_AA(zero(X1), one(X1)) -> BINARYZH_IN_A(X1)
   SUCCM_IN_AA(one(X1), zero(X2)) -> U16_AA(X1, X2, succM_in_aa(X1, X2))
   SUCCM_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)
   ADDCL_IN_AAA(b, X1, X2) -> U28_AAA(X1, X2, succZN_in_aa(X1, X2))
   ADDCL_IN_AAA(b, X1, X2) -> SUCCZN_IN_AA(X1, X2)
   ADDCL_IN_AAA(X1, X2, X3) -> U29_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCL_IN_AAA(X1, X2, X3) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> U19_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(zero(X1)), one(b), zero(one(X1))) -> U20_AAA(X1, binaryZH_in_a(X1))
   ADDCO_IN_AAA(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_A(X1)
   ADDCO_IN_AAA(zero(one(X1)), one(b), zero(zero(X2))) -> U21_AAA(X1, X2, succM_in_aa(X1, X2))
   ADDCO_IN_AAA(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCM_IN_AA(X1, X2)
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> U22_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(b), zero(zero(X1)), zero(one(X1))) -> U23_AAA(X1, binaryZH_in_a(X1))
   ADDCO_IN_AAA(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_A(X1)
   ADDCO_IN_AAA(one(b), zero(one(X1)), zero(zero(X2))) -> U24_AAA(X1, X2, succM_in_aa(X1, X2))
   ADDCO_IN_AAA(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCM_IN_AA(X1, X2)
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> U25_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> U26_AAA(X1, X2, X3, addcL_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDG_IN_AAA(one(X1), X2, one(X3)) -> U66_AAA(X1, X2, X3, addyK_in_aaa(X1, X2, X3))
   ADDG_IN_AAA(one(X1), X2, one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   PB_IN_AAAG(X1, X2, X3, X4) -> U59_AAAG(X1, X2, X3, X4, timescF_in_aaa(X1, X2, X3))
   U59_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> U60_AAAG(X1, X2, X3, X4, addC1_in_aag(X2, X3, X4))
   U59_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> ADDC1_IN_AAG(X2, X3, X4)
   ADDC1_IN_AAG(b, X1, zero(X1)) -> U61_AAG(X1, binaryZP_in_g(X1))
   ADDC1_IN_AAG(b, X1, zero(X1)) -> BINARYZP_IN_G(X1)
   BINARYZP_IN_G(X1) -> U33_G(X1, binaryZH_in_g(X1))
   BINARYZP_IN_G(X1) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(zero(X1)) -> U5_G(X1, binaryZH_in_g(X1))
   BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(one(X1)) -> U6_G(X1, binaryI_in_g(X1))
   BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   BINARYI_IN_G(zero(X1)) -> U7_G(X1, binaryZH_in_g(X1))
   BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYI_IN_G(one(X1)) -> U8_G(X1, binaryI_in_g(X1))
   BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   ADDC1_IN_AAG(zero(X1), X2, zero(X3)) -> U62_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDC1_IN_AAG(zero(X1), X2, zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> U34_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(one(X1)), one(b), one(one(X1))) -> U35_AAG(X1, binaryI_in_g(X1))
   ADDZQ_IN_AAG(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_G(X1)
   ADDZQ_IN_AAG(zero(zero(X1)), one(b), one(zero(X1))) -> U36_AAG(X1, binaryZH_in_g(X1))
   ADDZQ_IN_AAG(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_G(X1)
   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> U37_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> U38_AAG(X1, X2, X3, addyR_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   ADDYR_IN_AAG(b, one(X1), one(X1)) -> U55_AAG(X1, binaryI_in_g(X1))
   ADDYR_IN_AAG(b, one(X1), one(X1)) -> BINARYI_IN_G(X1)
   ADDYR_IN_AAG(b, zero(X1), zero(X1)) -> U56_AAG(X1, binaryZH_in_g(X1))
   ADDYR_IN_AAG(b, zero(X1), zero(X1)) -> BINARYZH_IN_G(X1)
   ADDYR_IN_AAG(X1, X2, X3) -> U57_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDYR_IN_AAG(X1, X2, X3) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> U39_AAG(X1, X2, X3, addcS_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDCS_IN_AAG(X1, b, X2) -> U52_AAG(X1, X2, succZU_in_ag(X1, X2))
   ADDCS_IN_AAG(X1, b, X2) -> SUCCZU_IN_AG(X1, X2)
   SUCCZU_IN_AG(zero(X1), one(X1)) -> U42_AG(X1, binaryZH_in_g(X1))
   SUCCZU_IN_AG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCZU_IN_AG(one(X1), zero(X2)) -> U43_AG(X1, X2, succT_in_ag(X1, X2))
   SUCCZU_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)
   SUCCT_IN_AG(zero(X1), one(X1)) -> U40_AG(X1, binaryZH_in_g(X1))
   SUCCT_IN_AG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCT_IN_AG(one(X1), zero(X2)) -> U41_AG(X1, X2, succT_in_ag(X1, X2))
   SUCCT_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)
   ADDCS_IN_AAG(b, X1, X2) -> U53_AAG(X1, X2, succZU_in_ag(X1, X2))
   ADDCS_IN_AAG(b, X1, X2) -> SUCCZU_IN_AG(X1, X2)
   ADDCS_IN_AAG(X1, X2, X3) -> U54_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCS_IN_AAG(X1, X2, X3) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> U44_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(zero(X1)), one(b), zero(one(X1))) -> U45_AAG(X1, binaryZH_in_g(X1))
   ADDCV_IN_AAG(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_AAG(zero(one(X1)), one(b), zero(zero(X2))) -> U46_AAG(X1, X2, succT_in_ag(X1, X2))
   ADDCV_IN_AAG(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCT_IN_AG(X1, X2)
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> U47_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(b), zero(zero(X1)), zero(one(X1))) -> U48_AAG(X1, binaryZH_in_g(X1))
   ADDCV_IN_AAG(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_AAG(one(b), zero(one(X1)), zero(zero(X2))) -> U49_AAG(X1, X2, succT_in_ag(X1, X2))
   ADDCV_IN_AAG(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCT_IN_AG(X1, X2)
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> U50_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> U51_AAG(X1, X2, X3, addcS_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDC1_IN_AAG(one(X1), X2, one(X3)) -> U63_AAG(X1, X2, X3, addyR_in_aag(X1, X2, X3))
   ADDC1_IN_AAG(one(X1), X2, one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   TIMESA_IN_AAG(one(X1), X2, zero(X3)) -> U77_AAG(X1, X2, X3, pB_in_aaag(X1, X2, X4, zero(X3)))
   TIMESA_IN_AAG(one(X1), X2, zero(X3)) -> PB_IN_AAAG(X1, X2, X4, zero(X3))
   TIMESA_IN_AAG(one(one(b)), X1, X2) -> U78_AAG(X1, X2, addC1_in_aag(X1, X1, X2))
   TIMESA_IN_AAG(one(one(b)), X1, X2) -> ADDC1_IN_AAG(X1, X1, X2)
   TIMESA_IN_AAG(one(zero(X1)), X2, X3) -> U79_AAG(X1, X2, X3, pD_in_aaag(X1, X2, X4, X3))
   TIMESA_IN_AAG(one(zero(X1)), X2, X3) -> PD_IN_AAAG(X1, X2, X4, X3)
   PD_IN_AAAG(X1, X2, X3, X4) -> U67_AAAG(X1, X2, X3, X4, timesF_in_aaa(X1, X2, X3))
   PD_IN_AAAG(X1, X2, X3, X4) -> TIMESF_IN_AAA(X1, X2, X3)
   PD_IN_AAAG(X1, X2, X3, X4) -> U68_AAAG(X1, X2, X3, X4, timescF_in_aaa(X1, X2, X3))
   U68_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> U69_AAAG(X1, X2, X3, X4, addC1_in_aag(X2, zero(X3), X4))
   U68_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> ADDC1_IN_AAG(X2, zero(X3), X4)
   TIMESA_IN_AAG(one(one(X1)), X2, X3) -> U80_AAG(X1, X2, X3, pE_in_aaaag(X1, X2, X4, X5, X3))
   TIMESA_IN_AAG(one(one(X1)), X2, X3) -> PE_IN_AAAAG(X1, X2, X4, X5, X3)
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> U70_AAAAG(X1, X2, X3, X4, X5, timesF_in_aaa(X1, X2, X3))
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> TIMESF_IN_AAA(X1, X2, X3)
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> U71_AAAAG(X1, X2, X3, X4, X5, timescF_in_aaa(X1, X2, X3))
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> U72_AAAAG(X1, X2, X3, X4, X5, addG_in_aaa(X2, X3, X4))
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> ADDG_IN_AAA(X2, X3, X4)
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> U73_AAAAG(X1, X2, X3, X4, X5, addcG_in_aaa(X2, X3, X4))
   U73_AAAAG(X1, X2, X3, X4, X5, addcG_out_aaa(X2, X3, X4)) -> U74_AAAAG(X1, X2, X3, X4, X5, addC1_in_ggg(X2, X4, X5))
   U73_AAAAG(X1, X2, X3, X4, X5, addcG_out_aaa(X2, X3, X4)) -> ADDC1_IN_GGG(X2, X4, X5)
   ADDC1_IN_GGG(b, X1, zero(X1)) -> U61_GGG(X1, binaryZP_in_g(X1))
   ADDC1_IN_GGG(b, X1, zero(X1)) -> BINARYZP_IN_G(X1)
   ADDC1_IN_GGG(zero(X1), X2, zero(X3)) -> U62_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDC1_IN_GGG(zero(X1), X2, zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> U34_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(one(X1)), one(b), one(one(X1))) -> U35_GGG(X1, binaryI_in_g(X1))
   ADDZQ_IN_GGG(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_G(X1)
   ADDZQ_IN_GGG(zero(zero(X1)), one(b), one(zero(X1))) -> U36_GGG(X1, binaryZH_in_g(X1))
   ADDZQ_IN_GGG(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_G(X1)
   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> U37_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> U38_GGG(X1, X2, X3, addyR_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
   ADDYR_IN_GGG(b, one(X1), one(X1)) -> U55_GGG(X1, binaryI_in_g(X1))
   ADDYR_IN_GGG(b, one(X1), one(X1)) -> BINARYI_IN_G(X1)
   ADDYR_IN_GGG(b, zero(X1), zero(X1)) -> U56_GGG(X1, binaryZH_in_g(X1))
   ADDYR_IN_GGG(b, zero(X1), zero(X1)) -> BINARYZH_IN_G(X1)
   ADDYR_IN_GGG(X1, X2, X3) -> U57_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> U39_GGG(X1, X2, X3, addcS_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDCS_IN_GGG(X1, b, X2) -> U52_GGG(X1, X2, succZU_in_gg(X1, X2))
   ADDCS_IN_GGG(X1, b, X2) -> SUCCZU_IN_GG(X1, X2)
   SUCCZU_IN_GG(zero(X1), one(X1)) -> U42_GG(X1, binaryZH_in_g(X1))
   SUCCZU_IN_GG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCZU_IN_GG(one(X1), zero(X2)) -> U43_GG(X1, X2, succT_in_gg(X1, X2))
   SUCCZU_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)
   SUCCT_IN_GG(zero(X1), one(X1)) -> U40_GG(X1, binaryZH_in_g(X1))
   SUCCT_IN_GG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCT_IN_GG(one(X1), zero(X2)) -> U41_GG(X1, X2, succT_in_gg(X1, X2))
   SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)
   ADDCS_IN_GGG(b, X1, X2) -> U53_GGG(X1, X2, succZU_in_gg(X1, X2))
   ADDCS_IN_GGG(b, X1, X2) -> SUCCZU_IN_GG(X1, X2)
   ADDCS_IN_GGG(X1, X2, X3) -> U54_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> U44_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(zero(X1)), one(b), zero(one(X1))) -> U45_GGG(X1, binaryZH_in_g(X1))
   ADDCV_IN_GGG(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_GGG(zero(one(X1)), one(b), zero(zero(X2))) -> U46_GGG(X1, X2, succT_in_gg(X1, X2))
   ADDCV_IN_GGG(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCT_IN_GG(X1, X2)
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> U47_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(b), zero(zero(X1)), zero(one(X1))) -> U48_GGG(X1, binaryZH_in_g(X1))
   ADDCV_IN_GGG(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_GGG(one(b), zero(one(X1)), zero(zero(X2))) -> U49_GGG(X1, X2, succT_in_gg(X1, X2))
   ADDCV_IN_GGG(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCT_IN_GG(X1, X2)
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> U50_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> U51_GGG(X1, X2, X3, addcS_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDC1_IN_GGG(one(X1), X2, one(X3)) -> U63_GGG(X1, X2, X3, addyR_in_ggg(X1, X2, X3))
   ADDC1_IN_GGG(one(X1), X2, one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
timesA_in_aag(x1, x2, x3)  =  timesA_in_aag(x3)

zero(x1)  =  zero(x1)

pB_in_aaag(x1, x2, x3, x4)  =  pB_in_aaag(x4)

timesF_in_aaa(x1, x2, x3)  =  timesF_in_aaa

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

addG_in_aaa(x1, x2, x3)  =  addG_in_aaa

binaryZP_in_a(x1)  =  binaryZP_in_a

binaryZH_in_a(x1)  =  binaryZH_in_a

binaryI_in_a(x1)  =  binaryI_in_a

addzJ_in_aaa(x1, x2, x3)  =  addzJ_in_aaa

addyK_in_aaa(x1, x2, x3)  =  addyK_in_aaa

addcL_in_aaa(x1, x2, x3)  =  addcL_in_aaa

succZN_in_aa(x1, x2)  =  succZN_in_aa

succM_in_aa(x1, x2)  =  succM_in_aa

addCO_in_aaa(x1, x2, x3)  =  addCO_in_aaa

addC1_in_aag(x1, x2, x3)  =  addC1_in_aag(x3)

binaryZP_in_g(x1)  =  binaryZP_in_g(x1)

binaryZH_in_g(x1)  =  binaryZH_in_g(x1)

one(x1)  =  one(x1)

binaryI_in_g(x1)  =  binaryI_in_g(x1)

addzQ_in_aag(x1, x2, x3)  =  addzQ_in_aag(x3)

addyR_in_aag(x1, x2, x3)  =  addyR_in_aag(x3)

addcS_in_aag(x1, x2, x3)  =  addcS_in_aag(x3)

succZU_in_ag(x1, x2)  =  succZU_in_ag(x2)

succT_in_ag(x1, x2)  =  succT_in_ag(x2)

addCV_in_aag(x1, x2, x3)  =  addCV_in_aag(x3)

pD_in_aaag(x1, x2, x3, x4)  =  pD_in_aaag(x4)

pE_in_aaaag(x1, x2, x3, x4, x5)  =  pE_in_aaaag(x5)

addC1_in_ggg(x1, x2, x3)  =  addC1_in_ggg(x1, x2, x3)

b  =  b

addzQ_in_ggg(x1, x2, x3)  =  addzQ_in_ggg(x1, x2, x3)

addyR_in_ggg(x1, x2, x3)  =  addyR_in_ggg(x1, x2, x3)

addcS_in_ggg(x1, x2, x3)  =  addcS_in_ggg(x1, x2, x3)

succZU_in_gg(x1, x2)  =  succZU_in_gg(x1, x2)

succT_in_gg(x1, x2)  =  succT_in_gg(x1, x2)

addCV_in_ggg(x1, x2, x3)  =  addCV_in_ggg'(x1, x2, x3)

TIMESA_IN_AAG(x1, x2, x3)  =  TIMESA_IN_AAG(x3)

U75_AAG(x1, x2, x3, x4)  =  U75_AAG(x3, x4)

U76_AAG(x1, x2, x3, x4)  =  U76_AAG(x3, x4)

PB_IN_AAAG(x1, x2, x3, x4)  =  PB_IN_AAAG(x4)

U58_AAAG(x1, x2, x3, x4, x5)  =  U58_AAAG(x4, x5)

TIMESF_IN_AAA(x1, x2, x3)  =  TIMESF_IN_AAA

U1_AAA(x1, x2, x3, x4)  =  U1_AAA(x4)

U2_AAA(x1, x2, x3, x4)  =  U2_AAA(x4)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

U4_AAA(x1, x2, x3, x4)  =  U4_AAA(x1, x4)

ADDG_IN_AAA(x1, x2, x3)  =  ADDG_IN_AAA

U64_AAA(x1, x2)  =  U64_AAA(x2)

BINARYZP_IN_A(x1)  =  BINARYZP_IN_A

U33_A(x1, x2)  =  U33_A(x2)

BINARYZH_IN_A(x1)  =  BINARYZH_IN_A

U5_A(x1, x2)  =  U5_A(x2)

U6_A(x1, x2)  =  U6_A(x2)

BINARYI_IN_A(x1)  =  BINARYI_IN_A

U7_A(x1, x2)  =  U7_A(x2)

U8_A(x1, x2)  =  U8_A(x2)

U65_AAA(x1, x2, x3, x4)  =  U65_AAA(x4)

ADDZJ_IN_AAA(x1, x2, x3)  =  ADDZJ_IN_AAA

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U10_AAA(x1, x2)  =  U10_AAA(x2)

U11_AAA(x1, x2)  =  U11_AAA(x2)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDYK_IN_AAA(x1, x2, x3)  =  ADDYK_IN_AAA

U30_AAA(x1, x2)  =  U30_AAA(x2)

U31_AAA(x1, x2)  =  U31_AAA(x2)

U32_AAA(x1, x2, x3, x4)  =  U32_AAA(x4)

U14_AAA(x1, x2, x3, x4)  =  U14_AAA(x4)

ADDCL_IN_AAA(x1, x2, x3)  =  ADDCL_IN_AAA

U27_AAA(x1, x2, x3)  =  U27_AAA(x3)

SUCCZN_IN_AA(x1, x2)  =  SUCCZN_IN_AA

U17_AA(x1, x2)  =  U17_AA(x2)

U18_AA(x1, x2, x3)  =  U18_AA(x3)

SUCCM_IN_AA(x1, x2)  =  SUCCM_IN_AA

U15_AA(x1, x2)  =  U15_AA(x2)

U16_AA(x1, x2, x3)  =  U16_AA(x3)

U28_AAA(x1, x2, x3)  =  U28_AAA(x3)

U29_AAA(x1, x2, x3, x4)  =  U29_AAA(x4)

ADDCO_IN_AAA(x1, x2, x3)  =  ADDCO_IN_AAA

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U23_AAA(x1, x2)  =  U23_AAA(x2)

U24_AAA(x1, x2, x3)  =  U24_AAA(x3)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U66_AAA(x1, x2, x3, x4)  =  U66_AAA(x4)

U59_AAAG(x1, x2, x3, x4, x5)  =  U59_AAAG(x4, x5)

U60_AAAG(x1, x2, x3, x4, x5)  =  U60_AAAG(x1, x4, x5)

ADDC1_IN_AAG(x1, x2, x3)  =  ADDC1_IN_AAG(x3)

U61_AAG(x1, x2)  =  U61_AAG(x1, x2)

BINARYZP_IN_G(x1)  =  BINARYZP_IN_G(x1)

U33_G(x1, x2)  =  U33_G(x1, x2)

BINARYZH_IN_G(x1)  =  BINARYZH_IN_G(x1)

U5_G(x1, x2)  =  U5_G(x1, x2)

U6_G(x1, x2)  =  U6_G(x1, x2)

BINARYI_IN_G(x1)  =  BINARYI_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

U8_G(x1, x2)  =  U8_G(x1, x2)

U62_AAG(x1, x2, x3, x4)  =  U62_AAG(x3, x4)

ADDZQ_IN_AAG(x1, x2, x3)  =  ADDZQ_IN_AAG(x3)

U34_AAG(x1, x2, x3, x4)  =  U34_AAG(x3, x4)

U35_AAG(x1, x2)  =  U35_AAG(x1, x2)

U36_AAG(x1, x2)  =  U36_AAG(x1, x2)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x3, x4)

U38_AAG(x1, x2, x3, x4)  =  U38_AAG(x3, x4)

ADDYR_IN_AAG(x1, x2, x3)  =  ADDYR_IN_AAG(x3)

U55_AAG(x1, x2)  =  U55_AAG(x1, x2)

U56_AAG(x1, x2)  =  U56_AAG(x1, x2)

U57_AAG(x1, x2, x3, x4)  =  U57_AAG(x3, x4)

U39_AAG(x1, x2, x3, x4)  =  U39_AAG(x3, x4)

ADDCS_IN_AAG(x1, x2, x3)  =  ADDCS_IN_AAG(x3)

U52_AAG(x1, x2, x3)  =  U52_AAG(x2, x3)

SUCCZU_IN_AG(x1, x2)  =  SUCCZU_IN_AG(x2)

U42_AG(x1, x2)  =  U42_AG(x1, x2)

U43_AG(x1, x2, x3)  =  U43_AG(x2, x3)

SUCCT_IN_AG(x1, x2)  =  SUCCT_IN_AG(x2)

U40_AG(x1, x2)  =  U40_AG(x1, x2)

U41_AG(x1, x2, x3)  =  U41_AG(x2, x3)

U53_AAG(x1, x2, x3)  =  U53_AAG(x2, x3)

U54_AAG(x1, x2, x3, x4)  =  U54_AAG(x3, x4)

ADDCV_IN_AAG(x1, x2, x3)  =  ADDCV_IN_AAG(x3)

U44_AAG(x1, x2, x3, x4)  =  U44_AAG(x3, x4)

U45_AAG(x1, x2)  =  U45_AAG(x1, x2)

U46_AAG(x1, x2, x3)  =  U46_AAG(x2, x3)

U47_AAG(x1, x2, x3, x4)  =  U47_AAG(x3, x4)

U48_AAG(x1, x2)  =  U48_AAG(x1, x2)

U49_AAG(x1, x2, x3)  =  U49_AAG(x2, x3)

U50_AAG(x1, x2, x3, x4)  =  U50_AAG(x3, x4)

U51_AAG(x1, x2, x3, x4)  =  U51_AAG(x3, x4)

U63_AAG(x1, x2, x3, x4)  =  U63_AAG(x3, x4)

U77_AAG(x1, x2, x3, x4)  =  U77_AAG(x3, x4)

U78_AAG(x1, x2, x3)  =  U78_AAG(x2, x3)

U79_AAG(x1, x2, x3, x4)  =  U79_AAG(x3, x4)

PD_IN_AAAG(x1, x2, x3, x4)  =  PD_IN_AAAG(x4)

U67_AAAG(x1, x2, x3, x4, x5)  =  U67_AAAG(x4, x5)

U68_AAAG(x1, x2, x3, x4, x5)  =  U68_AAAG(x4, x5)

U69_AAAG(x1, x2, x3, x4, x5)  =  U69_AAAG(x1, x4, x5)

U80_AAG(x1, x2, x3, x4)  =  U80_AAG(x3, x4)

PE_IN_AAAAG(x1, x2, x3, x4, x5)  =  PE_IN_AAAAG(x5)

U70_AAAAG(x1, x2, x3, x4, x5, x6)  =  U70_AAAAG(x5, x6)

U71_AAAAG(x1, x2, x3, x4, x5, x6)  =  U71_AAAAG(x5, x6)

U72_AAAAG(x1, x2, x3, x4, x5, x6)  =  U72_AAAAG(x1, x5, x6)

U73_AAAAG(x1, x2, x3, x4, x5, x6)  =  U73_AAAAG(x1, x5, x6)

U74_AAAAG(x1, x2, x3, x4, x5, x6)  =  U74_AAAAG(x1, x2, x5, x6)

ADDC1_IN_GGG(x1, x2, x3)  =  ADDC1_IN_GGG(x1, x2, x3)

U61_GGG(x1, x2)  =  U61_GGG(x1, x2)

U62_GGG(x1, x2, x3, x4)  =  U62_GGG(x1, x2, x3, x4)

ADDZQ_IN_GGG(x1, x2, x3)  =  ADDZQ_IN_GGG(x1, x2, x3)

U34_GGG(x1, x2, x3, x4)  =  U34_GGG(x1, x2, x3, x4)

U35_GGG(x1, x2)  =  U35_GGG(x1, x2)

U36_GGG(x1, x2)  =  U36_GGG(x1, x2)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x1, x2, x3, x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x1, x2, x3, x4)

ADDYR_IN_GGG(x1, x2, x3)  =  ADDYR_IN_GGG(x1, x2, x3)

U55_GGG(x1, x2)  =  U55_GGG(x1, x2)

U56_GGG(x1, x2)  =  U56_GGG(x1, x2)

U57_GGG(x1, x2, x3, x4)  =  U57_GGG(x1, x2, x3, x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x1, x2, x3, x4)

ADDCS_IN_GGG(x1, x2, x3)  =  ADDCS_IN_GGG(x1, x2, x3)

U52_GGG(x1, x2, x3)  =  U52_GGG(x1, x2, x3)

SUCCZU_IN_GG(x1, x2)  =  SUCCZU_IN_GG(x1, x2)

U42_GG(x1, x2)  =  U42_GG(x1, x2)

U43_GG(x1, x2, x3)  =  U43_GG(x1, x2, x3)

SUCCT_IN_GG(x1, x2)  =  SUCCT_IN_GG(x1, x2)

U40_GG(x1, x2)  =  U40_GG(x1, x2)

U41_GG(x1, x2, x3)  =  U41_GG(x1, x2, x3)

U53_GGG(x1, x2, x3)  =  U53_GGG(x1, x2, x3)

U54_GGG(x1, x2, x3, x4)  =  U54_GGG(x1, x2, x3, x4)

ADDCV_IN_GGG(x1, x2, x3)  =  ADDCV_IN_GGG(x1, x2, x3)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x1, x2, x3, x4)

U45_GGG(x1, x2)  =  U45_GGG(x1, x2)

U46_GGG(x1, x2, x3)  =  U46_GGG(x1, x2, x3)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x1, x2, x3, x4)

U48_GGG(x1, x2)  =  U48_GGG(x1, x2)

U49_GGG(x1, x2, x3)  =  U49_GGG(x1, x2, x3)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x2, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x1, x2, x3, x4)

U63_GGG(x1, x2, x3, x4)  =  U63_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(100)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> U75_AAG(X1, X2, X3, timesA_in_aag(X1, X2, X3))
   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> TIMESA_IN_AAG(X1, X2, X3)
   TIMESA_IN_AAG(zero(one(X1)), X2, zero(X3)) -> U76_AAG(X1, X2, X3, pB_in_aaag(X1, X2, X4, X3))
   TIMESA_IN_AAG(zero(one(X1)), X2, zero(X3)) -> PB_IN_AAAG(X1, X2, X4, X3)
   PB_IN_AAAG(X1, X2, X3, X4) -> U58_AAAG(X1, X2, X3, X4, timesF_in_aaa(X1, X2, X3))
   PB_IN_AAAG(X1, X2, X3, X4) -> TIMESF_IN_AAA(X1, X2, X3)
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> U1_AAA(X1, X2, X3, timesF_in_aaa(X1, X2, X3))
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> TIMESF_IN_AAA(X1, X2, X3)
   TIMESF_IN_AAA(one(X1), X2, X3) -> U2_AAA(X1, X2, X3, timesF_in_aaa(X1, X2, X4))
   TIMESF_IN_AAA(one(X1), X2, X3) -> TIMESF_IN_AAA(X1, X2, X4)
   TIMESF_IN_AAA(one(X1), X2, X3) -> U3_AAA(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U3_AAA(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U4_AAA(X1, X2, X3, addG_in_aaa(X2, X4, X3))
   U3_AAA(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> ADDG_IN_AAA(X2, X4, X3)
   ADDG_IN_AAA(b, X1, zero(X1)) -> U64_AAA(X1, binaryZP_in_a(X1))
   ADDG_IN_AAA(b, X1, zero(X1)) -> BINARYZP_IN_A(X1)
   BINARYZP_IN_A(X1) -> U33_A(X1, binaryZH_in_a(X1))
   BINARYZP_IN_A(X1) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(zero(X1)) -> U5_A(X1, binaryZH_in_a(X1))
   BINARYZH_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(one(X1)) -> U6_A(X1, binaryI_in_a(X1))
   BINARYZH_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   BINARYI_IN_A(zero(X1)) -> U7_A(X1, binaryZH_in_a(X1))
   BINARYI_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYI_IN_A(one(X1)) -> U8_A(X1, binaryI_in_a(X1))
   BINARYI_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   ADDG_IN_AAA(zero(X1), X2, zero(X3)) -> U65_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDG_IN_AAA(zero(X1), X2, zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> U9_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(one(X1)), one(b), one(one(X1))) -> U10_AAA(X1, binaryI_in_a(X1))
   ADDZJ_IN_AAA(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_A(X1)
   ADDZJ_IN_AAA(zero(zero(X1)), one(b), one(zero(X1))) -> U11_AAA(X1, binaryZH_in_a(X1))
   ADDZJ_IN_AAA(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_A(X1)
   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> U12_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> U13_AAA(X1, X2, X3, addyK_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   ADDYK_IN_AAA(b, one(X1), one(X1)) -> U30_AAA(X1, binaryI_in_a(X1))
   ADDYK_IN_AAA(b, one(X1), one(X1)) -> BINARYI_IN_A(X1)
   ADDYK_IN_AAA(b, zero(X1), zero(X1)) -> U31_AAA(X1, binaryZH_in_a(X1))
   ADDYK_IN_AAA(b, zero(X1), zero(X1)) -> BINARYZH_IN_A(X1)
   ADDYK_IN_AAA(X1, X2, X3) -> U32_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDYK_IN_AAA(X1, X2, X3) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> U14_AAA(X1, X2, X3, addcL_in_aaa(X1, X2, X3))
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDCL_IN_AAA(X1, b, X2) -> U27_AAA(X1, X2, succZN_in_aa(X1, X2))
   ADDCL_IN_AAA(X1, b, X2) -> SUCCZN_IN_AA(X1, X2)
   SUCCZN_IN_AA(zero(X1), one(X1)) -> U17_AA(X1, binaryZH_in_a(X1))
   SUCCZN_IN_AA(zero(X1), one(X1)) -> BINARYZH_IN_A(X1)
   SUCCZN_IN_AA(one(X1), zero(X2)) -> U18_AA(X1, X2, succM_in_aa(X1, X2))
   SUCCZN_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)
   SUCCM_IN_AA(zero(X1), one(X1)) -> U15_AA(X1, binaryZH_in_a(X1))
   SUCCM_IN_AA(zero(X1), one(X1)) -> BINARYZH_IN_A(X1)
   SUCCM_IN_AA(one(X1), zero(X2)) -> U16_AA(X1, X2, succM_in_aa(X1, X2))
   SUCCM_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)
   ADDCL_IN_AAA(b, X1, X2) -> U28_AAA(X1, X2, succZN_in_aa(X1, X2))
   ADDCL_IN_AAA(b, X1, X2) -> SUCCZN_IN_AA(X1, X2)
   ADDCL_IN_AAA(X1, X2, X3) -> U29_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCL_IN_AAA(X1, X2, X3) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> U19_AAA(X1, X2, X3, addzJ_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(zero(X1)), one(b), zero(one(X1))) -> U20_AAA(X1, binaryZH_in_a(X1))
   ADDCO_IN_AAA(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_A(X1)
   ADDCO_IN_AAA(zero(one(X1)), one(b), zero(zero(X2))) -> U21_AAA(X1, X2, succM_in_aa(X1, X2))
   ADDCO_IN_AAA(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCM_IN_AA(X1, X2)
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> U22_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(b), zero(zero(X1)), zero(one(X1))) -> U23_AAA(X1, binaryZH_in_a(X1))
   ADDCO_IN_AAA(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_A(X1)
   ADDCO_IN_AAA(one(b), zero(one(X1)), zero(zero(X2))) -> U24_AAA(X1, X2, succM_in_aa(X1, X2))
   ADDCO_IN_AAA(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCM_IN_AA(X1, X2)
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> U25_AAA(X1, X2, X3, addCO_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> U26_AAA(X1, X2, X3, addcL_in_aaa(X1, X2, X3))
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDG_IN_AAA(one(X1), X2, one(X3)) -> U66_AAA(X1, X2, X3, addyK_in_aaa(X1, X2, X3))
   ADDG_IN_AAA(one(X1), X2, one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   PB_IN_AAAG(X1, X2, X3, X4) -> U59_AAAG(X1, X2, X3, X4, timescF_in_aaa(X1, X2, X3))
   U59_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> U60_AAAG(X1, X2, X3, X4, addC1_in_aag(X2, X3, X4))
   U59_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> ADDC1_IN_AAG(X2, X3, X4)
   ADDC1_IN_AAG(b, X1, zero(X1)) -> U61_AAG(X1, binaryZP_in_g(X1))
   ADDC1_IN_AAG(b, X1, zero(X1)) -> BINARYZP_IN_G(X1)
   BINARYZP_IN_G(X1) -> U33_G(X1, binaryZH_in_g(X1))
   BINARYZP_IN_G(X1) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(zero(X1)) -> U5_G(X1, binaryZH_in_g(X1))
   BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(one(X1)) -> U6_G(X1, binaryI_in_g(X1))
   BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   BINARYI_IN_G(zero(X1)) -> U7_G(X1, binaryZH_in_g(X1))
   BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYI_IN_G(one(X1)) -> U8_G(X1, binaryI_in_g(X1))
   BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   ADDC1_IN_AAG(zero(X1), X2, zero(X3)) -> U62_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDC1_IN_AAG(zero(X1), X2, zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> U34_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(one(X1)), one(b), one(one(X1))) -> U35_AAG(X1, binaryI_in_g(X1))
   ADDZQ_IN_AAG(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_G(X1)
   ADDZQ_IN_AAG(zero(zero(X1)), one(b), one(zero(X1))) -> U36_AAG(X1, binaryZH_in_g(X1))
   ADDZQ_IN_AAG(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_G(X1)
   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> U37_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> U38_AAG(X1, X2, X3, addyR_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   ADDYR_IN_AAG(b, one(X1), one(X1)) -> U55_AAG(X1, binaryI_in_g(X1))
   ADDYR_IN_AAG(b, one(X1), one(X1)) -> BINARYI_IN_G(X1)
   ADDYR_IN_AAG(b, zero(X1), zero(X1)) -> U56_AAG(X1, binaryZH_in_g(X1))
   ADDYR_IN_AAG(b, zero(X1), zero(X1)) -> BINARYZH_IN_G(X1)
   ADDYR_IN_AAG(X1, X2, X3) -> U57_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDYR_IN_AAG(X1, X2, X3) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> U39_AAG(X1, X2, X3, addcS_in_aag(X1, X2, X3))
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDCS_IN_AAG(X1, b, X2) -> U52_AAG(X1, X2, succZU_in_ag(X1, X2))
   ADDCS_IN_AAG(X1, b, X2) -> SUCCZU_IN_AG(X1, X2)
   SUCCZU_IN_AG(zero(X1), one(X1)) -> U42_AG(X1, binaryZH_in_g(X1))
   SUCCZU_IN_AG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCZU_IN_AG(one(X1), zero(X2)) -> U43_AG(X1, X2, succT_in_ag(X1, X2))
   SUCCZU_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)
   SUCCT_IN_AG(zero(X1), one(X1)) -> U40_AG(X1, binaryZH_in_g(X1))
   SUCCT_IN_AG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCT_IN_AG(one(X1), zero(X2)) -> U41_AG(X1, X2, succT_in_ag(X1, X2))
   SUCCT_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)
   ADDCS_IN_AAG(b, X1, X2) -> U53_AAG(X1, X2, succZU_in_ag(X1, X2))
   ADDCS_IN_AAG(b, X1, X2) -> SUCCZU_IN_AG(X1, X2)
   ADDCS_IN_AAG(X1, X2, X3) -> U54_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCS_IN_AAG(X1, X2, X3) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> U44_AAG(X1, X2, X3, addzQ_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(zero(X1)), one(b), zero(one(X1))) -> U45_AAG(X1, binaryZH_in_g(X1))
   ADDCV_IN_AAG(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_AAG(zero(one(X1)), one(b), zero(zero(X2))) -> U46_AAG(X1, X2, succT_in_ag(X1, X2))
   ADDCV_IN_AAG(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCT_IN_AG(X1, X2)
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> U47_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(b), zero(zero(X1)), zero(one(X1))) -> U48_AAG(X1, binaryZH_in_g(X1))
   ADDCV_IN_AAG(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_AAG(one(b), zero(one(X1)), zero(zero(X2))) -> U49_AAG(X1, X2, succT_in_ag(X1, X2))
   ADDCV_IN_AAG(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCT_IN_AG(X1, X2)
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> U50_AAG(X1, X2, X3, addCV_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> U51_AAG(X1, X2, X3, addcS_in_aag(X1, X2, X3))
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDC1_IN_AAG(one(X1), X2, one(X3)) -> U63_AAG(X1, X2, X3, addyR_in_aag(X1, X2, X3))
   ADDC1_IN_AAG(one(X1), X2, one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   TIMESA_IN_AAG(one(X1), X2, zero(X3)) -> U77_AAG(X1, X2, X3, pB_in_aaag(X1, X2, X4, zero(X3)))
   TIMESA_IN_AAG(one(X1), X2, zero(X3)) -> PB_IN_AAAG(X1, X2, X4, zero(X3))
   TIMESA_IN_AAG(one(one(b)), X1, X2) -> U78_AAG(X1, X2, addC1_in_aag(X1, X1, X2))
   TIMESA_IN_AAG(one(one(b)), X1, X2) -> ADDC1_IN_AAG(X1, X1, X2)
   TIMESA_IN_AAG(one(zero(X1)), X2, X3) -> U79_AAG(X1, X2, X3, pD_in_aaag(X1, X2, X4, X3))
   TIMESA_IN_AAG(one(zero(X1)), X2, X3) -> PD_IN_AAAG(X1, X2, X4, X3)
   PD_IN_AAAG(X1, X2, X3, X4) -> U67_AAAG(X1, X2, X3, X4, timesF_in_aaa(X1, X2, X3))
   PD_IN_AAAG(X1, X2, X3, X4) -> TIMESF_IN_AAA(X1, X2, X3)
   PD_IN_AAAG(X1, X2, X3, X4) -> U68_AAAG(X1, X2, X3, X4, timescF_in_aaa(X1, X2, X3))
   U68_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> U69_AAAG(X1, X2, X3, X4, addC1_in_aag(X2, zero(X3), X4))
   U68_AAAG(X1, X2, X3, X4, timescF_out_aaa(X1, X2, X3)) -> ADDC1_IN_AAG(X2, zero(X3), X4)
   TIMESA_IN_AAG(one(one(X1)), X2, X3) -> U80_AAG(X1, X2, X3, pE_in_aaaag(X1, X2, X4, X5, X3))
   TIMESA_IN_AAG(one(one(X1)), X2, X3) -> PE_IN_AAAAG(X1, X2, X4, X5, X3)
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> U70_AAAAG(X1, X2, X3, X4, X5, timesF_in_aaa(X1, X2, X3))
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> TIMESF_IN_AAA(X1, X2, X3)
   PE_IN_AAAAG(X1, X2, X3, X4, X5) -> U71_AAAAG(X1, X2, X3, X4, X5, timescF_in_aaa(X1, X2, X3))
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> U72_AAAAG(X1, X2, X3, X4, X5, addG_in_aaa(X2, X3, X4))
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> ADDG_IN_AAA(X2, X3, X4)
   U71_AAAAG(X1, X2, X3, X4, X5, timescF_out_aaa(X1, X2, X3)) -> U73_AAAAG(X1, X2, X3, X4, X5, addcG_in_aaa(X2, X3, X4))
   U73_AAAAG(X1, X2, X3, X4, X5, addcG_out_aaa(X2, X3, X4)) -> U74_AAAAG(X1, X2, X3, X4, X5, addC1_in_ggg(X2, X4, X5))
   U73_AAAAG(X1, X2, X3, X4, X5, addcG_out_aaa(X2, X3, X4)) -> ADDC1_IN_GGG(X2, X4, X5)
   ADDC1_IN_GGG(b, X1, zero(X1)) -> U61_GGG(X1, binaryZP_in_g(X1))
   ADDC1_IN_GGG(b, X1, zero(X1)) -> BINARYZP_IN_G(X1)
   ADDC1_IN_GGG(zero(X1), X2, zero(X3)) -> U62_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDC1_IN_GGG(zero(X1), X2, zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> U34_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(one(X1)), one(b), one(one(X1))) -> U35_GGG(X1, binaryI_in_g(X1))
   ADDZQ_IN_GGG(zero(one(X1)), one(b), one(one(X1))) -> BINARYI_IN_G(X1)
   ADDZQ_IN_GGG(zero(zero(X1)), one(b), one(zero(X1))) -> U36_GGG(X1, binaryZH_in_g(X1))
   ADDZQ_IN_GGG(zero(zero(X1)), one(b), one(zero(X1))) -> BINARYZH_IN_G(X1)
   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> U37_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> U38_GGG(X1, X2, X3, addyR_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
   ADDYR_IN_GGG(b, one(X1), one(X1)) -> U55_GGG(X1, binaryI_in_g(X1))
   ADDYR_IN_GGG(b, one(X1), one(X1)) -> BINARYI_IN_G(X1)
   ADDYR_IN_GGG(b, zero(X1), zero(X1)) -> U56_GGG(X1, binaryZH_in_g(X1))
   ADDYR_IN_GGG(b, zero(X1), zero(X1)) -> BINARYZH_IN_G(X1)
   ADDYR_IN_GGG(X1, X2, X3) -> U57_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> U39_GGG(X1, X2, X3, addcS_in_ggg(X1, X2, X3))
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDCS_IN_GGG(X1, b, X2) -> U52_GGG(X1, X2, succZU_in_gg(X1, X2))
   ADDCS_IN_GGG(X1, b, X2) -> SUCCZU_IN_GG(X1, X2)
   SUCCZU_IN_GG(zero(X1), one(X1)) -> U42_GG(X1, binaryZH_in_g(X1))
   SUCCZU_IN_GG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCZU_IN_GG(one(X1), zero(X2)) -> U43_GG(X1, X2, succT_in_gg(X1, X2))
   SUCCZU_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)
   SUCCT_IN_GG(zero(X1), one(X1)) -> U40_GG(X1, binaryZH_in_g(X1))
   SUCCT_IN_GG(zero(X1), one(X1)) -> BINARYZH_IN_G(X1)
   SUCCT_IN_GG(one(X1), zero(X2)) -> U41_GG(X1, X2, succT_in_gg(X1, X2))
   SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)
   ADDCS_IN_GGG(b, X1, X2) -> U53_GGG(X1, X2, succZU_in_gg(X1, X2))
   ADDCS_IN_GGG(b, X1, X2) -> SUCCZU_IN_GG(X1, X2)
   ADDCS_IN_GGG(X1, X2, X3) -> U54_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> U44_GGG(X1, X2, X3, addzQ_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(zero(X1)), one(b), zero(one(X1))) -> U45_GGG(X1, binaryZH_in_g(X1))
   ADDCV_IN_GGG(zero(zero(X1)), one(b), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_GGG(zero(one(X1)), one(b), zero(zero(X2))) -> U46_GGG(X1, X2, succT_in_gg(X1, X2))
   ADDCV_IN_GGG(zero(one(X1)), one(b), zero(zero(X2))) -> SUCCT_IN_GG(X1, X2)
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> U47_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(b), zero(zero(X1)), zero(one(X1))) -> U48_GGG(X1, binaryZH_in_g(X1))
   ADDCV_IN_GGG(one(b), zero(zero(X1)), zero(one(X1))) -> BINARYZH_IN_G(X1)
   ADDCV_IN_GGG(one(b), zero(one(X1)), zero(zero(X2))) -> U49_GGG(X1, X2, succT_in_gg(X1, X2))
   ADDCV_IN_GGG(one(b), zero(one(X1)), zero(zero(X2))) -> SUCCT_IN_GG(X1, X2)
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> U50_GGG(X1, X2, X3, addCV_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> U51_GGG(X1, X2, X3, addcS_in_ggg(X1, X2, X3))
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDC1_IN_GGG(one(X1), X2, one(X3)) -> U63_GGG(X1, X2, X3, addyR_in_ggg(X1, X2, X3))
   ADDC1_IN_GGG(one(X1), X2, one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
timesA_in_aag(x1, x2, x3)  =  timesA_in_aag(x3)

zero(x1)  =  zero(x1)

pB_in_aaag(x1, x2, x3, x4)  =  pB_in_aaag(x4)

timesF_in_aaa(x1, x2, x3)  =  timesF_in_aaa

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

addG_in_aaa(x1, x2, x3)  =  addG_in_aaa

binaryZP_in_a(x1)  =  binaryZP_in_a

binaryZH_in_a(x1)  =  binaryZH_in_a

binaryI_in_a(x1)  =  binaryI_in_a

addzJ_in_aaa(x1, x2, x3)  =  addzJ_in_aaa

addyK_in_aaa(x1, x2, x3)  =  addyK_in_aaa

addcL_in_aaa(x1, x2, x3)  =  addcL_in_aaa

succZN_in_aa(x1, x2)  =  succZN_in_aa

succM_in_aa(x1, x2)  =  succM_in_aa

addCO_in_aaa(x1, x2, x3)  =  addCO_in_aaa

addC1_in_aag(x1, x2, x3)  =  addC1_in_aag(x3)

binaryZP_in_g(x1)  =  binaryZP_in_g(x1)

binaryZH_in_g(x1)  =  binaryZH_in_g(x1)

one(x1)  =  one(x1)

binaryI_in_g(x1)  =  binaryI_in_g(x1)

addzQ_in_aag(x1, x2, x3)  =  addzQ_in_aag(x3)

addyR_in_aag(x1, x2, x3)  =  addyR_in_aag(x3)

addcS_in_aag(x1, x2, x3)  =  addcS_in_aag(x3)

succZU_in_ag(x1, x2)  =  succZU_in_ag(x2)

succT_in_ag(x1, x2)  =  succT_in_ag(x2)

addCV_in_aag(x1, x2, x3)  =  addCV_in_aag(x3)

pD_in_aaag(x1, x2, x3, x4)  =  pD_in_aaag(x4)

pE_in_aaaag(x1, x2, x3, x4, x5)  =  pE_in_aaaag(x5)

addC1_in_ggg(x1, x2, x3)  =  addC1_in_ggg(x1, x2, x3)

b  =  b

addzQ_in_ggg(x1, x2, x3)  =  addzQ_in_ggg(x1, x2, x3)

addyR_in_ggg(x1, x2, x3)  =  addyR_in_ggg(x1, x2, x3)

addcS_in_ggg(x1, x2, x3)  =  addcS_in_ggg(x1, x2, x3)

succZU_in_gg(x1, x2)  =  succZU_in_gg(x1, x2)

succT_in_gg(x1, x2)  =  succT_in_gg(x1, x2)

addCV_in_ggg(x1, x2, x3)  =  addCV_in_ggg(x1, x2, x3)

TIMESA_IN_AAG(x1, x2, x3)  =  TIMESA_IN_AAG(x3)

U75_AAG(x1, x2, x3, x4)  =  U75_AAG(x3, x4)

U76_AAG(x1, x2, x3, x4)  =  U76_AAG(x3, x4)

PB_IN_AAAG(x1, x2, x3, x4)  =  PB_IN_AAAG(x4)

U58_AAAG(x1, x2, x3, x4, x5)  =  U58_AAAG(x4, x5)

TIMESF_IN_AAA(x1, x2, x3)  =  TIMESF_IN_AAA

U1_AAA(x1, x2, x3, x4)  =  U1_AAA(x4)

U2_AAA(x1, x2, x3, x4)  =  U2_AAA(x4)

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

U4_AAA(x1, x2, x3, x4)  =  U4_AAA(x1, x4)

ADDG_IN_AAA(x1, x2, x3)  =  ADDG_IN_AAA

U64_AAA(x1, x2)  =  U64_AAA(x2)

BINARYZP_IN_A(x1)  =  BINARYZP_IN_A

U33_A(x1, x2)  =  U33_A(x2)

BINARYZH_IN_A(x1)  =  BINARYZH_IN_A

U5_A(x1, x2)  =  U5_A(x2)

U6_A(x1, x2)  =  U6_A(x2)

BINARYI_IN_A(x1)  =  BINARYI_IN_A

U7_A(x1, x2)  =  U7_A(x2)

U8_A(x1, x2)  =  U8_A(x2)

U65_AAA(x1, x2, x3, x4)  =  U65_AAA(x4)

ADDZJ_IN_AAA(x1, x2, x3)  =  ADDZJ_IN_AAA

U9_AAA(x1, x2, x3, x4)  =  U9_AAA(x4)

U10_AAA(x1, x2)  =  U10_AAA(x2)

U11_AAA(x1, x2)  =  U11_AAA(x2)

U12_AAA(x1, x2, x3, x4)  =  U12_AAA(x4)

U13_AAA(x1, x2, x3, x4)  =  U13_AAA(x4)

ADDYK_IN_AAA(x1, x2, x3)  =  ADDYK_IN_AAA

U30_AAA(x1, x2)  =  U30_AAA(x2)

U31_AAA(x1, x2)  =  U31_AAA(x2)

U32_AAA(x1, x2, x3, x4)  =  U32_AAA(x4)

U14_AAA(x1, x2, x3, x4)  =  U14_AAA(x4)

ADDCL_IN_AAA(x1, x2, x3)  =  ADDCL_IN_AAA

U27_AAA(x1, x2, x3)  =  U27_AAA(x3)

SUCCZN_IN_AA(x1, x2)  =  SUCCZN_IN_AA

U17_AA(x1, x2)  =  U17_AA(x2)

U18_AA(x1, x2, x3)  =  U18_AA(x3)

SUCCM_IN_AA(x1, x2)  =  SUCCM_IN_AA

U15_AA(x1, x2)  =  U15_AA(x2)

U16_AA(x1, x2, x3)  =  U16_AA(x3)

U28_AAA(x1, x2, x3)  =  U28_AAA(x3)

U29_AAA(x1, x2, x3, x4)  =  U29_AAA(x4)

ADDCO_IN_AAA(x1, x2, x3)  =  ADDCO_IN_AAA

U19_AAA(x1, x2, x3, x4)  =  U19_AAA(x4)

U20_AAA(x1, x2)  =  U20_AAA(x2)

U21_AAA(x1, x2, x3)  =  U21_AAA(x3)

U22_AAA(x1, x2, x3, x4)  =  U22_AAA(x4)

U23_AAA(x1, x2)  =  U23_AAA(x2)

U24_AAA(x1, x2, x3)  =  U24_AAA(x3)

U25_AAA(x1, x2, x3, x4)  =  U25_AAA(x4)

U26_AAA(x1, x2, x3, x4)  =  U26_AAA(x4)

U66_AAA(x1, x2, x3, x4)  =  U66_AAA(x4)

U59_AAAG(x1, x2, x3, x4, x5)  =  U59_AAAG(x4, x5)

U60_AAAG(x1, x2, x3, x4, x5)  =  U60_AAAG(x1, x4, x5)

ADDC1_IN_AAG(x1, x2, x3)  =  ADDC1_IN_AAG(x3)

U61_AAG(x1, x2)  =  U61_AAG(x1, x2)

BINARYZP_IN_G(x1)  =  BINARYZP_IN_G(x1)

U33_G(x1, x2)  =  U33_G(x1, x2)

BINARYZH_IN_G(x1)  =  BINARYZH_IN_G(x1)

U5_G(x1, x2)  =  U5_G(x1, x2)

U6_G(x1, x2)  =  U6_G(x1, x2)

BINARYI_IN_G(x1)  =  BINARYI_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

U8_G(x1, x2)  =  U8_G(x1, x2)

U62_AAG(x1, x2, x3, x4)  =  U62_AAG(x3, x4)

ADDZQ_IN_AAG(x1, x2, x3)  =  ADDZQ_IN_AAG(x3)

U34_AAG(x1, x2, x3, x4)  =  U34_AAG(x3, x4)

U35_AAG(x1, x2)  =  U35_AAG(x1, x2)

U36_AAG(x1, x2)  =  U36_AAG(x1, x2)

U37_AAG(x1, x2, x3, x4)  =  U37_AAG(x3, x4)

U38_AAG(x1, x2, x3, x4)  =  U38_AAG(x3, x4)

ADDYR_IN_AAG(x1, x2, x3)  =  ADDYR_IN_AAG(x3)

U55_AAG(x1, x2)  =  U55_AAG(x1, x2)

U56_AAG(x1, x2)  =  U56_AAG(x1, x2)

U57_AAG(x1, x2, x3, x4)  =  U57_AAG(x3, x4)

U39_AAG(x1, x2, x3, x4)  =  U39_AAG(x3, x4)

ADDCS_IN_AAG(x1, x2, x3)  =  ADDCS_IN_AAG(x3)

U52_AAG(x1, x2, x3)  =  U52_AAG(x2, x3)

SUCCZU_IN_AG(x1, x2)  =  SUCCZU_IN_AG(x2)

U42_AG(x1, x2)  =  U42_AG(x1, x2)

U43_AG(x1, x2, x3)  =  U43_AG(x2, x3)

SUCCT_IN_AG(x1, x2)  =  SUCCT_IN_AG(x2)

U40_AG(x1, x2)  =  U40_AG(x1, x2)

U41_AG(x1, x2, x3)  =  U41_AG(x2, x3)

U53_AAG(x1, x2, x3)  =  U53_AAG(x2, x3)

U54_AAG(x1, x2, x3, x4)  =  U54_AAG(x3, x4)

ADDCV_IN_AAG(x1, x2, x3)  =  ADDCV_IN_AAG(x3)

U44_AAG(x1, x2, x3, x4)  =  U44_AAG(x3, x4)

U45_AAG(x1, x2)  =  U45_AAG(x1, x2)

U46_AAG(x1, x2, x3)  =  U46_AAG(x2, x3)

U47_AAG(x1, x2, x3, x4)  =  U47_AAG(x3, x4)

U48_AAG(x1, x2)  =  U48_AAG(x1, x2)

U49_AAG(x1, x2, x3)  =  U49_AAG(x2, x3)

U50_AAG(x1, x2, x3, x4)  =  U50_AAG(x3, x4)

U51_AAG(x1, x2, x3, x4)  =  U51_AAG(x3, x4)

U63_AAG(x1, x2, x3, x4)  =  U63_AAG(x3, x4)

U77_AAG(x1, x2, x3, x4)  =  U77_AAG(x3, x4)

U78_AAG(x1, x2, x3)  =  U78_AAG(x2, x3)

U79_AAG(x1, x2, x3, x4)  =  U79_AAG(x3, x4)

PD_IN_AAAG(x1, x2, x3, x4)  =  PD_IN_AAAG(x4)

U67_AAAG(x1, x2, x3, x4, x5)  =  U67_AAAG(x4, x5)

U68_AAAG(x1, x2, x3, x4, x5)  =  U68_AAAG(x4, x5)

U69_AAAG(x1, x2, x3, x4, x5)  =  U69_AAAG(x1, x4, x5)

U80_AAG(x1, x2, x3, x4)  =  U80_AAG(x3, x4)

PE_IN_AAAAG(x1, x2, x3, x4, x5)  =  PE_IN_AAAAG(x5)

U70_AAAAG(x1, x2, x3, x4, x5, x6)  =  U70_AAAAG(x5, x6)

U71_AAAAG(x1, x2, x3, x4, x5, x6)  =  U71_AAAAG(x5, x6)

U72_AAAAG(x1, x2, x3, x4, x5, x6)  =  U72_AAAAG(x1, x5, x6)

U73_AAAAG(x1, x2, x3, x4, x5, x6)  =  U73_AAAAG(x1, x5, x6)

U74_AAAAG(x1, x2, x3, x4, x5, x6)  =  U74_AAAAG(x1, x2, x5, x6)

ADDC1_IN_GGG(x1, x2, x3)  =  ADDC1_IN_GGG(x1, x2, x3)

U61_GGG(x1, x2)  =  U61_GGG(x1, x2)

U62_GGG(x1, x2, x3, x4)  =  U62_GGG(x1, x2, x3, x4)

ADDZQ_IN_GGG(x1, x2, x3)  =  ADDZQ_IN_GGG(x1, x2, x3)

U34_GGG(x1, x2, x3, x4)  =  U34_GGG(x1, x2, x3, x4)

U35_GGG(x1, x2)  =  U35_GGG(x1, x2)

U36_GGG(x1, x2)  =  U36_GGG(x1, x2)

U37_GGG(x1, x2, x3, x4)  =  U37_GGG(x1, x2, x3, x4)

U38_GGG(x1, x2, x3, x4)  =  U38_GGG(x1, x2, x3, x4)

ADDYR_IN_GGG(x1, x2, x3)  =  ADDYR_IN_GGG(x1, x2, x3)

U55_GGG(x1, x2)  =  U55_GGG(x1, x2)

U56_GGG(x1, x2)  =  U56_GGG(x1, x2)

U57_GGG(x1, x2, x3, x4)  =  U57_GGG(x1, x2, x3, x4)

U39_GGG(x1, x2, x3, x4)  =  U39_GGG(x1, x2, x3, x4)

ADDCS_IN_GGG(x1, x2, x3)  =  ADDCS_IN_GGG(x1, x2, x3)

U52_GGG(x1, x2, x3)  =  U52_GGG(x1, x2, x3)

SUCCZU_IN_GG(x1, x2)  =  SUCCZU_IN_GG(x1, x2)

U42_GG(x1, x2)  =  U42_GG(x1, x2)

U43_GG(x1, x2, x3)  =  U43_GG(x1, x2, x3)

SUCCT_IN_GG(x1, x2)  =  SUCCT_IN_GG(x1, x2)

U40_GG(x1, x2)  =  U40_GG(x1, x2)

U41_GG(x1, x2, x3)  =  U41_GG(x1, x2, x3)

U53_GGG(x1, x2, x3)  =  U53_GGG(x1, x2, x3)

U54_GGG(x1, x2, x3, x4)  =  U54_GGG(x1, x2, x3, x4)

ADDCV_IN_GGG(x1, x2, x3)  =  ADDCV_IN_GGG(x1, x2, x3)

U44_GGG(x1, x2, x3, x4)  =  U44_GGG(x1, x2, x3, x4)

U45_GGG(x1, x2)  =  U45_GGG(x1, x2)

U46_GGG(x1, x2, x3)  =  U46_GGG(x1, x2, x3)

U47_GGG(x1, x2, x3, x4)  =  U47_GGG(x1, x2, x3, x4)

U48_GGG(x1, x2)  =  U48_GGG(x1, x2)

U49_GGG(x1, x2, x3)  =  U49_GGG(x1, x2, x3)

U50_GGG(x1, x2, x3, x4)  =  U50_GGG(x1, x2, x3, x4)

U51_GGG(x1, x2, x3, x4)  =  U51_GGG(x1, x2, x3, x4)

U63_GGG(x1, x2, x3, x4)  =  U63_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(101) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 10 SCCs with 175 less nodes.
----------------------------------------

(102)
Complex Obligation (AND)

----------------------------------------

(103)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

BINARYZH_IN_G(x1)  =  BINARYZH_IN_G(x1)

BINARYI_IN_G(x1)  =  BINARYI_IN_G(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(104) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(105)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(106) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
   BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
   BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(108) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*BINARYI_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
The graph contains the following edges 1 > 1


*BINARYI_IN_G(one(X1)) -> BINARYI_IN_G(X1)
The graph contains the following edges 1 > 1


*BINARYZH_IN_G(zero(X1)) -> BINARYZH_IN_G(X1)
The graph contains the following edges 1 > 1


*BINARYZH_IN_G(one(X1)) -> BINARYI_IN_G(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(109)
YES

----------------------------------------

(110)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

SUCCT_IN_GG(x1, x2)  =  SUCCT_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(111) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(112)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(113) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(114)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(115) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUCCT_IN_GG(one(X1), zero(X2)) -> SUCCT_IN_GG(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(116)
YES

----------------------------------------

(117)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
   ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

ADDZQ_IN_GGG(x1, x2, x3)  =  ADDZQ_IN_GGG(x1, x2, x3)

ADDYR_IN_GGG(x1, x2, x3)  =  ADDYR_IN_GGG(x1, x2, x3)

ADDCS_IN_GGG(x1, x2, x3)  =  ADDCS_IN_GGG(x1, x2, x3)

ADDCV_IN_GGG(x1, x2, x3)  =  ADDCV_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(118) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(119)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
   ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(120) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(121)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
   ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
   ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
   ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(122) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ADDYR_IN_GGG(X1, X2, X3) -> ADDZQ_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 >= 3


*ADDCV_IN_GGG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDZQ_IN_GGG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDZQ_IN_GGG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDCS_IN_GGG(X1, X2, X3) -> ADDCV_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 >= 3


*ADDCV_IN_GGG(one(X1), one(X2), one(X3)) -> ADDCS_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDZQ_IN_GGG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDZQ_IN_GGG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDCV_IN_GGG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


*ADDCV_IN_GGG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_GGG(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 > 2, 3 > 3


----------------------------------------

(123)
YES

----------------------------------------

(124)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

SUCCT_IN_AG(x1, x2)  =  SUCCT_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(125) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(126)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_AG(one(X1), zero(X2)) -> SUCCT_IN_AG(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCCT_IN_AG(x1, x2)  =  SUCCT_IN_AG(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(127) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(128)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCCT_IN_AG(zero(X2)) -> SUCCT_IN_AG(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(129) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUCCT_IN_AG(zero(X2)) -> SUCCT_IN_AG(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(130)
YES

----------------------------------------

(131)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   ADDYR_IN_AAG(X1, X2, X3) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDCS_IN_AAG(X1, X2, X3) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> ADDCS_IN_AAG(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

ADDZQ_IN_AAG(x1, x2, x3)  =  ADDZQ_IN_AAG(x3)

ADDYR_IN_AAG(x1, x2, x3)  =  ADDYR_IN_AAG(x3)

ADDCS_IN_AAG(x1, x2, x3)  =  ADDCS_IN_AAG(x3)

ADDCV_IN_AAG(x1, x2, x3)  =  ADDCV_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(132) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(133)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_AAG(zero(X1), one(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(zero(X1), zero(X2), zero(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), zero(X2), one(X3)) -> ADDYR_IN_AAG(X1, X2, X3)
   ADDYR_IN_AAG(X1, X2, X3) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDZQ_IN_AAG(one(X1), one(X2), zero(X3)) -> ADDCS_IN_AAG(X1, X2, X3)
   ADDCS_IN_AAG(X1, X2, X3) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), zero(X2), one(X3)) -> ADDZQ_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(zero(X1), one(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), zero(X2), zero(X3)) -> ADDCV_IN_AAG(X1, X2, X3)
   ADDCV_IN_AAG(one(X1), one(X2), one(X3)) -> ADDCS_IN_AAG(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZQ_IN_AAG(x1, x2, x3)  =  ADDZQ_IN_AAG(x3)

ADDYR_IN_AAG(x1, x2, x3)  =  ADDYR_IN_AAG(x3)

ADDCS_IN_AAG(x1, x2, x3)  =  ADDCS_IN_AAG(x3)

ADDCV_IN_AAG(x1, x2, x3)  =  ADDCV_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(134) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(135)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADDZQ_IN_AAG(one(X3)) -> ADDZQ_IN_AAG(X3)
   ADDZQ_IN_AAG(zero(X3)) -> ADDZQ_IN_AAG(X3)
   ADDZQ_IN_AAG(one(X3)) -> ADDYR_IN_AAG(X3)
   ADDYR_IN_AAG(X3) -> ADDZQ_IN_AAG(X3)
   ADDZQ_IN_AAG(zero(X3)) -> ADDCS_IN_AAG(X3)
   ADDCS_IN_AAG(X3) -> ADDCV_IN_AAG(X3)
   ADDCV_IN_AAG(one(X3)) -> ADDZQ_IN_AAG(X3)
   ADDCV_IN_AAG(zero(X3)) -> ADDCV_IN_AAG(X3)
   ADDCV_IN_AAG(one(X3)) -> ADDCS_IN_AAG(X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(136) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ADDYR_IN_AAG(X3) -> ADDZQ_IN_AAG(X3)
The graph contains the following edges 1 >= 1


*ADDCV_IN_AAG(one(X3)) -> ADDZQ_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDZQ_IN_AAG(one(X3)) -> ADDYR_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDZQ_IN_AAG(zero(X3)) -> ADDCS_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDCS_IN_AAG(X3) -> ADDCV_IN_AAG(X3)
The graph contains the following edges 1 >= 1


*ADDCV_IN_AAG(one(X3)) -> ADDCS_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDCV_IN_AAG(zero(X3)) -> ADDCV_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDZQ_IN_AAG(one(X3)) -> ADDZQ_IN_AAG(X3)
The graph contains the following edges 1 > 1


*ADDZQ_IN_AAG(zero(X3)) -> ADDZQ_IN_AAG(X3)
The graph contains the following edges 1 > 1


----------------------------------------

(137)
YES

----------------------------------------

(138)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   BINARYI_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYI_IN_A(one(X1)) -> BINARYI_IN_A(X1)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

BINARYZH_IN_A(x1)  =  BINARYZH_IN_A

BINARYI_IN_A(x1)  =  BINARYI_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(139) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(140)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_A(one(X1)) -> BINARYI_IN_A(X1)
   BINARYI_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYZH_IN_A(zero(X1)) -> BINARYZH_IN_A(X1)
   BINARYI_IN_A(one(X1)) -> BINARYI_IN_A(X1)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

BINARYZH_IN_A(x1)  =  BINARYZH_IN_A

BINARYI_IN_A(x1)  =  BINARYI_IN_A


We have to consider all (P,R,Pi)-chains
----------------------------------------

(141) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(142)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BINARYZH_IN_A -> BINARYI_IN_A
   BINARYI_IN_A -> BINARYZH_IN_A
   BINARYZH_IN_A -> BINARYZH_IN_A
   BINARYI_IN_A -> BINARYI_IN_A

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(143) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = BINARYZH_IN_A evaluates to  t =BINARYZH_IN_A

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from BINARYZH_IN_A to BINARYZH_IN_A.




----------------------------------------

(144)
NO

----------------------------------------

(145)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCM_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

SUCCM_IN_AA(x1, x2)  =  SUCCM_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(146) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(147)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUCCM_IN_AA(one(X1), zero(X2)) -> SUCCM_IN_AA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

SUCCM_IN_AA(x1, x2)  =  SUCCM_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(148) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(149)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUCCM_IN_AA -> SUCCM_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(150)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   ADDYK_IN_AAA(X1, X2, X3) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDCL_IN_AAA(X1, X2, X3) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> ADDCL_IN_AAA(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

ADDZJ_IN_AAA(x1, x2, x3)  =  ADDZJ_IN_AAA

ADDYK_IN_AAA(x1, x2, x3)  =  ADDYK_IN_AAA

ADDCL_IN_AAA(x1, x2, x3)  =  ADDCL_IN_AAA

ADDCO_IN_AAA(x1, x2, x3)  =  ADDCO_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(151) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(152)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ADDZJ_IN_AAA(zero(X1), one(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(zero(X1), zero(X2), zero(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), zero(X2), one(X3)) -> ADDYK_IN_AAA(X1, X2, X3)
   ADDYK_IN_AAA(X1, X2, X3) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDZJ_IN_AAA(one(X1), one(X2), zero(X3)) -> ADDCL_IN_AAA(X1, X2, X3)
   ADDCL_IN_AAA(X1, X2, X3) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), zero(X2), one(X3)) -> ADDZJ_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(zero(X1), one(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), zero(X2), zero(X3)) -> ADDCO_IN_AAA(X1, X2, X3)
   ADDCO_IN_AAA(one(X1), one(X2), one(X3)) -> ADDCL_IN_AAA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

ADDZJ_IN_AAA(x1, x2, x3)  =  ADDZJ_IN_AAA

ADDYK_IN_AAA(x1, x2, x3)  =  ADDYK_IN_AAA

ADDCL_IN_AAA(x1, x2, x3)  =  ADDCL_IN_AAA

ADDCO_IN_AAA(x1, x2, x3)  =  ADDCO_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(153)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESF_IN_AAA(one(X1), X2, X3) -> TIMESF_IN_AAA(X1, X2, X4)
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> TIMESF_IN_AAA(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

TIMESF_IN_AAA(x1, x2, x3)  =  TIMESF_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(154) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(155)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESF_IN_AAA(one(X1), X2, X3) -> TIMESF_IN_AAA(X1, X2, X4)
   TIMESF_IN_AAA(zero(X1), X2, zero(X3)) -> TIMESF_IN_AAA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

one(x1)  =  one(x1)

TIMESF_IN_AAA(x1, x2, x3)  =  TIMESF_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(156)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> TIMESA_IN_AAG(X1, X2, X3)

The TRS R consists of the following rules:

   timescF_in_aaa(one(b), X1, X1) -> timescF_out_aaa(one(b), X1, X1)
   timescF_in_aaa(zero(X1), X2, zero(X3)) -> U88_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X3))
   timescF_in_aaa(one(X1), X2, X3) -> U89_aaa(X1, X2, X3, timescF_in_aaa(X1, X2, X4))
   U89_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X4)) -> U90_aaa(X1, X2, X3, addcG_in_aaa(X2, X4, X3))
   addcG_in_aaa(b, X1, zero(X1)) -> U149_aaa(X1, binaryZcP_in_a(X1))
   binaryZcP_in_a(X1) -> U119_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(zero(X1)) -> U91_a(X1, binaryZcH_in_a(X1))
   binaryZcH_in_a(one(X1)) -> U92_a(X1, binarycI_in_a(X1))
   binarycI_in_a(b) -> binarycI_out_a(b)
   binarycI_in_a(zero(X1)) -> U93_a(X1, binaryZcH_in_a(X1))
   U93_a(X1, binaryZcH_out_a(X1)) -> binarycI_out_a(zero(X1))
   binarycI_in_a(one(X1)) -> U94_a(X1, binarycI_in_a(X1))
   U94_a(X1, binarycI_out_a(X1)) -> binarycI_out_a(one(X1))
   U92_a(X1, binarycI_out_a(X1)) -> binaryZcH_out_a(one(X1))
   U91_a(X1, binaryZcH_out_a(X1)) -> binaryZcH_out_a(zero(X1))
   U119_a(X1, binaryZcH_out_a(X1)) -> binaryZcP_out_a(X1)
   U149_aaa(X1, binaryZcP_out_a(X1)) -> addcG_out_aaa(b, X1, zero(X1))
   addcG_in_aaa(zero(X1), X2, zero(X3)) -> U150_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(X1), zero(X2), zero(X3)) -> U95_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(zero(one(X1)), one(b), one(one(X1))) -> U96_aaa(X1, binarycI_in_a(X1))
   U96_aaa(X1, binarycI_out_a(X1)) -> addzcJ_out_aaa(zero(one(X1)), one(b), one(one(X1)))
   addzcJ_in_aaa(zero(zero(X1)), one(b), one(zero(X1))) -> U97_aaa(X1, binaryZcH_in_a(X1))
   U97_aaa(X1, binaryZcH_out_a(X1)) -> addzcJ_out_aaa(zero(zero(X1)), one(b), one(zero(X1)))
   addzcJ_in_aaa(zero(X1), one(X2), one(X3)) -> U98_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), zero(X2), one(X3)) -> U99_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   addycK_in_aaa(b, one(X1), one(X1)) -> U116_aaa(X1, binarycI_in_a(X1))
   U116_aaa(X1, binarycI_out_a(X1)) -> addycK_out_aaa(b, one(X1), one(X1))
   addycK_in_aaa(b, zero(X1), zero(X1)) -> U117_aaa(X1, binaryZcH_in_a(X1))
   U117_aaa(X1, binaryZcH_out_a(X1)) -> addycK_out_aaa(b, zero(X1), zero(X1))
   addycK_in_aaa(X1, X2, X3) -> U118_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   addzcJ_in_aaa(one(X1), one(X2), zero(X3)) -> U100_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   addccL_in_aaa(b, b, one(b)) -> addccL_out_aaa(b, b, one(b))
   addccL_in_aaa(X1, b, X2) -> U113_aaa(X1, X2, succZcN_in_aa(X1, X2))
   succZcN_in_aa(zero(X1), one(X1)) -> U103_aa(X1, binaryZcH_in_a(X1))
   U103_aa(X1, binaryZcH_out_a(X1)) -> succZcN_out_aa(zero(X1), one(X1))
   succZcN_in_aa(one(X1), zero(X2)) -> U104_aa(X1, X2, succcM_in_aa(X1, X2))
   succcM_in_aa(b, one(b)) -> succcM_out_aa(b, one(b))
   succcM_in_aa(zero(X1), one(X1)) -> U101_aa(X1, binaryZcH_in_a(X1))
   U101_aa(X1, binaryZcH_out_a(X1)) -> succcM_out_aa(zero(X1), one(X1))
   succcM_in_aa(one(X1), zero(X2)) -> U102_aa(X1, X2, succcM_in_aa(X1, X2))
   U102_aa(X1, X2, succcM_out_aa(X1, X2)) -> succcM_out_aa(one(X1), zero(X2))
   U104_aa(X1, X2, succcM_out_aa(X1, X2)) -> succZcN_out_aa(one(X1), zero(X2))
   U113_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(X1, b, X2)
   addccL_in_aaa(b, X1, X2) -> U114_aaa(X1, X2, succZcN_in_aa(X1, X2))
   U114_aaa(X1, X2, succZcN_out_aa(X1, X2)) -> addccL_out_aaa(b, X1, X2)
   addccL_in_aaa(X1, X2, X3) -> U115_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(zero(X1), zero(X2), one(X3)) -> U105_aaa(X1, X2, X3, addzcJ_in_aaa(X1, X2, X3))
   U105_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), zero(X2), one(X3))
   addCcO_in_aaa(zero(zero(X1)), one(b), zero(one(X1))) -> U106_aaa(X1, binaryZcH_in_a(X1))
   U106_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(zero(zero(X1)), one(b), zero(one(X1)))
   addCcO_in_aaa(zero(one(X1)), one(b), zero(zero(X2))) -> U107_aaa(X1, X2, succcM_in_aa(X1, X2))
   U107_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(zero(one(X1)), one(b), zero(zero(X2)))
   addCcO_in_aaa(zero(X1), one(X2), zero(X3)) -> U108_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(b), zero(zero(X1)), zero(one(X1))) -> U109_aaa(X1, binaryZcH_in_a(X1))
   U109_aaa(X1, binaryZcH_out_a(X1)) -> addCcO_out_aaa(one(b), zero(zero(X1)), zero(one(X1)))
   addCcO_in_aaa(one(b), zero(one(X1)), zero(zero(X2))) -> U110_aaa(X1, X2, succcM_in_aa(X1, X2))
   U110_aaa(X1, X2, succcM_out_aa(X1, X2)) -> addCcO_out_aaa(one(b), zero(one(X1)), zero(zero(X2)))
   addCcO_in_aaa(one(X1), zero(X2), zero(X3)) -> U111_aaa(X1, X2, X3, addCcO_in_aaa(X1, X2, X3))
   addCcO_in_aaa(one(X1), one(X2), one(X3)) -> U112_aaa(X1, X2, X3, addccL_in_aaa(X1, X2, X3))
   U112_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), one(X2), one(X3))
   U111_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(one(X1), zero(X2), zero(X3))
   U108_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addCcO_out_aaa(zero(X1), one(X2), zero(X3))
   U115_aaa(X1, X2, X3, addCcO_out_aaa(X1, X2, X3)) -> addccL_out_aaa(X1, X2, X3)
   U100_aaa(X1, X2, X3, addccL_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), one(X2), zero(X3))
   U118_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addycK_out_aaa(X1, X2, X3)
   U99_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(one(X1), zero(X2), one(X3))
   U98_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), one(X2), one(X3))
   U95_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addzcJ_out_aaa(zero(X1), zero(X2), zero(X3))
   U150_aaa(X1, X2, X3, addzcJ_out_aaa(X1, X2, X3)) -> addcG_out_aaa(zero(X1), X2, zero(X3))
   addcG_in_aaa(one(X1), X2, one(X3)) -> U151_aaa(X1, X2, X3, addycK_in_aaa(X1, X2, X3))
   U151_aaa(X1, X2, X3, addycK_out_aaa(X1, X2, X3)) -> addcG_out_aaa(one(X1), X2, one(X3))
   U90_aaa(X1, X2, X3, addcG_out_aaa(X2, X4, X3)) -> timescF_out_aaa(one(X1), X2, X3)
   U88_aaa(X1, X2, X3, timescF_out_aaa(X1, X2, X3)) -> timescF_out_aaa(zero(X1), X2, zero(X3))

The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

timescF_in_aaa(x1, x2, x3)  =  timescF_in_aaa

timescF_out_aaa(x1, x2, x3)  =  timescF_out_aaa(x1)

U88_aaa(x1, x2, x3, x4)  =  U88_aaa(x4)

U89_aaa(x1, x2, x3, x4)  =  U89_aaa(x4)

U90_aaa(x1, x2, x3, x4)  =  U90_aaa(x1, x4)

addcG_in_aaa(x1, x2, x3)  =  addcG_in_aaa

U149_aaa(x1, x2)  =  U149_aaa(x2)

binaryZcP_in_a(x1)  =  binaryZcP_in_a

U119_a(x1, x2)  =  U119_a(x2)

binaryZcH_in_a(x1)  =  binaryZcH_in_a

U91_a(x1, x2)  =  U91_a(x2)

U92_a(x1, x2)  =  U92_a(x2)

binarycI_in_a(x1)  =  binarycI_in_a

binarycI_out_a(x1)  =  binarycI_out_a(x1)

U93_a(x1, x2)  =  U93_a(x2)

binaryZcH_out_a(x1)  =  binaryZcH_out_a(x1)

U94_a(x1, x2)  =  U94_a(x2)

binaryZcP_out_a(x1)  =  binaryZcP_out_a(x1)

addcG_out_aaa(x1, x2, x3)  =  addcG_out_aaa(x1, x2, x3)

U150_aaa(x1, x2, x3, x4)  =  U150_aaa(x4)

addzcJ_in_aaa(x1, x2, x3)  =  addzcJ_in_aaa

U95_aaa(x1, x2, x3, x4)  =  U95_aaa(x4)

U96_aaa(x1, x2)  =  U96_aaa(x2)

addzcJ_out_aaa(x1, x2, x3)  =  addzcJ_out_aaa(x1, x2, x3)

U97_aaa(x1, x2)  =  U97_aaa(x2)

U98_aaa(x1, x2, x3, x4)  =  U98_aaa(x4)

U99_aaa(x1, x2, x3, x4)  =  U99_aaa(x4)

addycK_in_aaa(x1, x2, x3)  =  addycK_in_aaa

U116_aaa(x1, x2)  =  U116_aaa(x2)

addycK_out_aaa(x1, x2, x3)  =  addycK_out_aaa(x1, x2, x3)

U117_aaa(x1, x2)  =  U117_aaa(x2)

U118_aaa(x1, x2, x3, x4)  =  U118_aaa(x4)

U100_aaa(x1, x2, x3, x4)  =  U100_aaa(x4)

addccL_in_aaa(x1, x2, x3)  =  addccL_in_aaa

addccL_out_aaa(x1, x2, x3)  =  addccL_out_aaa(x1, x2, x3)

U113_aaa(x1, x2, x3)  =  U113_aaa(x3)

succZcN_in_aa(x1, x2)  =  succZcN_in_aa

U103_aa(x1, x2)  =  U103_aa(x2)

succZcN_out_aa(x1, x2)  =  succZcN_out_aa(x1, x2)

U104_aa(x1, x2, x3)  =  U104_aa(x3)

succcM_in_aa(x1, x2)  =  succcM_in_aa

succcM_out_aa(x1, x2)  =  succcM_out_aa(x1, x2)

U101_aa(x1, x2)  =  U101_aa(x2)

U102_aa(x1, x2, x3)  =  U102_aa(x3)

U114_aaa(x1, x2, x3)  =  U114_aaa(x3)

U115_aaa(x1, x2, x3, x4)  =  U115_aaa(x4)

addCcO_in_aaa(x1, x2, x3)  =  addCcO_in_aaa

U105_aaa(x1, x2, x3, x4)  =  U105_aaa(x4)

addCcO_out_aaa(x1, x2, x3)  =  addCcO_out_aaa(x1, x2, x3)

U106_aaa(x1, x2)  =  U106_aaa(x2)

U107_aaa(x1, x2, x3)  =  U107_aaa(x3)

U108_aaa(x1, x2, x3, x4)  =  U108_aaa(x4)

U109_aaa(x1, x2)  =  U109_aaa(x2)

U110_aaa(x1, x2, x3)  =  U110_aaa(x3)

U111_aaa(x1, x2, x3, x4)  =  U111_aaa(x4)

U112_aaa(x1, x2, x3, x4)  =  U112_aaa(x4)

U151_aaa(x1, x2, x3, x4)  =  U151_aaa(x4)

one(x1)  =  one(x1)

b  =  b

TIMESA_IN_AAG(x1, x2, x3)  =  TIMESA_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(157) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(158)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   TIMESA_IN_AAG(zero(zero(X1)), X2, zero(zero(X3))) -> TIMESA_IN_AAG(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
zero(x1)  =  zero(x1)

TIMESA_IN_AAG(x1, x2, x3)  =  TIMESA_IN_AAG(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(159) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 11,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(add (b) (b) (b))",
                null
            ],
            [
                "(add X (b) X)",
                "(binaryZ X)"
            ],
            [
                "(add (b) Y Y)",
                "(binaryZ Y)"
            ],
            [
                "(add X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addx (one X) (b) (one X))",
                "(binary X)"
            ],
            [
                "(addx (zero X) (b) (zero X))",
                "(binaryZ X)"
            ],
            [
                "(addx X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addy (b) (one Y) (one Y))",
                "(binary Y)"
            ],
            [
                "(addy (b) (zero Y) (zero Y))",
                "(binaryZ Y)"
            ],
            [
                "(addy X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (zero Y) (zero Z))",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (one Y) (one Z))",
                "(addx X Y Z)"
            ],
            [
                "(addz (one X) (zero Y) (one Z))",
                "(addy X Y Z)"
            ],
            [
                "(addz (one X) (one Y) (zero Z))",
                "(addc X Y Z)"
            ],
            [
                "(addc (b) (b) (one (b)))",
                null
            ],
            [
                "(addc X (b) Z)",
                "(succZ X Z)"
            ],
            [
                "(addc (b) Y Z)",
                "(succZ Y Z)"
            ],
            [
                "(addc X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addX (zero X) (b) (one X))",
                "(binaryZ X)"
            ],
            [
                "(addX (one X) (b) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(addX X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addY (b) (zero Y) (one Y))",
                "(binaryZ Y)"
            ],
            [
                "(addY (b) (one Y) (zero Z))",
                "(succ Y Z)"
            ],
            [
                "(addY X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addC (zero X) (zero Y) (one Z))",
                "(addz X Y Z)"
            ],
            [
                "(addC (zero X) (one Y) (zero Z))",
                "(addX X Y Z)"
            ],
            [
                "(addC (one X) (zero Y) (zero Z))",
                "(addY X Y Z)"
            ],
            [
                "(addC (one X) (one Y) (one Z))",
                "(addc X Y Z)"
            ],
            [
                "(binary (b))",
                null
            ],
            [
                "(binary (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binary (one X))",
                "(binary X)"
            ],
            [
                "(binaryZ (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binaryZ (one X))",
                "(binary X)"
            ],
            [
                "(succ (b) (one (b)))",
                null
            ],
            [
                "(succ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(succZ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succZ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(times (one (b)) X X)",
                null
            ],
            [
                "(times (zero R) S (zero RS))",
                "(times R S RS)"
            ],
            [
                "(times (one R) S RSS)",
                "(',' (times R S RS) (add S (zero RS) RSS))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "1341": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2430": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2672": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T699 T700 T698)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T698"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1340": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1338": {
                "goal": [{
                    "clause": 32,
                    "scope": 5,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2427": {
                "goal": [{
                    "clause": 7,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1216": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1337": {
                "goal": [{
                    "clause": 31,
                    "scope": 5,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2426": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 8,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 9,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1215": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1336": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 5,
                        "term": "(binaryZ T95)"
                    },
                    {
                        "clause": 32,
                        "scope": 5,
                        "term": "(binaryZ T95)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2425": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1335": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2424": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1334": {
                "goal": [{
                    "clause": 32,
                    "scope": 4,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2423": {
                "goal": [{
                    "clause": 13,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1212": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1333": {
                "goal": [{
                    "clause": 31,
                    "scope": 4,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2422": {
                "goal": [{
                    "clause": 12,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1332": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 4,
                        "term": "(binaryZ (zero T84))"
                    },
                    {
                        "clause": 32,
                        "scope": 4,
                        "term": "(binaryZ (zero T84))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2421": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T551 T552 T550)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T550"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1210": {
                "goal": [{
                    "clause": 38,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1331": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2429": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T578)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T578"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1339": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T102)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2428": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 9,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": 38,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1352": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2683": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T726)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T726"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1351": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T113)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2682": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 20,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1350": {
                "goal": [{
                    "clause": 30,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2681": {
                "goal": [{
                    "clause": 18,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2680": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 19,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 20,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1349": {
                "goal": [{
                    "clause": 29,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2438": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 15,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1227": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1348": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2437": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2679": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1347": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2436": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2678": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1346": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2435": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T599 T600 T598)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T598"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2677": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1345": {
                "goal": [
                    {
                        "clause": 29,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 30,
                        "scope": 6,
                        "term": "(binary T107)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2434": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2676": {
                "goal": [{
                    "clause": 25,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1344": {
                "goal": [{
                    "clause": 28,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2433": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T583)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T583"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1343": {
                "goal": [
                    {
                        "clause": 28,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 29,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 30,
                        "scope": 6,
                        "term": "(binary T107)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2432": {
                "goal": [{
                    "clause": 9,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1342": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2431": {
                "goal": [{
                    "clause": 8,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2673": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3888": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1363": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2210": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2573": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T644)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T644"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2694": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1362": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2451": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2693": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T738 T737)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T737"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1361": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2450": {
                "goal": [{
                    "clause": 14,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2692": {
                "goal": [{
                    "clause": 20,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1360": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2691": {
                "goal": [{
                    "clause": 19,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "493": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2207": {
                "goal": [{
                    "clause": 31,
                    "scope": 19,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1359": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "1237": {
                "goal": [{
                    "clause": 40,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1358": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "1357": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 11,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2204": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 19,
                        "term": "(binaryZ T429)"
                    },
                    {
                        "clause": 32,
                        "scope": 19,
                        "term": "(binaryZ T429)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1235": {
                "goal": [{
                    "clause": 39,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1356": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2203": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1355": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1354": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2201": {
                "goal": [{
                    "clause": 32,
                    "scope": 18,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1353": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T118)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2200": {
                "goal": [{
                    "clause": 31,
                    "scope": 18,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2684": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2209": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T435)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T435"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2208": {
                "goal": [{
                    "clause": 32,
                    "scope": 19,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3790": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3791": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1809": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3794": {
                "goal": [{
                    "clause": 12,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2221": {
                "goal": [{
                    "clause": 29,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2463": {
                "goal": [{
                    "clause": 37,
                    "scope": 26,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2220": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2462": {
                "goal": [{
                    "clause": 36,
                    "scope": 26,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2461": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 26,
                        "term": "(succZ T625 T624)"
                    },
                    {
                        "clause": 37,
                        "scope": 26,
                        "term": "(succZ T625 T624)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1371": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2460": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1370": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1800": {
                "goal": [{
                    "clause": 12,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2218": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2217": {
                "goal": [
                    {
                        "clause": 29,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 30,
                        "scope": 20,
                        "term": "(binary T439)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2459": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1369": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2216": {
                "goal": [{
                    "clause": 28,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2458": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1368": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2215": {
                "goal": [
                    {
                        "clause": 28,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 29,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 30,
                        "scope": 20,
                        "term": "(binary T439)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2457": {
                "goal": [{
                    "clause": 15,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2699": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1367": {
                "goal": [{
                    "clause": 11,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2214": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2456": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2698": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1366": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2213": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2455": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2697": {
                "goal": [{
                    "clause": 27,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1365": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T157 T158 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "2454": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2696": {
                "goal": [{
                    "clause": 26,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1364": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2574": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2695": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T753 T754 T752)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T752"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1808": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3784": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T821 T822 T820)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T820"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1807": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1806": {
                "goal": [{
                    "clause": 7,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1805": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1803": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1802": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1801": {
                "goal": [{
                    "clause": 13,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2219": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2111": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2232": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2110": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2108": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 35,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2107": {
                "goal": [{
                    "clause": 33,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2106": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 34,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 35,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2227": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2226": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2225": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2467": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2224": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2223": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T444)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T444"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2465": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2222": {
                "goal": [{
                    "clause": 30,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2464": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T631)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T631"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3795": {
                "goal": [{
                    "clause": 13,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1813": {
                "goal": [{
                    "clause": 9,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1812": {
                "goal": [{
                    "clause": 8,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "2109": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2121": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2242": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2120": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T277 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "2241": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T503 T504 T502)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T502"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2240": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2239": {
                "goal": [{
                    "clause": 10,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2238": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 11,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2237": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2115": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2236": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2114": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T272)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2235": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2113": {
                "goal": [{
                    "clause": 35,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2234": {
                "goal": [{
                    "clause": 10,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2112": {
                "goal": [{
                    "clause": 34,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2233": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 11,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2375": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2374": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1041": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1282": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1281": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T60 T61 X62)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X62"],
                    "exprvars": []
                }
            },
            "1038": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T37 T38 X33) (add T38 (zero X33) T36))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "2127": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2126": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T283 X361)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X361"],
                    "exprvars": []
                }
            },
            "2125": {
                "goal": [{
                    "clause": 17,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2124": {
                "goal": [{
                    "clause": 16,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2245": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2244": {
                "goal": [{
                    "clause": 11,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2144": {
                "goal": [{
                    "clause": 25,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2142": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2384": {
                "goal": [{
                    "clause": 6,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2141": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T309 T310 X402)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X402"],
                    "exprvars": []
                }
            },
            "2383": {
                "goal": [{
                    "clause": 5,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2382": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2381": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T530)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T530"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2380": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 6,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2137": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2379": {
                "goal": [{
                    "clause": 4,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2136": {
                "goal": [{
                    "clause": 24,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "3225": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T807 T808 T806)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T806"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2135": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 25,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2134": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2376": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 5,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 6,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "988": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T24 T25 T23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T23"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2034": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2155": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T338 X448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X448"],
                    "exprvars": []
                }
            },
            "2397": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2033": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T237 T238 X284)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X284"],
                    "exprvars": []
                }
            },
            "2154": {
                "goal": [{
                    "clause": 20,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2396": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T535)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T535"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2153": {
                "goal": [{
                    "clause": 19,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2152": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2151": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2150": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 20,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2702": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 23,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2701": {
                "goal": [{
                    "clause": 21,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "992": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2700": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 22,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 23,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2149": {
                "goal": [{
                    "clause": 18,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2148": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 19,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 20,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2147": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2146": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2145": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2708": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2707": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T792 T791)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T791"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2706": {
                "goal": [{
                    "clause": 23,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2705": {
                "goal": [{
                    "clause": 22,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2704": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2703": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T780)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T780"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2045": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2044": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2043": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2042": {
                "goal": [{
                    "clause": 15,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2041": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2040": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2039": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2038": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2159": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T349 T350 X464)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X464"],
                    "exprvars": []
                }
            },
            "2037": {
                "goal": [{
                    "clause": 14,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2036": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 15,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2035": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2156": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2177": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T371)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2176": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 23,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1086": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "2175": {
                "goal": [{
                    "clause": 21,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2174": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 22,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 23,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2173": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2172": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2171": {
                "goal": [{
                    "clause": 27,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2170": {
                "goal": [{
                    "clause": 26,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "532": {
                "goal": [{
                    "clause": 39,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "533": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1872": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1871": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T225)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2046": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 12,
                        "term": "(succZ T254 X315)"
                    },
                    {
                        "clause": 37,
                        "scope": 12,
                        "term": "(succZ T254 X315)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2180": {
                "goal": [{
                    "clause": 23,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2067": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2188": {
                "goal": [{
                    "clause": 13,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2187": {
                "goal": [{
                    "clause": 12,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2186": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2064": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T261)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2185": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2184": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T399 T400 X542)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X542"],
                    "exprvars": []
                }
            },
            "2183": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T389 T390 X526)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X526"],
                    "exprvars": []
                }
            },
            "2182": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2181": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T378 X510)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X510"],
                    "exprvars": []
                }
            },
            "1644": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1643": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T179)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1642": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "1641": {
                "goal": [{
                    "clause": 4,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2058": {
                "goal": [{
                    "clause": 37,
                    "scope": 12,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2179": {
                "goal": [{
                    "clause": 22,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1089": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2057": {
                "goal": [{
                    "clause": 36,
                    "scope": 12,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2178": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2191": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2190": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2199": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 18,
                        "term": "(binaryZ (zero T421))"
                    },
                    {
                        "clause": 32,
                        "scope": 18,
                        "term": "(binaryZ (zero T421))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2198": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2197": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2196": {
                "goal": [{
                    "clause": 3,
                    "scope": 17,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2195": {
                "goal": [{
                    "clause": 2,
                    "scope": 17,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2194": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2193": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2192": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 1,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2189": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T412 T413 X565)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X565"],
                    "exprvars": []
                }
            },
            "2633": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2632": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T652 T651)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T651"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2639": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T663 T662)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T662"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2638": {
                "goal": [{
                    "clause": 17,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2637": {
                "goal": [{
                    "clause": 16,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2094": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2093": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2526": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2525": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 35,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2524": {
                "goal": [{
                    "clause": 33,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1797": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T197 T198 X232)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X232"],
                    "exprvars": []
                }
            },
            "2523": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 34,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 35,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1796": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1795": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T185)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1794": {
                "goal": [{
                    "clause": 6,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "1793": {
                "goal": [{
                    "clause": 5,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2640": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2529": {
                "goal": [{
                    "clause": 34,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2528": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2527": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3871": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1330": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2661": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2660": {
                "goal": [{
                    "clause": 24,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1327": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "1326": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2657": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 25,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1325": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "1324": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "1323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T70 T71 X77)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X77"],
                    "exprvars": []
                }
            },
            "1322": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2653": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1321": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T70 T71 X77) (add T71 (zero X77) X78))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X78",
                        "X77"
                    ],
                    "exprvars": []
                }
            },
            "2530": {
                "goal": [{
                    "clause": 35,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1209": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1329": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "1328": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "3868": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T839 T840 T838)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T838"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 11,
                "to": 12,
                "label": "CASE"
            },
            {
                "from": 12,
                "to": 13,
                "label": "PARALLEL"
            },
            {
                "from": 12,
                "to": 14,
                "label": "PARALLEL"
            },
            {
                "from": 13,
                "to": 483,
                "label": "EVAL with clause\ntimes(one(b), X5, X5).\nand substitutionT1 -> one(b),\nT2 -> T8,\nX5 -> T8,\nT3 -> T8"
            },
            {
                "from": 13,
                "to": 493,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 14,
                "to": 532,
                "label": "PARALLEL"
            },
            {
                "from": 14,
                "to": 533,
                "label": "PARALLEL"
            },
            {
                "from": 483,
                "to": 500,
                "label": "SUCCESS"
            },
            {
                "from": 532,
                "to": 988,
                "label": "EVAL with clause\ntimes(zero(X18), X19, zero(X20)) :- times(X18, X19, X20).\nand substitutionX18 -> T24,\nT1 -> zero(T24),\nT2 -> T25,\nX19 -> T25,\nX20 -> T23,\nT3 -> zero(T23),\nT21 -> T24,\nT22 -> T25"
            },
            {
                "from": 532,
                "to": 992,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 533,
                "to": 1038,
                "label": "EVAL with clause\ntimes(one(X30), X31, X32) :- ','(times(X30, X31, X33), add(X31, zero(X33), X32)).\nand substitutionX30 -> T37,\nT1 -> one(T37),\nT2 -> T38,\nX31 -> T38,\nT3 -> T36,\nX32 -> T36,\nT34 -> T37,\nT35 -> T38"
            },
            {
                "from": 533,
                "to": 1041,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 988,
                "to": 11,
                "label": "INSTANCE with matching:\nT1 -> T24\nT2 -> T25\nT3 -> T23"
            },
            {
                "from": 1038,
                "to": 1086,
                "label": "SPLIT 1"
            },
            {
                "from": 1038,
                "to": 1089,
                "label": "SPLIT 2\nnew knowledge:\nT37 is ground\nreplacements:X33 -> T41,\nT38 -> T42"
            },
            {
                "from": 1086,
                "to": 1209,
                "label": "CASE"
            },
            {
                "from": 1089,
                "to": 2192,
                "label": "CASE"
            },
            {
                "from": 1209,
                "to": 1210,
                "label": "PARALLEL"
            },
            {
                "from": 1209,
                "to": 1212,
                "label": "PARALLEL"
            },
            {
                "from": 1210,
                "to": 1215,
                "label": "EVAL with clause\ntimes(one(b), X42, X42).\nand substitutionT37 -> one(b),\nT38 -> T49,\nX42 -> T49,\nX33 -> T49"
            },
            {
                "from": 1210,
                "to": 1216,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1212,
                "to": 1235,
                "label": "PARALLEL"
            },
            {
                "from": 1212,
                "to": 1237,
                "label": "PARALLEL"
            },
            {
                "from": 1215,
                "to": 1227,
                "label": "SUCCESS"
            },
            {
                "from": 1235,
                "to": 1281,
                "label": "EVAL with clause\ntimes(zero(X59), X60, zero(X61)) :- times(X59, X60, X61).\nand substitutionX59 -> T60,\nT37 -> zero(T60),\nT38 -> T61,\nX60 -> T61,\nX61 -> X62,\nX33 -> zero(X62),\nT58 -> T60,\nT59 -> T61"
            },
            {
                "from": 1235,
                "to": 1282,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1237,
                "to": 1321,
                "label": "EVAL with clause\ntimes(one(X74), X75, X76) :- ','(times(X74, X75, X77), add(X75, zero(X77), X76)).\nand substitutionX74 -> T70,\nT37 -> one(T70),\nT38 -> T71,\nX75 -> T71,\nX33 -> X78,\nX76 -> X78,\nT68 -> T70,\nT69 -> T71"
            },
            {
                "from": 1237,
                "to": 1322,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1281,
                "to": 1086,
                "label": "INSTANCE with matching:\nT37 -> T60\nT38 -> T61\nX33 -> X62"
            },
            {
                "from": 1321,
                "to": 1323,
                "label": "SPLIT 1"
            },
            {
                "from": 1321,
                "to": 1324,
                "label": "SPLIT 2\nnew knowledge:\nT70 is ground\nreplacements:X77 -> T74,\nT71 -> T75"
            },
            {
                "from": 1323,
                "to": 1086,
                "label": "INSTANCE with matching:\nT37 -> T70\nT38 -> T71\nX33 -> X77"
            },
            {
                "from": 1324,
                "to": 1325,
                "label": "CASE"
            },
            {
                "from": 1325,
                "to": 1326,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 1326,
                "to": 1327,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 1327,
                "to": 1328,
                "label": "PARALLEL"
            },
            {
                "from": 1327,
                "to": 1329,
                "label": "PARALLEL"
            },
            {
                "from": 1328,
                "to": 1330,
                "label": "EVAL with clause\nadd(b, X88, X88) :- binaryZ(X88).\nand substitutionT75 -> b,\nT74 -> T84,\nX88 -> zero(T84),\nX78 -> zero(T84),\nT83 -> T84"
            },
            {
                "from": 1328,
                "to": 1331,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1329,
                "to": 1356,
                "label": "ONLY EVAL with clause\nadd(X129, X130, X131) :- addz(X129, X130, X131).\nand substitutionT75 -> T129,\nX129 -> T129,\nT74 -> T130,\nX130 -> zero(T130),\nX78 -> X132,\nX131 -> X132,\nT127 -> T129,\nT128 -> T130"
            },
            {
                "from": 1330,
                "to": 1332,
                "label": "CASE"
            },
            {
                "from": 1332,
                "to": 1333,
                "label": "PARALLEL"
            },
            {
                "from": 1332,
                "to": 1334,
                "label": "PARALLEL"
            },
            {
                "from": 1333,
                "to": 1335,
                "label": "ONLY EVAL with clause\nbinaryZ(zero(X96)) :- binaryZ(X96).\nand substitutionT84 -> T95,\nX96 -> T95,\nT94 -> T95"
            },
            {
                "from": 1334,
                "to": 1355,
                "label": "BACKTRACK\nfor clause: binaryZ(one(X)) :- binary(X)because of non-unification"
            },
            {
                "from": 1335,
                "to": 1336,
                "label": "CASE"
            },
            {
                "from": 1336,
                "to": 1337,
                "label": "PARALLEL"
            },
            {
                "from": 1336,
                "to": 1338,
                "label": "PARALLEL"
            },
            {
                "from": 1337,
                "to": 1339,
                "label": "EVAL with clause\nbinaryZ(zero(X102)) :- binaryZ(X102).\nand substitutionX102 -> T102,\nT95 -> zero(T102),\nT101 -> T102"
            },
            {
                "from": 1337,
                "to": 1340,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1338,
                "to": 1341,
                "label": "EVAL with clause\nbinaryZ(one(X106)) :- binary(X106).\nand substitutionX106 -> T107,\nT95 -> one(T107),\nT106 -> T107"
            },
            {
                "from": 1338,
                "to": 1342,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1339,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T102"
            },
            {
                "from": 1341,
                "to": 1343,
                "label": "CASE"
            },
            {
                "from": 1343,
                "to": 1344,
                "label": "PARALLEL"
            },
            {
                "from": 1343,
                "to": 1345,
                "label": "PARALLEL"
            },
            {
                "from": 1344,
                "to": 1346,
                "label": "EVAL with clause\nbinary(b).\nand substitutionT107 -> b"
            },
            {
                "from": 1344,
                "to": 1347,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1345,
                "to": 1349,
                "label": "PARALLEL"
            },
            {
                "from": 1345,
                "to": 1350,
                "label": "PARALLEL"
            },
            {
                "from": 1346,
                "to": 1348,
                "label": "SUCCESS"
            },
            {
                "from": 1349,
                "to": 1351,
                "label": "EVAL with clause\nbinary(zero(X111)) :- binaryZ(X111).\nand substitutionX111 -> T113,\nT107 -> zero(T113),\nT112 -> T113"
            },
            {
                "from": 1349,
                "to": 1352,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1350,
                "to": 1353,
                "label": "EVAL with clause\nbinary(one(X115)) :- binary(X115).\nand substitutionX115 -> T118,\nT107 -> one(T118),\nT117 -> T118"
            },
            {
                "from": 1350,
                "to": 1354,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1351,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T113"
            },
            {
                "from": 1353,
                "to": 1341,
                "label": "INSTANCE with matching:\nT107 -> T118"
            },
            {
                "from": 1356,
                "to": 1357,
                "label": "CASE"
            },
            {
                "from": 1357,
                "to": 1358,
                "label": "PARALLEL"
            },
            {
                "from": 1357,
                "to": 1359,
                "label": "PARALLEL"
            },
            {
                "from": 1358,
                "to": 1360,
                "label": "EVAL with clause\naddz(zero(X153), zero(X154), zero(X155)) :- addz(X153, X154, X155).\nand substitutionX153 -> T143,\nT129 -> zero(T143),\nT130 -> T144,\nX154 -> T144,\nX155 -> X156,\nX132 -> zero(X156),\nT141 -> T143,\nT142 -> T144"
            },
            {
                "from": 1358,
                "to": 1361,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1359,
                "to": 2186,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 1360,
                "to": 1362,
                "label": "CASE"
            },
            {
                "from": 1362,
                "to": 1363,
                "label": "PARALLEL"
            },
            {
                "from": 1362,
                "to": 1364,
                "label": "PARALLEL"
            },
            {
                "from": 1363,
                "to": 1365,
                "label": "EVAL with clause\naddz(zero(X177), zero(X178), zero(X179)) :- addz(X177, X178, X179).\nand substitutionX177 -> T157,\nT143 -> zero(T157),\nX178 -> T158,\nT144 -> zero(T158),\nX179 -> X180,\nX156 -> zero(X180),\nT155 -> T157,\nT156 -> T158"
            },
            {
                "from": 1363,
                "to": 1366,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1364,
                "to": 1367,
                "label": "PARALLEL"
            },
            {
                "from": 1364,
                "to": 1368,
                "label": "PARALLEL"
            },
            {
                "from": 1365,
                "to": 1360,
                "label": "INSTANCE with matching:\nT143 -> T157\nT144 -> T158\nX156 -> X180"
            },
            {
                "from": 1367,
                "to": 1369,
                "label": "EVAL with clause\naddz(zero(X201), one(X202), one(X203)) :- addx(X201, X202, X203).\nand substitutionX201 -> T171,\nT143 -> zero(T171),\nX202 -> T172,\nT144 -> one(T172),\nX203 -> X204,\nX156 -> one(X204),\nT169 -> T171,\nT170 -> T172"
            },
            {
                "from": 1367,
                "to": 1370,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1368,
                "to": 1800,
                "label": "PARALLEL"
            },
            {
                "from": 1368,
                "to": 1801,
                "label": "PARALLEL"
            },
            {
                "from": 1369,
                "to": 1371,
                "label": "CASE"
            },
            {
                "from": 1371,
                "to": 1641,
                "label": "PARALLEL"
            },
            {
                "from": 1371,
                "to": 1642,
                "label": "PARALLEL"
            },
            {
                "from": 1641,
                "to": 1643,
                "label": "EVAL with clause\naddx(one(X210), b, one(X210)) :- binary(X210).\nand substitutionX210 -> T179,\nT171 -> one(T179),\nT172 -> b,\nX204 -> one(T179),\nT178 -> T179"
            },
            {
                "from": 1641,
                "to": 1644,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1642,
                "to": 1793,
                "label": "PARALLEL"
            },
            {
                "from": 1642,
                "to": 1794,
                "label": "PARALLEL"
            },
            {
                "from": 1643,
                "to": 1341,
                "label": "INSTANCE with matching:\nT107 -> T179"
            },
            {
                "from": 1793,
                "to": 1795,
                "label": "EVAL with clause\naddx(zero(X215), b, zero(X215)) :- binaryZ(X215).\nand substitutionX215 -> T185,\nT171 -> zero(T185),\nT172 -> b,\nX204 -> zero(T185),\nT184 -> T185"
            },
            {
                "from": 1793,
                "to": 1796,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1794,
                "to": 1797,
                "label": "ONLY EVAL with clause\naddx(X229, X230, X231) :- addz(X229, X230, X231).\nand substitutionT171 -> T197,\nX229 -> T197,\nT172 -> T198,\nX230 -> T198,\nX204 -> X232,\nX231 -> X232,\nT195 -> T197,\nT196 -> T198"
            },
            {
                "from": 1795,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T185"
            },
            {
                "from": 1797,
                "to": 1360,
                "label": "INSTANCE with matching:\nT143 -> T197\nT144 -> T198\nX156 -> X232"
            },
            {
                "from": 1800,
                "to": 1802,
                "label": "EVAL with clause\naddz(one(X253), zero(X254), one(X255)) :- addy(X253, X254, X255).\nand substitutionX253 -> T211,\nT143 -> one(T211),\nX254 -> T212,\nT144 -> zero(T212),\nX255 -> X256,\nX156 -> one(X256),\nT209 -> T211,\nT210 -> T212"
            },
            {
                "from": 1800,
                "to": 1803,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1801,
                "to": 2034,
                "label": "EVAL with clause\naddz(one(X297), one(X298), zero(X299)) :- addc(X297, X298, X299).\nand substitutionX297 -> T247,\nT143 -> one(T247),\nX298 -> T248,\nT144 -> one(T248),\nX299 -> X300,\nX156 -> zero(X300),\nT245 -> T247,\nT246 -> T248"
            },
            {
                "from": 1801,
                "to": 2035,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1802,
                "to": 1805,
                "label": "CASE"
            },
            {
                "from": 1805,
                "to": 1806,
                "label": "PARALLEL"
            },
            {
                "from": 1805,
                "to": 1807,
                "label": "PARALLEL"
            },
            {
                "from": 1806,
                "to": 1808,
                "label": "EVAL with clause\naddy(b, one(X262), one(X262)) :- binary(X262).\nand substitutionT211 -> b,\nX262 -> T219,\nT212 -> one(T219),\nX256 -> one(T219),\nT218 -> T219"
            },
            {
                "from": 1806,
                "to": 1809,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1807,
                "to": 1812,
                "label": "PARALLEL"
            },
            {
                "from": 1807,
                "to": 1813,
                "label": "PARALLEL"
            },
            {
                "from": 1808,
                "to": 1341,
                "label": "INSTANCE with matching:\nT107 -> T219"
            },
            {
                "from": 1812,
                "to": 1871,
                "label": "EVAL with clause\naddy(b, zero(X267), zero(X267)) :- binaryZ(X267).\nand substitutionT211 -> b,\nX267 -> T225,\nT212 -> zero(T225),\nX256 -> zero(T225),\nT224 -> T225"
            },
            {
                "from": 1812,
                "to": 1872,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1813,
                "to": 2033,
                "label": "ONLY EVAL with clause\naddy(X281, X282, X283) :- addz(X281, X282, X283).\nand substitutionT211 -> T237,\nX281 -> T237,\nT212 -> T238,\nX282 -> T238,\nX256 -> X284,\nX283 -> X284,\nT235 -> T237,\nT236 -> T238"
            },
            {
                "from": 1871,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T225"
            },
            {
                "from": 2033,
                "to": 1360,
                "label": "INSTANCE with matching:\nT143 -> T237\nT144 -> T238\nX156 -> X284"
            },
            {
                "from": 2034,
                "to": 2036,
                "label": "CASE"
            },
            {
                "from": 2036,
                "to": 2037,
                "label": "PARALLEL"
            },
            {
                "from": 2036,
                "to": 2038,
                "label": "PARALLEL"
            },
            {
                "from": 2037,
                "to": 2039,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT247 -> b,\nT248 -> b,\nX300 -> one(b)"
            },
            {
                "from": 2037,
                "to": 2040,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2038,
                "to": 2042,
                "label": "PARALLEL"
            },
            {
                "from": 2038,
                "to": 2043,
                "label": "PARALLEL"
            },
            {
                "from": 2039,
                "to": 2041,
                "label": "SUCCESS"
            },
            {
                "from": 2042,
                "to": 2044,
                "label": "EVAL with clause\naddc(X313, b, X314) :- succZ(X313, X314).\nand substitutionT247 -> T254,\nX313 -> T254,\nT248 -> b,\nX300 -> X315,\nX314 -> X315,\nT253 -> T254"
            },
            {
                "from": 2042,
                "to": 2045,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2043,
                "to": 2124,
                "label": "PARALLEL"
            },
            {
                "from": 2043,
                "to": 2125,
                "label": "PARALLEL"
            },
            {
                "from": 2044,
                "to": 2046,
                "label": "CASE"
            },
            {
                "from": 2046,
                "to": 2057,
                "label": "PARALLEL"
            },
            {
                "from": 2046,
                "to": 2058,
                "label": "PARALLEL"
            },
            {
                "from": 2057,
                "to": 2064,
                "label": "EVAL with clause\nsuccZ(zero(X321), one(X321)) :- binaryZ(X321).\nand substitutionX321 -> T261,\nT254 -> zero(T261),\nX315 -> one(T261),\nT260 -> T261"
            },
            {
                "from": 2057,
                "to": 2067,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2058,
                "to": 2093,
                "label": "EVAL with clause\nsuccZ(one(X329), zero(X330)) :- succ(X329, X330).\nand substitutionX329 -> T266,\nT254 -> one(T266),\nX330 -> X331,\nX315 -> zero(X331),\nT265 -> T266"
            },
            {
                "from": 2058,
                "to": 2094,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2064,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T261"
            },
            {
                "from": 2093,
                "to": 2106,
                "label": "CASE"
            },
            {
                "from": 2106,
                "to": 2107,
                "label": "PARALLEL"
            },
            {
                "from": 2106,
                "to": 2108,
                "label": "PARALLEL"
            },
            {
                "from": 2107,
                "to": 2109,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT266 -> b,\nX331 -> one(b)"
            },
            {
                "from": 2107,
                "to": 2110,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2108,
                "to": 2112,
                "label": "PARALLEL"
            },
            {
                "from": 2108,
                "to": 2113,
                "label": "PARALLEL"
            },
            {
                "from": 2109,
                "to": 2111,
                "label": "SUCCESS"
            },
            {
                "from": 2112,
                "to": 2114,
                "label": "EVAL with clause\nsucc(zero(X336), one(X336)) :- binaryZ(X336).\nand substitutionX336 -> T272,\nT266 -> zero(T272),\nX331 -> one(T272),\nT271 -> T272"
            },
            {
                "from": 2112,
                "to": 2115,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2113,
                "to": 2120,
                "label": "EVAL with clause\nsucc(one(X344), zero(X345)) :- succ(X344, X345).\nand substitutionX344 -> T277,\nT266 -> one(T277),\nX345 -> X346,\nX331 -> zero(X346),\nT276 -> T277"
            },
            {
                "from": 2113,
                "to": 2121,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2114,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T272"
            },
            {
                "from": 2120,
                "to": 2093,
                "label": "INSTANCE with matching:\nT266 -> T277\nX331 -> X346"
            },
            {
                "from": 2124,
                "to": 2126,
                "label": "EVAL with clause\naddc(b, X359, X360) :- succZ(X359, X360).\nand substitutionT247 -> b,\nT248 -> T283,\nX359 -> T283,\nX300 -> X361,\nX360 -> X361,\nT282 -> T283"
            },
            {
                "from": 2124,
                "to": 2127,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2125,
                "to": 2134,
                "label": "ONLY EVAL with clause\naddc(X375, X376, X377) :- addC(X375, X376, X377).\nand substitutionT247 -> T295,\nX375 -> T295,\nT248 -> T296,\nX376 -> T296,\nX300 -> X378,\nX377 -> X378,\nT293 -> T295,\nT294 -> T296"
            },
            {
                "from": 2126,
                "to": 2044,
                "label": "INSTANCE with matching:\nT254 -> T283\nX315 -> X361"
            },
            {
                "from": 2134,
                "to": 2135,
                "label": "CASE"
            },
            {
                "from": 2135,
                "to": 2136,
                "label": "PARALLEL"
            },
            {
                "from": 2135,
                "to": 2137,
                "label": "PARALLEL"
            },
            {
                "from": 2136,
                "to": 2141,
                "label": "EVAL with clause\naddC(zero(X399), zero(X400), one(X401)) :- addz(X399, X400, X401).\nand substitutionX399 -> T309,\nT295 -> zero(T309),\nX400 -> T310,\nT296 -> zero(T310),\nX401 -> X402,\nX378 -> one(X402),\nT307 -> T309,\nT308 -> T310"
            },
            {
                "from": 2136,
                "to": 2142,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2137,
                "to": 2144,
                "label": "PARALLEL"
            },
            {
                "from": 2137,
                "to": 2145,
                "label": "PARALLEL"
            },
            {
                "from": 2141,
                "to": 1360,
                "label": "INSTANCE with matching:\nT143 -> T309\nT144 -> T310\nX156 -> X402"
            },
            {
                "from": 2144,
                "to": 2146,
                "label": "EVAL with clause\naddC(zero(X423), one(X424), zero(X425)) :- addX(X423, X424, X425).\nand substitutionX423 -> T323,\nT295 -> zero(T323),\nX424 -> T324,\nT296 -> one(T324),\nX425 -> X426,\nX378 -> zero(X426),\nT321 -> T323,\nT322 -> T324"
            },
            {
                "from": 2144,
                "to": 2147,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2145,
                "to": 2170,
                "label": "PARALLEL"
            },
            {
                "from": 2145,
                "to": 2171,
                "label": "PARALLEL"
            },
            {
                "from": 2146,
                "to": 2148,
                "label": "CASE"
            },
            {
                "from": 2148,
                "to": 2149,
                "label": "PARALLEL"
            },
            {
                "from": 2148,
                "to": 2150,
                "label": "PARALLEL"
            },
            {
                "from": 2149,
                "to": 2151,
                "label": "EVAL with clause\naddX(zero(X432), b, one(X432)) :- binaryZ(X432).\nand substitutionX432 -> T331,\nT323 -> zero(T331),\nT324 -> b,\nX426 -> one(T331),\nT330 -> T331"
            },
            {
                "from": 2149,
                "to": 2152,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2150,
                "to": 2153,
                "label": "PARALLEL"
            },
            {
                "from": 2150,
                "to": 2154,
                "label": "PARALLEL"
            },
            {
                "from": 2151,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T331"
            },
            {
                "from": 2153,
                "to": 2155,
                "label": "EVAL with clause\naddX(one(X446), b, zero(X447)) :- succ(X446, X447).\nand substitutionX446 -> T338,\nT323 -> one(T338),\nT324 -> b,\nX447 -> X448,\nX426 -> zero(X448),\nT337 -> T338"
            },
            {
                "from": 2153,
                "to": 2156,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2154,
                "to": 2159,
                "label": "ONLY EVAL with clause\naddX(X461, X462, X463) :- addC(X461, X462, X463).\nand substitutionT323 -> T349,\nX461 -> T349,\nT324 -> T350,\nX462 -> T350,\nX426 -> X464,\nX463 -> X464,\nT347 -> T349,\nT348 -> T350"
            },
            {
                "from": 2155,
                "to": 2093,
                "label": "INSTANCE with matching:\nT266 -> T338\nX331 -> X448"
            },
            {
                "from": 2159,
                "to": 2134,
                "label": "INSTANCE with matching:\nT295 -> T349\nT296 -> T350\nX378 -> X464"
            },
            {
                "from": 2170,
                "to": 2172,
                "label": "EVAL with clause\naddC(one(X485), zero(X486), zero(X487)) :- addY(X485, X486, X487).\nand substitutionX485 -> T363,\nT295 -> one(T363),\nX486 -> T364,\nT296 -> zero(T364),\nX487 -> X488,\nX378 -> zero(X488),\nT361 -> T363,\nT362 -> T364"
            },
            {
                "from": 2170,
                "to": 2173,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2171,
                "to": 2184,
                "label": "EVAL with clause\naddC(one(X539), one(X540), one(X541)) :- addc(X539, X540, X541).\nand substitutionX539 -> T399,\nT295 -> one(T399),\nX540 -> T400,\nT296 -> one(T400),\nX541 -> X542,\nX378 -> one(X542),\nT397 -> T399,\nT398 -> T400"
            },
            {
                "from": 2171,
                "to": 2185,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2172,
                "to": 2174,
                "label": "CASE"
            },
            {
                "from": 2174,
                "to": 2175,
                "label": "PARALLEL"
            },
            {
                "from": 2174,
                "to": 2176,
                "label": "PARALLEL"
            },
            {
                "from": 2175,
                "to": 2177,
                "label": "EVAL with clause\naddY(b, zero(X494), one(X494)) :- binaryZ(X494).\nand substitutionT363 -> b,\nX494 -> T371,\nT364 -> zero(T371),\nX488 -> one(T371),\nT370 -> T371"
            },
            {
                "from": 2175,
                "to": 2178,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2176,
                "to": 2179,
                "label": "PARALLEL"
            },
            {
                "from": 2176,
                "to": 2180,
                "label": "PARALLEL"
            },
            {
                "from": 2177,
                "to": 1335,
                "label": "INSTANCE with matching:\nT95 -> T371"
            },
            {
                "from": 2179,
                "to": 2181,
                "label": "EVAL with clause\naddY(b, one(X508), zero(X509)) :- succ(X508, X509).\nand substitutionT363 -> b,\nX508 -> T378,\nT364 -> one(T378),\nX509 -> X510,\nX488 -> zero(X510),\nT377 -> T378"
            },
            {
                "from": 2179,
                "to": 2182,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2180,
                "to": 2183,
                "label": "ONLY EVAL with clause\naddY(X523, X524, X525) :- addC(X523, X524, X525).\nand substitutionT363 -> T389,\nX523 -> T389,\nT364 -> T390,\nX524 -> T390,\nX488 -> X526,\nX525 -> X526,\nT387 -> T389,\nT388 -> T390"
            },
            {
                "from": 2181,
                "to": 2093,
                "label": "INSTANCE with matching:\nT266 -> T378\nX331 -> X510"
            },
            {
                "from": 2183,
                "to": 2134,
                "label": "INSTANCE with matching:\nT295 -> T389\nT296 -> T390\nX378 -> X526"
            },
            {
                "from": 2184,
                "to": 2034,
                "label": "INSTANCE with matching:\nT247 -> T399\nT248 -> T400\nX300 -> X542"
            },
            {
                "from": 2186,
                "to": 2187,
                "label": "PARALLEL"
            },
            {
                "from": 2186,
                "to": 2188,
                "label": "PARALLEL"
            },
            {
                "from": 2187,
                "to": 2189,
                "label": "EVAL with clause\naddz(one(X562), zero(X563), one(X564)) :- addy(X562, X563, X564).\nand substitutionX562 -> T412,\nT129 -> one(T412),\nT130 -> T413,\nX563 -> T413,\nX564 -> X565,\nX132 -> one(X565),\nT410 -> T412,\nT411 -> T413"
            },
            {
                "from": 2187,
                "to": 2190,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2188,
                "to": 2191,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 2189,
                "to": 1802,
                "label": "INSTANCE with matching:\nT211 -> T412\nT212 -> T413\nX256 -> X565"
            },
            {
                "from": 2192,
                "to": 2193,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 2193,
                "to": 2194,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 2194,
                "to": 2195,
                "label": "PARALLEL"
            },
            {
                "from": 2194,
                "to": 2196,
                "label": "PARALLEL"
            },
            {
                "from": 2195,
                "to": 2197,
                "label": "EVAL with clause\nadd(b, X575, X575) :- binaryZ(X575).\nand substitutionT42 -> b,\nT41 -> T421,\nX575 -> zero(T421),\nT36 -> zero(T421)"
            },
            {
                "from": 2195,
                "to": 2198,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2196,
                "to": 2232,
                "label": "ONLY EVAL with clause\nadd(X613, X614, X615) :- addz(X613, X614, X615).\nand substitutionT42 -> T463,\nX613 -> T463,\nT41 -> T464,\nX614 -> zero(T464),\nT36 -> T462,\nX615 -> T462,\nT460 -> T463,\nT461 -> T464"
            },
            {
                "from": 2197,
                "to": 2199,
                "label": "CASE"
            },
            {
                "from": 2199,
                "to": 2200,
                "label": "PARALLEL"
            },
            {
                "from": 2199,
                "to": 2201,
                "label": "PARALLEL"
            },
            {
                "from": 2200,
                "to": 2203,
                "label": "ONLY EVAL with clause\nbinaryZ(zero(X583)) :- binaryZ(X583).\nand substitutionT421 -> T429,\nX583 -> T429"
            },
            {
                "from": 2201,
                "to": 2227,
                "label": "BACKTRACK\nfor clause: binaryZ(one(X)) :- binary(X)because of non-unification"
            },
            {
                "from": 2203,
                "to": 2204,
                "label": "CASE"
            },
            {
                "from": 2204,
                "to": 2207,
                "label": "PARALLEL"
            },
            {
                "from": 2204,
                "to": 2208,
                "label": "PARALLEL"
            },
            {
                "from": 2207,
                "to": 2209,
                "label": "EVAL with clause\nbinaryZ(zero(X589)) :- binaryZ(X589).\nand substitutionX589 -> T435,\nT429 -> zero(T435)"
            },
            {
                "from": 2207,
                "to": 2210,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2208,
                "to": 2213,
                "label": "EVAL with clause\nbinaryZ(one(X593)) :- binary(X593).\nand substitutionX593 -> T439,\nT429 -> one(T439)"
            },
            {
                "from": 2208,
                "to": 2214,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2209,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T435"
            },
            {
                "from": 2213,
                "to": 2215,
                "label": "CASE"
            },
            {
                "from": 2215,
                "to": 2216,
                "label": "PARALLEL"
            },
            {
                "from": 2215,
                "to": 2217,
                "label": "PARALLEL"
            },
            {
                "from": 2216,
                "to": 2218,
                "label": "EVAL with clause\nbinary(b).\nand substitutionT439 -> b"
            },
            {
                "from": 2216,
                "to": 2219,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2217,
                "to": 2221,
                "label": "PARALLEL"
            },
            {
                "from": 2217,
                "to": 2222,
                "label": "PARALLEL"
            },
            {
                "from": 2218,
                "to": 2220,
                "label": "SUCCESS"
            },
            {
                "from": 2221,
                "to": 2223,
                "label": "EVAL with clause\nbinary(zero(X598)) :- binaryZ(X598).\nand substitutionX598 -> T444,\nT439 -> zero(T444)"
            },
            {
                "from": 2221,
                "to": 2224,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2222,
                "to": 2225,
                "label": "EVAL with clause\nbinary(one(X602)) :- binary(X602).\nand substitutionX602 -> T448,\nT439 -> one(T448)"
            },
            {
                "from": 2222,
                "to": 2226,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2223,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T444"
            },
            {
                "from": 2225,
                "to": 2213,
                "label": "INSTANCE with matching:\nT439 -> T448"
            },
            {
                "from": 2232,
                "to": 2233,
                "label": "CASE"
            },
            {
                "from": 2233,
                "to": 2234,
                "label": "PARALLEL"
            },
            {
                "from": 2233,
                "to": 2235,
                "label": "PARALLEL"
            },
            {
                "from": 2234,
                "to": 2236,
                "label": "EVAL with clause\naddz(zero(X631), zero(X632), zero(X633)) :- addz(X631, X632, X633).\nand substitutionX631 -> T483,\nT463 -> zero(T483),\nT464 -> T484,\nX632 -> T484,\nX633 -> T482,\nT462 -> zero(T482),\nT480 -> T483,\nT481 -> T484"
            },
            {
                "from": 2234,
                "to": 2237,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2235,
                "to": 3791,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 2236,
                "to": 2238,
                "label": "CASE"
            },
            {
                "from": 2238,
                "to": 2239,
                "label": "PARALLEL"
            },
            {
                "from": 2238,
                "to": 2240,
                "label": "PARALLEL"
            },
            {
                "from": 2239,
                "to": 2241,
                "label": "EVAL with clause\naddz(zero(X649), zero(X650), zero(X651)) :- addz(X649, X650, X651).\nand substitutionX649 -> T503,\nT483 -> zero(T503),\nX650 -> T504,\nT484 -> zero(T504),\nX651 -> T502,\nT482 -> zero(T502),\nT500 -> T503,\nT501 -> T504"
            },
            {
                "from": 2239,
                "to": 2242,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2240,
                "to": 2244,
                "label": "PARALLEL"
            },
            {
                "from": 2240,
                "to": 2245,
                "label": "PARALLEL"
            },
            {
                "from": 2241,
                "to": 2236,
                "label": "INSTANCE with matching:\nT483 -> T503\nT484 -> T504\nT482 -> T502"
            },
            {
                "from": 2244,
                "to": 2374,
                "label": "EVAL with clause\naddz(zero(X667), one(X668), one(X669)) :- addx(X667, X668, X669).\nand substitutionX667 -> T523,\nT483 -> zero(T523),\nX668 -> T524,\nT484 -> one(T524),\nX669 -> T522,\nT482 -> one(T522),\nT520 -> T523,\nT521 -> T524"
            },
            {
                "from": 2244,
                "to": 2375,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2245,
                "to": 2422,
                "label": "PARALLEL"
            },
            {
                "from": 2245,
                "to": 2423,
                "label": "PARALLEL"
            },
            {
                "from": 2374,
                "to": 2376,
                "label": "CASE"
            },
            {
                "from": 2376,
                "to": 2379,
                "label": "PARALLEL"
            },
            {
                "from": 2376,
                "to": 2380,
                "label": "PARALLEL"
            },
            {
                "from": 2379,
                "to": 2381,
                "label": "EVAL with clause\naddx(one(X675), b, one(X675)) :- binary(X675).\nand substitutionX675 -> T530,\nT523 -> one(T530),\nT524 -> b,\nT522 -> one(T530)"
            },
            {
                "from": 2379,
                "to": 2382,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2380,
                "to": 2383,
                "label": "PARALLEL"
            },
            {
                "from": 2380,
                "to": 2384,
                "label": "PARALLEL"
            },
            {
                "from": 2381,
                "to": 2213,
                "label": "INSTANCE with matching:\nT439 -> T530"
            },
            {
                "from": 2383,
                "to": 2396,
                "label": "EVAL with clause\naddx(zero(X680), b, zero(X680)) :- binaryZ(X680).\nand substitutionX680 -> T535,\nT523 -> zero(T535),\nT524 -> b,\nT522 -> zero(T535)"
            },
            {
                "from": 2383,
                "to": 2397,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2384,
                "to": 2421,
                "label": "ONLY EVAL with clause\naddx(X691, X692, X693) :- addz(X691, X692, X693).\nand substitutionT523 -> T551,\nX691 -> T551,\nT524 -> T552,\nX692 -> T552,\nT522 -> T550,\nX693 -> T550,\nT548 -> T551,\nT549 -> T552"
            },
            {
                "from": 2396,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T535"
            },
            {
                "from": 2421,
                "to": 2236,
                "label": "INSTANCE with matching:\nT483 -> T551\nT484 -> T552\nT482 -> T550"
            },
            {
                "from": 2422,
                "to": 2424,
                "label": "EVAL with clause\naddz(one(X709), zero(X710), one(X711)) :- addy(X709, X710, X711).\nand substitutionX709 -> T571,\nT483 -> one(T571),\nX710 -> T572,\nT484 -> zero(T572),\nX711 -> T570,\nT482 -> one(T570),\nT568 -> T571,\nT569 -> T572"
            },
            {
                "from": 2422,
                "to": 2425,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2423,
                "to": 2436,
                "label": "EVAL with clause\naddz(one(X745), one(X746), zero(X747)) :- addc(X745, X746, X747).\nand substitutionX745 -> T613,\nT483 -> one(T613),\nX746 -> T614,\nT484 -> one(T614),\nX747 -> T612,\nT482 -> zero(T612),\nT610 -> T613,\nT611 -> T614"
            },
            {
                "from": 2423,
                "to": 2437,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2424,
                "to": 2426,
                "label": "CASE"
            },
            {
                "from": 2426,
                "to": 2427,
                "label": "PARALLEL"
            },
            {
                "from": 2426,
                "to": 2428,
                "label": "PARALLEL"
            },
            {
                "from": 2427,
                "to": 2429,
                "label": "EVAL with clause\naddy(b, one(X717), one(X717)) :- binary(X717).\nand substitutionT571 -> b,\nX717 -> T578,\nT572 -> one(T578),\nT570 -> one(T578)"
            },
            {
                "from": 2427,
                "to": 2430,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2428,
                "to": 2431,
                "label": "PARALLEL"
            },
            {
                "from": 2428,
                "to": 2432,
                "label": "PARALLEL"
            },
            {
                "from": 2429,
                "to": 2213,
                "label": "INSTANCE with matching:\nT439 -> T578"
            },
            {
                "from": 2431,
                "to": 2433,
                "label": "EVAL with clause\naddy(b, zero(X722), zero(X722)) :- binaryZ(X722).\nand substitutionT571 -> b,\nX722 -> T583,\nT572 -> zero(T583),\nT570 -> zero(T583)"
            },
            {
                "from": 2431,
                "to": 2434,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2432,
                "to": 2435,
                "label": "ONLY EVAL with clause\naddy(X733, X734, X735) :- addz(X733, X734, X735).\nand substitutionT571 -> T599,\nX733 -> T599,\nT572 -> T600,\nX734 -> T600,\nT570 -> T598,\nX735 -> T598,\nT596 -> T599,\nT597 -> T600"
            },
            {
                "from": 2433,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T583"
            },
            {
                "from": 2435,
                "to": 2236,
                "label": "INSTANCE with matching:\nT483 -> T599\nT484 -> T600\nT482 -> T598"
            },
            {
                "from": 2436,
                "to": 2438,
                "label": "CASE"
            },
            {
                "from": 2438,
                "to": 2450,
                "label": "PARALLEL"
            },
            {
                "from": 2438,
                "to": 2451,
                "label": "PARALLEL"
            },
            {
                "from": 2450,
                "to": 2454,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT613 -> b,\nT614 -> b,\nT612 -> one(b)"
            },
            {
                "from": 2450,
                "to": 2455,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2451,
                "to": 2457,
                "label": "PARALLEL"
            },
            {
                "from": 2451,
                "to": 2458,
                "label": "PARALLEL"
            },
            {
                "from": 2454,
                "to": 2456,
                "label": "SUCCESS"
            },
            {
                "from": 2457,
                "to": 2459,
                "label": "EVAL with clause\naddc(X756, b, X757) :- succZ(X756, X757).\nand substitutionT613 -> T625,\nX756 -> T625,\nT614 -> b,\nT612 -> T624,\nX757 -> T624,\nT623 -> T625"
            },
            {
                "from": 2457,
                "to": 2460,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2458,
                "to": 2637,
                "label": "PARALLEL"
            },
            {
                "from": 2458,
                "to": 2638,
                "label": "PARALLEL"
            },
            {
                "from": 2459,
                "to": 2461,
                "label": "CASE"
            },
            {
                "from": 2461,
                "to": 2462,
                "label": "PARALLEL"
            },
            {
                "from": 2461,
                "to": 2463,
                "label": "PARALLEL"
            },
            {
                "from": 2462,
                "to": 2464,
                "label": "EVAL with clause\nsuccZ(zero(X763), one(X763)) :- binaryZ(X763).\nand substitutionX763 -> T631,\nT625 -> zero(T631),\nT624 -> one(T631)"
            },
            {
                "from": 2462,
                "to": 2465,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2463,
                "to": 2466,
                "label": "EVAL with clause\nsuccZ(one(X769), zero(X770)) :- succ(X769, X770).\nand substitutionX769 -> T639,\nT625 -> one(T639),\nX770 -> T638,\nT624 -> zero(T638),\nT637 -> T639"
            },
            {
                "from": 2463,
                "to": 2467,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2464,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T631"
            },
            {
                "from": 2466,
                "to": 2523,
                "label": "CASE"
            },
            {
                "from": 2523,
                "to": 2524,
                "label": "PARALLEL"
            },
            {
                "from": 2523,
                "to": 2525,
                "label": "PARALLEL"
            },
            {
                "from": 2524,
                "to": 2526,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT639 -> b,\nT638 -> one(b)"
            },
            {
                "from": 2524,
                "to": 2527,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2525,
                "to": 2529,
                "label": "PARALLEL"
            },
            {
                "from": 2525,
                "to": 2530,
                "label": "PARALLEL"
            },
            {
                "from": 2526,
                "to": 2528,
                "label": "SUCCESS"
            },
            {
                "from": 2529,
                "to": 2573,
                "label": "EVAL with clause\nsucc(zero(X775), one(X775)) :- binaryZ(X775).\nand substitutionX775 -> T644,\nT639 -> zero(T644),\nT638 -> one(T644)"
            },
            {
                "from": 2529,
                "to": 2574,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2530,
                "to": 2632,
                "label": "EVAL with clause\nsucc(one(X781), zero(X782)) :- succ(X781, X782).\nand substitutionX781 -> T652,\nT639 -> one(T652),\nX782 -> T651,\nT638 -> zero(T651),\nT650 -> T652"
            },
            {
                "from": 2530,
                "to": 2633,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2573,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T644"
            },
            {
                "from": 2632,
                "to": 2466,
                "label": "INSTANCE with matching:\nT639 -> T652\nT638 -> T651"
            },
            {
                "from": 2637,
                "to": 2639,
                "label": "EVAL with clause\naddc(b, X791, X792) :- succZ(X791, X792).\nand substitutionT613 -> b,\nT614 -> T663,\nX791 -> T663,\nT612 -> T662,\nX792 -> T662,\nT661 -> T663"
            },
            {
                "from": 2637,
                "to": 2640,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2638,
                "to": 2653,
                "label": "ONLY EVAL with clause\naddc(X803, X804, X805) :- addC(X803, X804, X805).\nand substitutionT613 -> T679,\nX803 -> T679,\nT614 -> T680,\nX804 -> T680,\nT612 -> T678,\nX805 -> T678,\nT676 -> T679,\nT677 -> T680"
            },
            {
                "from": 2639,
                "to": 2459,
                "label": "INSTANCE with matching:\nT625 -> T663\nT624 -> T662"
            },
            {
                "from": 2653,
                "to": 2657,
                "label": "CASE"
            },
            {
                "from": 2657,
                "to": 2660,
                "label": "PARALLEL"
            },
            {
                "from": 2657,
                "to": 2661,
                "label": "PARALLEL"
            },
            {
                "from": 2660,
                "to": 2672,
                "label": "EVAL with clause\naddC(zero(X821), zero(X822), one(X823)) :- addz(X821, X822, X823).\nand substitutionX821 -> T699,\nT679 -> zero(T699),\nX822 -> T700,\nT680 -> zero(T700),\nX823 -> T698,\nT678 -> one(T698),\nT696 -> T699,\nT697 -> T700"
            },
            {
                "from": 2660,
                "to": 2673,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2661,
                "to": 2676,
                "label": "PARALLEL"
            },
            {
                "from": 2661,
                "to": 2677,
                "label": "PARALLEL"
            },
            {
                "from": 2672,
                "to": 2236,
                "label": "INSTANCE with matching:\nT483 -> T699\nT484 -> T700\nT482 -> T698"
            },
            {
                "from": 2676,
                "to": 2678,
                "label": "EVAL with clause\naddC(zero(X839), one(X840), zero(X841)) :- addX(X839, X840, X841).\nand substitutionX839 -> T719,\nT679 -> zero(T719),\nX840 -> T720,\nT680 -> one(T720),\nX841 -> T718,\nT678 -> zero(T718),\nT716 -> T719,\nT717 -> T720"
            },
            {
                "from": 2676,
                "to": 2679,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2677,
                "to": 2696,
                "label": "PARALLEL"
            },
            {
                "from": 2677,
                "to": 2697,
                "label": "PARALLEL"
            },
            {
                "from": 2678,
                "to": 2680,
                "label": "CASE"
            },
            {
                "from": 2680,
                "to": 2681,
                "label": "PARALLEL"
            },
            {
                "from": 2680,
                "to": 2682,
                "label": "PARALLEL"
            },
            {
                "from": 2681,
                "to": 2683,
                "label": "EVAL with clause\naddX(zero(X847), b, one(X847)) :- binaryZ(X847).\nand substitutionX847 -> T726,\nT719 -> zero(T726),\nT720 -> b,\nT718 -> one(T726)"
            },
            {
                "from": 2681,
                "to": 2684,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2682,
                "to": 2691,
                "label": "PARALLEL"
            },
            {
                "from": 2682,
                "to": 2692,
                "label": "PARALLEL"
            },
            {
                "from": 2683,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T726"
            },
            {
                "from": 2691,
                "to": 2693,
                "label": "EVAL with clause\naddX(one(X857), b, zero(X858)) :- succ(X857, X858).\nand substitutionX857 -> T738,\nT719 -> one(T738),\nT720 -> b,\nX858 -> T737,\nT718 -> zero(T737),\nT736 -> T738"
            },
            {
                "from": 2691,
                "to": 2694,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2692,
                "to": 2695,
                "label": "ONLY EVAL with clause\naddX(X868, X869, X870) :- addC(X868, X869, X870).\nand substitutionT719 -> T753,\nX868 -> T753,\nT720 -> T754,\nX869 -> T754,\nT718 -> T752,\nX870 -> T752,\nT750 -> T753,\nT751 -> T754"
            },
            {
                "from": 2693,
                "to": 2466,
                "label": "INSTANCE with matching:\nT639 -> T738\nT638 -> T737"
            },
            {
                "from": 2695,
                "to": 2653,
                "label": "INSTANCE with matching:\nT679 -> T753\nT680 -> T754\nT678 -> T752"
            },
            {
                "from": 2696,
                "to": 2698,
                "label": "EVAL with clause\naddC(one(X886), zero(X887), zero(X888)) :- addY(X886, X887, X888).\nand substitutionX886 -> T773,\nT679 -> one(T773),\nX887 -> T774,\nT680 -> zero(T774),\nX888 -> T772,\nT678 -> zero(T772),\nT770 -> T773,\nT771 -> T774"
            },
            {
                "from": 2696,
                "to": 2699,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2697,
                "to": 3784,
                "label": "EVAL with clause\naddC(one(X927), one(X928), one(X929)) :- addc(X927, X928, X929).\nand substitutionX927 -> T821,\nT679 -> one(T821),\nX928 -> T822,\nT680 -> one(T822),\nX929 -> T820,\nT678 -> one(T820),\nT818 -> T821,\nT819 -> T822"
            },
            {
                "from": 2697,
                "to": 3790,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2698,
                "to": 2700,
                "label": "CASE"
            },
            {
                "from": 2700,
                "to": 2701,
                "label": "PARALLEL"
            },
            {
                "from": 2700,
                "to": 2702,
                "label": "PARALLEL"
            },
            {
                "from": 2701,
                "to": 2703,
                "label": "EVAL with clause\naddY(b, zero(X894), one(X894)) :- binaryZ(X894).\nand substitutionT773 -> b,\nX894 -> T780,\nT774 -> zero(T780),\nT772 -> one(T780)"
            },
            {
                "from": 2701,
                "to": 2704,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2702,
                "to": 2705,
                "label": "PARALLEL"
            },
            {
                "from": 2702,
                "to": 2706,
                "label": "PARALLEL"
            },
            {
                "from": 2703,
                "to": 2203,
                "label": "INSTANCE with matching:\nT429 -> T780"
            },
            {
                "from": 2705,
                "to": 2707,
                "label": "EVAL with clause\naddY(b, one(X904), zero(X905)) :- succ(X904, X905).\nand substitutionT773 -> b,\nX904 -> T792,\nT774 -> one(T792),\nX905 -> T791,\nT772 -> zero(T791),\nT790 -> T792"
            },
            {
                "from": 2705,
                "to": 2708,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2706,
                "to": 3225,
                "label": "ONLY EVAL with clause\naddY(X915, X916, X917) :- addC(X915, X916, X917).\nand substitutionT773 -> T807,\nX915 -> T807,\nT774 -> T808,\nX916 -> T808,\nT772 -> T806,\nX917 -> T806,\nT804 -> T807,\nT805 -> T808"
            },
            {
                "from": 2707,
                "to": 2466,
                "label": "INSTANCE with matching:\nT639 -> T792\nT638 -> T791"
            },
            {
                "from": 3225,
                "to": 2653,
                "label": "INSTANCE with matching:\nT679 -> T807\nT680 -> T808\nT678 -> T806"
            },
            {
                "from": 3784,
                "to": 2436,
                "label": "INSTANCE with matching:\nT613 -> T821\nT614 -> T822\nT612 -> T820"
            },
            {
                "from": 3791,
                "to": 3794,
                "label": "PARALLEL"
            },
            {
                "from": 3791,
                "to": 3795,
                "label": "PARALLEL"
            },
            {
                "from": 3794,
                "to": 3868,
                "label": "EVAL with clause\naddz(one(X945), zero(X946), one(X947)) :- addy(X945, X946, X947).\nand substitutionX945 -> T839,\nT463 -> one(T839),\nT464 -> T840,\nX946 -> T840,\nX947 -> T838,\nT462 -> one(T838),\nT836 -> T839,\nT837 -> T840"
            },
            {
                "from": 3794,
                "to": 3871,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 3795,
                "to": 3888,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 3868,
                "to": 2424,
                "label": "INSTANCE with matching:\nT571 -> T839\nT572 -> T840\nT570 -> T838"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(160)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f11_in(T8) -> f11_out1(one(b), T8)
   f11_in(zero(T23)) -> U1(f11_in(T23), zero(T23))
   U1(f11_out1(T24, T25), zero(T23)) -> f11_out1(zero(T24), T25)
   f11_in(T36) -> U2(f1038_in(T36), T36)
   U2(f1038_out1(T37, T38, X33), T36) -> f11_out1(one(T37), T38)
   f1086_in -> f1086_out1(one(b))
   f1086_in -> U3(f1086_in)
   U3(f1086_out1(T60)) -> f1086_out1(zero(T60))
   f1086_in -> U4(f1321_in)
   U4(f1321_out1(T70, T71, X77, X78)) -> f1086_out1(one(T70))
   f1335_in -> U5(f1335_in)
   U5(f1335_out1(T102)) -> f1335_out1(zero(T102))
   f1335_in -> U6(f1341_in)
   U6(f1341_out1(T107)) -> f1335_out1(one(T107))
   f1341_in -> f1341_out1(b)
   f1341_in -> U7(f1335_in)
   U7(f1335_out1(T113)) -> f1341_out1(zero(T113))
   f1341_in -> U8(f1341_in)
   U8(f1341_out1(T118)) -> f1341_out1(one(T118))
   f1360_in -> U9(f1360_in)
   U9(f1360_out1(T157, T158, X180)) -> f1360_out1(zero(T157), zero(T158), zero(X180))
   f1360_in -> U10(f1341_in)
   U10(f1341_out1(T179)) -> f1360_out1(zero(one(T179)), one(b), one(one(T179)))
   f1360_in -> U11(f1335_in)
   U11(f1335_out1(T185)) -> f1360_out1(zero(zero(T185)), one(b), one(zero(T185)))
   f1360_in -> U12(f1360_in)
   U12(f1360_out1(T197, T198, X232)) -> f1360_out1(zero(T197), one(T198), one(X232))
   f1360_in -> U13(f1802_in)
   U13(f1802_out1(T211, T212, X256)) -> f1360_out1(one(T211), zero(T212), one(X256))
   f1360_in -> U14(f2034_in)
   U14(f2034_out1(T247, T248, X300)) -> f1360_out1(one(T247), one(T248), zero(X300))
   f2093_in -> f2093_out1(b, one(b))
   f2093_in -> U15(f1335_in)
   U15(f1335_out1(T272)) -> f2093_out1(zero(T272), one(T272))
   f2093_in -> U16(f2093_in)
   U16(f2093_out1(T277, X346)) -> f2093_out1(one(T277), zero(X346))
   f2044_in -> U17(f1335_in)
   U17(f1335_out1(T261)) -> f2044_out1(zero(T261), one(T261))
   f2044_in -> U18(f2093_in)
   U18(f2093_out1(T266, X331)) -> f2044_out1(one(T266), zero(X331))
   f2134_in -> U19(f1360_in)
   U19(f1360_out1(T309, T310, X402)) -> f2134_out1(zero(T309), zero(T310), one(X402))
   f2134_in -> U20(f1335_in)
   U20(f1335_out1(T331)) -> f2134_out1(zero(zero(T331)), one(b), zero(one(T331)))
   f2134_in -> U21(f2093_in)
   U21(f2093_out1(T338, X448)) -> f2134_out1(zero(one(T338)), one(b), zero(zero(X448)))
   f2134_in -> U22(f2134_in)
   U22(f2134_out1(T349, T350, X464)) -> f2134_out1(zero(T349), one(T350), zero(X464))
   f2134_in -> U23(f1335_in)
   U23(f1335_out1(T371)) -> f2134_out1(one(b), zero(zero(T371)), zero(one(T371)))
   f2134_in -> U24(f2093_in)
   U24(f2093_out1(T378, X510)) -> f2134_out1(one(b), zero(one(T378)), zero(zero(X510)))
   f2134_in -> U25(f2134_in)
   U25(f2134_out1(T389, T390, X526)) -> f2134_out1(one(T389), zero(T390), zero(X526))
   f2134_in -> U26(f2034_in)
   U26(f2034_out1(T399, T400, X542)) -> f2134_out1(one(T399), one(T400), one(X542))
   f2034_in -> f2034_out1(b, b, one(b))
   f2034_in -> U27(f2044_in)
   U27(f2044_out1(T254, X315)) -> f2034_out1(T254, b, X315)
   f2034_in -> U28(f2044_in)
   U28(f2044_out1(T283, X361)) -> f2034_out1(b, T283, X361)
   f2034_in -> U29(f2134_in)
   U29(f2134_out1(T295, T296, X378)) -> f2034_out1(T295, T296, X378)
   f1802_in -> U30(f1341_in)
   U30(f1341_out1(T219)) -> f1802_out1(b, one(T219), one(T219))
   f1802_in -> U31(f1335_in)
   U31(f1335_out1(T225)) -> f1802_out1(b, zero(T225), zero(T225))
   f1802_in -> U32(f1360_in)
   U32(f1360_out1(T237, T238, X284)) -> f1802_out1(T237, T238, X284)
   f2203_in(zero(T435)) -> U33(f2203_in(T435), zero(T435))
   U33(f2203_out1, zero(T435)) -> f2203_out1
   f2203_in(one(T439)) -> U34(f2213_in(T439), one(T439))
   U34(f2213_out1, one(T439)) -> f2203_out1
   f2213_in(b) -> f2213_out1
   f2213_in(zero(T444)) -> U35(f2203_in(T444), zero(T444))
   U35(f2203_out1, zero(T444)) -> f2213_out1
   f2213_in(one(T448)) -> U36(f2213_in(T448), one(T448))
   U36(f2213_out1, one(T448)) -> f2213_out1
   f2236_in(zero(T502)) -> U37(f2236_in(T502), zero(T502))
   U37(f2236_out1(T503, T504), zero(T502)) -> f2236_out1(zero(T503), zero(T504))
   f2236_in(one(one(T530))) -> U38(f2213_in(T530), one(one(T530)))
   U38(f2213_out1, one(one(T530))) -> f2236_out1(zero(one(T530)), one(b))
   f2236_in(one(zero(T535))) -> U39(f2203_in(T535), one(zero(T535)))
   U39(f2203_out1, one(zero(T535))) -> f2236_out1(zero(zero(T535)), one(b))
   f2236_in(one(T550)) -> U40(f2236_in(T550), one(T550))
   U40(f2236_out1(T551, T552), one(T550)) -> f2236_out1(zero(T551), one(T552))
   f2236_in(one(T570)) -> U41(f2424_in(T570), one(T570))
   U41(f2424_out1(T571, T572), one(T570)) -> f2236_out1(one(T571), zero(T572))
   f2236_in(zero(T612)) -> U42(f2436_in(T612), zero(T612))
   U42(f2436_out1(T613, T614), zero(T612)) -> f2236_out1(one(T613), one(T614))
   f2466_in(one(b)) -> f2466_out1(b)
   f2466_in(one(T644)) -> U43(f2203_in(T644), one(T644))
   U43(f2203_out1, one(T644)) -> f2466_out1(zero(T644))
   f2466_in(zero(T651)) -> U44(f2466_in(T651), zero(T651))
   U44(f2466_out1(T652), zero(T651)) -> f2466_out1(one(T652))
   f2459_in(one(T631)) -> U45(f2203_in(T631), one(T631))
   U45(f2203_out1, one(T631)) -> f2459_out1(zero(T631))
   f2459_in(zero(T638)) -> U46(f2466_in(T638), zero(T638))
   U46(f2466_out1(T639), zero(T638)) -> f2459_out1(one(T639))
   f2653_in(one(T698)) -> U47(f2236_in(T698), one(T698))
   U47(f2236_out1(T699, T700), one(T698)) -> f2653_out1(zero(T699), zero(T700))
   f2653_in(zero(one(T726))) -> U48(f2203_in(T726), zero(one(T726)))
   U48(f2203_out1, zero(one(T726))) -> f2653_out1(zero(zero(T726)), one(b))
   f2653_in(zero(zero(T737))) -> U49(f2466_in(T737), zero(zero(T737)))
   U49(f2466_out1(T738), zero(zero(T737))) -> f2653_out1(zero(one(T738)), one(b))
   f2653_in(zero(T752)) -> U50(f2653_in(T752), zero(T752))
   U50(f2653_out1(T753, T754), zero(T752)) -> f2653_out1(zero(T753), one(T754))
   f2653_in(zero(one(T780))) -> U51(f2203_in(T780), zero(one(T780)))
   U51(f2203_out1, zero(one(T780))) -> f2653_out1(one(b), zero(zero(T780)))
   f2653_in(zero(zero(T791))) -> U52(f2466_in(T791), zero(zero(T791)))
   U52(f2466_out1(T792), zero(zero(T791))) -> f2653_out1(one(b), zero(one(T792)))
   f2653_in(zero(T806)) -> U53(f2653_in(T806), zero(T806))
   U53(f2653_out1(T807, T808), zero(T806)) -> f2653_out1(one(T807), zero(T808))
   f2653_in(one(T820)) -> U54(f2436_in(T820), one(T820))
   U54(f2436_out1(T821, T822), one(T820)) -> f2653_out1(one(T821), one(T822))
   f2436_in(one(b)) -> f2436_out1(b, b)
   f2436_in(T624) -> U55(f2459_in(T624), T624)
   U55(f2459_out1(T625), T624) -> f2436_out1(T625, b)
   f2436_in(T662) -> U56(f2459_in(T662), T662)
   U56(f2459_out1(T663), T662) -> f2436_out1(b, T663)
   f2436_in(T678) -> U57(f2653_in(T678), T678)
   U57(f2653_out1(T679, T680), T678) -> f2436_out1(T679, T680)
   f2424_in(one(T578)) -> U58(f2213_in(T578), one(T578))
   U58(f2213_out1, one(T578)) -> f2424_out1(b, one(T578))
   f2424_in(zero(T583)) -> U59(f2203_in(T583), zero(T583))
   U59(f2203_out1, zero(T583)) -> f2424_out1(b, zero(T583))
   f2424_in(T598) -> U60(f2236_in(T598), T598)
   U60(f2236_out1(T599, T600), T598) -> f2424_out1(T599, T600)
   f1089_in(zero(T429)) -> U61(f2203_in(T429), zero(T429))
   U61(f2203_out1, zero(T429)) -> f1089_out1(b, T429)
   f1089_in(zero(T482)) -> U62(f2236_in(T482), zero(T482))
   U62(f2236_out1(T483, T484), zero(T482)) -> f1089_out1(zero(T483), T484)
   f1089_in(one(T838)) -> U63(f2424_in(T838), one(T838))
   U63(f2424_out1(T839, T840), one(T838)) -> f1089_out1(one(T839), T840)
   f1324_in -> U64(f1335_in)
   U64(f1335_out1(T95)) -> f1324_out1(b, T95, zero(T95))
   f1324_in -> U65(f1360_in)
   U65(f1360_out1(T143, T144, X156)) -> f1324_out1(zero(T143), T144, zero(X156))
   f1324_in -> U66(f1802_in)
   U66(f1802_out1(T412, T413, X565)) -> f1324_out1(one(T412), T413, one(X565))
   f1038_in(T36) -> U67(f1086_in, T36)
   U67(f1086_out1(T37), T36) -> U68(f1089_in(T36), T36, T37)
   U68(f1089_out1(T42, T41), T36, T37) -> f1038_out1(T37, T42, T41)
   f1321_in -> U69(f1086_in)
   U69(f1086_out1(T70)) -> U70(f1324_in, T70)
   U70(f1324_out1(T75, T74, X78), T70) -> f1321_out1(T70, T75, T74, X78)

Q is empty.

----------------------------------------

(161) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(add (b) (b) (b))",
                null
            ],
            [
                "(add X (b) X)",
                "(binaryZ X)"
            ],
            [
                "(add (b) Y Y)",
                "(binaryZ Y)"
            ],
            [
                "(add X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addx (one X) (b) (one X))",
                "(binary X)"
            ],
            [
                "(addx (zero X) (b) (zero X))",
                "(binaryZ X)"
            ],
            [
                "(addx X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addy (b) (one Y) (one Y))",
                "(binary Y)"
            ],
            [
                "(addy (b) (zero Y) (zero Y))",
                "(binaryZ Y)"
            ],
            [
                "(addy X Y Z)",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (zero Y) (zero Z))",
                "(addz X Y Z)"
            ],
            [
                "(addz (zero X) (one Y) (one Z))",
                "(addx X Y Z)"
            ],
            [
                "(addz (one X) (zero Y) (one Z))",
                "(addy X Y Z)"
            ],
            [
                "(addz (one X) (one Y) (zero Z))",
                "(addc X Y Z)"
            ],
            [
                "(addc (b) (b) (one (b)))",
                null
            ],
            [
                "(addc X (b) Z)",
                "(succZ X Z)"
            ],
            [
                "(addc (b) Y Z)",
                "(succZ Y Z)"
            ],
            [
                "(addc X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addX (zero X) (b) (one X))",
                "(binaryZ X)"
            ],
            [
                "(addX (one X) (b) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(addX X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addY (b) (zero Y) (one Y))",
                "(binaryZ Y)"
            ],
            [
                "(addY (b) (one Y) (zero Z))",
                "(succ Y Z)"
            ],
            [
                "(addY X Y Z)",
                "(addC X Y Z)"
            ],
            [
                "(addC (zero X) (zero Y) (one Z))",
                "(addz X Y Z)"
            ],
            [
                "(addC (zero X) (one Y) (zero Z))",
                "(addX X Y Z)"
            ],
            [
                "(addC (one X) (zero Y) (zero Z))",
                "(addY X Y Z)"
            ],
            [
                "(addC (one X) (one Y) (one Z))",
                "(addc X Y Z)"
            ],
            [
                "(binary (b))",
                null
            ],
            [
                "(binary (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binary (one X))",
                "(binary X)"
            ],
            [
                "(binaryZ (zero X))",
                "(binaryZ X)"
            ],
            [
                "(binaryZ (one X))",
                "(binary X)"
            ],
            [
                "(succ (b) (one (b)))",
                null
            ],
            [
                "(succ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(succZ (zero X) (one X))",
                "(binaryZ X)"
            ],
            [
                "(succZ (one X) (zero Z))",
                "(succ X Z)"
            ],
            [
                "(times (one (b)) X X)",
                null
            ],
            [
                "(times (zero R) S (zero RS))",
                "(times R S RS)"
            ],
            [
                "(times (one R) S RSS)",
                "(',' (times R S RS) (add S (zero RS) RSS))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "4172": {
                "goal": [{
                    "clause": 25,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4173": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1220": {
                "goal": [{
                    "clause": 38,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1462": {
                "goal": [{
                    "clause": 32,
                    "scope": 5,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1583": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "1461": {
                "goal": [{
                    "clause": 31,
                    "scope": 5,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1582": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2671": {
                "goal": [{
                    "clause": 35,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1581": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2670": {
                "goal": [{
                    "clause": 34,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1580": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "4170": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T699 T700 T698)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T698"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4171": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2669": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1458": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 5,
                        "term": "(binaryZ T95)"
                    },
                    {
                        "clause": 32,
                        "scope": 5,
                        "term": "(binaryZ T95)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1579": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2668": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1457": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1578": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2667": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1577": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 11,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2666": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 35,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1576": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2665": {
                "goal": [{
                    "clause": 33,
                    "scope": 27,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1454": {
                "goal": [{
                    "clause": 32,
                    "scope": 4,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1575": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2664": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 34,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    },
                    {
                        "clause": 35,
                        "scope": 27,
                        "term": "(succ T639 T638)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1453": {
                "goal": [{
                    "clause": 31,
                    "scope": 4,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1574": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2663": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1452": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 4,
                        "term": "(binaryZ (zero T84))"
                    },
                    {
                        "clause": 32,
                        "scope": 4,
                        "term": "(binaryZ (zero T84))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1573": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T118)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2662": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T639 T638)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T638"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1594": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T179)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2441": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 11,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1472": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T102)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1593": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2440": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1592": {
                "goal": [{
                    "clause": 4,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "1591": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(addx T171 T172 X204)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "1590": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1226": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1589": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": 38,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1225": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1588": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    },
                    {
                        "clause": 40,
                        "scope": 1,
                        "term": "(times T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1587": {
                "goal": [{
                    "clause": 11,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "1586": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2675": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1222": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1585": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T157 T158 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "2674": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T644)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T644"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1221": {
                "goal": [
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1584": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 12,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    },
                    {
                        "clause": 13,
                        "scope": 8,
                        "term": "(addz T143 T144 X156)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2439": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2690": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2449": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2206": {
                "goal": [{
                    "clause": 13,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2448": {
                "goal": [{
                    "clause": 11,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2205": {
                "goal": [{
                    "clause": 12,
                    "scope": 7,
                    "term": "(addz T129 (zero T130) X132)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2689": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T663 T662)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T662"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2688": {
                "goal": [{
                    "clause": 17,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2445": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2687": {
                "goal": [{
                    "clause": 16,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1597": {
                "goal": [{
                    "clause": 6,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2202": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    },
                    {
                        "clause": 13,
                        "scope": 7,
                        "term": "(addz T129 (zero T130) X132)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X132"],
                    "exprvars": []
                }
            },
            "2444": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T503 T504 T502)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T502"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2686": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1475": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1596": {
                "goal": [{
                    "clause": 5,
                    "scope": 9,
                    "term": "(addx T171 T172 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "2443": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 12,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    },
                    {
                        "clause": 13,
                        "scope": 22,
                        "term": "(addz T483 T484 T482)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2685": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T652 T651)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T651"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1595": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2442": {
                "goal": [{
                    "clause": 10,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3792": {
                "goal": [{
                    "clause": 24,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3793": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2582": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2581": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1249": {
                "goal": [{
                    "clause": 40,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1248": {
                "goal": [{
                    "clause": 39,
                    "scope": 2,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "2212": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2211": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T412 T413 X565)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X565"],
                    "exprvars": []
                }
            },
            "1804": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T197 T198 X232)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X232"],
                    "exprvars": []
                }
            },
            "2593": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2592": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T535)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T535"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2591": {
                "goal": [{
                    "clause": 6,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2590": {
                "goal": [{
                    "clause": 5,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1811": {
                "goal": [{
                    "clause": 13,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "1810": {
                "goal": [{
                    "clause": 12,
                    "scope": 8,
                    "term": "(addz T143 T144 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "2589": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2588": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T530)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T530"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2587": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 6,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2586": {
                "goal": [{
                    "clause": 4,
                    "scope": 23,
                    "term": "(addx T523 T524 T522)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2585": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 5,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    },
                    {
                        "clause": 6,
                        "scope": 23,
                        "term": "(addx T523 T524 T522)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T522"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1819": {
                "goal": [{
                    "clause": 7,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1818": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1815": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1814": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "2122": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T371)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2243": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1822": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2119": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 23,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1821": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T219)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2118": {
                "goal": [{
                    "clause": 21,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1820": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    },
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(addy T211 T212 X256)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "2117": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 22,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    },
                    {
                        "clause": 23,
                        "scope": 16,
                        "term": "(addY T363 T364 X488)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1829": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1828": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "1827": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T237 T238 X284)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X284"],
                    "exprvars": []
                }
            },
            "1826": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1825": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T225)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1824": {
                "goal": [{
                    "clause": 9,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1823": {
                "goal": [{
                    "clause": 8,
                    "scope": 10,
                    "term": "(addy T211 T212 X256)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X256"],
                    "exprvars": []
                }
            },
            "1286": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2133": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1285": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T60 T61 X62)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X62"],
                    "exprvars": []
                }
            },
            "2132": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T378 X510)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X510"],
                    "exprvars": []
                }
            },
            "2253": {
                "goal": [{
                    "clause": 3,
                    "scope": 17,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2252": {
                "goal": [{
                    "clause": 2,
                    "scope": 17,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2251": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2250": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "174": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T24 T25 T23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T23"],
                    "free": [],
                    "exprvars": []
                }
            },
            "175": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "176": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T37 T38 X33) (add T38 (zero X33) T36))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "1833": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "177": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1832": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2129": {
                "goal": [{
                    "clause": 23,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "1831": {
                "goal": [{
                    "clause": 14,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2128": {
                "goal": [{
                    "clause": 22,
                    "scope": 16,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2249": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 1,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 2,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    },
                    {
                        "clause": 3,
                        "scope": 17,
                        "term": "(add T42 (zero T41) T36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1830": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 15,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2123": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1839": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1838": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1837": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    },
                    {
                        "clause": 17,
                        "scope": 11,
                        "term": "(addc T247 T248 X300)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "1836": {
                "goal": [{
                    "clause": 15,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "1835": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1834": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2265": {
                "goal": [{
                    "clause": 32,
                    "scope": 18,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T37 T38 X33)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "2143": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T389 T390 X526)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X526"],
                    "exprvars": []
                }
            },
            "2264": {
                "goal": [{
                    "clause": 31,
                    "scope": 18,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "181": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T42 (zero T41) T36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2262": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 18,
                        "term": "(binaryZ (zero T421))"
                    },
                    {
                        "clause": 32,
                        "scope": 18,
                        "term": "(binaryZ (zero T421))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1290": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1844": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1843": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T261)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1842": {
                "goal": [{
                    "clause": 37,
                    "scope": 12,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "1841": {
                "goal": [{
                    "clause": 36,
                    "scope": 12,
                    "term": "(succZ T254 X315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2259": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1840": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 12,
                        "term": "(succZ T254 X315)"
                    },
                    {
                        "clause": 37,
                        "scope": 12,
                        "term": "(succZ T254 X315)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X315"],
                    "exprvars": []
                }
            },
            "2258": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T421))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T421"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1289": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (times T70 T71 X77) (add T71 (zero X77) X78))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X78",
                        "X77"
                    ],
                    "exprvars": []
                }
            },
            "1849": {
                "goal": [
                    {
                        "clause": 34,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 35,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "1848": {
                "goal": [{
                    "clause": 33,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "1847": {
                "goal": [
                    {
                        "clause": 33,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 34,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    },
                    {
                        "clause": 35,
                        "scope": 13,
                        "term": "(succ T266 X331)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "1846": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1845": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "2275": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2274": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T435)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T435"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2271": {
                "goal": [{
                    "clause": 32,
                    "scope": 19,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2270": {
                "goal": [{
                    "clause": 31,
                    "scope": 19,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1855": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T272)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1854": {
                "goal": [{
                    "clause": 35,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "1853": {
                "goal": [{
                    "clause": 34,
                    "scope": 13,
                    "term": "(succ T266 X331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X331"],
                    "exprvars": []
                }
            },
            "1852": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1851": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2269": {
                "goal": [
                    {
                        "clause": 31,
                        "scope": 19,
                        "term": "(binaryZ T429)"
                    },
                    {
                        "clause": 32,
                        "scope": 19,
                        "term": "(binaryZ T429)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1850": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2268": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T429)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T429"],
                    "free": [],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "93": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "94": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "95": {
                "goal": [{
                    "clause": 39,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1859": {
                "goal": [{
                    "clause": 16,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "96": {
                "goal": [{
                    "clause": 40,
                    "scope": 1,
                    "term": "(times T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1858": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1857": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T277 X346)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X346"],
                    "exprvars": []
                }
            },
            "1856": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1860": {
                "goal": [{
                    "clause": 17,
                    "scope": 11,
                    "term": "(addc T247 T248 X300)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X300"],
                    "exprvars": []
                }
            },
            "2399": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2398": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1509": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1505": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2052": {
                "goal": [
                    {
                        "clause": 25,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2051": {
                "goal": [{
                    "clause": 24,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2050": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 25,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "1876": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1875": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T283 X361)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X361"],
                    "exprvars": []
                }
            },
            "2169": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2047": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2168": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T399 T400 X542)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X542"],
                    "exprvars": []
                }
            },
            "2607": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T551 T552 T550)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T550"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4241": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4242": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4243": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 19,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 20,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4244": {
                "goal": [{
                    "clause": 18,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4245": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    },
                    {
                        "clause": 20,
                        "scope": 29,
                        "term": "(addX T719 T720 T718)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1524": {
                "goal": [
                    {
                        "clause": 28,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 29,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 30,
                        "scope": 6,
                        "term": "(binary T107)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2611": {
                "goal": [{
                    "clause": 13,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2610": {
                "goal": [{
                    "clause": 12,
                    "scope": 22,
                    "term": "(addz T483 T484 T482)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T482"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2619": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1528": {
                "goal": [{
                    "clause": 28,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2070": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T309 T310 X402)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X402"],
                    "exprvars": []
                }
            },
            "4250": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T738 T737)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T737"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4251": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4252": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T753 T754 T752)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T752"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4253": {
                "goal": [{
                    "clause": 26,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4254": {
                "goal": [{
                    "clause": 27,
                    "scope": 28,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4255": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4256": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2078": {
                "goal": [
                    {
                        "clause": 19,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 20,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2077": {
                "goal": [{
                    "clause": 18,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2076": {
                "goal": [
                    {
                        "clause": 18,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 19,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    },
                    {
                        "clause": 20,
                        "scope": 15,
                        "term": "(addX T323 T324 X426)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2075": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2074": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2073": {
                "goal": [
                    {
                        "clause": 26,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    },
                    {
                        "clause": 27,
                        "scope": 14,
                        "term": "(addC T295 T296 X378)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2072": {
                "goal": [{
                    "clause": 25,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "3161": {
                "goal": [
                    {
                        "clause": 24,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 25,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 26,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    },
                    {
                        "clause": 27,
                        "scope": 28,
                        "term": "(addC T679 T680 T678)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2071": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3160": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T679 T680 T678)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T678"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2625": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2624": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T578)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T578"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2623": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 9,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2622": {
                "goal": [{
                    "clause": 7,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2621": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 8,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    },
                    {
                        "clause": 9,
                        "scope": 24,
                        "term": "(addy T571 T572 T570)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2620": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1530": {
                "goal": [
                    {
                        "clause": 29,
                        "scope": 6,
                        "term": "(binary T107)"
                    },
                    {
                        "clause": 30,
                        "scope": 6,
                        "term": "(binary T107)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4246": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T726)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T726"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4247": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4248": {
                "goal": [{
                    "clause": 19,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4249": {
                "goal": [{
                    "clause": 20,
                    "scope": 29,
                    "term": "(addX T719 T720 T718)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T718"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1538": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2627": {
                "goal": [{
                    "clause": 9,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2626": {
                "goal": [{
                    "clause": 8,
                    "scope": 24,
                    "term": "(addy T571 T572 T570)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T570"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2081": {
                "goal": [{
                    "clause": 19,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "4260": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T780)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T780"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2080": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4261": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4262": {
                "goal": [{
                    "clause": 22,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4263": {
                "goal": [{
                    "clause": 23,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4264": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T792 T791)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T791"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4265": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T807 T808 T806)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T806"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4267": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T821 T822 T820)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T820"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2089": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addY T363 T364 X488)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X488"],
                    "exprvars": []
                }
            },
            "2088": {
                "goal": [{
                    "clause": 27,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2087": {
                "goal": [{
                    "clause": 26,
                    "scope": 14,
                    "term": "(addC T295 T296 X378)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X378"],
                    "exprvars": []
                }
            },
            "2086": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addC T349 T350 X464)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X464"],
                    "exprvars": []
                }
            },
            "2084": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2083": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succ T338 X448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X448"],
                    "exprvars": []
                }
            },
            "2082": {
                "goal": [{
                    "clause": 20,
                    "scope": 15,
                    "term": "(addX T323 T324 X426)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X426"],
                    "exprvars": []
                }
            },
            "2634": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T599 T600 T598)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T598"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1544": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2631": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2630": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T583)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T583"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1540": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2079": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T331)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4257": {
                "goal": [
                    {
                        "clause": 21,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 22,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 23,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4258": {
                "goal": [{
                    "clause": 21,
                    "scope": 30,
                    "term": "(addY T773 T774 T772)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4259": {
                "goal": [
                    {
                        "clause": 22,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    },
                    {
                        "clause": 23,
                        "scope": 30,
                        "term": "(addY T773 T774 T772)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T772"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4271": {
                "goal": [{
                    "clause": 13,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4272": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addy T839 T840 T838)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T838"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2090": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4273": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4274": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1440": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2650": {
                "goal": [
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4270": {
                "goal": [{
                    "clause": 12,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2405": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2647": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1799": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2404": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2646": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1798": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T185)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2403": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2645": {
                "goal": [
                    {
                        "clause": 15,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2402": {
                "goal": [
                    {
                        "clause": 29,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 30,
                        "scope": 20,
                        "term": "(binary T439)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2644": {
                "goal": [{
                    "clause": 14,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1554": {
                "goal": [{
                    "clause": 30,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2401": {
                "goal": [{
                    "clause": 28,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2643": {
                "goal": [
                    {
                        "clause": 14,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 15,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 16,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    },
                    {
                        "clause": 17,
                        "scope": 25,
                        "term": "(addc T613 T614 T612)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1553": {
                "goal": [{
                    "clause": 29,
                    "scope": 6,
                    "term": "(binary T107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2400": {
                "goal": [
                    {
                        "clause": 28,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 29,
                        "scope": 20,
                        "term": "(binary T439)"
                    },
                    {
                        "clause": 30,
                        "scope": 20,
                        "term": "(binary T439)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2642": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2641": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4268": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4269": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2409": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2408": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T444)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T444"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1439": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(times T70 T71 X77)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X77"],
                    "exprvars": []
                }
            },
            "2407": {
                "goal": [{
                    "clause": 30,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2649": {
                "goal": [{
                    "clause": 15,
                    "scope": 25,
                    "term": "(addc T613 T614 T612)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T612"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2406": {
                "goal": [{
                    "clause": 29,
                    "scope": 20,
                    "term": "(binary T439)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T439"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2648": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1451": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1572": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1450": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ (zero T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1570": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T113)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2416": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2658": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binaryZ T631)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T631"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1447": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2415": {
                "goal": [{
                    "clause": 10,
                    "scope": 21,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1446": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(add T75 (zero T74) X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2414": {
                "goal": [
                    {
                        "clause": 10,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 11,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 12,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    },
                    {
                        "clause": 13,
                        "scope": 21,
                        "term": "(addz T463 (zero T464) T462)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2656": {
                "goal": [{
                    "clause": 37,
                    "scope": 26,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1445": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2413": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(addz T463 (zero T464) T462)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T462"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2655": {
                "goal": [{
                    "clause": 36,
                    "scope": 26,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1444": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2412": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2654": {
                "goal": [
                    {
                        "clause": 36,
                        "scope": 26,
                        "term": "(succZ T625 T624)"
                    },
                    {
                        "clause": 37,
                        "scope": 26,
                        "term": "(succZ T625 T624)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1443": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(add T75 (zero T74) X78)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X78"],
                    "exprvars": []
                }
            },
            "2411": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2410": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(binary T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2652": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2651": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(succZ T625 T624)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T624"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1207": {
                "goal": [
                    {
                        "clause": 38,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 39,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    },
                    {
                        "clause": 40,
                        "scope": 2,
                        "term": "(times T37 T38 X33)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "2659": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 3,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 4,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 92,
                "label": "EVAL with clause\ntimes(one(b), X5, X5).\nand substitutionT1 -> one(b),\nT2 -> T8,\nX5 -> T8,\nT3 -> T8"
            },
            {
                "from": 3,
                "to": 93,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4,
                "to": 95,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 96,
                "label": "PARALLEL"
            },
            {
                "from": 92,
                "to": 94,
                "label": "SUCCESS"
            },
            {
                "from": 95,
                "to": 174,
                "label": "EVAL with clause\ntimes(zero(X18), X19, zero(X20)) :- times(X18, X19, X20).\nand substitutionX18 -> T24,\nT1 -> zero(T24),\nT2 -> T25,\nX19 -> T25,\nX20 -> T23,\nT3 -> zero(T23),\nT21 -> T24,\nT22 -> T25"
            },
            {
                "from": 95,
                "to": 175,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 96,
                "to": 176,
                "label": "EVAL with clause\ntimes(one(X30), X31, X32) :- ','(times(X30, X31, X33), add(X31, zero(X33), X32)).\nand substitutionX30 -> T37,\nT1 -> one(T37),\nT2 -> T38,\nX31 -> T38,\nT3 -> T36,\nX32 -> T36,\nT34 -> T37,\nT35 -> T38"
            },
            {
                "from": 96,
                "to": 177,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 174,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T24\nT2 -> T25\nT3 -> T23"
            },
            {
                "from": 176,
                "to": 180,
                "label": "SPLIT 1"
            },
            {
                "from": 176,
                "to": 181,
                "label": "SPLIT 2\nnew knowledge:\nT37 is ground\nreplacements:X33 -> T41,\nT38 -> T42"
            },
            {
                "from": 180,
                "to": 1207,
                "label": "CASE"
            },
            {
                "from": 181,
                "to": 2249,
                "label": "CASE"
            },
            {
                "from": 1207,
                "to": 1220,
                "label": "PARALLEL"
            },
            {
                "from": 1207,
                "to": 1221,
                "label": "PARALLEL"
            },
            {
                "from": 1220,
                "to": 1222,
                "label": "EVAL with clause\ntimes(one(b), X42, X42).\nand substitutionT37 -> one(b),\nT38 -> T49,\nX42 -> T49,\nX33 -> T49"
            },
            {
                "from": 1220,
                "to": 1225,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1221,
                "to": 1248,
                "label": "PARALLEL"
            },
            {
                "from": 1221,
                "to": 1249,
                "label": "PARALLEL"
            },
            {
                "from": 1222,
                "to": 1226,
                "label": "SUCCESS"
            },
            {
                "from": 1248,
                "to": 1285,
                "label": "EVAL with clause\ntimes(zero(X59), X60, zero(X61)) :- times(X59, X60, X61).\nand substitutionX59 -> T60,\nT37 -> zero(T60),\nT38 -> T61,\nX60 -> T61,\nX61 -> X62,\nX33 -> zero(X62),\nT58 -> T60,\nT59 -> T61"
            },
            {
                "from": 1248,
                "to": 1286,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1249,
                "to": 1289,
                "label": "EVAL with clause\ntimes(one(X74), X75, X76) :- ','(times(X74, X75, X77), add(X75, zero(X77), X76)).\nand substitutionX74 -> T70,\nT37 -> one(T70),\nT38 -> T71,\nX75 -> T71,\nX33 -> X78,\nX76 -> X78,\nT68 -> T70,\nT69 -> T71"
            },
            {
                "from": 1249,
                "to": 1290,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1285,
                "to": 180,
                "label": "INSTANCE with matching:\nT37 -> T60\nT38 -> T61\nX33 -> X62"
            },
            {
                "from": 1289,
                "to": 1439,
                "label": "SPLIT 1"
            },
            {
                "from": 1289,
                "to": 1440,
                "label": "SPLIT 2\nnew knowledge:\nT70 is ground\nreplacements:X77 -> T74,\nT71 -> T75"
            },
            {
                "from": 1439,
                "to": 180,
                "label": "INSTANCE with matching:\nT37 -> T70\nT38 -> T71\nX33 -> X77"
            },
            {
                "from": 1440,
                "to": 1443,
                "label": "CASE"
            },
            {
                "from": 1443,
                "to": 1444,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 1444,
                "to": 1445,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 1445,
                "to": 1446,
                "label": "PARALLEL"
            },
            {
                "from": 1445,
                "to": 1447,
                "label": "PARALLEL"
            },
            {
                "from": 1446,
                "to": 1450,
                "label": "EVAL with clause\nadd(b, X88, X88) :- binaryZ(X88).\nand substitutionT75 -> b,\nT74 -> T84,\nX88 -> zero(T84),\nX78 -> zero(T84),\nT83 -> T84"
            },
            {
                "from": 1446,
                "to": 1451,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1447,
                "to": 1576,
                "label": "ONLY EVAL with clause\nadd(X129, X130, X131) :- addz(X129, X130, X131).\nand substitutionT75 -> T129,\nX129 -> T129,\nT74 -> T130,\nX130 -> zero(T130),\nX78 -> X132,\nX131 -> X132,\nT127 -> T129,\nT128 -> T130"
            },
            {
                "from": 1450,
                "to": 1452,
                "label": "CASE"
            },
            {
                "from": 1452,
                "to": 1453,
                "label": "PARALLEL"
            },
            {
                "from": 1452,
                "to": 1454,
                "label": "PARALLEL"
            },
            {
                "from": 1453,
                "to": 1457,
                "label": "ONLY EVAL with clause\nbinaryZ(zero(X96)) :- binaryZ(X96).\nand substitutionT84 -> T95,\nX96 -> T95,\nT94 -> T95"
            },
            {
                "from": 1454,
                "to": 1575,
                "label": "BACKTRACK\nfor clause: binaryZ(one(X)) :- binary(X)because of non-unification"
            },
            {
                "from": 1457,
                "to": 1458,
                "label": "CASE"
            },
            {
                "from": 1458,
                "to": 1461,
                "label": "PARALLEL"
            },
            {
                "from": 1458,
                "to": 1462,
                "label": "PARALLEL"
            },
            {
                "from": 1461,
                "to": 1472,
                "label": "EVAL with clause\nbinaryZ(zero(X102)) :- binaryZ(X102).\nand substitutionX102 -> T102,\nT95 -> zero(T102),\nT101 -> T102"
            },
            {
                "from": 1461,
                "to": 1475,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1462,
                "to": 1505,
                "label": "EVAL with clause\nbinaryZ(one(X106)) :- binary(X106).\nand substitutionX106 -> T107,\nT95 -> one(T107),\nT106 -> T107"
            },
            {
                "from": 1462,
                "to": 1509,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1472,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T102"
            },
            {
                "from": 1505,
                "to": 1524,
                "label": "CASE"
            },
            {
                "from": 1524,
                "to": 1528,
                "label": "PARALLEL"
            },
            {
                "from": 1524,
                "to": 1530,
                "label": "PARALLEL"
            },
            {
                "from": 1528,
                "to": 1538,
                "label": "EVAL with clause\nbinary(b).\nand substitutionT107 -> b"
            },
            {
                "from": 1528,
                "to": 1540,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1530,
                "to": 1553,
                "label": "PARALLEL"
            },
            {
                "from": 1530,
                "to": 1554,
                "label": "PARALLEL"
            },
            {
                "from": 1538,
                "to": 1544,
                "label": "SUCCESS"
            },
            {
                "from": 1553,
                "to": 1570,
                "label": "EVAL with clause\nbinary(zero(X111)) :- binaryZ(X111).\nand substitutionX111 -> T113,\nT107 -> zero(T113),\nT112 -> T113"
            },
            {
                "from": 1553,
                "to": 1572,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1554,
                "to": 1573,
                "label": "EVAL with clause\nbinary(one(X115)) :- binary(X115).\nand substitutionX115 -> T118,\nT107 -> one(T118),\nT117 -> T118"
            },
            {
                "from": 1554,
                "to": 1574,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1570,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T113"
            },
            {
                "from": 1573,
                "to": 1505,
                "label": "INSTANCE with matching:\nT107 -> T118"
            },
            {
                "from": 1576,
                "to": 1577,
                "label": "CASE"
            },
            {
                "from": 1577,
                "to": 1578,
                "label": "PARALLEL"
            },
            {
                "from": 1577,
                "to": 1579,
                "label": "PARALLEL"
            },
            {
                "from": 1578,
                "to": 1580,
                "label": "EVAL with clause\naddz(zero(X153), zero(X154), zero(X155)) :- addz(X153, X154, X155).\nand substitutionX153 -> T143,\nT129 -> zero(T143),\nT130 -> T144,\nX154 -> T144,\nX155 -> X156,\nX132 -> zero(X156),\nT141 -> T143,\nT142 -> T144"
            },
            {
                "from": 1578,
                "to": 1581,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1579,
                "to": 2202,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 1580,
                "to": 1582,
                "label": "CASE"
            },
            {
                "from": 1582,
                "to": 1583,
                "label": "PARALLEL"
            },
            {
                "from": 1582,
                "to": 1584,
                "label": "PARALLEL"
            },
            {
                "from": 1583,
                "to": 1585,
                "label": "EVAL with clause\naddz(zero(X177), zero(X178), zero(X179)) :- addz(X177, X178, X179).\nand substitutionX177 -> T157,\nT143 -> zero(T157),\nX178 -> T158,\nT144 -> zero(T158),\nX179 -> X180,\nX156 -> zero(X180),\nT155 -> T157,\nT156 -> T158"
            },
            {
                "from": 1583,
                "to": 1586,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1584,
                "to": 1587,
                "label": "PARALLEL"
            },
            {
                "from": 1584,
                "to": 1588,
                "label": "PARALLEL"
            },
            {
                "from": 1585,
                "to": 1580,
                "label": "INSTANCE with matching:\nT143 -> T157\nT144 -> T158\nX156 -> X180"
            },
            {
                "from": 1587,
                "to": 1589,
                "label": "EVAL with clause\naddz(zero(X201), one(X202), one(X203)) :- addx(X201, X202, X203).\nand substitutionX201 -> T171,\nT143 -> zero(T171),\nX202 -> T172,\nT144 -> one(T172),\nX203 -> X204,\nX156 -> one(X204),\nT169 -> T171,\nT170 -> T172"
            },
            {
                "from": 1587,
                "to": 1590,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1588,
                "to": 1810,
                "label": "PARALLEL"
            },
            {
                "from": 1588,
                "to": 1811,
                "label": "PARALLEL"
            },
            {
                "from": 1589,
                "to": 1591,
                "label": "CASE"
            },
            {
                "from": 1591,
                "to": 1592,
                "label": "PARALLEL"
            },
            {
                "from": 1591,
                "to": 1593,
                "label": "PARALLEL"
            },
            {
                "from": 1592,
                "to": 1594,
                "label": "EVAL with clause\naddx(one(X210), b, one(X210)) :- binary(X210).\nand substitutionX210 -> T179,\nT171 -> one(T179),\nT172 -> b,\nX204 -> one(T179),\nT178 -> T179"
            },
            {
                "from": 1592,
                "to": 1595,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1593,
                "to": 1596,
                "label": "PARALLEL"
            },
            {
                "from": 1593,
                "to": 1597,
                "label": "PARALLEL"
            },
            {
                "from": 1594,
                "to": 1505,
                "label": "INSTANCE with matching:\nT107 -> T179"
            },
            {
                "from": 1596,
                "to": 1798,
                "label": "EVAL with clause\naddx(zero(X215), b, zero(X215)) :- binaryZ(X215).\nand substitutionX215 -> T185,\nT171 -> zero(T185),\nT172 -> b,\nX204 -> zero(T185),\nT184 -> T185"
            },
            {
                "from": 1596,
                "to": 1799,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1597,
                "to": 1804,
                "label": "ONLY EVAL with clause\naddx(X229, X230, X231) :- addz(X229, X230, X231).\nand substitutionT171 -> T197,\nX229 -> T197,\nT172 -> T198,\nX230 -> T198,\nX204 -> X232,\nX231 -> X232,\nT195 -> T197,\nT196 -> T198"
            },
            {
                "from": 1798,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T185"
            },
            {
                "from": 1804,
                "to": 1580,
                "label": "INSTANCE with matching:\nT143 -> T197\nT144 -> T198\nX156 -> X232"
            },
            {
                "from": 1810,
                "to": 1814,
                "label": "EVAL with clause\naddz(one(X253), zero(X254), one(X255)) :- addy(X253, X254, X255).\nand substitutionX253 -> T211,\nT143 -> one(T211),\nX254 -> T212,\nT144 -> zero(T212),\nX255 -> X256,\nX156 -> one(X256),\nT209 -> T211,\nT210 -> T212"
            },
            {
                "from": 1810,
                "to": 1815,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1811,
                "to": 1828,
                "label": "EVAL with clause\naddz(one(X297), one(X298), zero(X299)) :- addc(X297, X298, X299).\nand substitutionX297 -> T247,\nT143 -> one(T247),\nX298 -> T248,\nT144 -> one(T248),\nX299 -> X300,\nX156 -> zero(X300),\nT245 -> T247,\nT246 -> T248"
            },
            {
                "from": 1811,
                "to": 1829,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1814,
                "to": 1818,
                "label": "CASE"
            },
            {
                "from": 1818,
                "to": 1819,
                "label": "PARALLEL"
            },
            {
                "from": 1818,
                "to": 1820,
                "label": "PARALLEL"
            },
            {
                "from": 1819,
                "to": 1821,
                "label": "EVAL with clause\naddy(b, one(X262), one(X262)) :- binary(X262).\nand substitutionT211 -> b,\nX262 -> T219,\nT212 -> one(T219),\nX256 -> one(T219),\nT218 -> T219"
            },
            {
                "from": 1819,
                "to": 1822,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1820,
                "to": 1823,
                "label": "PARALLEL"
            },
            {
                "from": 1820,
                "to": 1824,
                "label": "PARALLEL"
            },
            {
                "from": 1821,
                "to": 1505,
                "label": "INSTANCE with matching:\nT107 -> T219"
            },
            {
                "from": 1823,
                "to": 1825,
                "label": "EVAL with clause\naddy(b, zero(X267), zero(X267)) :- binaryZ(X267).\nand substitutionT211 -> b,\nX267 -> T225,\nT212 -> zero(T225),\nX256 -> zero(T225),\nT224 -> T225"
            },
            {
                "from": 1823,
                "to": 1826,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1824,
                "to": 1827,
                "label": "ONLY EVAL with clause\naddy(X281, X282, X283) :- addz(X281, X282, X283).\nand substitutionT211 -> T237,\nX281 -> T237,\nT212 -> T238,\nX282 -> T238,\nX256 -> X284,\nX283 -> X284,\nT235 -> T237,\nT236 -> T238"
            },
            {
                "from": 1825,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T225"
            },
            {
                "from": 1827,
                "to": 1580,
                "label": "INSTANCE with matching:\nT143 -> T237\nT144 -> T238\nX156 -> X284"
            },
            {
                "from": 1828,
                "to": 1830,
                "label": "CASE"
            },
            {
                "from": 1830,
                "to": 1831,
                "label": "PARALLEL"
            },
            {
                "from": 1830,
                "to": 1832,
                "label": "PARALLEL"
            },
            {
                "from": 1831,
                "to": 1833,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT247 -> b,\nT248 -> b,\nX300 -> one(b)"
            },
            {
                "from": 1831,
                "to": 1834,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1832,
                "to": 1836,
                "label": "PARALLEL"
            },
            {
                "from": 1832,
                "to": 1837,
                "label": "PARALLEL"
            },
            {
                "from": 1833,
                "to": 1835,
                "label": "SUCCESS"
            },
            {
                "from": 1836,
                "to": 1838,
                "label": "EVAL with clause\naddc(X313, b, X314) :- succZ(X313, X314).\nand substitutionT247 -> T254,\nX313 -> T254,\nT248 -> b,\nX300 -> X315,\nX314 -> X315,\nT253 -> T254"
            },
            {
                "from": 1836,
                "to": 1839,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1837,
                "to": 1859,
                "label": "PARALLEL"
            },
            {
                "from": 1837,
                "to": 1860,
                "label": "PARALLEL"
            },
            {
                "from": 1838,
                "to": 1840,
                "label": "CASE"
            },
            {
                "from": 1840,
                "to": 1841,
                "label": "PARALLEL"
            },
            {
                "from": 1840,
                "to": 1842,
                "label": "PARALLEL"
            },
            {
                "from": 1841,
                "to": 1843,
                "label": "EVAL with clause\nsuccZ(zero(X321), one(X321)) :- binaryZ(X321).\nand substitutionX321 -> T261,\nT254 -> zero(T261),\nX315 -> one(T261),\nT260 -> T261"
            },
            {
                "from": 1841,
                "to": 1844,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1842,
                "to": 1845,
                "label": "EVAL with clause\nsuccZ(one(X329), zero(X330)) :- succ(X329, X330).\nand substitutionX329 -> T266,\nT254 -> one(T266),\nX330 -> X331,\nX315 -> zero(X331),\nT265 -> T266"
            },
            {
                "from": 1842,
                "to": 1846,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1843,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T261"
            },
            {
                "from": 1845,
                "to": 1847,
                "label": "CASE"
            },
            {
                "from": 1847,
                "to": 1848,
                "label": "PARALLEL"
            },
            {
                "from": 1847,
                "to": 1849,
                "label": "PARALLEL"
            },
            {
                "from": 1848,
                "to": 1850,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT266 -> b,\nX331 -> one(b)"
            },
            {
                "from": 1848,
                "to": 1851,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1849,
                "to": 1853,
                "label": "PARALLEL"
            },
            {
                "from": 1849,
                "to": 1854,
                "label": "PARALLEL"
            },
            {
                "from": 1850,
                "to": 1852,
                "label": "SUCCESS"
            },
            {
                "from": 1853,
                "to": 1855,
                "label": "EVAL with clause\nsucc(zero(X336), one(X336)) :- binaryZ(X336).\nand substitutionX336 -> T272,\nT266 -> zero(T272),\nX331 -> one(T272),\nT271 -> T272"
            },
            {
                "from": 1853,
                "to": 1856,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1854,
                "to": 1857,
                "label": "EVAL with clause\nsucc(one(X344), zero(X345)) :- succ(X344, X345).\nand substitutionX344 -> T277,\nT266 -> one(T277),\nX345 -> X346,\nX331 -> zero(X346),\nT276 -> T277"
            },
            {
                "from": 1854,
                "to": 1858,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1855,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T272"
            },
            {
                "from": 1857,
                "to": 1845,
                "label": "INSTANCE with matching:\nT266 -> T277\nX331 -> X346"
            },
            {
                "from": 1859,
                "to": 1875,
                "label": "EVAL with clause\naddc(b, X359, X360) :- succZ(X359, X360).\nand substitutionT247 -> b,\nT248 -> T283,\nX359 -> T283,\nX300 -> X361,\nX360 -> X361,\nT282 -> T283"
            },
            {
                "from": 1859,
                "to": 1876,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1860,
                "to": 2047,
                "label": "ONLY EVAL with clause\naddc(X375, X376, X377) :- addC(X375, X376, X377).\nand substitutionT247 -> T295,\nX375 -> T295,\nT248 -> T296,\nX376 -> T296,\nX300 -> X378,\nX377 -> X378,\nT293 -> T295,\nT294 -> T296"
            },
            {
                "from": 1875,
                "to": 1838,
                "label": "INSTANCE with matching:\nT254 -> T283\nX315 -> X361"
            },
            {
                "from": 2047,
                "to": 2050,
                "label": "CASE"
            },
            {
                "from": 2050,
                "to": 2051,
                "label": "PARALLEL"
            },
            {
                "from": 2050,
                "to": 2052,
                "label": "PARALLEL"
            },
            {
                "from": 2051,
                "to": 2070,
                "label": "EVAL with clause\naddC(zero(X399), zero(X400), one(X401)) :- addz(X399, X400, X401).\nand substitutionX399 -> T309,\nT295 -> zero(T309),\nX400 -> T310,\nT296 -> zero(T310),\nX401 -> X402,\nX378 -> one(X402),\nT307 -> T309,\nT308 -> T310"
            },
            {
                "from": 2051,
                "to": 2071,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2052,
                "to": 2072,
                "label": "PARALLEL"
            },
            {
                "from": 2052,
                "to": 2073,
                "label": "PARALLEL"
            },
            {
                "from": 2070,
                "to": 1580,
                "label": "INSTANCE with matching:\nT143 -> T309\nT144 -> T310\nX156 -> X402"
            },
            {
                "from": 2072,
                "to": 2074,
                "label": "EVAL with clause\naddC(zero(X423), one(X424), zero(X425)) :- addX(X423, X424, X425).\nand substitutionX423 -> T323,\nT295 -> zero(T323),\nX424 -> T324,\nT296 -> one(T324),\nX425 -> X426,\nX378 -> zero(X426),\nT321 -> T323,\nT322 -> T324"
            },
            {
                "from": 2072,
                "to": 2075,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2073,
                "to": 2087,
                "label": "PARALLEL"
            },
            {
                "from": 2073,
                "to": 2088,
                "label": "PARALLEL"
            },
            {
                "from": 2074,
                "to": 2076,
                "label": "CASE"
            },
            {
                "from": 2076,
                "to": 2077,
                "label": "PARALLEL"
            },
            {
                "from": 2076,
                "to": 2078,
                "label": "PARALLEL"
            },
            {
                "from": 2077,
                "to": 2079,
                "label": "EVAL with clause\naddX(zero(X432), b, one(X432)) :- binaryZ(X432).\nand substitutionX432 -> T331,\nT323 -> zero(T331),\nT324 -> b,\nX426 -> one(T331),\nT330 -> T331"
            },
            {
                "from": 2077,
                "to": 2080,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2078,
                "to": 2081,
                "label": "PARALLEL"
            },
            {
                "from": 2078,
                "to": 2082,
                "label": "PARALLEL"
            },
            {
                "from": 2079,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T331"
            },
            {
                "from": 2081,
                "to": 2083,
                "label": "EVAL with clause\naddX(one(X446), b, zero(X447)) :- succ(X446, X447).\nand substitutionX446 -> T338,\nT323 -> one(T338),\nT324 -> b,\nX447 -> X448,\nX426 -> zero(X448),\nT337 -> T338"
            },
            {
                "from": 2081,
                "to": 2084,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2082,
                "to": 2086,
                "label": "ONLY EVAL with clause\naddX(X461, X462, X463) :- addC(X461, X462, X463).\nand substitutionT323 -> T349,\nX461 -> T349,\nT324 -> T350,\nX462 -> T350,\nX426 -> X464,\nX463 -> X464,\nT347 -> T349,\nT348 -> T350"
            },
            {
                "from": 2083,
                "to": 1845,
                "label": "INSTANCE with matching:\nT266 -> T338\nX331 -> X448"
            },
            {
                "from": 2086,
                "to": 2047,
                "label": "INSTANCE with matching:\nT295 -> T349\nT296 -> T350\nX378 -> X464"
            },
            {
                "from": 2087,
                "to": 2089,
                "label": "EVAL with clause\naddC(one(X485), zero(X486), zero(X487)) :- addY(X485, X486, X487).\nand substitutionX485 -> T363,\nT295 -> one(T363),\nX486 -> T364,\nT296 -> zero(T364),\nX487 -> X488,\nX378 -> zero(X488),\nT361 -> T363,\nT362 -> T364"
            },
            {
                "from": 2087,
                "to": 2090,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2088,
                "to": 2168,
                "label": "EVAL with clause\naddC(one(X539), one(X540), one(X541)) :- addc(X539, X540, X541).\nand substitutionX539 -> T399,\nT295 -> one(T399),\nX540 -> T400,\nT296 -> one(T400),\nX541 -> X542,\nX378 -> one(X542),\nT397 -> T399,\nT398 -> T400"
            },
            {
                "from": 2088,
                "to": 2169,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2089,
                "to": 2117,
                "label": "CASE"
            },
            {
                "from": 2117,
                "to": 2118,
                "label": "PARALLEL"
            },
            {
                "from": 2117,
                "to": 2119,
                "label": "PARALLEL"
            },
            {
                "from": 2118,
                "to": 2122,
                "label": "EVAL with clause\naddY(b, zero(X494), one(X494)) :- binaryZ(X494).\nand substitutionT363 -> b,\nX494 -> T371,\nT364 -> zero(T371),\nX488 -> one(T371),\nT370 -> T371"
            },
            {
                "from": 2118,
                "to": 2123,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2119,
                "to": 2128,
                "label": "PARALLEL"
            },
            {
                "from": 2119,
                "to": 2129,
                "label": "PARALLEL"
            },
            {
                "from": 2122,
                "to": 1457,
                "label": "INSTANCE with matching:\nT95 -> T371"
            },
            {
                "from": 2128,
                "to": 2132,
                "label": "EVAL with clause\naddY(b, one(X508), zero(X509)) :- succ(X508, X509).\nand substitutionT363 -> b,\nX508 -> T378,\nT364 -> one(T378),\nX509 -> X510,\nX488 -> zero(X510),\nT377 -> T378"
            },
            {
                "from": 2128,
                "to": 2133,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2129,
                "to": 2143,
                "label": "ONLY EVAL with clause\naddY(X523, X524, X525) :- addC(X523, X524, X525).\nand substitutionT363 -> T389,\nX523 -> T389,\nT364 -> T390,\nX524 -> T390,\nX488 -> X526,\nX525 -> X526,\nT387 -> T389,\nT388 -> T390"
            },
            {
                "from": 2132,
                "to": 1845,
                "label": "INSTANCE with matching:\nT266 -> T378\nX331 -> X510"
            },
            {
                "from": 2143,
                "to": 2047,
                "label": "INSTANCE with matching:\nT295 -> T389\nT296 -> T390\nX378 -> X526"
            },
            {
                "from": 2168,
                "to": 1828,
                "label": "INSTANCE with matching:\nT247 -> T399\nT248 -> T400\nX300 -> X542"
            },
            {
                "from": 2202,
                "to": 2205,
                "label": "PARALLEL"
            },
            {
                "from": 2202,
                "to": 2206,
                "label": "PARALLEL"
            },
            {
                "from": 2205,
                "to": 2211,
                "label": "EVAL with clause\naddz(one(X562), zero(X563), one(X564)) :- addy(X562, X563, X564).\nand substitutionX562 -> T412,\nT129 -> one(T412),\nT130 -> T413,\nX563 -> T413,\nX564 -> X565,\nX132 -> one(X565),\nT410 -> T412,\nT411 -> T413"
            },
            {
                "from": 2205,
                "to": 2212,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2206,
                "to": 2243,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 2211,
                "to": 1814,
                "label": "INSTANCE with matching:\nT211 -> T412\nT212 -> T413\nX256 -> X565"
            },
            {
                "from": 2249,
                "to": 2250,
                "label": "BACKTRACK\nfor clause: add(b, b, b)because of non-unification"
            },
            {
                "from": 2250,
                "to": 2251,
                "label": "BACKTRACK\nfor clause: add(X, b, X) :- binaryZ(X)because of non-unification"
            },
            {
                "from": 2251,
                "to": 2252,
                "label": "PARALLEL"
            },
            {
                "from": 2251,
                "to": 2253,
                "label": "PARALLEL"
            },
            {
                "from": 2252,
                "to": 2258,
                "label": "EVAL with clause\nadd(b, X575, X575) :- binaryZ(X575).\nand substitutionT42 -> b,\nT41 -> T421,\nX575 -> zero(T421),\nT36 -> zero(T421)"
            },
            {
                "from": 2252,
                "to": 2259,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2253,
                "to": 2413,
                "label": "ONLY EVAL with clause\nadd(X613, X614, X615) :- addz(X613, X614, X615).\nand substitutionT42 -> T463,\nX613 -> T463,\nT41 -> T464,\nX614 -> zero(T464),\nT36 -> T462,\nX615 -> T462,\nT460 -> T463,\nT461 -> T464"
            },
            {
                "from": 2258,
                "to": 2262,
                "label": "CASE"
            },
            {
                "from": 2262,
                "to": 2264,
                "label": "PARALLEL"
            },
            {
                "from": 2262,
                "to": 2265,
                "label": "PARALLEL"
            },
            {
                "from": 2264,
                "to": 2268,
                "label": "ONLY EVAL with clause\nbinaryZ(zero(X583)) :- binaryZ(X583).\nand substitutionT421 -> T429,\nX583 -> T429"
            },
            {
                "from": 2265,
                "to": 2412,
                "label": "BACKTRACK\nfor clause: binaryZ(one(X)) :- binary(X)because of non-unification"
            },
            {
                "from": 2268,
                "to": 2269,
                "label": "CASE"
            },
            {
                "from": 2269,
                "to": 2270,
                "label": "PARALLEL"
            },
            {
                "from": 2269,
                "to": 2271,
                "label": "PARALLEL"
            },
            {
                "from": 2270,
                "to": 2274,
                "label": "EVAL with clause\nbinaryZ(zero(X589)) :- binaryZ(X589).\nand substitutionX589 -> T435,\nT429 -> zero(T435)"
            },
            {
                "from": 2270,
                "to": 2275,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2271,
                "to": 2398,
                "label": "EVAL with clause\nbinaryZ(one(X593)) :- binary(X593).\nand substitutionX593 -> T439,\nT429 -> one(T439)"
            },
            {
                "from": 2271,
                "to": 2399,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2274,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T435"
            },
            {
                "from": 2398,
                "to": 2400,
                "label": "CASE"
            },
            {
                "from": 2400,
                "to": 2401,
                "label": "PARALLEL"
            },
            {
                "from": 2400,
                "to": 2402,
                "label": "PARALLEL"
            },
            {
                "from": 2401,
                "to": 2403,
                "label": "EVAL with clause\nbinary(b).\nand substitutionT439 -> b"
            },
            {
                "from": 2401,
                "to": 2404,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2402,
                "to": 2406,
                "label": "PARALLEL"
            },
            {
                "from": 2402,
                "to": 2407,
                "label": "PARALLEL"
            },
            {
                "from": 2403,
                "to": 2405,
                "label": "SUCCESS"
            },
            {
                "from": 2406,
                "to": 2408,
                "label": "EVAL with clause\nbinary(zero(X598)) :- binaryZ(X598).\nand substitutionX598 -> T444,\nT439 -> zero(T444)"
            },
            {
                "from": 2406,
                "to": 2409,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2407,
                "to": 2410,
                "label": "EVAL with clause\nbinary(one(X602)) :- binary(X602).\nand substitutionX602 -> T448,\nT439 -> one(T448)"
            },
            {
                "from": 2407,
                "to": 2411,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2408,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T444"
            },
            {
                "from": 2410,
                "to": 2398,
                "label": "INSTANCE with matching:\nT439 -> T448"
            },
            {
                "from": 2413,
                "to": 2414,
                "label": "CASE"
            },
            {
                "from": 2414,
                "to": 2415,
                "label": "PARALLEL"
            },
            {
                "from": 2414,
                "to": 2416,
                "label": "PARALLEL"
            },
            {
                "from": 2415,
                "to": 2439,
                "label": "EVAL with clause\naddz(zero(X631), zero(X632), zero(X633)) :- addz(X631, X632, X633).\nand substitutionX631 -> T483,\nT463 -> zero(T483),\nT464 -> T484,\nX632 -> T484,\nX633 -> T482,\nT462 -> zero(T482),\nT480 -> T483,\nT481 -> T484"
            },
            {
                "from": 2415,
                "to": 2440,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2416,
                "to": 4269,
                "label": "BACKTRACK\nfor clause: addz(zero(X), one(Y), one(Z)) :- addx(X, Y, Z)because of non-unification"
            },
            {
                "from": 2439,
                "to": 2441,
                "label": "CASE"
            },
            {
                "from": 2441,
                "to": 2442,
                "label": "PARALLEL"
            },
            {
                "from": 2441,
                "to": 2443,
                "label": "PARALLEL"
            },
            {
                "from": 2442,
                "to": 2444,
                "label": "EVAL with clause\naddz(zero(X649), zero(X650), zero(X651)) :- addz(X649, X650, X651).\nand substitutionX649 -> T503,\nT483 -> zero(T503),\nX650 -> T504,\nT484 -> zero(T504),\nX651 -> T502,\nT482 -> zero(T502),\nT500 -> T503,\nT501 -> T504"
            },
            {
                "from": 2442,
                "to": 2445,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2443,
                "to": 2448,
                "label": "PARALLEL"
            },
            {
                "from": 2443,
                "to": 2449,
                "label": "PARALLEL"
            },
            {
                "from": 2444,
                "to": 2439,
                "label": "INSTANCE with matching:\nT483 -> T503\nT484 -> T504\nT482 -> T502"
            },
            {
                "from": 2448,
                "to": 2581,
                "label": "EVAL with clause\naddz(zero(X667), one(X668), one(X669)) :- addx(X667, X668, X669).\nand substitutionX667 -> T523,\nT483 -> zero(T523),\nX668 -> T524,\nT484 -> one(T524),\nX669 -> T522,\nT482 -> one(T522),\nT520 -> T523,\nT521 -> T524"
            },
            {
                "from": 2448,
                "to": 2582,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2449,
                "to": 2610,
                "label": "PARALLEL"
            },
            {
                "from": 2449,
                "to": 2611,
                "label": "PARALLEL"
            },
            {
                "from": 2581,
                "to": 2585,
                "label": "CASE"
            },
            {
                "from": 2585,
                "to": 2586,
                "label": "PARALLEL"
            },
            {
                "from": 2585,
                "to": 2587,
                "label": "PARALLEL"
            },
            {
                "from": 2586,
                "to": 2588,
                "label": "EVAL with clause\naddx(one(X675), b, one(X675)) :- binary(X675).\nand substitutionX675 -> T530,\nT523 -> one(T530),\nT524 -> b,\nT522 -> one(T530)"
            },
            {
                "from": 2586,
                "to": 2589,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2587,
                "to": 2590,
                "label": "PARALLEL"
            },
            {
                "from": 2587,
                "to": 2591,
                "label": "PARALLEL"
            },
            {
                "from": 2588,
                "to": 2398,
                "label": "INSTANCE with matching:\nT439 -> T530"
            },
            {
                "from": 2590,
                "to": 2592,
                "label": "EVAL with clause\naddx(zero(X680), b, zero(X680)) :- binaryZ(X680).\nand substitutionX680 -> T535,\nT523 -> zero(T535),\nT524 -> b,\nT522 -> zero(T535)"
            },
            {
                "from": 2590,
                "to": 2593,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2591,
                "to": 2607,
                "label": "ONLY EVAL with clause\naddx(X691, X692, X693) :- addz(X691, X692, X693).\nand substitutionT523 -> T551,\nX691 -> T551,\nT524 -> T552,\nX692 -> T552,\nT522 -> T550,\nX693 -> T550,\nT548 -> T551,\nT549 -> T552"
            },
            {
                "from": 2592,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T535"
            },
            {
                "from": 2607,
                "to": 2439,
                "label": "INSTANCE with matching:\nT483 -> T551\nT484 -> T552\nT482 -> T550"
            },
            {
                "from": 2610,
                "to": 2619,
                "label": "EVAL with clause\naddz(one(X709), zero(X710), one(X711)) :- addy(X709, X710, X711).\nand substitutionX709 -> T571,\nT483 -> one(T571),\nX710 -> T572,\nT484 -> zero(T572),\nX711 -> T570,\nT482 -> one(T570),\nT568 -> T571,\nT569 -> T572"
            },
            {
                "from": 2610,
                "to": 2620,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2611,
                "to": 2641,
                "label": "EVAL with clause\naddz(one(X745), one(X746), zero(X747)) :- addc(X745, X746, X747).\nand substitutionX745 -> T613,\nT483 -> one(T613),\nX746 -> T614,\nT484 -> one(T614),\nX747 -> T612,\nT482 -> zero(T612),\nT610 -> T613,\nT611 -> T614"
            },
            {
                "from": 2611,
                "to": 2642,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2619,
                "to": 2621,
                "label": "CASE"
            },
            {
                "from": 2621,
                "to": 2622,
                "label": "PARALLEL"
            },
            {
                "from": 2621,
                "to": 2623,
                "label": "PARALLEL"
            },
            {
                "from": 2622,
                "to": 2624,
                "label": "EVAL with clause\naddy(b, one(X717), one(X717)) :- binary(X717).\nand substitutionT571 -> b,\nX717 -> T578,\nT572 -> one(T578),\nT570 -> one(T578)"
            },
            {
                "from": 2622,
                "to": 2625,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2623,
                "to": 2626,
                "label": "PARALLEL"
            },
            {
                "from": 2623,
                "to": 2627,
                "label": "PARALLEL"
            },
            {
                "from": 2624,
                "to": 2398,
                "label": "INSTANCE with matching:\nT439 -> T578"
            },
            {
                "from": 2626,
                "to": 2630,
                "label": "EVAL with clause\naddy(b, zero(X722), zero(X722)) :- binaryZ(X722).\nand substitutionT571 -> b,\nX722 -> T583,\nT572 -> zero(T583),\nT570 -> zero(T583)"
            },
            {
                "from": 2626,
                "to": 2631,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2627,
                "to": 2634,
                "label": "ONLY EVAL with clause\naddy(X733, X734, X735) :- addz(X733, X734, X735).\nand substitutionT571 -> T599,\nX733 -> T599,\nT572 -> T600,\nX734 -> T600,\nT570 -> T598,\nX735 -> T598,\nT596 -> T599,\nT597 -> T600"
            },
            {
                "from": 2630,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T583"
            },
            {
                "from": 2634,
                "to": 2439,
                "label": "INSTANCE with matching:\nT483 -> T599\nT484 -> T600\nT482 -> T598"
            },
            {
                "from": 2641,
                "to": 2643,
                "label": "CASE"
            },
            {
                "from": 2643,
                "to": 2644,
                "label": "PARALLEL"
            },
            {
                "from": 2643,
                "to": 2645,
                "label": "PARALLEL"
            },
            {
                "from": 2644,
                "to": 2646,
                "label": "EVAL with clause\naddc(b, b, one(b)).\nand substitutionT613 -> b,\nT614 -> b,\nT612 -> one(b)"
            },
            {
                "from": 2644,
                "to": 2647,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2645,
                "to": 2649,
                "label": "PARALLEL"
            },
            {
                "from": 2645,
                "to": 2650,
                "label": "PARALLEL"
            },
            {
                "from": 2646,
                "to": 2648,
                "label": "SUCCESS"
            },
            {
                "from": 2649,
                "to": 2651,
                "label": "EVAL with clause\naddc(X756, b, X757) :- succZ(X756, X757).\nand substitutionT613 -> T625,\nX756 -> T625,\nT614 -> b,\nT612 -> T624,\nX757 -> T624,\nT623 -> T625"
            },
            {
                "from": 2649,
                "to": 2652,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2650,
                "to": 2687,
                "label": "PARALLEL"
            },
            {
                "from": 2650,
                "to": 2688,
                "label": "PARALLEL"
            },
            {
                "from": 2651,
                "to": 2654,
                "label": "CASE"
            },
            {
                "from": 2654,
                "to": 2655,
                "label": "PARALLEL"
            },
            {
                "from": 2654,
                "to": 2656,
                "label": "PARALLEL"
            },
            {
                "from": 2655,
                "to": 2658,
                "label": "EVAL with clause\nsuccZ(zero(X763), one(X763)) :- binaryZ(X763).\nand substitutionX763 -> T631,\nT625 -> zero(T631),\nT624 -> one(T631)"
            },
            {
                "from": 2655,
                "to": 2659,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2656,
                "to": 2662,
                "label": "EVAL with clause\nsuccZ(one(X769), zero(X770)) :- succ(X769, X770).\nand substitutionX769 -> T639,\nT625 -> one(T639),\nX770 -> T638,\nT624 -> zero(T638),\nT637 -> T639"
            },
            {
                "from": 2656,
                "to": 2663,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2658,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T631"
            },
            {
                "from": 2662,
                "to": 2664,
                "label": "CASE"
            },
            {
                "from": 2664,
                "to": 2665,
                "label": "PARALLEL"
            },
            {
                "from": 2664,
                "to": 2666,
                "label": "PARALLEL"
            },
            {
                "from": 2665,
                "to": 2667,
                "label": "EVAL with clause\nsucc(b, one(b)).\nand substitutionT639 -> b,\nT638 -> one(b)"
            },
            {
                "from": 2665,
                "to": 2668,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2666,
                "to": 2670,
                "label": "PARALLEL"
            },
            {
                "from": 2666,
                "to": 2671,
                "label": "PARALLEL"
            },
            {
                "from": 2667,
                "to": 2669,
                "label": "SUCCESS"
            },
            {
                "from": 2670,
                "to": 2674,
                "label": "EVAL with clause\nsucc(zero(X775), one(X775)) :- binaryZ(X775).\nand substitutionX775 -> T644,\nT639 -> zero(T644),\nT638 -> one(T644)"
            },
            {
                "from": 2670,
                "to": 2675,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2671,
                "to": 2685,
                "label": "EVAL with clause\nsucc(one(X781), zero(X782)) :- succ(X781, X782).\nand substitutionX781 -> T652,\nT639 -> one(T652),\nX782 -> T651,\nT638 -> zero(T651),\nT650 -> T652"
            },
            {
                "from": 2671,
                "to": 2686,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2674,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T644"
            },
            {
                "from": 2685,
                "to": 2662,
                "label": "INSTANCE with matching:\nT639 -> T652\nT638 -> T651"
            },
            {
                "from": 2687,
                "to": 2689,
                "label": "EVAL with clause\naddc(b, X791, X792) :- succZ(X791, X792).\nand substitutionT613 -> b,\nT614 -> T663,\nX791 -> T663,\nT612 -> T662,\nX792 -> T662,\nT661 -> T663"
            },
            {
                "from": 2687,
                "to": 2690,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 2688,
                "to": 3160,
                "label": "ONLY EVAL with clause\naddc(X803, X804, X805) :- addC(X803, X804, X805).\nand substitutionT613 -> T679,\nX803 -> T679,\nT614 -> T680,\nX804 -> T680,\nT612 -> T678,\nX805 -> T678,\nT676 -> T679,\nT677 -> T680"
            },
            {
                "from": 2689,
                "to": 2651,
                "label": "INSTANCE with matching:\nT625 -> T663\nT624 -> T662"
            },
            {
                "from": 3160,
                "to": 3161,
                "label": "CASE"
            },
            {
                "from": 3161,
                "to": 3792,
                "label": "PARALLEL"
            },
            {
                "from": 3161,
                "to": 3793,
                "label": "PARALLEL"
            },
            {
                "from": 3792,
                "to": 4170,
                "label": "EVAL with clause\naddC(zero(X821), zero(X822), one(X823)) :- addz(X821, X822, X823).\nand substitutionX821 -> T699,\nT679 -> zero(T699),\nX822 -> T700,\nT680 -> zero(T700),\nX823 -> T698,\nT678 -> one(T698),\nT696 -> T699,\nT697 -> T700"
            },
            {
                "from": 3792,
                "to": 4171,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 3793,
                "to": 4172,
                "label": "PARALLEL"
            },
            {
                "from": 3793,
                "to": 4173,
                "label": "PARALLEL"
            },
            {
                "from": 4170,
                "to": 2439,
                "label": "INSTANCE with matching:\nT483 -> T699\nT484 -> T700\nT482 -> T698"
            },
            {
                "from": 4172,
                "to": 4241,
                "label": "EVAL with clause\naddC(zero(X839), one(X840), zero(X841)) :- addX(X839, X840, X841).\nand substitutionX839 -> T719,\nT679 -> zero(T719),\nX840 -> T720,\nT680 -> one(T720),\nX841 -> T718,\nT678 -> zero(T718),\nT716 -> T719,\nT717 -> T720"
            },
            {
                "from": 4172,
                "to": 4242,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4173,
                "to": 4253,
                "label": "PARALLEL"
            },
            {
                "from": 4173,
                "to": 4254,
                "label": "PARALLEL"
            },
            {
                "from": 4241,
                "to": 4243,
                "label": "CASE"
            },
            {
                "from": 4243,
                "to": 4244,
                "label": "PARALLEL"
            },
            {
                "from": 4243,
                "to": 4245,
                "label": "PARALLEL"
            },
            {
                "from": 4244,
                "to": 4246,
                "label": "EVAL with clause\naddX(zero(X847), b, one(X847)) :- binaryZ(X847).\nand substitutionX847 -> T726,\nT719 -> zero(T726),\nT720 -> b,\nT718 -> one(T726)"
            },
            {
                "from": 4244,
                "to": 4247,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4245,
                "to": 4248,
                "label": "PARALLEL"
            },
            {
                "from": 4245,
                "to": 4249,
                "label": "PARALLEL"
            },
            {
                "from": 4246,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T726"
            },
            {
                "from": 4248,
                "to": 4250,
                "label": "EVAL with clause\naddX(one(X857), b, zero(X858)) :- succ(X857, X858).\nand substitutionX857 -> T738,\nT719 -> one(T738),\nT720 -> b,\nX858 -> T737,\nT718 -> zero(T737),\nT736 -> T738"
            },
            {
                "from": 4248,
                "to": 4251,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4249,
                "to": 4252,
                "label": "ONLY EVAL with clause\naddX(X868, X869, X870) :- addC(X868, X869, X870).\nand substitutionT719 -> T753,\nX868 -> T753,\nT720 -> T754,\nX869 -> T754,\nT718 -> T752,\nX870 -> T752,\nT750 -> T753,\nT751 -> T754"
            },
            {
                "from": 4250,
                "to": 2662,
                "label": "INSTANCE with matching:\nT639 -> T738\nT638 -> T737"
            },
            {
                "from": 4252,
                "to": 3160,
                "label": "INSTANCE with matching:\nT679 -> T753\nT680 -> T754\nT678 -> T752"
            },
            {
                "from": 4253,
                "to": 4255,
                "label": "EVAL with clause\naddC(one(X886), zero(X887), zero(X888)) :- addY(X886, X887, X888).\nand substitutionX886 -> T773,\nT679 -> one(T773),\nX887 -> T774,\nT680 -> zero(T774),\nX888 -> T772,\nT678 -> zero(T772),\nT770 -> T773,\nT771 -> T774"
            },
            {
                "from": 4253,
                "to": 4256,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4254,
                "to": 4267,
                "label": "EVAL with clause\naddC(one(X927), one(X928), one(X929)) :- addc(X927, X928, X929).\nand substitutionX927 -> T821,\nT679 -> one(T821),\nX928 -> T822,\nT680 -> one(T822),\nX929 -> T820,\nT678 -> one(T820),\nT818 -> T821,\nT819 -> T822"
            },
            {
                "from": 4254,
                "to": 4268,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4255,
                "to": 4257,
                "label": "CASE"
            },
            {
                "from": 4257,
                "to": 4258,
                "label": "PARALLEL"
            },
            {
                "from": 4257,
                "to": 4259,
                "label": "PARALLEL"
            },
            {
                "from": 4258,
                "to": 4260,
                "label": "EVAL with clause\naddY(b, zero(X894), one(X894)) :- binaryZ(X894).\nand substitutionT773 -> b,\nX894 -> T780,\nT774 -> zero(T780),\nT772 -> one(T780)"
            },
            {
                "from": 4258,
                "to": 4261,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4259,
                "to": 4262,
                "label": "PARALLEL"
            },
            {
                "from": 4259,
                "to": 4263,
                "label": "PARALLEL"
            },
            {
                "from": 4260,
                "to": 2268,
                "label": "INSTANCE with matching:\nT429 -> T780"
            },
            {
                "from": 4262,
                "to": 4264,
                "label": "EVAL with clause\naddY(b, one(X904), zero(X905)) :- succ(X904, X905).\nand substitutionT773 -> b,\nX904 -> T792,\nT774 -> one(T792),\nX905 -> T791,\nT772 -> zero(T791),\nT790 -> T792"
            },
            {
                "from": 4262,
                "to": 4265,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4263,
                "to": 4266,
                "label": "ONLY EVAL with clause\naddY(X915, X916, X917) :- addC(X915, X916, X917).\nand substitutionT773 -> T807,\nX915 -> T807,\nT774 -> T808,\nX916 -> T808,\nT772 -> T806,\nX917 -> T806,\nT804 -> T807,\nT805 -> T808"
            },
            {
                "from": 4264,
                "to": 2662,
                "label": "INSTANCE with matching:\nT639 -> T792\nT638 -> T791"
            },
            {
                "from": 4266,
                "to": 3160,
                "label": "INSTANCE with matching:\nT679 -> T807\nT680 -> T808\nT678 -> T806"
            },
            {
                "from": 4267,
                "to": 2641,
                "label": "INSTANCE with matching:\nT613 -> T821\nT614 -> T822\nT612 -> T820"
            },
            {
                "from": 4269,
                "to": 4270,
                "label": "PARALLEL"
            },
            {
                "from": 4269,
                "to": 4271,
                "label": "PARALLEL"
            },
            {
                "from": 4270,
                "to": 4272,
                "label": "EVAL with clause\naddz(one(X945), zero(X946), one(X947)) :- addy(X945, X946, X947).\nand substitutionX945 -> T839,\nT463 -> one(T839),\nT464 -> T840,\nX946 -> T840,\nX947 -> T838,\nT462 -> one(T838),\nT836 -> T839,\nT837 -> T840"
            },
            {
                "from": 4270,
                "to": 4273,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4271,
                "to": 4274,
                "label": "BACKTRACK\nfor clause: addz(one(X), one(Y), zero(Z)) :- addc(X, Y, Z)because of non-unification"
            },
            {
                "from": 4272,
                "to": 2619,
                "label": "INSTANCE with matching:\nT571 -> T839\nT572 -> T840\nT570 -> T838"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(162)
Complex Obligation (AND)

----------------------------------------

(163)
Obligation:
Rules:
f2400_out(T439) -> f2398_out(T439) :|: TRUE
f2398_in(x) -> f2400_in(x) :|: TRUE
f2402_in(x1) -> f2407_in(x1) :|: TRUE
f2402_in(x2) -> f2406_in(x2) :|: TRUE
f2407_out(x3) -> f2402_out(x3) :|: TRUE
f2406_out(x4) -> f2402_out(x4) :|: TRUE
f2398_out(T448) -> f2410_out(T448) :|: TRUE
f2410_in(x5) -> f2398_in(x5) :|: TRUE
f2271_in(one(x6)) -> f2398_in(x6) :|: TRUE
f2271_in(T429) -> f2399_in :|: TRUE
f2398_out(x7) -> f2271_out(one(x7)) :|: TRUE
f2399_out -> f2271_out(x8) :|: TRUE
f2400_in(x9) -> f2402_in(x9) :|: TRUE
f2402_out(x10) -> f2400_out(x10) :|: TRUE
f2401_out(x11) -> f2400_out(x11) :|: TRUE
f2400_in(x12) -> f2401_in(x12) :|: TRUE
f2274_out(T435) -> f2270_out(zero(T435)) :|: TRUE
f2270_in(x13) -> f2275_in :|: TRUE
f2275_out -> f2270_out(x14) :|: TRUE
f2270_in(zero(x15)) -> f2274_in(x15) :|: TRUE
f2407_in(x16) -> f2411_in :|: TRUE
f2407_in(one(x17)) -> f2410_in(x17) :|: TRUE
f2411_out -> f2407_out(x18) :|: TRUE
f2410_out(x19) -> f2407_out(one(x19)) :|: TRUE
f2269_out(x20) -> f2268_out(x20) :|: TRUE
f2268_in(x21) -> f2269_in(x21) :|: TRUE
f2408_in(T444) -> f2268_in(T444) :|: TRUE
f2268_out(x22) -> f2408_out(x22) :|: TRUE
f2408_out(x23) -> f2406_out(zero(x23)) :|: TRUE
f2409_out -> f2406_out(x24) :|: TRUE
f2406_in(zero(x25)) -> f2408_in(x25) :|: TRUE
f2406_in(x26) -> f2409_in :|: TRUE
f2268_out(x27) -> f2274_out(x27) :|: TRUE
f2274_in(x28) -> f2268_in(x28) :|: TRUE
f2269_in(x29) -> f2270_in(x29) :|: TRUE
f2269_in(x30) -> f2271_in(x30) :|: TRUE
f2270_out(x31) -> f2269_out(x31) :|: TRUE
f2271_out(x32) -> f2269_out(x32) :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x33) -> f2_in(x33) :|: TRUE
f2_in(x34) -> f4_in(x34) :|: TRUE
f2_in(x35) -> f3_in(x35) :|: TRUE
f3_out(x36) -> f2_out(x36) :|: TRUE
f4_out(x37) -> f2_out(x37) :|: TRUE
f4_in(x38) -> f96_in(x38) :|: TRUE
f96_out(x39) -> f4_out(x39) :|: TRUE
f4_in(x40) -> f95_in(x40) :|: TRUE
f95_out(x41) -> f4_out(x41) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x42) -> f177_in :|: TRUE
f177_out -> f96_out(x43) :|: TRUE
f96_in(x44) -> f176_in(x44) :|: TRUE
f181_out(x45) -> f176_out(x45) :|: TRUE
f180_out -> f181_in(x46) :|: TRUE
f176_in(x47) -> f180_in :|: TRUE
f2249_out(x48) -> f181_out(x48) :|: TRUE
f181_in(x49) -> f2249_in(x49) :|: TRUE
f2250_out(x50) -> f2249_out(x50) :|: TRUE
f2249_in(x51) -> f2250_in(x51) :|: TRUE
f2251_out(x52) -> f2250_out(x52) :|: TRUE
f2250_in(x53) -> f2251_in(x53) :|: TRUE
f2252_out(x54) -> f2251_out(x54) :|: TRUE
f2253_out(x55) -> f2251_out(x55) :|: TRUE
f2251_in(x56) -> f2253_in(x56) :|: TRUE
f2251_in(x57) -> f2252_in(x57) :|: TRUE
f2413_out(T462) -> f2253_out(T462) :|: TRUE
f2253_in(x58) -> f2413_in(x58) :|: TRUE
f2413_in(x59) -> f2414_in(x59) :|: TRUE
f2414_out(x60) -> f2413_out(x60) :|: TRUE
f2414_in(x61) -> f2415_in(x61) :|: TRUE
f2416_out(x62) -> f2414_out(x62) :|: TRUE
f2414_in(x63) -> f2416_in(x63) :|: TRUE
f2415_out(x64) -> f2414_out(x64) :|: TRUE
f2439_out(T482) -> f2415_out(zero(T482)) :|: TRUE
f2415_in(zero(x65)) -> f2439_in(x65) :|: TRUE
f2415_in(x66) -> f2440_in :|: TRUE
f2440_out -> f2415_out(x67) :|: TRUE
f2439_in(x68) -> f2441_in(x68) :|: TRUE
f2441_out(x69) -> f2439_out(x69) :|: TRUE
f2442_out(x70) -> f2441_out(x70) :|: TRUE
f2443_out(x71) -> f2441_out(x71) :|: TRUE
f2441_in(x72) -> f2442_in(x72) :|: TRUE
f2441_in(x73) -> f2443_in(x73) :|: TRUE
f2449_out(x74) -> f2443_out(x74) :|: TRUE
f2448_out(x75) -> f2443_out(x75) :|: TRUE
f2443_in(x76) -> f2448_in(x76) :|: TRUE
f2443_in(x77) -> f2449_in(x77) :|: TRUE
f2449_in(x78) -> f2611_in(x78) :|: TRUE
f2449_in(x79) -> f2610_in(x79) :|: TRUE
f2610_out(x80) -> f2449_out(x80) :|: TRUE
f2611_out(x81) -> f2449_out(x81) :|: TRUE
f2610_in(x82) -> f2620_in :|: TRUE
f2620_out -> f2610_out(x83) :|: TRUE
f2610_in(one(T570)) -> f2619_in(T570) :|: TRUE
f2619_out(x84) -> f2610_out(one(x84)) :|: TRUE
f2621_out(x85) -> f2619_out(x85) :|: TRUE
f2619_in(x86) -> f2621_in(x86) :|: TRUE
f2622_out(x87) -> f2621_out(x87) :|: TRUE
f2623_out(x88) -> f2621_out(x88) :|: TRUE
f2621_in(x89) -> f2623_in(x89) :|: TRUE
f2621_in(x90) -> f2622_in(x90) :|: TRUE
f2622_in(x91) -> f2625_in :|: TRUE
f2625_out -> f2622_out(x92) :|: TRUE
f2622_in(one(T578)) -> f2624_in(T578) :|: TRUE
f2624_out(x93) -> f2622_out(one(x93)) :|: TRUE
f2398_out(x94) -> f2624_out(x94) :|: TRUE
f2624_in(x95) -> f2398_in(x95) :|: TRUE
f2611_in(x96) -> f2642_in :|: TRUE
f2642_out -> f2611_out(x97) :|: TRUE
f2641_out(T612) -> f2611_out(zero(T612)) :|: TRUE
f2611_in(zero(x98)) -> f2641_in(x98) :|: TRUE
f2643_out(x99) -> f2641_out(x99) :|: TRUE
f2641_in(x100) -> f2643_in(x100) :|: TRUE
f2643_in(x101) -> f2645_in(x101) :|: TRUE
f2645_out(x102) -> f2643_out(x102) :|: TRUE
f2643_in(x103) -> f2644_in(x103) :|: TRUE
f2644_out(x104) -> f2643_out(x104) :|: TRUE
f2649_out(x105) -> f2645_out(x105) :|: TRUE
f2645_in(x106) -> f2649_in(x106) :|: TRUE
f2650_out(x107) -> f2645_out(x107) :|: TRUE
f2645_in(x108) -> f2650_in(x108) :|: TRUE
f2687_out(x109) -> f2650_out(x109) :|: TRUE
f2688_out(x110) -> f2650_out(x110) :|: TRUE
f2650_in(x111) -> f2687_in(x111) :|: TRUE
f2650_in(x112) -> f2688_in(x112) :|: TRUE
f2687_in(T662) -> f2689_in(T662) :|: TRUE
f2689_out(x113) -> f2687_out(x113) :|: TRUE
f2690_out -> f2687_out(x114) :|: TRUE
f2687_in(x115) -> f2690_in :|: TRUE
f2689_in(x116) -> f2651_in(x116) :|: TRUE
f2651_out(x117) -> f2689_out(x117) :|: TRUE
f2651_in(T624) -> f2654_in(T624) :|: TRUE
f2654_out(x118) -> f2651_out(x118) :|: TRUE
f2655_out(x119) -> f2654_out(x119) :|: TRUE
f2656_out(x120) -> f2654_out(x120) :|: TRUE
f2654_in(x121) -> f2655_in(x121) :|: TRUE
f2654_in(x122) -> f2656_in(x122) :|: TRUE
f2659_out -> f2655_out(x123) :|: TRUE
f2655_in(one(T631)) -> f2658_in(T631) :|: TRUE
f2655_in(x124) -> f2659_in :|: TRUE
f2658_out(x125) -> f2655_out(one(x125)) :|: TRUE
f2268_out(x126) -> f2658_out(x126) :|: TRUE
f2658_in(x127) -> f2268_in(x127) :|: TRUE
f2652_out -> f2649_out(x128) :|: TRUE
f2649_in(x129) -> f2652_in :|: TRUE
f2651_out(x130) -> f2649_out(x130) :|: TRUE
f2649_in(x131) -> f2651_in(x131) :|: TRUE
f2662_out(T638) -> f2656_out(zero(T638)) :|: TRUE
f2656_in(x132) -> f2663_in :|: TRUE
f2656_in(zero(x133)) -> f2662_in(x133) :|: TRUE
f2663_out -> f2656_out(x134) :|: TRUE
f2662_in(x135) -> f2664_in(x135) :|: TRUE
f2664_out(x136) -> f2662_out(x136) :|: TRUE
f2665_out(x137) -> f2664_out(x137) :|: TRUE
f2666_out(x138) -> f2664_out(x138) :|: TRUE
f2664_in(x139) -> f2665_in(x139) :|: TRUE
f2664_in(x140) -> f2666_in(x140) :|: TRUE
f2671_out(x141) -> f2666_out(x141) :|: TRUE
f2666_in(x142) -> f2670_in(x142) :|: TRUE
f2670_out(x143) -> f2666_out(x143) :|: TRUE
f2666_in(x144) -> f2671_in(x144) :|: TRUE
f2675_out -> f2670_out(x145) :|: TRUE
f2674_out(T644) -> f2670_out(one(T644)) :|: TRUE
f2670_in(x146) -> f2675_in :|: TRUE
f2670_in(one(x147)) -> f2674_in(x147) :|: TRUE
f2674_in(x148) -> f2268_in(x148) :|: TRUE
f2268_out(x149) -> f2674_out(x149) :|: TRUE
f4269_out(x150) -> f2416_out(x150) :|: TRUE
f2416_in(x151) -> f4269_in(x151) :|: TRUE
f4269_in(x152) -> f4271_in(x152) :|: TRUE
f4271_out(x153) -> f4269_out(x153) :|: TRUE
f4270_out(x154) -> f4269_out(x154) :|: TRUE
f4269_in(x155) -> f4270_in(x155) :|: TRUE
f4270_in(x156) -> f4273_in :|: TRUE
f4272_out(T838) -> f4270_out(one(T838)) :|: TRUE
f4270_in(one(x157)) -> f4272_in(x157) :|: TRUE
f4273_out -> f4270_out(x158) :|: TRUE
f4272_in(x159) -> f2619_in(x159) :|: TRUE
f2619_out(x160) -> f4272_out(x160) :|: TRUE
f2623_in(x161) -> f2626_in(x161) :|: TRUE
f2626_out(x162) -> f2623_out(x162) :|: TRUE
f2627_out(x163) -> f2623_out(x163) :|: TRUE
f2623_in(x164) -> f2627_in(x164) :|: TRUE
f2634_out(T598) -> f2627_out(T598) :|: TRUE
f2627_in(x165) -> f2634_in(x165) :|: TRUE
f2634_in(x166) -> f2439_in(x166) :|: TRUE
f2439_out(x167) -> f2634_out(x167) :|: TRUE
f3160_out(T678) -> f2688_out(T678) :|: TRUE
f2688_in(x168) -> f3160_in(x168) :|: TRUE
f3160_in(x169) -> f3161_in(x169) :|: TRUE
f3161_out(x170) -> f3160_out(x170) :|: TRUE
f3161_in(x171) -> f3792_in(x171) :|: TRUE
f3792_out(x172) -> f3161_out(x172) :|: TRUE
f3793_out(x173) -> f3161_out(x173) :|: TRUE
f3161_in(x174) -> f3793_in(x174) :|: TRUE
f4172_out(x175) -> f3793_out(x175) :|: TRUE
f4173_out(x176) -> f3793_out(x176) :|: TRUE
f3793_in(x177) -> f4172_in(x177) :|: TRUE
f3793_in(x178) -> f4173_in(x178) :|: TRUE
f4173_in(x179) -> f4253_in(x179) :|: TRUE
f4173_in(x180) -> f4254_in(x180) :|: TRUE
f4254_out(x181) -> f4173_out(x181) :|: TRUE
f4253_out(x182) -> f4173_out(x182) :|: TRUE
f4253_in(zero(T772)) -> f4255_in(T772) :|: TRUE
f4255_out(x183) -> f4253_out(zero(x183)) :|: TRUE
f4256_out -> f4253_out(x184) :|: TRUE
f4253_in(x185) -> f4256_in :|: TRUE
f4257_out(x186) -> f4255_out(x186) :|: TRUE
f4255_in(x187) -> f4257_in(x187) :|: TRUE
f4258_out(x188) -> f4257_out(x188) :|: TRUE
f4257_in(x189) -> f4259_in(x189) :|: TRUE
f4259_out(x190) -> f4257_out(x190) :|: TRUE
f4257_in(x191) -> f4258_in(x191) :|: TRUE
f4258_in(x192) -> f4261_in :|: TRUE
f4258_in(one(T780)) -> f4260_in(T780) :|: TRUE
f4261_out -> f4258_out(x193) :|: TRUE
f4260_out(x194) -> f4258_out(one(x194)) :|: TRUE
f4260_in(x195) -> f2268_in(x195) :|: TRUE
f2268_out(x196) -> f4260_out(x196) :|: TRUE
f4172_in(zero(T718)) -> f4241_in(T718) :|: TRUE
f4242_out -> f4172_out(x197) :|: TRUE
f4241_out(x198) -> f4172_out(zero(x198)) :|: TRUE
f4172_in(x199) -> f4242_in :|: TRUE
f4243_out(x200) -> f4241_out(x200) :|: TRUE
f4241_in(x201) -> f4243_in(x201) :|: TRUE
f4243_in(x202) -> f4244_in(x202) :|: TRUE
f4245_out(x203) -> f4243_out(x203) :|: TRUE
f4244_out(x204) -> f4243_out(x204) :|: TRUE
f4243_in(x205) -> f4245_in(x205) :|: TRUE
f4244_in(one(T726)) -> f4246_in(T726) :|: TRUE
f4247_out -> f4244_out(x206) :|: TRUE
f4246_out(x207) -> f4244_out(one(x207)) :|: TRUE
f4244_in(x208) -> f4247_in :|: TRUE
f2268_out(x209) -> f4246_out(x209) :|: TRUE
f4246_in(x210) -> f2268_in(x210) :|: TRUE
f2582_out -> f2448_out(x211) :|: TRUE
f2581_out(T522) -> f2448_out(one(T522)) :|: TRUE
f2448_in(x212) -> f2582_in :|: TRUE
f2448_in(one(x213)) -> f2581_in(x213) :|: TRUE
f2585_out(x214) -> f2581_out(x214) :|: TRUE
f2581_in(x215) -> f2585_in(x215) :|: TRUE
f2586_out(x216) -> f2585_out(x216) :|: TRUE
f2585_in(x217) -> f2586_in(x217) :|: TRUE
f2587_out(x218) -> f2585_out(x218) :|: TRUE
f2585_in(x219) -> f2587_in(x219) :|: TRUE
f2591_out(x220) -> f2587_out(x220) :|: TRUE
f2587_in(x221) -> f2591_in(x221) :|: TRUE
f2590_out(x222) -> f2587_out(x222) :|: TRUE
f2587_in(x223) -> f2590_in(x223) :|: TRUE
f2590_in(x224) -> f2593_in :|: TRUE
f2592_out(T535) -> f2590_out(zero(T535)) :|: TRUE
f2593_out -> f2590_out(x225) :|: TRUE
f2590_in(zero(x226)) -> f2592_in(x226) :|: TRUE
f2268_out(x227) -> f2592_out(x227) :|: TRUE
f2592_in(x228) -> f2268_in(x228) :|: TRUE
f2626_in(zero(T583)) -> f2630_in(T583) :|: TRUE
f2630_out(x229) -> f2626_out(zero(x229)) :|: TRUE
f2631_out -> f2626_out(x230) :|: TRUE
f2626_in(x231) -> f2631_in :|: TRUE
f2268_out(x232) -> f2630_out(x232) :|: TRUE
f2630_in(x233) -> f2268_in(x233) :|: TRUE
f2258_out(T421) -> f2252_out(zero(T421)) :|: TRUE
f2252_in(x234) -> f2259_in :|: TRUE
f2259_out -> f2252_out(x235) :|: TRUE
f2252_in(zero(x236)) -> f2258_in(x236) :|: TRUE
f2262_out(x237) -> f2258_out(x237) :|: TRUE
f2258_in(x238) -> f2262_in(x238) :|: TRUE
f2262_in(x239) -> f2264_in(x239) :|: TRUE
f2262_in(x240) -> f2265_in(x240) :|: TRUE
f2265_out(x241) -> f2262_out(x241) :|: TRUE
f2264_out(x242) -> f2262_out(x242) :|: TRUE
f2264_in(x243) -> f2268_in(x243) :|: TRUE
f2268_out(x244) -> f2264_out(x244) :|: TRUE
f4259_in(x245) -> f4262_in(x245) :|: TRUE
f4263_out(x246) -> f4259_out(x246) :|: TRUE
f4259_in(x247) -> f4263_in(x247) :|: TRUE
f4262_out(x248) -> f4259_out(x248) :|: TRUE
f4264_out(T791) -> f4262_out(zero(T791)) :|: TRUE
f4262_in(zero(x249)) -> f4264_in(x249) :|: TRUE
f4265_out -> f4262_out(x250) :|: TRUE
f4262_in(x251) -> f4265_in :|: TRUE
f2662_out(x252) -> f4264_out(x252) :|: TRUE
f4264_in(x253) -> f2662_in(x253) :|: TRUE
f2586_in(x254) -> f2589_in :|: TRUE
f2588_out(T530) -> f2586_out(one(T530)) :|: TRUE
f2589_out -> f2586_out(x255) :|: TRUE
f2586_in(one(x256)) -> f2588_in(x256) :|: TRUE
f2588_in(x257) -> f2398_in(x257) :|: TRUE
f2398_out(x258) -> f2588_out(x258) :|: TRUE
f4249_out(x259) -> f4245_out(x259) :|: TRUE
f4245_in(x260) -> f4248_in(x260) :|: TRUE
f4248_out(x261) -> f4245_out(x261) :|: TRUE
f4245_in(x262) -> f4249_in(x262) :|: TRUE
f4248_in(x263) -> f4251_in :|: TRUE
f4250_out(T737) -> f4248_out(zero(T737)) :|: TRUE
f4248_in(zero(x264)) -> f4250_in(x264) :|: TRUE
f4251_out -> f4248_out(x265) :|: TRUE
f2662_out(x266) -> f4250_out(x266) :|: TRUE
f4250_in(x267) -> f2662_in(x267) :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(164) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(165)
TRUE

----------------------------------------

(166)
Obligation:
Rules:
f2662_out(T651) -> f2685_out(T651) :|: TRUE
f2685_in(x) -> f2662_in(x) :|: TRUE
f2665_out(T638) -> f2664_out(T638) :|: TRUE
f2666_out(x1) -> f2664_out(x1) :|: TRUE
f2664_in(x2) -> f2665_in(x2) :|: TRUE
f2664_in(x3) -> f2666_in(x3) :|: TRUE
f2662_in(x4) -> f2664_in(x4) :|: TRUE
f2664_out(x5) -> f2662_out(x5) :|: TRUE
f2671_in(zero(x6)) -> f2685_in(x6) :|: TRUE
f2671_in(x7) -> f2686_in :|: TRUE
f2686_out -> f2671_out(x8) :|: TRUE
f2685_out(x9) -> f2671_out(zero(x9)) :|: TRUE
f2671_out(x10) -> f2666_out(x10) :|: TRUE
f2666_in(x11) -> f2670_in(x11) :|: TRUE
f2670_out(x12) -> f2666_out(x12) :|: TRUE
f2666_in(x13) -> f2671_in(x13) :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x14) -> f2_in(x14) :|: TRUE
f2_in(x15) -> f4_in(x15) :|: TRUE
f2_in(x16) -> f3_in(x16) :|: TRUE
f3_out(x17) -> f2_out(x17) :|: TRUE
f4_out(x18) -> f2_out(x18) :|: TRUE
f4_in(x19) -> f96_in(x19) :|: TRUE
f96_out(x20) -> f4_out(x20) :|: TRUE
f4_in(x21) -> f95_in(x21) :|: TRUE
f95_out(x22) -> f4_out(x22) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x23) -> f177_in :|: TRUE
f177_out -> f96_out(x24) :|: TRUE
f96_in(x25) -> f176_in(x25) :|: TRUE
f181_out(x26) -> f176_out(x26) :|: TRUE
f180_out -> f181_in(x27) :|: TRUE
f176_in(x28) -> f180_in :|: TRUE
f2249_out(x29) -> f181_out(x29) :|: TRUE
f181_in(x30) -> f2249_in(x30) :|: TRUE
f2250_out(x31) -> f2249_out(x31) :|: TRUE
f2249_in(x32) -> f2250_in(x32) :|: TRUE
f2251_out(x33) -> f2250_out(x33) :|: TRUE
f2250_in(x34) -> f2251_in(x34) :|: TRUE
f2252_out(x35) -> f2251_out(x35) :|: TRUE
f2253_out(x36) -> f2251_out(x36) :|: TRUE
f2251_in(x37) -> f2253_in(x37) :|: TRUE
f2251_in(x38) -> f2252_in(x38) :|: TRUE
f2413_out(T462) -> f2253_out(T462) :|: TRUE
f2253_in(x39) -> f2413_in(x39) :|: TRUE
f2413_in(x40) -> f2414_in(x40) :|: TRUE
f2414_out(x41) -> f2413_out(x41) :|: TRUE
f2414_in(x42) -> f2415_in(x42) :|: TRUE
f2416_out(x43) -> f2414_out(x43) :|: TRUE
f2414_in(x44) -> f2416_in(x44) :|: TRUE
f2415_out(x45) -> f2414_out(x45) :|: TRUE
f4269_out(x46) -> f2416_out(x46) :|: TRUE
f2416_in(x47) -> f4269_in(x47) :|: TRUE
f4269_in(x48) -> f4271_in(x48) :|: TRUE
f4271_out(x49) -> f4269_out(x49) :|: TRUE
f4270_out(x50) -> f4269_out(x50) :|: TRUE
f4269_in(x51) -> f4270_in(x51) :|: TRUE
f4270_in(x52) -> f4273_in :|: TRUE
f4272_out(T838) -> f4270_out(one(T838)) :|: TRUE
f4270_in(one(x53)) -> f4272_in(x53) :|: TRUE
f4273_out -> f4270_out(x54) :|: TRUE
f4272_in(x55) -> f2619_in(x55) :|: TRUE
f2619_out(x56) -> f4272_out(x56) :|: TRUE
f2621_out(T570) -> f2619_out(T570) :|: TRUE
f2619_in(x57) -> f2621_in(x57) :|: TRUE
f2622_out(x58) -> f2621_out(x58) :|: TRUE
f2623_out(x59) -> f2621_out(x59) :|: TRUE
f2621_in(x60) -> f2623_in(x60) :|: TRUE
f2621_in(x61) -> f2622_in(x61) :|: TRUE
f2623_in(x62) -> f2626_in(x62) :|: TRUE
f2626_out(x63) -> f2623_out(x63) :|: TRUE
f2627_out(x64) -> f2623_out(x64) :|: TRUE
f2623_in(x65) -> f2627_in(x65) :|: TRUE
f2634_out(T598) -> f2627_out(T598) :|: TRUE
f2627_in(x66) -> f2634_in(x66) :|: TRUE
f2634_in(x67) -> f2439_in(x67) :|: TRUE
f2439_out(x68) -> f2634_out(x68) :|: TRUE
f2439_in(T482) -> f2441_in(T482) :|: TRUE
f2441_out(x69) -> f2439_out(x69) :|: TRUE
f2442_out(x70) -> f2441_out(x70) :|: TRUE
f2443_out(x71) -> f2441_out(x71) :|: TRUE
f2441_in(x72) -> f2442_in(x72) :|: TRUE
f2441_in(x73) -> f2443_in(x73) :|: TRUE
f2449_out(x74) -> f2443_out(x74) :|: TRUE
f2448_out(x75) -> f2443_out(x75) :|: TRUE
f2443_in(x76) -> f2448_in(x76) :|: TRUE
f2443_in(x77) -> f2449_in(x77) :|: TRUE
f2449_in(x78) -> f2611_in(x78) :|: TRUE
f2449_in(x79) -> f2610_in(x79) :|: TRUE
f2610_out(x80) -> f2449_out(x80) :|: TRUE
f2611_out(x81) -> f2449_out(x81) :|: TRUE
f2611_in(x82) -> f2642_in :|: TRUE
f2642_out -> f2611_out(x83) :|: TRUE
f2641_out(T612) -> f2611_out(zero(T612)) :|: TRUE
f2611_in(zero(x84)) -> f2641_in(x84) :|: TRUE
f2643_out(x85) -> f2641_out(x85) :|: TRUE
f2641_in(x86) -> f2643_in(x86) :|: TRUE
f2643_in(x87) -> f2645_in(x87) :|: TRUE
f2645_out(x88) -> f2643_out(x88) :|: TRUE
f2643_in(x89) -> f2644_in(x89) :|: TRUE
f2644_out(x90) -> f2643_out(x90) :|: TRUE
f2649_out(x91) -> f2645_out(x91) :|: TRUE
f2645_in(x92) -> f2649_in(x92) :|: TRUE
f2650_out(x93) -> f2645_out(x93) :|: TRUE
f2645_in(x94) -> f2650_in(x94) :|: TRUE
f2652_out -> f2649_out(x95) :|: TRUE
f2649_in(x96) -> f2652_in :|: TRUE
f2651_out(T624) -> f2649_out(T624) :|: TRUE
f2649_in(x97) -> f2651_in(x97) :|: TRUE
f2651_in(x98) -> f2654_in(x98) :|: TRUE
f2654_out(x99) -> f2651_out(x99) :|: TRUE
f2655_out(x100) -> f2654_out(x100) :|: TRUE
f2656_out(x101) -> f2654_out(x101) :|: TRUE
f2654_in(x102) -> f2655_in(x102) :|: TRUE
f2654_in(x103) -> f2656_in(x103) :|: TRUE
f2662_out(x104) -> f2656_out(zero(x104)) :|: TRUE
f2656_in(x105) -> f2663_in :|: TRUE
f2656_in(zero(x106)) -> f2662_in(x106) :|: TRUE
f2663_out -> f2656_out(x107) :|: TRUE
f2687_out(x108) -> f2650_out(x108) :|: TRUE
f2688_out(x109) -> f2650_out(x109) :|: TRUE
f2650_in(x110) -> f2687_in(x110) :|: TRUE
f2650_in(x111) -> f2688_in(x111) :|: TRUE
f3160_out(T678) -> f2688_out(T678) :|: TRUE
f2688_in(x112) -> f3160_in(x112) :|: TRUE
f3160_in(x113) -> f3161_in(x113) :|: TRUE
f3161_out(x114) -> f3160_out(x114) :|: TRUE
f3161_in(x115) -> f3792_in(x115) :|: TRUE
f3792_out(x116) -> f3161_out(x116) :|: TRUE
f3793_out(x117) -> f3161_out(x117) :|: TRUE
f3161_in(x118) -> f3793_in(x118) :|: TRUE
f4172_out(x119) -> f3793_out(x119) :|: TRUE
f4173_out(x120) -> f3793_out(x120) :|: TRUE
f3793_in(x121) -> f4172_in(x121) :|: TRUE
f3793_in(x122) -> f4173_in(x122) :|: TRUE
f4172_in(zero(T718)) -> f4241_in(T718) :|: TRUE
f4242_out -> f4172_out(x123) :|: TRUE
f4241_out(x124) -> f4172_out(zero(x124)) :|: TRUE
f4172_in(x125) -> f4242_in :|: TRUE
f4243_out(x126) -> f4241_out(x126) :|: TRUE
f4241_in(x127) -> f4243_in(x127) :|: TRUE
f4243_in(x128) -> f4244_in(x128) :|: TRUE
f4245_out(x129) -> f4243_out(x129) :|: TRUE
f4244_out(x130) -> f4243_out(x130) :|: TRUE
f4243_in(x131) -> f4245_in(x131) :|: TRUE
f4249_out(x132) -> f4245_out(x132) :|: TRUE
f4245_in(x133) -> f4248_in(x133) :|: TRUE
f4248_out(x134) -> f4245_out(x134) :|: TRUE
f4245_in(x135) -> f4249_in(x135) :|: TRUE
f4248_in(x136) -> f4251_in :|: TRUE
f4250_out(T737) -> f4248_out(zero(T737)) :|: TRUE
f4248_in(zero(x137)) -> f4250_in(x137) :|: TRUE
f4251_out -> f4248_out(x138) :|: TRUE
f2662_out(x139) -> f4250_out(x139) :|: TRUE
f4250_in(x140) -> f2662_in(x140) :|: TRUE
f4173_in(x141) -> f4253_in(x141) :|: TRUE
f4173_in(x142) -> f4254_in(x142) :|: TRUE
f4254_out(x143) -> f4173_out(x143) :|: TRUE
f4253_out(x144) -> f4173_out(x144) :|: TRUE
f4253_in(zero(T772)) -> f4255_in(T772) :|: TRUE
f4255_out(x145) -> f4253_out(zero(x145)) :|: TRUE
f4256_out -> f4253_out(x146) :|: TRUE
f4253_in(x147) -> f4256_in :|: TRUE
f4257_out(x148) -> f4255_out(x148) :|: TRUE
f4255_in(x149) -> f4257_in(x149) :|: TRUE
f4258_out(x150) -> f4257_out(x150) :|: TRUE
f4257_in(x151) -> f4259_in(x151) :|: TRUE
f4259_out(x152) -> f4257_out(x152) :|: TRUE
f4257_in(x153) -> f4258_in(x153) :|: TRUE
f4259_in(x154) -> f4262_in(x154) :|: TRUE
f4263_out(x155) -> f4259_out(x155) :|: TRUE
f4259_in(x156) -> f4263_in(x156) :|: TRUE
f4262_out(x157) -> f4259_out(x157) :|: TRUE
f4264_out(T791) -> f4262_out(zero(T791)) :|: TRUE
f4262_in(zero(x158)) -> f4264_in(x158) :|: TRUE
f4265_out -> f4262_out(x159) :|: TRUE
f4262_in(x160) -> f4265_in :|: TRUE
f2662_out(x161) -> f4264_out(x161) :|: TRUE
f4264_in(x162) -> f2662_in(x162) :|: TRUE
f2687_in(T662) -> f2689_in(T662) :|: TRUE
f2689_out(x163) -> f2687_out(x163) :|: TRUE
f2690_out -> f2687_out(x164) :|: TRUE
f2687_in(x165) -> f2690_in :|: TRUE
f2689_in(x166) -> f2651_in(x166) :|: TRUE
f2651_out(x167) -> f2689_out(x167) :|: TRUE
f2439_out(x168) -> f2415_out(zero(x168)) :|: TRUE
f2415_in(zero(x169)) -> f2439_in(x169) :|: TRUE
f2415_in(x170) -> f2440_in :|: TRUE
f2440_out -> f2415_out(x171) :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(167) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(168)
TRUE

----------------------------------------

(169)
Obligation:
Rules:
f2449_out(T482) -> f2443_out(T482) :|: TRUE
f2448_out(x) -> f2443_out(x) :|: TRUE
f2443_in(x1) -> f2448_in(x1) :|: TRUE
f2443_in(x2) -> f2449_in(x2) :|: TRUE
f2611_in(x3) -> f2642_in :|: TRUE
f2642_out -> f2611_out(x4) :|: TRUE
f2641_out(T612) -> f2611_out(zero(T612)) :|: TRUE
f2611_in(zero(x5)) -> f2641_in(x5) :|: TRUE
f3161_in(T678) -> f3792_in(T678) :|: TRUE
f3792_out(x6) -> f3161_out(x6) :|: TRUE
f3793_out(x7) -> f3161_out(x7) :|: TRUE
f3161_in(x8) -> f3793_in(x8) :|: TRUE
f2687_out(x9) -> f2650_out(x9) :|: TRUE
f2688_out(x10) -> f2650_out(x10) :|: TRUE
f2650_in(x11) -> f2687_in(x11) :|: TRUE
f2650_in(x12) -> f2688_in(x12) :|: TRUE
f2439_out(T698) -> f4170_out(T698) :|: TRUE
f4170_in(x13) -> f2439_in(x13) :|: TRUE
f2607_in(T550) -> f2439_in(T550) :|: TRUE
f2439_out(x14) -> f2607_out(x14) :|: TRUE
f2585_out(T522) -> f2581_out(T522) :|: TRUE
f2581_in(x15) -> f2585_in(x15) :|: TRUE
f4243_in(T718) -> f4244_in(T718) :|: TRUE
f4245_out(x16) -> f4243_out(x16) :|: TRUE
f4244_out(x17) -> f4243_out(x17) :|: TRUE
f4243_in(x18) -> f4245_in(x18) :|: TRUE
f4249_in(T752) -> f4252_in(T752) :|: TRUE
f4252_out(x19) -> f4249_out(x19) :|: TRUE
f2622_out(T570) -> f2621_out(T570) :|: TRUE
f2623_out(x20) -> f2621_out(x20) :|: TRUE
f2621_in(x21) -> f2623_in(x21) :|: TRUE
f2621_in(x22) -> f2622_in(x22) :|: TRUE
f4243_out(x23) -> f4241_out(x23) :|: TRUE
f4241_in(x24) -> f4243_in(x24) :|: TRUE
f3160_out(x25) -> f4252_out(x25) :|: TRUE
f4252_in(x26) -> f3160_in(x26) :|: TRUE
f2582_out -> f2448_out(x27) :|: TRUE
f2581_out(x28) -> f2448_out(one(x28)) :|: TRUE
f2448_in(x29) -> f2582_in :|: TRUE
f2448_in(one(x30)) -> f2581_in(x30) :|: TRUE
f2634_in(T598) -> f2439_in(T598) :|: TRUE
f2439_out(x31) -> f2634_out(x31) :|: TRUE
f2439_in(x32) -> f2441_in(x32) :|: TRUE
f2441_out(x33) -> f2439_out(x33) :|: TRUE
f4258_out(T772) -> f4257_out(T772) :|: TRUE
f4257_in(x34) -> f4259_in(x34) :|: TRUE
f4259_out(x35) -> f4257_out(x35) :|: TRUE
f4257_in(x36) -> f4258_in(x36) :|: TRUE
f2643_out(x37) -> f2641_out(x37) :|: TRUE
f2641_in(x38) -> f2643_in(x38) :|: TRUE
f2586_out(x39) -> f2585_out(x39) :|: TRUE
f2585_in(x40) -> f2586_in(x40) :|: TRUE
f2587_out(x41) -> f2585_out(x41) :|: TRUE
f2585_in(x42) -> f2587_in(x42) :|: TRUE
f2649_out(x43) -> f2645_out(x43) :|: TRUE
f2645_in(x44) -> f2649_in(x44) :|: TRUE
f2650_out(x45) -> f2645_out(x45) :|: TRUE
f2645_in(x46) -> f2650_in(x46) :|: TRUE
f2442_out(x47) -> f2441_out(x47) :|: TRUE
f2443_out(x48) -> f2441_out(x48) :|: TRUE
f2441_in(x49) -> f2442_in(x49) :|: TRUE
f2441_in(x50) -> f2443_in(x50) :|: TRUE
f2643_in(x51) -> f2645_in(x51) :|: TRUE
f2645_out(x52) -> f2643_out(x52) :|: TRUE
f2643_in(x53) -> f2644_in(x53) :|: TRUE
f2644_out(x54) -> f2643_out(x54) :|: TRUE
f4249_out(x55) -> f4245_out(x55) :|: TRUE
f4245_in(x56) -> f4248_in(x56) :|: TRUE
f4248_out(x57) -> f4245_out(x57) :|: TRUE
f4245_in(x58) -> f4249_in(x58) :|: TRUE
f2591_out(x59) -> f2587_out(x59) :|: TRUE
f2587_in(x60) -> f2591_in(x60) :|: TRUE
f2590_out(x61) -> f2587_out(x61) :|: TRUE
f2587_in(x62) -> f2590_in(x62) :|: TRUE
f3160_in(x63) -> f3161_in(x63) :|: TRUE
f3161_out(x64) -> f3160_out(x64) :|: TRUE
f2621_out(x65) -> f2619_out(x65) :|: TRUE
f2619_in(x66) -> f2621_in(x66) :|: TRUE
f2442_in(x67) -> f2445_in :|: TRUE
f2442_in(zero(T502)) -> f2444_in(T502) :|: TRUE
f2445_out -> f2442_out(x68) :|: TRUE
f2444_out(x69) -> f2442_out(zero(x69)) :|: TRUE
f2444_in(x70) -> f2439_in(x70) :|: TRUE
f2439_out(x71) -> f2444_out(x71) :|: TRUE
f4170_out(x72) -> f3792_out(one(x72)) :|: TRUE
f4171_out -> f3792_out(x73) :|: TRUE
f3792_in(one(x74)) -> f4170_in(x74) :|: TRUE
f3792_in(x75) -> f4171_in :|: TRUE
f4172_out(x76) -> f3793_out(x76) :|: TRUE
f4173_out(x77) -> f3793_out(x77) :|: TRUE
f3793_in(x78) -> f4172_in(x78) :|: TRUE
f3793_in(x79) -> f4173_in(x79) :|: TRUE
f3160_out(x80) -> f2688_out(x80) :|: TRUE
f2688_in(x81) -> f3160_in(x81) :|: TRUE
f2449_in(x82) -> f2611_in(x82) :|: TRUE
f2449_in(x83) -> f2610_in(x83) :|: TRUE
f2610_out(x84) -> f2449_out(x84) :|: TRUE
f2611_out(x85) -> f2449_out(x85) :|: TRUE
f4259_in(x86) -> f4262_in(x86) :|: TRUE
f4263_out(x87) -> f4259_out(x87) :|: TRUE
f4259_in(x88) -> f4263_in(x88) :|: TRUE
f4262_out(x89) -> f4259_out(x89) :|: TRUE
f2634_out(x90) -> f2627_out(x90) :|: TRUE
f2627_in(x91) -> f2634_in(x91) :|: TRUE
f4172_in(zero(x92)) -> f4241_in(x92) :|: TRUE
f4242_out -> f4172_out(x93) :|: TRUE
f4241_out(x94) -> f4172_out(zero(x94)) :|: TRUE
f4172_in(x95) -> f4242_in :|: TRUE
f4253_in(zero(x96)) -> f4255_in(x96) :|: TRUE
f4255_out(x97) -> f4253_out(zero(x97)) :|: TRUE
f4256_out -> f4253_out(x98) :|: TRUE
f4253_in(x99) -> f4256_in :|: TRUE
f4257_out(x100) -> f4255_out(x100) :|: TRUE
f4255_in(x101) -> f4257_in(x101) :|: TRUE
f2591_in(x102) -> f2607_in(x102) :|: TRUE
f2607_out(x103) -> f2591_out(x103) :|: TRUE
f4266_out(T806) -> f4263_out(T806) :|: TRUE
f4263_in(x104) -> f4266_in(x104) :|: TRUE
f4266_in(x105) -> f3160_in(x105) :|: TRUE
f3160_out(x106) -> f4266_out(x106) :|: TRUE
f2641_out(T820) -> f4267_out(T820) :|: TRUE
f4267_in(x107) -> f2641_in(x107) :|: TRUE
f2610_in(x108) -> f2620_in :|: TRUE
f2620_out -> f2610_out(x109) :|: TRUE
f2610_in(one(x110)) -> f2619_in(x110) :|: TRUE
f2619_out(x111) -> f2610_out(one(x111)) :|: TRUE
f4267_out(x112) -> f4254_out(one(x112)) :|: TRUE
f4254_in(x113) -> f4268_in :|: TRUE
f4268_out -> f4254_out(x114) :|: TRUE
f4254_in(one(x115)) -> f4267_in(x115) :|: TRUE
f4173_in(x116) -> f4253_in(x116) :|: TRUE
f4173_in(x117) -> f4254_in(x117) :|: TRUE
f4254_out(x118) -> f4173_out(x118) :|: TRUE
f4253_out(x119) -> f4173_out(x119) :|: TRUE
f2623_in(x120) -> f2626_in(x120) :|: TRUE
f2626_out(x121) -> f2623_out(x121) :|: TRUE
f2627_out(x122) -> f2623_out(x122) :|: TRUE
f2623_in(x123) -> f2627_in(x123) :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x124) -> f2_in(x124) :|: TRUE
f2_in(x125) -> f4_in(x125) :|: TRUE
f2_in(x126) -> f3_in(x126) :|: TRUE
f3_out(x127) -> f2_out(x127) :|: TRUE
f4_out(x128) -> f2_out(x128) :|: TRUE
f4_in(x129) -> f96_in(x129) :|: TRUE
f96_out(x130) -> f4_out(x130) :|: TRUE
f4_in(x131) -> f95_in(x131) :|: TRUE
f95_out(x132) -> f4_out(x132) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x133) -> f177_in :|: TRUE
f177_out -> f96_out(x134) :|: TRUE
f96_in(x135) -> f176_in(x135) :|: TRUE
f181_out(x136) -> f176_out(x136) :|: TRUE
f180_out -> f181_in(x137) :|: TRUE
f176_in(x138) -> f180_in :|: TRUE
f2249_out(x139) -> f181_out(x139) :|: TRUE
f181_in(x140) -> f2249_in(x140) :|: TRUE
f2250_out(x141) -> f2249_out(x141) :|: TRUE
f2249_in(x142) -> f2250_in(x142) :|: TRUE
f2251_out(x143) -> f2250_out(x143) :|: TRUE
f2250_in(x144) -> f2251_in(x144) :|: TRUE
f2252_out(x145) -> f2251_out(x145) :|: TRUE
f2253_out(x146) -> f2251_out(x146) :|: TRUE
f2251_in(x147) -> f2253_in(x147) :|: TRUE
f2251_in(x148) -> f2252_in(x148) :|: TRUE
f2413_out(T462) -> f2253_out(T462) :|: TRUE
f2253_in(x149) -> f2413_in(x149) :|: TRUE
f2413_in(x150) -> f2414_in(x150) :|: TRUE
f2414_out(x151) -> f2413_out(x151) :|: TRUE
f2414_in(x152) -> f2415_in(x152) :|: TRUE
f2416_out(x153) -> f2414_out(x153) :|: TRUE
f2414_in(x154) -> f2416_in(x154) :|: TRUE
f2415_out(x155) -> f2414_out(x155) :|: TRUE
f2439_out(x156) -> f2415_out(zero(x156)) :|: TRUE
f2415_in(zero(x157)) -> f2439_in(x157) :|: TRUE
f2415_in(x158) -> f2440_in :|: TRUE
f2440_out -> f2415_out(x159) :|: TRUE
f4269_out(x160) -> f2416_out(x160) :|: TRUE
f2416_in(x161) -> f4269_in(x161) :|: TRUE
f4269_in(x162) -> f4271_in(x162) :|: TRUE
f4271_out(x163) -> f4269_out(x163) :|: TRUE
f4270_out(x164) -> f4269_out(x164) :|: TRUE
f4269_in(x165) -> f4270_in(x165) :|: TRUE
f4270_in(x166) -> f4273_in :|: TRUE
f4272_out(T838) -> f4270_out(one(T838)) :|: TRUE
f4270_in(one(x167)) -> f4272_in(x167) :|: TRUE
f4273_out -> f4270_out(x168) :|: TRUE
f4272_in(x169) -> f2619_in(x169) :|: TRUE
f2619_out(x170) -> f4272_out(x170) :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(170) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(171)
TRUE

----------------------------------------

(172)
Obligation:
Rules:
f1457_out -> f1472_out :|: TRUE
f1472_in -> f1457_in :|: TRUE
f1505_out -> f1462_out :|: TRUE
f1509_out -> f1462_out :|: TRUE
f1462_in -> f1509_in :|: TRUE
f1462_in -> f1505_in :|: TRUE
f1570_out -> f1553_out :|: TRUE
f1572_out -> f1553_out :|: TRUE
f1553_in -> f1570_in :|: TRUE
f1553_in -> f1572_in :|: TRUE
f1461_in -> f1472_in :|: TRUE
f1475_out -> f1461_out :|: TRUE
f1472_out -> f1461_out :|: TRUE
f1461_in -> f1475_in :|: TRUE
f1530_in -> f1554_in :|: TRUE
f1553_out -> f1530_out :|: TRUE
f1554_out -> f1530_out :|: TRUE
f1530_in -> f1553_in :|: TRUE
f1524_out -> f1505_out :|: TRUE
f1505_in -> f1524_in :|: TRUE
f1457_in -> f1458_in :|: TRUE
f1458_out -> f1457_out :|: TRUE
f1457_out -> f1570_out :|: TRUE
f1570_in -> f1457_in :|: TRUE
f1505_out -> f1573_out :|: TRUE
f1573_in -> f1505_in :|: TRUE
f1524_in -> f1528_in :|: TRUE
f1530_out -> f1524_out :|: TRUE
f1528_out -> f1524_out :|: TRUE
f1524_in -> f1530_in :|: TRUE
f1461_out -> f1458_out :|: TRUE
f1458_in -> f1461_in :|: TRUE
f1458_in -> f1462_in :|: TRUE
f1462_out -> f1458_out :|: TRUE
f1574_out -> f1554_out :|: TRUE
f1554_in -> f1573_in :|: TRUE
f1554_in -> f1574_in :|: TRUE
f1573_out -> f1554_out :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x) -> f2_in(x) :|: TRUE
f2_in(x1) -> f4_in(x1) :|: TRUE
f2_in(x2) -> f3_in(x2) :|: TRUE
f3_out(x3) -> f2_out(x3) :|: TRUE
f4_out(x4) -> f2_out(x4) :|: TRUE
f4_in(x5) -> f96_in(x5) :|: TRUE
f96_out(x6) -> f4_out(x6) :|: TRUE
f4_in(x7) -> f95_in(x7) :|: TRUE
f95_out(x8) -> f4_out(x8) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x9) -> f177_in :|: TRUE
f177_out -> f96_out(x10) :|: TRUE
f96_in(x11) -> f176_in(x11) :|: TRUE
f181_out(x12) -> f176_out(x12) :|: TRUE
f180_out -> f181_in(x13) :|: TRUE
f176_in(x14) -> f180_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_out -> f180_out :|: TRUE
f1220_out -> f1207_out :|: TRUE
f1207_in -> f1221_in :|: TRUE
f1207_in -> f1220_in :|: TRUE
f1221_out -> f1207_out :|: TRUE
f1248_out -> f1221_out :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1249_out -> f1221_out :|: TRUE
f1249_in -> f1290_in :|: TRUE
f1289_out -> f1249_out :|: TRUE
f1290_out -> f1249_out :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1439_out -> f1440_in :|: TRUE
f1440_out -> f1289_out :|: TRUE
f1289_in -> f1439_in :|: TRUE
f1440_in -> f1443_in :|: TRUE
f1443_out -> f1440_out :|: TRUE
f1444_out -> f1443_out :|: TRUE
f1443_in -> f1444_in :|: TRUE
f1445_out -> f1444_out :|: TRUE
f1444_in -> f1445_in :|: TRUE
f1445_in -> f1446_in :|: TRUE
f1445_in -> f1447_in :|: TRUE
f1446_out -> f1445_out :|: TRUE
f1447_out -> f1445_out :|: TRUE
f1576_out -> f1447_out :|: TRUE
f1447_in -> f1576_in :|: TRUE
f1577_out -> f1576_out :|: TRUE
f1576_in -> f1577_in :|: TRUE
f1577_in -> f1578_in :|: TRUE
f1578_out -> f1577_out :|: TRUE
f1579_out -> f1577_out :|: TRUE
f1577_in -> f1579_in :|: TRUE
f1578_in -> f1581_in :|: TRUE
f1581_out -> f1578_out :|: TRUE
f1580_out -> f1578_out :|: TRUE
f1578_in -> f1580_in :|: TRUE
f1582_out -> f1580_out :|: TRUE
f1580_in -> f1582_in :|: TRUE
f1582_in -> f1583_in :|: TRUE
f1582_in -> f1584_in :|: TRUE
f1584_out -> f1582_out :|: TRUE
f1583_out -> f1582_out :|: TRUE
f1588_out -> f1584_out :|: TRUE
f1587_out -> f1584_out :|: TRUE
f1584_in -> f1588_in :|: TRUE
f1584_in -> f1587_in :|: TRUE
f1588_in -> f1810_in :|: TRUE
f1588_in -> f1811_in :|: TRUE
f1811_out -> f1588_out :|: TRUE
f1810_out -> f1588_out :|: TRUE
f1829_out -> f1811_out :|: TRUE
f1828_out -> f1811_out :|: TRUE
f1811_in -> f1829_in :|: TRUE
f1811_in -> f1828_in :|: TRUE
f1828_in -> f1830_in :|: TRUE
f1830_out -> f1828_out :|: TRUE
f1832_out -> f1830_out :|: TRUE
f1830_in -> f1832_in :|: TRUE
f1830_in -> f1831_in :|: TRUE
f1831_out -> f1830_out :|: TRUE
f1832_in -> f1837_in :|: TRUE
f1832_in -> f1836_in :|: TRUE
f1836_out -> f1832_out :|: TRUE
f1837_out -> f1832_out :|: TRUE
f1837_in -> f1860_in :|: TRUE
f1837_in -> f1859_in :|: TRUE
f1860_out -> f1837_out :|: TRUE
f1859_out -> f1837_out :|: TRUE
f2047_out -> f1860_out :|: TRUE
f1860_in -> f2047_in :|: TRUE
f2047_in -> f2050_in :|: TRUE
f2050_out -> f2047_out :|: TRUE
f2052_out -> f2050_out :|: TRUE
f2051_out -> f2050_out :|: TRUE
f2050_in -> f2052_in :|: TRUE
f2050_in -> f2051_in :|: TRUE
f2052_in -> f2072_in :|: TRUE
f2072_out -> f2052_out :|: TRUE
f2073_out -> f2052_out :|: TRUE
f2052_in -> f2073_in :|: TRUE
f2073_in -> f2087_in :|: TRUE
f2087_out -> f2073_out :|: TRUE
f2088_out -> f2073_out :|: TRUE
f2073_in -> f2088_in :|: TRUE
f2087_in -> f2089_in :|: TRUE
f2090_out -> f2087_out :|: TRUE
f2089_out -> f2087_out :|: TRUE
f2087_in -> f2090_in :|: TRUE
f2089_in -> f2117_in :|: TRUE
f2117_out -> f2089_out :|: TRUE
f2117_in -> f2118_in :|: TRUE
f2118_out -> f2117_out :|: TRUE
f2119_out -> f2117_out :|: TRUE
f2117_in -> f2119_in :|: TRUE
f2119_in -> f2128_in :|: TRUE
f2129_out -> f2119_out :|: TRUE
f2128_out -> f2119_out :|: TRUE
f2119_in -> f2129_in :|: TRUE
f2128_in -> f2133_in :|: TRUE
f2132_out -> f2128_out :|: TRUE
f2128_in -> f2132_in :|: TRUE
f2133_out -> f2128_out :|: TRUE
f2132_in -> f1845_in :|: TRUE
f1845_out -> f2132_out :|: TRUE
f1847_out -> f1845_out :|: TRUE
f1845_in -> f1847_in :|: TRUE
f1847_in -> f1848_in :|: TRUE
f1847_in -> f1849_in :|: TRUE
f1848_out -> f1847_out :|: TRUE
f1849_out -> f1847_out :|: TRUE
f1849_in -> f1853_in :|: TRUE
f1853_out -> f1849_out :|: TRUE
f1854_out -> f1849_out :|: TRUE
f1849_in -> f1854_in :|: TRUE
f1856_out -> f1853_out :|: TRUE
f1855_out -> f1853_out :|: TRUE
f1853_in -> f1856_in :|: TRUE
f1853_in -> f1855_in :|: TRUE
f1457_out -> f1855_out :|: TRUE
f1855_in -> f1457_in :|: TRUE
f1836_in -> f1838_in :|: TRUE
f1839_out -> f1836_out :|: TRUE
f1838_out -> f1836_out :|: TRUE
f1836_in -> f1839_in :|: TRUE
f1838_in -> f1840_in :|: TRUE
f1840_out -> f1838_out :|: TRUE
f1841_out -> f1840_out :|: TRUE
f1842_out -> f1840_out :|: TRUE
f1840_in -> f1841_in :|: TRUE
f1840_in -> f1842_in :|: TRUE
f1841_in -> f1843_in :|: TRUE
f1843_out -> f1841_out :|: TRUE
f1841_in -> f1844_in :|: TRUE
f1844_out -> f1841_out :|: TRUE
f1843_in -> f1457_in :|: TRUE
f1457_out -> f1843_out :|: TRUE
f1579_in -> f2202_in :|: TRUE
f2202_out -> f1579_out :|: TRUE
f2202_in -> f2206_in :|: TRUE
f2202_in -> f2205_in :|: TRUE
f2205_out -> f2202_out :|: TRUE
f2206_out -> f2202_out :|: TRUE
f2211_out -> f2205_out :|: TRUE
f2212_out -> f2205_out :|: TRUE
f2205_in -> f2212_in :|: TRUE
f2205_in -> f2211_in :|: TRUE
f2211_in -> f1814_in :|: TRUE
f1814_out -> f2211_out :|: TRUE
f1814_in -> f1818_in :|: TRUE
f1818_out -> f1814_out :|: TRUE
f1818_in -> f1819_in :|: TRUE
f1818_in -> f1820_in :|: TRUE
f1820_out -> f1818_out :|: TRUE
f1819_out -> f1818_out :|: TRUE
f1819_in -> f1821_in :|: TRUE
f1822_out -> f1819_out :|: TRUE
f1819_in -> f1822_in :|: TRUE
f1821_out -> f1819_out :|: TRUE
f1821_in -> f1505_in :|: TRUE
f1505_out -> f1821_out :|: TRUE
f1820_in -> f1823_in :|: TRUE
f1823_out -> f1820_out :|: TRUE
f1824_out -> f1820_out :|: TRUE
f1820_in -> f1824_in :|: TRUE
f1823_in -> f1826_in :|: TRUE
f1825_out -> f1823_out :|: TRUE
f1826_out -> f1823_out :|: TRUE
f1823_in -> f1825_in :|: TRUE
f1457_out -> f1825_out :|: TRUE
f1825_in -> f1457_in :|: TRUE
f2072_in -> f2075_in :|: TRUE
f2074_out -> f2072_out :|: TRUE
f2075_out -> f2072_out :|: TRUE
f2072_in -> f2074_in :|: TRUE
f2076_out -> f2074_out :|: TRUE
f2074_in -> f2076_in :|: TRUE
f2078_out -> f2076_out :|: TRUE
f2076_in -> f2077_in :|: TRUE
f2076_in -> f2078_in :|: TRUE
f2077_out -> f2076_out :|: TRUE
f2077_in -> f2079_in :|: TRUE
f2080_out -> f2077_out :|: TRUE
f2079_out -> f2077_out :|: TRUE
f2077_in -> f2080_in :|: TRUE
f1457_out -> f2079_out :|: TRUE
f2079_in -> f1457_in :|: TRUE
f1814_out -> f1810_out :|: TRUE
f1810_in -> f1815_in :|: TRUE
f1815_out -> f1810_out :|: TRUE
f1810_in -> f1814_in :|: TRUE
f1842_in -> f1846_in :|: TRUE
f1846_out -> f1842_out :|: TRUE
f1842_in -> f1845_in :|: TRUE
f1845_out -> f1842_out :|: TRUE
f2081_out -> f2078_out :|: TRUE
f2078_in -> f2082_in :|: TRUE
f2078_in -> f2081_in :|: TRUE
f2082_out -> f2078_out :|: TRUE
f2081_in -> f2083_in :|: TRUE
f2083_out -> f2081_out :|: TRUE
f2081_in -> f2084_in :|: TRUE
f2084_out -> f2081_out :|: TRUE
f2083_in -> f1845_in :|: TRUE
f1845_out -> f2083_out :|: TRUE
f1587_in -> f1590_in :|: TRUE
f1587_in -> f1589_in :|: TRUE
f1590_out -> f1587_out :|: TRUE
f1589_out -> f1587_out :|: TRUE
f1591_out -> f1589_out :|: TRUE
f1589_in -> f1591_in :|: TRUE
f1591_in -> f1593_in :|: TRUE
f1592_out -> f1591_out :|: TRUE
f1591_in -> f1592_in :|: TRUE
f1593_out -> f1591_out :|: TRUE
f1593_in -> f1596_in :|: TRUE
f1597_out -> f1593_out :|: TRUE
f1596_out -> f1593_out :|: TRUE
f1593_in -> f1597_in :|: TRUE
f1799_out -> f1596_out :|: TRUE
f1596_in -> f1798_in :|: TRUE
f1798_out -> f1596_out :|: TRUE
f1596_in -> f1799_in :|: TRUE
f1798_in -> f1457_in :|: TRUE
f1457_out -> f1798_out :|: TRUE
f1824_in -> f1827_in :|: TRUE
f1827_out -> f1824_out :|: TRUE
f1580_out -> f1827_out :|: TRUE
f1827_in -> f1580_in :|: TRUE
f2118_in -> f2123_in :|: TRUE
f2123_out -> f2118_out :|: TRUE
f2118_in -> f2122_in :|: TRUE
f2122_out -> f2118_out :|: TRUE
f1457_out -> f2122_out :|: TRUE
f2122_in -> f1457_in :|: TRUE
f1859_in -> f1875_in :|: TRUE
f1876_out -> f1859_out :|: TRUE
f1875_out -> f1859_out :|: TRUE
f1859_in -> f1876_in :|: TRUE
f1875_in -> f1838_in :|: TRUE
f1838_out -> f1875_out :|: TRUE
f1450_out -> f1446_out :|: TRUE
f1446_in -> f1451_in :|: TRUE
f1446_in -> f1450_in :|: TRUE
f1451_out -> f1446_out :|: TRUE
f1450_in -> f1452_in :|: TRUE
f1452_out -> f1450_out :|: TRUE
f1452_in -> f1453_in :|: TRUE
f1454_out -> f1452_out :|: TRUE
f1453_out -> f1452_out :|: TRUE
f1452_in -> f1454_in :|: TRUE
f1453_in -> f1457_in :|: TRUE
f1457_out -> f1453_out :|: TRUE
f1592_in -> f1595_in :|: TRUE
f1592_in -> f1594_in :|: TRUE
f1594_out -> f1592_out :|: TRUE
f1595_out -> f1592_out :|: TRUE
f1594_in -> f1505_in :|: TRUE
f1505_out -> f1594_out :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(173) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(174)
TRUE

----------------------------------------

(175)
Obligation:
Rules:
f1847_out -> f1845_out :|: TRUE
f1845_in -> f1847_in :|: TRUE
f1857_in -> f1845_in :|: TRUE
f1845_out -> f1857_out :|: TRUE
f1858_out -> f1854_out :|: TRUE
f1854_in -> f1858_in :|: TRUE
f1857_out -> f1854_out :|: TRUE
f1854_in -> f1857_in :|: TRUE
f1847_in -> f1848_in :|: TRUE
f1847_in -> f1849_in :|: TRUE
f1848_out -> f1847_out :|: TRUE
f1849_out -> f1847_out :|: TRUE
f1849_in -> f1853_in :|: TRUE
f1853_out -> f1849_out :|: TRUE
f1854_out -> f1849_out :|: TRUE
f1849_in -> f1854_in :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x) -> f2_in(x) :|: TRUE
f2_in(x1) -> f4_in(x1) :|: TRUE
f2_in(x2) -> f3_in(x2) :|: TRUE
f3_out(x3) -> f2_out(x3) :|: TRUE
f4_out(x4) -> f2_out(x4) :|: TRUE
f4_in(x5) -> f96_in(x5) :|: TRUE
f96_out(x6) -> f4_out(x6) :|: TRUE
f4_in(x7) -> f95_in(x7) :|: TRUE
f95_out(x8) -> f4_out(x8) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x9) -> f177_in :|: TRUE
f177_out -> f96_out(x10) :|: TRUE
f96_in(x11) -> f176_in(x11) :|: TRUE
f181_out(x12) -> f176_out(x12) :|: TRUE
f180_out -> f181_in(x13) :|: TRUE
f176_in(x14) -> f180_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_out -> f180_out :|: TRUE
f1220_out -> f1207_out :|: TRUE
f1207_in -> f1221_in :|: TRUE
f1207_in -> f1220_in :|: TRUE
f1221_out -> f1207_out :|: TRUE
f1248_out -> f1221_out :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1249_out -> f1221_out :|: TRUE
f1249_in -> f1290_in :|: TRUE
f1289_out -> f1249_out :|: TRUE
f1290_out -> f1249_out :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1439_out -> f1440_in :|: TRUE
f1440_out -> f1289_out :|: TRUE
f1289_in -> f1439_in :|: TRUE
f1440_in -> f1443_in :|: TRUE
f1443_out -> f1440_out :|: TRUE
f1444_out -> f1443_out :|: TRUE
f1443_in -> f1444_in :|: TRUE
f1445_out -> f1444_out :|: TRUE
f1444_in -> f1445_in :|: TRUE
f1445_in -> f1446_in :|: TRUE
f1445_in -> f1447_in :|: TRUE
f1446_out -> f1445_out :|: TRUE
f1447_out -> f1445_out :|: TRUE
f1576_out -> f1447_out :|: TRUE
f1447_in -> f1576_in :|: TRUE
f1577_out -> f1576_out :|: TRUE
f1576_in -> f1577_in :|: TRUE
f1577_in -> f1578_in :|: TRUE
f1578_out -> f1577_out :|: TRUE
f1579_out -> f1577_out :|: TRUE
f1577_in -> f1579_in :|: TRUE
f1578_in -> f1581_in :|: TRUE
f1581_out -> f1578_out :|: TRUE
f1580_out -> f1578_out :|: TRUE
f1578_in -> f1580_in :|: TRUE
f1582_out -> f1580_out :|: TRUE
f1580_in -> f1582_in :|: TRUE
f1582_in -> f1583_in :|: TRUE
f1582_in -> f1584_in :|: TRUE
f1584_out -> f1582_out :|: TRUE
f1583_out -> f1582_out :|: TRUE
f1588_out -> f1584_out :|: TRUE
f1587_out -> f1584_out :|: TRUE
f1584_in -> f1588_in :|: TRUE
f1584_in -> f1587_in :|: TRUE
f1588_in -> f1810_in :|: TRUE
f1588_in -> f1811_in :|: TRUE
f1811_out -> f1588_out :|: TRUE
f1810_out -> f1588_out :|: TRUE
f1829_out -> f1811_out :|: TRUE
f1828_out -> f1811_out :|: TRUE
f1811_in -> f1829_in :|: TRUE
f1811_in -> f1828_in :|: TRUE
f1828_in -> f1830_in :|: TRUE
f1830_out -> f1828_out :|: TRUE
f1832_out -> f1830_out :|: TRUE
f1830_in -> f1832_in :|: TRUE
f1830_in -> f1831_in :|: TRUE
f1831_out -> f1830_out :|: TRUE
f1832_in -> f1837_in :|: TRUE
f1832_in -> f1836_in :|: TRUE
f1836_out -> f1832_out :|: TRUE
f1837_out -> f1832_out :|: TRUE
f1837_in -> f1860_in :|: TRUE
f1837_in -> f1859_in :|: TRUE
f1860_out -> f1837_out :|: TRUE
f1859_out -> f1837_out :|: TRUE
f2047_out -> f1860_out :|: TRUE
f1860_in -> f2047_in :|: TRUE
f2047_in -> f2050_in :|: TRUE
f2050_out -> f2047_out :|: TRUE
f2052_out -> f2050_out :|: TRUE
f2051_out -> f2050_out :|: TRUE
f2050_in -> f2052_in :|: TRUE
f2050_in -> f2051_in :|: TRUE
f2052_in -> f2072_in :|: TRUE
f2072_out -> f2052_out :|: TRUE
f2073_out -> f2052_out :|: TRUE
f2052_in -> f2073_in :|: TRUE
f2073_in -> f2087_in :|: TRUE
f2087_out -> f2073_out :|: TRUE
f2088_out -> f2073_out :|: TRUE
f2073_in -> f2088_in :|: TRUE
f2087_in -> f2089_in :|: TRUE
f2090_out -> f2087_out :|: TRUE
f2089_out -> f2087_out :|: TRUE
f2087_in -> f2090_in :|: TRUE
f2089_in -> f2117_in :|: TRUE
f2117_out -> f2089_out :|: TRUE
f2117_in -> f2118_in :|: TRUE
f2118_out -> f2117_out :|: TRUE
f2119_out -> f2117_out :|: TRUE
f2117_in -> f2119_in :|: TRUE
f2119_in -> f2128_in :|: TRUE
f2129_out -> f2119_out :|: TRUE
f2128_out -> f2119_out :|: TRUE
f2119_in -> f2129_in :|: TRUE
f2128_in -> f2133_in :|: TRUE
f2132_out -> f2128_out :|: TRUE
f2128_in -> f2132_in :|: TRUE
f2133_out -> f2128_out :|: TRUE
f2132_in -> f1845_in :|: TRUE
f1845_out -> f2132_out :|: TRUE
f1836_in -> f1838_in :|: TRUE
f1839_out -> f1836_out :|: TRUE
f1838_out -> f1836_out :|: TRUE
f1836_in -> f1839_in :|: TRUE
f1838_in -> f1840_in :|: TRUE
f1840_out -> f1838_out :|: TRUE
f1841_out -> f1840_out :|: TRUE
f1842_out -> f1840_out :|: TRUE
f1840_in -> f1841_in :|: TRUE
f1840_in -> f1842_in :|: TRUE
f1842_in -> f1846_in :|: TRUE
f1846_out -> f1842_out :|: TRUE
f1842_in -> f1845_in :|: TRUE
f1845_out -> f1842_out :|: TRUE
f1859_in -> f1875_in :|: TRUE
f1876_out -> f1859_out :|: TRUE
f1875_out -> f1859_out :|: TRUE
f1859_in -> f1876_in :|: TRUE
f1875_in -> f1838_in :|: TRUE
f1838_out -> f1875_out :|: TRUE
f1579_in -> f2202_in :|: TRUE
f2202_out -> f1579_out :|: TRUE
f2202_in -> f2206_in :|: TRUE
f2202_in -> f2205_in :|: TRUE
f2205_out -> f2202_out :|: TRUE
f2206_out -> f2202_out :|: TRUE
f2211_out -> f2205_out :|: TRUE
f2212_out -> f2205_out :|: TRUE
f2205_in -> f2212_in :|: TRUE
f2205_in -> f2211_in :|: TRUE
f2211_in -> f1814_in :|: TRUE
f1814_out -> f2211_out :|: TRUE
f1814_in -> f1818_in :|: TRUE
f1818_out -> f1814_out :|: TRUE
f1818_in -> f1819_in :|: TRUE
f1818_in -> f1820_in :|: TRUE
f1820_out -> f1818_out :|: TRUE
f1819_out -> f1818_out :|: TRUE
f1820_in -> f1823_in :|: TRUE
f1823_out -> f1820_out :|: TRUE
f1824_out -> f1820_out :|: TRUE
f1820_in -> f1824_in :|: TRUE
f1824_in -> f1827_in :|: TRUE
f1827_out -> f1824_out :|: TRUE
f1580_out -> f1827_out :|: TRUE
f1827_in -> f1580_in :|: TRUE
f2072_in -> f2075_in :|: TRUE
f2074_out -> f2072_out :|: TRUE
f2075_out -> f2072_out :|: TRUE
f2072_in -> f2074_in :|: TRUE
f2076_out -> f2074_out :|: TRUE
f2074_in -> f2076_in :|: TRUE
f2078_out -> f2076_out :|: TRUE
f2076_in -> f2077_in :|: TRUE
f2076_in -> f2078_in :|: TRUE
f2077_out -> f2076_out :|: TRUE
f2081_out -> f2078_out :|: TRUE
f2078_in -> f2082_in :|: TRUE
f2078_in -> f2081_in :|: TRUE
f2082_out -> f2078_out :|: TRUE
f2081_in -> f2083_in :|: TRUE
f2083_out -> f2081_out :|: TRUE
f2081_in -> f2084_in :|: TRUE
f2084_out -> f2081_out :|: TRUE
f2083_in -> f1845_in :|: TRUE
f1845_out -> f2083_out :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(176) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(177)
TRUE

----------------------------------------

(178)
Obligation:
Rules:
f1832_in -> f1837_in :|: TRUE
f1832_in -> f1836_in :|: TRUE
f1836_out -> f1832_out :|: TRUE
f1837_out -> f1832_out :|: TRUE
f2078_out -> f2076_out :|: TRUE
f2076_in -> f2077_in :|: TRUE
f2076_in -> f2078_in :|: TRUE
f2077_out -> f2076_out :|: TRUE
f1591_in -> f1593_in :|: TRUE
f1592_out -> f1591_out :|: TRUE
f1591_in -> f1592_in :|: TRUE
f1593_out -> f1591_out :|: TRUE
f2089_in -> f2117_in :|: TRUE
f2117_out -> f2089_out :|: TRUE
f1582_in -> f1583_in :|: TRUE
f1582_in -> f1584_in :|: TRUE
f1584_out -> f1582_out :|: TRUE
f1583_out -> f1582_out :|: TRUE
f2081_out -> f2078_out :|: TRUE
f2078_in -> f2082_in :|: TRUE
f2078_in -> f2081_in :|: TRUE
f2082_out -> f2078_out :|: TRUE
f1837_in -> f1860_in :|: TRUE
f1837_in -> f1859_in :|: TRUE
f1860_out -> f1837_out :|: TRUE
f1859_out -> f1837_out :|: TRUE
f2051_in -> f2071_in :|: TRUE
f2070_out -> f2051_out :|: TRUE
f2051_in -> f2070_in :|: TRUE
f2071_out -> f2051_out :|: TRUE
f2076_out -> f2074_out :|: TRUE
f2074_in -> f2076_in :|: TRUE
f2047_out -> f2086_out :|: TRUE
f2086_in -> f2047_in :|: TRUE
f1582_out -> f1580_out :|: TRUE
f1580_in -> f1582_in :|: TRUE
f2087_in -> f2089_in :|: TRUE
f2090_out -> f2087_out :|: TRUE
f2089_out -> f2087_out :|: TRUE
f2087_in -> f2090_in :|: TRUE
f1591_out -> f1589_out :|: TRUE
f1589_in -> f1591_in :|: TRUE
f2073_in -> f2087_in :|: TRUE
f2087_out -> f2073_out :|: TRUE
f2088_out -> f2073_out :|: TRUE
f2073_in -> f2088_in :|: TRUE
f2168_in -> f1828_in :|: TRUE
f1828_out -> f2168_out :|: TRUE
f1829_out -> f1811_out :|: TRUE
f1828_out -> f1811_out :|: TRUE
f1811_in -> f1829_in :|: TRUE
f1811_in -> f1828_in :|: TRUE
f2086_out -> f2082_out :|: TRUE
f2082_in -> f2086_in :|: TRUE
f1814_in -> f1818_in :|: TRUE
f1818_out -> f1814_out :|: TRUE
f1824_in -> f1827_in :|: TRUE
f1827_out -> f1824_out :|: TRUE
f2052_out -> f2050_out :|: TRUE
f2051_out -> f2050_out :|: TRUE
f2050_in -> f2052_in :|: TRUE
f2050_in -> f2051_in :|: TRUE
f2119_in -> f2128_in :|: TRUE
f2129_out -> f2119_out :|: TRUE
f2128_out -> f2119_out :|: TRUE
f2119_in -> f2129_in :|: TRUE
f1597_in -> f1804_in :|: TRUE
f1804_out -> f1597_out :|: TRUE
f2047_in -> f2050_in :|: TRUE
f2050_out -> f2047_out :|: TRUE
f2047_out -> f2143_out :|: TRUE
f2143_in -> f2047_in :|: TRUE
f1588_out -> f1584_out :|: TRUE
f1587_out -> f1584_out :|: TRUE
f1584_in -> f1588_in :|: TRUE
f1584_in -> f1587_in :|: TRUE
f1814_out -> f1810_out :|: TRUE
f1810_in -> f1815_in :|: TRUE
f1815_out -> f1810_out :|: TRUE
f1810_in -> f1814_in :|: TRUE
f1593_in -> f1596_in :|: TRUE
f1597_out -> f1593_out :|: TRUE
f1596_out -> f1593_out :|: TRUE
f1593_in -> f1597_in :|: TRUE
f1585_in -> f1580_in :|: TRUE
f1580_out -> f1585_out :|: TRUE
f2117_in -> f2118_in :|: TRUE
f2118_out -> f2117_out :|: TRUE
f2119_out -> f2117_out :|: TRUE
f2117_in -> f2119_in :|: TRUE
f1820_in -> f1823_in :|: TRUE
f1823_out -> f1820_out :|: TRUE
f1824_out -> f1820_out :|: TRUE
f1820_in -> f1824_in :|: TRUE
f1580_out -> f1827_out :|: TRUE
f1827_in -> f1580_in :|: TRUE
f1588_in -> f1810_in :|: TRUE
f1588_in -> f1811_in :|: TRUE
f1811_out -> f1588_out :|: TRUE
f1810_out -> f1588_out :|: TRUE
f2047_out -> f1860_out :|: TRUE
f1860_in -> f2047_in :|: TRUE
f1583_in -> f1586_in :|: TRUE
f1583_in -> f1585_in :|: TRUE
f1585_out -> f1583_out :|: TRUE
f1586_out -> f1583_out :|: TRUE
f1580_out -> f2070_out :|: TRUE
f2070_in -> f1580_in :|: TRUE
f1804_in -> f1580_in :|: TRUE
f1580_out -> f1804_out :|: TRUE
f1587_in -> f1590_in :|: TRUE
f1587_in -> f1589_in :|: TRUE
f1590_out -> f1587_out :|: TRUE
f1589_out -> f1587_out :|: TRUE
f1818_in -> f1819_in :|: TRUE
f1818_in -> f1820_in :|: TRUE
f1820_out -> f1818_out :|: TRUE
f1819_out -> f1818_out :|: TRUE
f1828_in -> f1830_in :|: TRUE
f1830_out -> f1828_out :|: TRUE
f1832_out -> f1830_out :|: TRUE
f1830_in -> f1832_in :|: TRUE
f1830_in -> f1831_in :|: TRUE
f1831_out -> f1830_out :|: TRUE
f2052_in -> f2072_in :|: TRUE
f2072_out -> f2052_out :|: TRUE
f2073_out -> f2052_out :|: TRUE
f2052_in -> f2073_in :|: TRUE
f2072_in -> f2075_in :|: TRUE
f2074_out -> f2072_out :|: TRUE
f2075_out -> f2072_out :|: TRUE
f2072_in -> f2074_in :|: TRUE
f2088_in -> f2168_in :|: TRUE
f2168_out -> f2088_out :|: TRUE
f2088_in -> f2169_in :|: TRUE
f2169_out -> f2088_out :|: TRUE
f2129_in -> f2143_in :|: TRUE
f2143_out -> f2129_out :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x) -> f2_in(x) :|: TRUE
f2_in(x1) -> f4_in(x1) :|: TRUE
f2_in(x2) -> f3_in(x2) :|: TRUE
f3_out(x3) -> f2_out(x3) :|: TRUE
f4_out(x4) -> f2_out(x4) :|: TRUE
f4_in(x5) -> f96_in(x5) :|: TRUE
f96_out(x6) -> f4_out(x6) :|: TRUE
f4_in(x7) -> f95_in(x7) :|: TRUE
f95_out(x8) -> f4_out(x8) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x9) -> f177_in :|: TRUE
f177_out -> f96_out(x10) :|: TRUE
f96_in(x11) -> f176_in(x11) :|: TRUE
f181_out(x12) -> f176_out(x12) :|: TRUE
f180_out -> f181_in(x13) :|: TRUE
f176_in(x14) -> f180_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_out -> f180_out :|: TRUE
f1220_out -> f1207_out :|: TRUE
f1207_in -> f1221_in :|: TRUE
f1207_in -> f1220_in :|: TRUE
f1221_out -> f1207_out :|: TRUE
f1248_out -> f1221_out :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1249_out -> f1221_out :|: TRUE
f1249_in -> f1290_in :|: TRUE
f1289_out -> f1249_out :|: TRUE
f1290_out -> f1249_out :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1439_out -> f1440_in :|: TRUE
f1440_out -> f1289_out :|: TRUE
f1289_in -> f1439_in :|: TRUE
f1440_in -> f1443_in :|: TRUE
f1443_out -> f1440_out :|: TRUE
f1444_out -> f1443_out :|: TRUE
f1443_in -> f1444_in :|: TRUE
f1445_out -> f1444_out :|: TRUE
f1444_in -> f1445_in :|: TRUE
f1445_in -> f1446_in :|: TRUE
f1445_in -> f1447_in :|: TRUE
f1446_out -> f1445_out :|: TRUE
f1447_out -> f1445_out :|: TRUE
f1576_out -> f1447_out :|: TRUE
f1447_in -> f1576_in :|: TRUE
f1577_out -> f1576_out :|: TRUE
f1576_in -> f1577_in :|: TRUE
f1577_in -> f1578_in :|: TRUE
f1578_out -> f1577_out :|: TRUE
f1579_out -> f1577_out :|: TRUE
f1577_in -> f1579_in :|: TRUE
f1578_in -> f1581_in :|: TRUE
f1581_out -> f1578_out :|: TRUE
f1580_out -> f1578_out :|: TRUE
f1578_in -> f1580_in :|: TRUE
f1579_in -> f2202_in :|: TRUE
f2202_out -> f1579_out :|: TRUE
f2202_in -> f2206_in :|: TRUE
f2202_in -> f2205_in :|: TRUE
f2205_out -> f2202_out :|: TRUE
f2206_out -> f2202_out :|: TRUE
f2211_out -> f2205_out :|: TRUE
f2212_out -> f2205_out :|: TRUE
f2205_in -> f2212_in :|: TRUE
f2205_in -> f2211_in :|: TRUE
f2211_in -> f1814_in :|: TRUE
f1814_out -> f2211_out :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(179) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(180)
TRUE

----------------------------------------

(181)
Obligation:
Rules:
f2078_out -> f2076_out :|: TRUE
f2076_in -> f2077_in :|: TRUE
f2076_in -> f2078_in :|: TRUE
f2077_out -> f2076_out :|: TRUE
f1457_out -> f2122_out :|: TRUE
f2122_in -> f1457_in :|: TRUE
f1457_out -> f2079_out :|: TRUE
f2079_in -> f1457_in :|: TRUE
f1837_in -> f1860_in :|: TRUE
f1837_in -> f1859_in :|: TRUE
f1860_out -> f1837_out :|: TRUE
f1859_out -> f1837_out :|: TRUE
f1576_out -> f1447_out :|: TRUE
f1447_in -> f1576_in :|: TRUE
f2087_in -> f2089_in :|: TRUE
f2090_out -> f2087_out :|: TRUE
f2089_out -> f2087_out :|: TRUE
f2087_in -> f2090_in :|: TRUE
f1798_in -> f1457_in :|: TRUE
f1457_out -> f1798_out :|: TRUE
f1505_out -> f1573_out :|: TRUE
f1573_in -> f1505_in :|: TRUE
f1829_out -> f1811_out :|: TRUE
f1828_out -> f1811_out :|: TRUE
f1811_in -> f1829_in :|: TRUE
f1811_in -> f1828_in :|: TRUE
f1440_in -> f1443_in :|: TRUE
f1443_out -> f1440_out :|: TRUE
f1838_in -> f1840_in :|: TRUE
f1840_out -> f1838_out :|: TRUE
f1849_in -> f1853_in :|: TRUE
f1853_out -> f1849_out :|: TRUE
f1854_out -> f1849_out :|: TRUE
f1849_in -> f1854_in :|: TRUE
f1850_in -> f1850_out :|: TRUE
f1831_in -> f1833_in :|: TRUE
f1833_out -> f1831_out :|: TRUE
f1834_out -> f1831_out :|: TRUE
f1831_in -> f1834_in :|: TRUE
f1453_in -> f1457_in :|: TRUE
f1457_out -> f1453_out :|: TRUE
f1847_out -> f1845_out :|: TRUE
f1845_in -> f1847_in :|: TRUE
f1799_out -> f1596_out :|: TRUE
f1596_in -> f1798_in :|: TRUE
f1798_out -> f1596_out :|: TRUE
f1596_in -> f1799_in :|: TRUE
f1461_in -> f1472_in :|: TRUE
f1475_out -> f1461_out :|: TRUE
f1472_out -> f1461_out :|: TRUE
f1461_in -> f1475_in :|: TRUE
f2117_in -> f2118_in :|: TRUE
f2118_out -> f2117_out :|: TRUE
f2119_out -> f2117_out :|: TRUE
f2117_in -> f2119_in :|: TRUE
f1820_in -> f1823_in :|: TRUE
f1823_out -> f1820_out :|: TRUE
f1824_out -> f1820_out :|: TRUE
f1820_in -> f1824_in :|: TRUE
f2083_in -> f1845_in :|: TRUE
f1845_out -> f2083_out :|: TRUE
f1821_in -> f1505_in :|: TRUE
f1505_out -> f1821_out :|: TRUE
f1450_in -> f1452_in :|: TRUE
f1452_out -> f1450_out :|: TRUE
f1819_in -> f1821_in :|: TRUE
f1822_out -> f1819_out :|: TRUE
f1819_in -> f1822_in :|: TRUE
f1821_out -> f1819_out :|: TRUE
f2077_in -> f2079_in :|: TRUE
f2080_out -> f2077_out :|: TRUE
f2079_out -> f2077_out :|: TRUE
f2077_in -> f2080_in :|: TRUE
f1461_out -> f1458_out :|: TRUE
f1458_in -> f1461_in :|: TRUE
f1458_in -> f1462_in :|: TRUE
f1462_out -> f1458_out :|: TRUE
f1818_in -> f1819_in :|: TRUE
f1818_in -> f1820_in :|: TRUE
f1820_out -> f1818_out :|: TRUE
f1819_out -> f1818_out :|: TRUE
f1850_out -> f1848_out :|: TRUE
f1848_in -> f1850_in :|: TRUE
f1851_out -> f1848_out :|: TRUE
f1848_in -> f1851_in :|: TRUE
f1594_in -> f1505_in :|: TRUE
f1505_out -> f1594_out :|: TRUE
f2072_in -> f2075_in :|: TRUE
f2074_out -> f2072_out :|: TRUE
f2075_out -> f2072_out :|: TRUE
f2072_in -> f2074_in :|: TRUE
f2129_in -> f2143_in :|: TRUE
f2143_out -> f2129_out :|: TRUE
f1445_out -> f1444_out :|: TRUE
f1444_in -> f1445_in :|: TRUE
f1457_out -> f1472_out :|: TRUE
f1472_in -> f1457_in :|: TRUE
f1439_out -> f1440_in :|: TRUE
f1440_out -> f1289_out :|: TRUE
f1289_in -> f1439_in :|: TRUE
f2211_in -> f1814_in :|: TRUE
f1814_out -> f2211_out :|: TRUE
f1836_in -> f1838_in :|: TRUE
f1839_out -> f1836_out :|: TRUE
f1838_out -> f1836_out :|: TRUE
f1836_in -> f1839_in :|: TRUE
f1505_out -> f1462_out :|: TRUE
f1509_out -> f1462_out :|: TRUE
f1462_in -> f1509_in :|: TRUE
f1462_in -> f1505_in :|: TRUE
f1248_out -> f1221_out :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1249_out -> f1221_out :|: TRUE
f1591_in -> f1593_in :|: TRUE
f1592_out -> f1591_out :|: TRUE
f1591_in -> f1592_in :|: TRUE
f1593_out -> f1591_out :|: TRUE
f180_out -> f1285_out :|: TRUE
f1285_in -> f180_in :|: TRUE
f1823_in -> f1826_in :|: TRUE
f1825_out -> f1823_out :|: TRUE
f1826_out -> f1823_out :|: TRUE
f1823_in -> f1825_in :|: TRUE
f1570_out -> f1553_out :|: TRUE
f1572_out -> f1553_out :|: TRUE
f1553_in -> f1570_in :|: TRUE
f1553_in -> f1572_in :|: TRUE
f2089_in -> f2117_in :|: TRUE
f2117_out -> f2089_out :|: TRUE
f2128_in -> f2133_in :|: TRUE
f2132_out -> f2128_out :|: TRUE
f2128_in -> f2132_in :|: TRUE
f2133_out -> f2128_out :|: TRUE
f2051_in -> f2071_in :|: TRUE
f2070_out -> f2051_out :|: TRUE
f2051_in -> f2070_in :|: TRUE
f2071_out -> f2051_out :|: TRUE
f2047_out -> f2086_out :|: TRUE
f2086_in -> f2047_in :|: TRUE
f1591_out -> f1589_out :|: TRUE
f1589_in -> f1591_in :|: TRUE
f2052_out -> f2050_out :|: TRUE
f2051_out -> f2050_out :|: TRUE
f2050_in -> f2052_in :|: TRUE
f2050_in -> f2051_in :|: TRUE
f1592_in -> f1595_in :|: TRUE
f1592_in -> f1594_in :|: TRUE
f1594_out -> f1592_out :|: TRUE
f1595_out -> f1592_out :|: TRUE
f2119_in -> f2128_in :|: TRUE
f2129_out -> f2119_out :|: TRUE
f2128_out -> f2119_out :|: TRUE
f2119_in -> f2129_in :|: TRUE
f1577_out -> f1576_out :|: TRUE
f1576_in -> f1577_in :|: TRUE
f2047_out -> f2143_out :|: TRUE
f2143_in -> f2047_in :|: TRUE
f1445_in -> f1446_in :|: TRUE
f1445_in -> f1447_in :|: TRUE
f1446_out -> f1445_out :|: TRUE
f1447_out -> f1445_out :|: TRUE
f1841_out -> f1840_out :|: TRUE
f1842_out -> f1840_out :|: TRUE
f1840_in -> f1841_in :|: TRUE
f1840_in -> f1842_in :|: TRUE
f1814_out -> f1810_out :|: TRUE
f1810_in -> f1815_in :|: TRUE
f1815_out -> f1810_out :|: TRUE
f1810_in -> f1814_in :|: TRUE
f1444_out -> f1443_out :|: TRUE
f1443_in -> f1444_in :|: TRUE
f1588_in -> f1810_in :|: TRUE
f1588_in -> f1811_in :|: TRUE
f1811_out -> f1588_out :|: TRUE
f1810_out -> f1588_out :|: TRUE
f1249_in -> f1290_in :|: TRUE
f1289_out -> f1249_out :|: TRUE
f1290_out -> f1249_out :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1457_in -> f1458_in :|: TRUE
f1458_out -> f1457_out :|: TRUE
f1856_out -> f1853_out :|: TRUE
f1855_out -> f1853_out :|: TRUE
f1853_in -> f1856_in :|: TRUE
f1853_in -> f1855_in :|: TRUE
f1833_in -> f1833_out :|: TRUE
f1832_in -> f1837_in :|: TRUE
f1832_in -> f1836_in :|: TRUE
f1836_out -> f1832_out :|: TRUE
f1837_out -> f1832_out :|: TRUE
f2202_in -> f2206_in :|: TRUE
f2202_in -> f2205_in :|: TRUE
f2205_out -> f2202_out :|: TRUE
f2206_out -> f2202_out :|: TRUE
f1842_in -> f1846_in :|: TRUE
f1846_out -> f1842_out :|: TRUE
f1842_in -> f1845_in :|: TRUE
f1845_out -> f1842_out :|: TRUE
f1452_in -> f1453_in :|: TRUE
f1454_out -> f1452_out :|: TRUE
f1453_out -> f1452_out :|: TRUE
f1452_in -> f1454_in :|: TRUE
f1439_in -> f180_in :|: TRUE
f180_out -> f1439_out :|: TRUE
f1859_in -> f1875_in :|: TRUE
f1876_out -> f1859_out :|: TRUE
f1875_out -> f1859_out :|: TRUE
f1859_in -> f1876_in :|: TRUE
f1843_in -> f1457_in :|: TRUE
f1457_out -> f1843_out :|: TRUE
f1582_in -> f1583_in :|: TRUE
f1582_in -> f1584_in :|: TRUE
f1584_out -> f1582_out :|: TRUE
f1583_out -> f1582_out :|: TRUE
f2076_out -> f2074_out :|: TRUE
f2074_in -> f2076_in :|: TRUE
f2118_in -> f2123_in :|: TRUE
f2123_out -> f2118_out :|: TRUE
f2118_in -> f2122_in :|: TRUE
f2122_out -> f2118_out :|: TRUE
f1579_in -> f2202_in :|: TRUE
f2202_out -> f1579_out :|: TRUE
f1538_in -> f1538_out :|: TRUE
f2168_in -> f1828_in :|: TRUE
f1828_out -> f2168_out :|: TRUE
f1450_out -> f1446_out :|: TRUE
f1446_in -> f1451_in :|: TRUE
f1446_in -> f1450_in :|: TRUE
f1451_out -> f1446_out :|: TRUE
f2132_in -> f1845_in :|: TRUE
f1845_out -> f2132_out :|: TRUE
f1575_out -> f1454_out :|: TRUE
f1454_in -> f1575_in :|: TRUE
f2086_out -> f2082_out :|: TRUE
f2082_in -> f2086_in :|: TRUE
f1814_in -> f1818_in :|: TRUE
f1818_out -> f1814_out :|: TRUE
f1597_in -> f1804_in :|: TRUE
f1804_out -> f1597_out :|: TRUE
f2047_in -> f2050_in :|: TRUE
f2050_out -> f2047_out :|: TRUE
f1574_out -> f1554_out :|: TRUE
f1554_in -> f1573_in :|: TRUE
f1554_in -> f1574_in :|: TRUE
f1573_out -> f1554_out :|: TRUE
f1248_in -> f1286_in :|: TRUE
f1248_in -> f1285_in :|: TRUE
f1286_out -> f1248_out :|: TRUE
f1285_out -> f1248_out :|: TRUE
f1588_out -> f1584_out :|: TRUE
f1587_out -> f1584_out :|: TRUE
f1584_in -> f1588_in :|: TRUE
f1584_in -> f1587_in :|: TRUE
f1593_in -> f1596_in :|: TRUE
f1597_out -> f1593_out :|: TRUE
f1596_out -> f1593_out :|: TRUE
f1593_in -> f1597_in :|: TRUE
f1585_in -> f1580_in :|: TRUE
f1580_out -> f1585_out :|: TRUE
f1580_out -> f1827_out :|: TRUE
f1827_in -> f1580_in :|: TRUE
f1530_in -> f1554_in :|: TRUE
f1553_out -> f1530_out :|: TRUE
f1554_out -> f1530_out :|: TRUE
f1530_in -> f1553_in :|: TRUE
f1524_out -> f1505_out :|: TRUE
f1505_in -> f1524_in :|: TRUE
f2047_out -> f1860_out :|: TRUE
f1860_in -> f2047_in :|: TRUE
f1577_in -> f1578_in :|: TRUE
f1578_out -> f1577_out :|: TRUE
f1579_out -> f1577_out :|: TRUE
f1577_in -> f1579_in :|: TRUE
f1583_in -> f1586_in :|: TRUE
f1583_in -> f1585_in :|: TRUE
f1585_out -> f1583_out :|: TRUE
f1586_out -> f1583_out :|: TRUE
f1524_in -> f1528_in :|: TRUE
f1530_out -> f1524_out :|: TRUE
f1528_out -> f1524_out :|: TRUE
f1524_in -> f1530_in :|: TRUE
f1857_in -> f1845_in :|: TRUE
f1845_out -> f1857_out :|: TRUE
f1847_in -> f1848_in :|: TRUE
f1847_in -> f1849_in :|: TRUE
f1848_out -> f1847_out :|: TRUE
f1849_out -> f1847_out :|: TRUE
f2052_in -> f2072_in :|: TRUE
f2072_out -> f2052_out :|: TRUE
f2073_out -> f2052_out :|: TRUE
f2052_in -> f2073_in :|: TRUE
f2088_in -> f2168_in :|: TRUE
f2168_out -> f2088_out :|: TRUE
f2088_in -> f2169_in :|: TRUE
f2169_out -> f2088_out :|: TRUE
f1858_out -> f1854_out :|: TRUE
f1854_in -> f1858_in :|: TRUE
f1857_out -> f1854_out :|: TRUE
f1854_in -> f1857_in :|: TRUE
f2211_out -> f2205_out :|: TRUE
f2212_out -> f2205_out :|: TRUE
f2205_in -> f2212_in :|: TRUE
f2205_in -> f2211_in :|: TRUE
f2081_out -> f2078_out :|: TRUE
f2078_in -> f2082_in :|: TRUE
f2078_in -> f2081_in :|: TRUE
f2082_out -> f2078_out :|: TRUE
f1582_out -> f1580_out :|: TRUE
f1580_in -> f1582_in :|: TRUE
f2073_in -> f2087_in :|: TRUE
f2087_out -> f2073_out :|: TRUE
f2088_out -> f2073_out :|: TRUE
f2073_in -> f2088_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_out -> f180_out :|: TRUE
f2243_out -> f2206_out :|: TRUE
f2206_in -> f2243_in :|: TRUE
f1220_out -> f1207_out :|: TRUE
f1207_in -> f1221_in :|: TRUE
f1207_in -> f1220_in :|: TRUE
f1221_out -> f1207_out :|: TRUE
f1824_in -> f1827_in :|: TRUE
f1827_out -> f1824_out :|: TRUE
f1875_in -> f1838_in :|: TRUE
f1838_out -> f1875_out :|: TRUE
f2081_in -> f2083_in :|: TRUE
f2083_out -> f2081_out :|: TRUE
f2081_in -> f2084_in :|: TRUE
f2084_out -> f2081_out :|: TRUE
f1578_in -> f1581_in :|: TRUE
f1581_out -> f1578_out :|: TRUE
f1580_out -> f1578_out :|: TRUE
f1578_in -> f1580_in :|: TRUE
f1580_out -> f2070_out :|: TRUE
f2070_in -> f1580_in :|: TRUE
f1457_out -> f1570_out :|: TRUE
f1570_in -> f1457_in :|: TRUE
f1804_in -> f1580_in :|: TRUE
f1580_out -> f1804_out :|: TRUE
f1528_in -> f1538_in :|: TRUE
f1538_out -> f1528_out :|: TRUE
f1540_out -> f1528_out :|: TRUE
f1528_in -> f1540_in :|: TRUE
f1587_in -> f1590_in :|: TRUE
f1587_in -> f1589_in :|: TRUE
f1590_out -> f1587_out :|: TRUE
f1589_out -> f1587_out :|: TRUE
f1457_out -> f1855_out :|: TRUE
f1855_in -> f1457_in :|: TRUE
f1841_in -> f1843_in :|: TRUE
f1843_out -> f1841_out :|: TRUE
f1841_in -> f1844_in :|: TRUE
f1844_out -> f1841_out :|: TRUE
f1828_in -> f1830_in :|: TRUE
f1830_out -> f1828_out :|: TRUE
f1832_out -> f1830_out :|: TRUE
f1830_in -> f1832_in :|: TRUE
f1830_in -> f1831_in :|: TRUE
f1831_out -> f1830_out :|: TRUE
f1457_out -> f1825_out :|: TRUE
f1825_in -> f1457_in :|: TRUE
f2_out(T3) -> f1_out(T3) :|: TRUE
f1_in(x) -> f2_in(x) :|: TRUE
f2_in(x1) -> f4_in(x1) :|: TRUE
f2_in(x2) -> f3_in(x2) :|: TRUE
f3_out(x3) -> f2_out(x3) :|: TRUE
f4_out(x4) -> f2_out(x4) :|: TRUE
f4_in(x5) -> f96_in(x5) :|: TRUE
f96_out(x6) -> f4_out(x6) :|: TRUE
f4_in(x7) -> f95_in(x7) :|: TRUE
f95_out(x8) -> f4_out(x8) :|: TRUE
f176_out(T36) -> f96_out(T36) :|: TRUE
f96_in(x9) -> f177_in :|: TRUE
f177_out -> f96_out(x10) :|: TRUE
f96_in(x11) -> f176_in(x11) :|: TRUE
f181_out(x12) -> f176_out(x12) :|: TRUE
f180_out -> f181_in(x13) :|: TRUE
f176_in(x14) -> f180_in :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(182) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f1289_in -> f1439_in :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1285_in -> f180_in :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1439_in -> f180_in :|: TRUE
f1248_in -> f1285_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_in -> f1221_in :|: TRUE


----------------------------------------

(183)
Obligation:
Rules:
f1289_in -> f1439_in :|: TRUE
f1221_in -> f1249_in :|: TRUE
f1221_in -> f1248_in :|: TRUE
f1285_in -> f180_in :|: TRUE
f1249_in -> f1289_in :|: TRUE
f1439_in -> f180_in :|: TRUE
f1248_in -> f1285_in :|: TRUE
f180_in -> f1207_in :|: TRUE
f1207_in -> f1221_in :|: TRUE

----------------------------------------

(184) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(185)
Obligation:
Rules:
f1221_in -> f1221_in :|: TRUE

----------------------------------------

(186) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(187)
Obligation:
Rules:
f1221_in -> f1221_in :|: TRUE

----------------------------------------

(188) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f1221_in -> f1221_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(189)
Obligation:

Termination digraph:
Nodes:
(1) f1221_in -> f1221_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(190) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f1221_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(191)
Obligation:
Rules:
f1221_in -> f1221_in :|: TRUE

----------------------------------------

(192) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1)
----------------------------------------

(193)
NO

----------------------------------------

(194)
Obligation:
Rules:
f2_in(T3) -> f4_in(T3) :|: TRUE
f2_in(x) -> f3_in(x) :|: TRUE
f3_out(x1) -> f2_out(x1) :|: TRUE
f4_out(x2) -> f2_out(x2) :|: TRUE
f174_in(T23) -> f1_in(T23) :|: TRUE
f1_out(x3) -> f174_out(x3) :|: TRUE
f2_out(x4) -> f1_out(x4) :|: TRUE
f1_in(x5) -> f2_in(x5) :|: TRUE
f95_in(zero(x6)) -> f174_in(x6) :|: TRUE
f175_out -> f95_out(x7) :|: TRUE
f95_in(x8) -> f175_in :|: TRUE
f174_out(x9) -> f95_out(zero(x9)) :|: TRUE
f4_in(x10) -> f96_in(x10) :|: TRUE
f96_out(x11) -> f4_out(x11) :|: TRUE
f4_in(x12) -> f95_in(x12) :|: TRUE
f95_out(x13) -> f4_out(x13) :|: TRUE
Start term: f1_in(T3)

----------------------------------------

(195) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f2_in(T3) -> f4_in(T3) :|: TRUE
f174_in(T23) -> f1_in(T23) :|: TRUE
f1_in(x5) -> f2_in(x5) :|: TRUE
f95_in(zero(x6)) -> f174_in(x6) :|: TRUE
f4_in(x12) -> f95_in(x12) :|: TRUE


----------------------------------------

(196)
Obligation:
Rules:
f2_in(T3) -> f4_in(T3) :|: TRUE
f174_in(T23) -> f1_in(T23) :|: TRUE
f1_in(x5) -> f2_in(x5) :|: TRUE
f95_in(zero(x6)) -> f174_in(x6) :|: TRUE
f4_in(x12) -> f95_in(x12) :|: TRUE

----------------------------------------

(197) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(198)
Obligation:
Rules:
f95_in(zero(x6:0)) -> f95_in(x6:0) :|: TRUE

----------------------------------------

(199) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(200)
Obligation:
Rules:
f95_in(zero(x6:0)) -> f95_in(x6:0) :|: TRUE

----------------------------------------

(201) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f95_in(zero(x6:0)) -> f95_in(x6:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(202)
Obligation:

Termination digraph:
Nodes:
(1) f95_in(zero(x6:0)) -> f95_in(x6:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(203) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f95_in(VARIABLE)
zero(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(204)
Obligation:
Rules:
f95_in(zero(x6:0)) -> f95_in(x6:0)

----------------------------------------

(205) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(206)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f95_in(zero(x6:0)) -> f95_in(x6:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(207) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f95_in(zero(x6:0)) -> f95_in(x6:0)
The graph contains the following edges 1 > 1


----------------------------------------

(208)
YES
