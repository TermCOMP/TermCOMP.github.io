YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/sKKmc.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

reach(g,g,g,g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 37 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) PiDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) PiDP
        (10) PiDPToQDPProof [SOUND, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) PiDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) PiDP
        (17) PiDPToQDPProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) PiDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) PiDP
        (24) PiDPToQDPProof [SOUND, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) PiDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) PiDP
        (31) PiDPToQDPProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (34) YES
    (35) PiDP
        (36) PiDPToQDPProof [SOUND, 0 ms]
        (37) QDP
        (38) QDPQMonotonicMRRProof [EQUIVALENT, 18 ms]
        (39) QDP
        (40) DependencyGraphProof [EQUIVALENT, 0 ms]
        (41) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

reach(X, Y, Edges, Not_Visited) :- member(.(X, .(Y, [])), Edges).
reach(X, Z, Edges, Not_Visited) :- ','(member(.(X, .(Y, [])), Edges), ','(member(Y, Not_Visited), ','(delete(Y, Not_Visited, V1), reach(Y, Z, Edges, V1)))).
member(H, .(H, L)).
member(X, .(H, L)) :- member(X, L).
delete(X, .(X, Y), Y).
delete(X, .(H, T1), .(H, T2)) :- delete(X, T1, T2).


Query: reach(g,g,g,g)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 24,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(reach X Y Edges Not_Visited)",
                "(member (. X (. Y ([]))) Edges)"
            ],
            [
                "(reach X Z Edges Not_Visited)",
                "(',' (member (. X (. Y ([]))) Edges) (',' (member Y Not_Visited) (',' (delete Y Not_Visited V1) (reach Y Z Edges V1))))"
            ],
            [
                "(member H (. H L))",
                null
            ],
            [
                "(member X (. H L))",
                "(member X L)"
            ],
            [
                "(delete X (. X Y) Y)",
                null
            ],
            [
                "(delete X (. H T1) (. H T2))",
                "(delete X T1 T2)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "192": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(reach T11 T12 T13 T14)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "470": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(member T113 T106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "350": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (member T113 T106) (',' (delete T113 T106 X82) (reach T113 T104 T105 X82)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T105",
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "471": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "472": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "473": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "474": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member T174 T176)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T174",
                        "T176"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "475": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T113 T106 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(reach T113 T104 T105 T185)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T105",
                        "T113",
                        "T185"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "478": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 6,
                        "term": "(delete T113 T106 X82)"
                    },
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(delete T113 T106 X82)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [{
                    "clause": 4,
                    "scope": 6,
                    "term": "(delete T113 T106 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member (. T46 (. T47 ([]))) T49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T46",
                        "T47",
                        "T49"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(delete T113 T106 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T206 T208 X191)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T206",
                        "T208"
                    ],
                    "free": ["X191"],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "369": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(member (. T103 (. X81 ([]))) T105)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(member (. T103 (. X81 ([]))) T105)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T103",
                        "T105"
                    ],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(member (. T46 (. T47 ([]))) T49)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(member (. T46 (. T47 ([]))) T49)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T46",
                        "T47",
                        "T49"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(member (. T46 (. T47 ([]))) T49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T46",
                        "T47",
                        "T49"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "65": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(member (. T46 (. T47 ([]))) T49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T46",
                        "T47",
                        "T49"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(reach T3 T4 T5 T6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T5",
                        "T6",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(reach T3 T4 T5 T6)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(reach T3 T4 T5 T6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T4",
                        "T5",
                        "T6",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "69": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(member (. T11 (. T12 ([]))) T13)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(reach T11 T12 T13 T14)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "27": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(member (. T11 (. T12 ([]))) T13)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(member (. T11 (. T12 ([]))) T13)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(reach T11 T12 T13 T14)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "28": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(member (. T11 (. T12 ([]))) T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "29": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(member (. T11 (. T12 ([]))) T13)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(reach T11 T12 T13 T14)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member (. T141 (. X121 ([]))) T143)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T141",
                        "T143"
                    ],
                    "free": ["X121"],
                    "exprvars": []
                }
            },
            "338": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (member (. T103 (. X81 ([]))) T105) (',' (member X81 T106) (',' (delete X81 T106 X82) (reach X81 T104 T105 X82))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T103",
                        "T104",
                        "T105",
                        "T106"
                    ],
                    "free": [
                        "X81",
                        "X82"
                    ],
                    "exprvars": []
                }
            },
            "70": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member (. T79 (. T80 ([]))) T82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T79",
                        "T80",
                        "T82"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "30": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "33": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "36": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(member (. T11 (. T12 ([]))) T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "37": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(reach T11 T12 T13 T14)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "382": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(member (. T103 (. X81 ([]))) T105)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T103",
                        "T105"
                    ],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "383": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(member (. T103 (. X81 ([]))) T105)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T103",
                        "T105"
                    ],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "465": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member T113 T106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (delete T113 T106 X82) (reach T113 T104 T105 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T105",
                        "T106",
                        "T113"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "468": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(member T113 T106)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(member T113 T106)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "348": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(member (. T103 (. X81 ([]))) T105)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T103",
                        "T105"
                    ],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "469": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(member T113 T106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T113"
                    ],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 24,
                "to": 25,
                "label": "CASE"
            },
            {
                "from": 25,
                "to": 26,
                "label": "ONLY EVAL with clause\nreach(X5, X6, X7, X8) :- member(.(X5, .(X6, [])), X7).\nand substitutionT3 -> T11,\nX5 -> T11,\nT4 -> T12,\nX6 -> T12,\nT5 -> T13,\nX7 -> T13,\nT6 -> T14,\nX8 -> T14"
            },
            {
                "from": 26,
                "to": 27,
                "label": "CASE"
            },
            {
                "from": 27,
                "to": 28,
                "label": "PARALLEL"
            },
            {
                "from": 27,
                "to": 29,
                "label": "PARALLEL"
            },
            {
                "from": 28,
                "to": 30,
                "label": "EVAL with clause\nmember(X17, .(X17, X18)).\nand substitutionT11 -> T27,\nT12 -> T28,\nX17 -> .(T27, .(T28, [])),\nX18 -> T29,\nT13 -> .(.(T27, .(T28, [])), T29)"
            },
            {
                "from": 28,
                "to": 31,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 29,
                "to": 36,
                "label": "PARALLEL"
            },
            {
                "from": 29,
                "to": 37,
                "label": "PARALLEL"
            },
            {
                "from": 30,
                "to": 33,
                "label": "SUCCESS"
            },
            {
                "from": 36,
                "to": 56,
                "label": "EVAL with clause\nmember(X31, .(X32, X33)) :- member(X31, X33).\nand substitutionT11 -> T46,\nT12 -> T47,\nX31 -> .(T46, .(T47, [])),\nX32 -> T48,\nX33 -> T49,\nT13 -> .(T48, T49)"
            },
            {
                "from": 36,
                "to": 57,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 37,
                "to": 192,
                "label": "FAILURE"
            },
            {
                "from": 56,
                "to": 61,
                "label": "CASE"
            },
            {
                "from": 61,
                "to": 64,
                "label": "PARALLEL"
            },
            {
                "from": 61,
                "to": 65,
                "label": "PARALLEL"
            },
            {
                "from": 64,
                "to": 69,
                "label": "EVAL with clause\nmember(X46, .(X46, X47)).\nand substitutionT46 -> T68,\nT47 -> T69,\nX46 -> .(T68, .(T69, [])),\nX47 -> T70,\nT49 -> .(.(T68, .(T69, [])), T70)"
            },
            {
                "from": 64,
                "to": 70,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 65,
                "to": 72,
                "label": "EVAL with clause\nmember(X54, .(X55, X56)) :- member(X54, X56).\nand substitutionT46 -> T79,\nT47 -> T80,\nX54 -> .(T79, .(T80, [])),\nX55 -> T81,\nX56 -> T82,\nT49 -> .(T81, T82)"
            },
            {
                "from": 65,
                "to": 73,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 69,
                "to": 71,
                "label": "SUCCESS"
            },
            {
                "from": 72,
                "to": 56,
                "label": "INSTANCE with matching:\nT46 -> T79\nT47 -> T80\nT49 -> T82"
            },
            {
                "from": 192,
                "to": 338,
                "label": "ONLY EVAL with clause\nreach(X77, X78, X79, X80) :- ','(member(.(X77, .(X81, [])), X79), ','(member(X81, X80), ','(delete(X81, X80, X82), reach(X81, X78, X79, X82)))).\nand substitutionT11 -> T103,\nX77 -> T103,\nT12 -> T104,\nX78 -> T104,\nT13 -> T105,\nX79 -> T105,\nT14 -> T106,\nX80 -> T106"
            },
            {
                "from": 338,
                "to": 348,
                "label": "SPLIT 1"
            },
            {
                "from": 338,
                "to": 350,
                "label": "SPLIT 2\nnew knowledge:\nT103 is ground\nT113 is ground\nT105 is ground\nreplacements:X81 -> T113"
            },
            {
                "from": 348,
                "to": 369,
                "label": "CASE"
            },
            {
                "from": 350,
                "to": 466,
                "label": "SPLIT 1"
            },
            {
                "from": 350,
                "to": 467,
                "label": "SPLIT 2\nnew knowledge:\nT113 is ground\nT106 is ground"
            },
            {
                "from": 369,
                "to": 382,
                "label": "PARALLEL"
            },
            {
                "from": 369,
                "to": 383,
                "label": "PARALLEL"
            },
            {
                "from": 382,
                "to": 453,
                "label": "EVAL with clause\nmember(X107, .(X107, X108)).\nand substitutionT103 -> T132,\nX81 -> T133,\nX107 -> .(T132, .(T133, [])),\nX109 -> T133,\nX108 -> T134,\nT105 -> .(.(T132, .(T133, [])), T134)"
            },
            {
                "from": 382,
                "to": 454,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 383,
                "to": 456,
                "label": "EVAL with clause\nmember(X118, .(X119, X120)) :- member(X118, X120).\nand substitutionT103 -> T141,\nX81 -> X121,\nX118 -> .(T141, .(X121, [])),\nX119 -> T142,\nX120 -> T143,\nT105 -> .(T142, T143)"
            },
            {
                "from": 383,
                "to": 465,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 453,
                "to": 455,
                "label": "SUCCESS"
            },
            {
                "from": 456,
                "to": 348,
                "label": "INSTANCE with matching:\nT103 -> T141\nX81 -> X121\nT105 -> T143"
            },
            {
                "from": 466,
                "to": 468,
                "label": "CASE"
            },
            {
                "from": 467,
                "to": 476,
                "label": "SPLIT 1"
            },
            {
                "from": 467,
                "to": 477,
                "label": "SPLIT 2\nnew knowledge:\nT113 is ground\nT106 is ground\nT185 is ground\nreplacements:X82 -> T185"
            },
            {
                "from": 468,
                "to": 469,
                "label": "PARALLEL"
            },
            {
                "from": 468,
                "to": 470,
                "label": "PARALLEL"
            },
            {
                "from": 469,
                "to": 471,
                "label": "EVAL with clause\nmember(X144, .(X144, X145)).\nand substitutionT113 -> T166,\nX144 -> T166,\nX145 -> T167,\nT106 -> .(T166, T167)"
            },
            {
                "from": 469,
                "to": 472,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 470,
                "to": 474,
                "label": "EVAL with clause\nmember(X152, .(X153, X154)) :- member(X152, X154).\nand substitutionT113 -> T174,\nX152 -> T174,\nX153 -> T175,\nX154 -> T176,\nT106 -> .(T175, T176)"
            },
            {
                "from": 470,
                "to": 475,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 471,
                "to": 473,
                "label": "SUCCESS"
            },
            {
                "from": 474,
                "to": 466,
                "label": "INSTANCE with matching:\nT113 -> T174\nT106 -> T176"
            },
            {
                "from": 476,
                "to": 478,
                "label": "CASE"
            },
            {
                "from": 477,
                "to": 24,
                "label": "INSTANCE with matching:\nT3 -> T113\nT4 -> T104\nT5 -> T105\nT6 -> T185"
            },
            {
                "from": 478,
                "to": 479,
                "label": "PARALLEL"
            },
            {
                "from": 478,
                "to": 480,
                "label": "PARALLEL"
            },
            {
                "from": 479,
                "to": 481,
                "label": "EVAL with clause\ndelete(X175, .(X175, X176), X176).\nand substitutionT113 -> T198,\nX175 -> T198,\nX176 -> T199,\nT106 -> .(T198, T199),\nX82 -> T199"
            },
            {
                "from": 479,
                "to": 482,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 480,
                "to": 484,
                "label": "EVAL with clause\ndelete(X187, .(X188, X189), .(X188, X190)) :- delete(X187, X189, X190).\nand substitutionT113 -> T206,\nX187 -> T206,\nX188 -> T207,\nX189 -> T208,\nT106 -> .(T207, T208),\nX190 -> X191,\nX82 -> .(T207, X191)"
            },
            {
                "from": 480,
                "to": 485,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 481,
                "to": 483,
                "label": "SUCCESS"
            },
            {
                "from": 484,
                "to": 476,
                "label": "INSTANCE with matching:\nT113 -> T206\nT106 -> T208\nX82 -> X191"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

memberA(X1, X2, .(X3, X4)) :- memberA(X1, X2, X4).
memberB(X1, X2, .(X3, X4)) :- memberB(X1, X2, X4).
memberC(X1, .(X2, X3)) :- memberC(X1, X3).
deleteE(X1, .(X2, X3), .(X2, X4)) :- deleteE(X1, X3, X4).
reachD(X1, X2, .(X3, X4), X5) :- memberA(X1, X2, X4).
reachD(X1, X2, X3, X4) :- memberB(X1, X5, X3).
reachD(X1, X2, X3, X4) :- ','(membercB(X1, X5, X3), memberC(X5, X4)).
reachD(X1, X2, X3, X4) :- ','(membercB(X1, X5, X3), ','(membercC(X5, X4), deleteE(X5, X4, X6))).
reachD(X1, X2, X3, X4) :- ','(membercB(X1, X5, X3), ','(membercC(X5, X4), ','(deletecE(X5, X4, X6), reachD(X5, X2, X3, X6)))).

Clauses:

membercA(X1, X2, .(.(X1, .(X2, [])), X3)).
membercA(X1, X2, .(X3, X4)) :- membercA(X1, X2, X4).
membercB(X1, X2, .(.(X1, .(X2, [])), X3)).
membercB(X1, X2, .(X3, X4)) :- membercB(X1, X2, X4).
membercC(X1, .(X1, X2)).
membercC(X1, .(X2, X3)) :- membercC(X1, X3).
reachcD(X1, X2, .(.(X1, .(X2, [])), X3), X4).
reachcD(X1, X2, .(X3, X4), X5) :- membercA(X1, X2, X4).
reachcD(X1, X2, X3, X4) :- ','(membercB(X1, X5, X3), ','(membercC(X5, X4), ','(deletecE(X5, X4, X6), reachcD(X5, X2, X3, X6)))).
deletecE(X1, .(X1, X2), X2).
deletecE(X1, .(X2, X3), .(X2, X4)) :- deletecE(X1, X3, X4).

Afs:

reachD(x1, x2, x3, x4)  =  reachD(x1, x2, x3, x4)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

reachD_in_4: (b,b,b,b)

memberA_in_3: (b,b,b)

memberB_in_3: (b,f,b)

membercB_in_3: (b,f,b)

memberC_in_2: (b,b)

membercC_in_2: (b,b)

deleteE_in_3: (b,b,f)

deletecE_in_3: (b,b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   REACHD_IN_GGGG(X1, X2, .(X3, X4), X5) -> U5_GGGG(X1, X2, X3, X4, X5, memberA_in_ggg(X1, X2, X4))
   REACHD_IN_GGGG(X1, X2, .(X3, X4), X5) -> MEMBERA_IN_GGG(X1, X2, X4)
   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> U1_GGG(X1, X2, X3, X4, memberA_in_ggg(X1, X2, X4))
   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)
   REACHD_IN_GGGG(X1, X2, X3, X4) -> U6_GGGG(X1, X2, X3, X4, memberB_in_gag(X1, X5, X3))
   REACHD_IN_GGGG(X1, X2, X3, X4) -> MEMBERB_IN_GAG(X1, X5, X3)
   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> U2_GAG(X1, X2, X3, X4, memberB_in_gag(X1, X2, X4))
   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X2, X4)
   REACHD_IN_GGGG(X1, X2, X3, X4) -> U7_GGGG(X1, X2, X3, X4, membercB_in_gag(X1, X5, X3))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U8_GGGG(X1, X2, X3, X4, memberC_in_gg(X5, X4))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> MEMBERC_IN_GG(X5, X4)
   MEMBERC_IN_GG(X1, .(X2, X3)) -> U3_GG(X1, X2, X3, memberC_in_gg(X1, X3))
   MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U9_GGGG(X1, X2, X3, X4, X5, membercC_in_gg(X5, X4))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U10_GGGG(X1, X2, X3, X4, deleteE_in_gga(X5, X4, X6))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> DELETEE_IN_GGA(X5, X4, X6)
   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> U4_GGA(X1, X2, X3, X4, deleteE_in_gga(X1, X3, X4))
   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> DELETEE_IN_GGA(X1, X3, X4)
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U11_GGGG(X1, X2, X3, X4, X5, deletecE_in_gga(X5, X4, X6))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> U12_GGGG(X1, X2, X3, X4, reachD_in_gggg(X5, X2, X3, X6))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> REACHD_IN_GGGG(X5, X2, X3, X6)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
reachD_in_gggg(x1, x2, x3, x4)  =  reachD_in_gggg(x1, x2, x3, x4)

.(x1, x2)  =  .(x1, x2)

memberA_in_ggg(x1, x2, x3)  =  memberA_in_ggg(x1, x2, x3)

memberB_in_gag(x1, x2, x3)  =  memberB_in_gag(x1, x3)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

memberC_in_gg(x1, x2)  =  memberC_in_gg(x1, x2)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deleteE_in_gga(x1, x2, x3)  =  deleteE_in_gga(x1, x2)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

REACHD_IN_GGGG(x1, x2, x3, x4)  =  REACHD_IN_GGGG(x1, x2, x3, x4)

U5_GGGG(x1, x2, x3, x4, x5, x6)  =  U5_GGGG(x1, x2, x3, x4, x5, x6)

MEMBERA_IN_GGG(x1, x2, x3)  =  MEMBERA_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3, x4, x5)  =  U1_GGG(x1, x2, x3, x4, x5)

U6_GGGG(x1, x2, x3, x4, x5)  =  U6_GGGG(x1, x2, x3, x4, x5)

MEMBERB_IN_GAG(x1, x2, x3)  =  MEMBERB_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4, x5)  =  U2_GAG(x1, x3, x4, x5)

U7_GGGG(x1, x2, x3, x4, x5)  =  U7_GGGG(x1, x2, x3, x4, x5)

U8_GGGG(x1, x2, x3, x4, x5)  =  U8_GGGG(x1, x2, x3, x4, x5)

MEMBERC_IN_GG(x1, x2)  =  MEMBERC_IN_GG(x1, x2)

U3_GG(x1, x2, x3, x4)  =  U3_GG(x1, x2, x3, x4)

U9_GGGG(x1, x2, x3, x4, x5, x6)  =  U9_GGGG(x1, x2, x3, x4, x5, x6)

U10_GGGG(x1, x2, x3, x4, x5)  =  U10_GGGG(x1, x2, x3, x4, x5)

DELETEE_IN_GGA(x1, x2, x3)  =  DELETEE_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x1, x2, x3, x5)

U11_GGGG(x1, x2, x3, x4, x5, x6)  =  U11_GGGG(x1, x2, x3, x4, x5, x6)

U12_GGGG(x1, x2, x3, x4, x5)  =  U12_GGGG(x1, x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   REACHD_IN_GGGG(X1, X2, .(X3, X4), X5) -> U5_GGGG(X1, X2, X3, X4, X5, memberA_in_ggg(X1, X2, X4))
   REACHD_IN_GGGG(X1, X2, .(X3, X4), X5) -> MEMBERA_IN_GGG(X1, X2, X4)
   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> U1_GGG(X1, X2, X3, X4, memberA_in_ggg(X1, X2, X4))
   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)
   REACHD_IN_GGGG(X1, X2, X3, X4) -> U6_GGGG(X1, X2, X3, X4, memberB_in_gag(X1, X5, X3))
   REACHD_IN_GGGG(X1, X2, X3, X4) -> MEMBERB_IN_GAG(X1, X5, X3)
   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> U2_GAG(X1, X2, X3, X4, memberB_in_gag(X1, X2, X4))
   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X2, X4)
   REACHD_IN_GGGG(X1, X2, X3, X4) -> U7_GGGG(X1, X2, X3, X4, membercB_in_gag(X1, X5, X3))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U8_GGGG(X1, X2, X3, X4, memberC_in_gg(X5, X4))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> MEMBERC_IN_GG(X5, X4)
   MEMBERC_IN_GG(X1, .(X2, X3)) -> U3_GG(X1, X2, X3, memberC_in_gg(X1, X3))
   MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U9_GGGG(X1, X2, X3, X4, X5, membercC_in_gg(X5, X4))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U10_GGGG(X1, X2, X3, X4, deleteE_in_gga(X5, X4, X6))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> DELETEE_IN_GGA(X5, X4, X6)
   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> U4_GGA(X1, X2, X3, X4, deleteE_in_gga(X1, X3, X4))
   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> DELETEE_IN_GGA(X1, X3, X4)
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U11_GGGG(X1, X2, X3, X4, X5, deletecE_in_gga(X5, X4, X6))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> U12_GGGG(X1, X2, X3, X4, reachD_in_gggg(X5, X2, X3, X6))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> REACHD_IN_GGGG(X5, X2, X3, X6)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
reachD_in_gggg(x1, x2, x3, x4)  =  reachD_in_gggg(x1, x2, x3, x4)

.(x1, x2)  =  .(x1, x2)

memberA_in_ggg(x1, x2, x3)  =  memberA_in_ggg(x1, x2, x3)

memberB_in_gag(x1, x2, x3)  =  memberB_in_gag(x1, x3)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

memberC_in_gg(x1, x2)  =  memberC_in_gg(x1, x2)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deleteE_in_gga(x1, x2, x3)  =  deleteE_in_gga(x1, x2)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

REACHD_IN_GGGG(x1, x2, x3, x4)  =  REACHD_IN_GGGG(x1, x2, x3, x4)

U5_GGGG(x1, x2, x3, x4, x5, x6)  =  U5_GGGG(x1, x2, x3, x4, x5, x6)

MEMBERA_IN_GGG(x1, x2, x3)  =  MEMBERA_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3, x4, x5)  =  U1_GGG(x1, x2, x3, x4, x5)

U6_GGGG(x1, x2, x3, x4, x5)  =  U6_GGGG(x1, x2, x3, x4, x5)

MEMBERB_IN_GAG(x1, x2, x3)  =  MEMBERB_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4, x5)  =  U2_GAG(x1, x3, x4, x5)

U7_GGGG(x1, x2, x3, x4, x5)  =  U7_GGGG(x1, x2, x3, x4, x5)

U8_GGGG(x1, x2, x3, x4, x5)  =  U8_GGGG(x1, x2, x3, x4, x5)

MEMBERC_IN_GG(x1, x2)  =  MEMBERC_IN_GG(x1, x2)

U3_GG(x1, x2, x3, x4)  =  U3_GG(x1, x2, x3, x4)

U9_GGGG(x1, x2, x3, x4, x5, x6)  =  U9_GGGG(x1, x2, x3, x4, x5, x6)

U10_GGGG(x1, x2, x3, x4, x5)  =  U10_GGGG(x1, x2, x3, x4, x5)

DELETEE_IN_GGA(x1, x2, x3)  =  DELETEE_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x1, x2, x3, x5)

U11_GGGG(x1, x2, x3, x4, x5, x6)  =  U11_GGGG(x1, x2, x3, x4, x5, x6)

U12_GGGG(x1, x2, x3, x4, x5)  =  U12_GGGG(x1, x2, x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 5 SCCs with 13 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> DELETEE_IN_GGA(X1, X3, X4)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

DELETEE_IN_GGA(x1, x2, x3)  =  DELETEE_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETEE_IN_GGA(X1, .(X2, X3), .(X2, X4)) -> DELETEE_IN_GGA(X1, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

DELETEE_IN_GGA(x1, x2, x3)  =  DELETEE_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DELETEE_IN_GGA(X1, .(X2, X3)) -> DELETEE_IN_GGA(X1, X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DELETEE_IN_GGA(X1, .(X2, X3)) -> DELETEE_IN_GGA(X1, X3)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

MEMBERC_IN_GG(x1, x2)  =  MEMBERC_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MEMBERC_IN_GG(X1, .(X2, X3)) -> MEMBERC_IN_GG(X1, X3)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X2, X4)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

MEMBERB_IN_GAG(x1, x2, x3)  =  MEMBERB_IN_GAG(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERB_IN_GAG(X1, X2, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X2, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

MEMBERB_IN_GAG(x1, x2, x3)  =  MEMBERB_IN_GAG(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MEMBERB_IN_GAG(X1, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X4)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MEMBERB_IN_GAG(X1, .(X3, X4)) -> MEMBERB_IN_GAG(X1, X4)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

MEMBERA_IN_GGG(x1, x2, x3)  =  MEMBERA_IN_GGG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(33) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MEMBERA_IN_GGG(X1, X2, .(X3, X4)) -> MEMBERA_IN_GGG(X1, X2, X4)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   REACHD_IN_GGGG(X1, X2, X3, X4) -> U7_GGGG(X1, X2, X3, X4, membercB_in_gag(X1, X5, X3))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U9_GGGG(X1, X2, X3, X4, X5, membercC_in_gg(X5, X4))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U11_GGGG(X1, X2, X3, X4, X5, deletecE_in_gga(X5, X4, X6))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> REACHD_IN_GGGG(X5, X2, X3, X6)

The TRS R consists of the following rules:

   membercB_in_gag(X1, X2, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, X2, .(X3, X4)) -> U15_gag(X1, X2, X3, X4, membercB_in_gag(X1, X2, X4))
   U15_gag(X1, X2, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2), X2) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3), .(X2, X4)) -> U22_gga(X1, X2, X3, X4, deletecE_in_gga(X1, X3, X4))
   U22_gga(X1, X2, X3, X4, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

membercB_in_gag(x1, x2, x3)  =  membercB_in_gag(x1, x3)

[]  =  []

membercB_out_gag(x1, x2, x3)  =  membercB_out_gag(x1, x2, x3)

U15_gag(x1, x2, x3, x4, x5)  =  U15_gag(x1, x3, x4, x5)

membercC_in_gg(x1, x2)  =  membercC_in_gg(x1, x2)

membercC_out_gg(x1, x2)  =  membercC_out_gg(x1, x2)

U16_gg(x1, x2, x3, x4)  =  U16_gg(x1, x2, x3, x4)

deletecE_in_gga(x1, x2, x3)  =  deletecE_in_gga(x1, x2)

deletecE_out_gga(x1, x2, x3)  =  deletecE_out_gga(x1, x2, x3)

U22_gga(x1, x2, x3, x4, x5)  =  U22_gga(x1, x2, x3, x5)

REACHD_IN_GGGG(x1, x2, x3, x4)  =  REACHD_IN_GGGG(x1, x2, x3, x4)

U7_GGGG(x1, x2, x3, x4, x5)  =  U7_GGGG(x1, x2, x3, x4, x5)

U9_GGGG(x1, x2, x3, x4, x5, x6)  =  U9_GGGG(x1, x2, x3, x4, x5, x6)

U11_GGGG(x1, x2, x3, x4, x5, x6)  =  U11_GGGG(x1, x2, x3, x4, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(36) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   REACHD_IN_GGGG(X1, X2, X3, X4) -> U7_GGGG(X1, X2, X3, X4, membercB_in_gag(X1, X3))
   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U9_GGGG(X1, X2, X3, X4, X5, membercC_in_gg(X5, X4))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U11_GGGG(X1, X2, X3, X4, X5, deletecE_in_gga(X5, X4))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> REACHD_IN_GGGG(X5, X2, X3, X6)

The TRS R consists of the following rules:

   membercB_in_gag(X1, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, .(X3, X4)) -> U15_gag(X1, X3, X4, membercB_in_gag(X1, X4))
   U15_gag(X1, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   deletecE_in_gga(X1, .(X1, X2)) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3)) -> U22_gga(X1, X2, X3, deletecE_in_gga(X1, X3))
   U22_gga(X1, X2, X3, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The set Q consists of the following terms:

   membercB_in_gag(x0, x1)
   U15_gag(x0, x1, x2, x3)
   membercC_in_gg(x0, x1)
   U16_gg(x0, x1, x2, x3)
   deletecE_in_gga(x0, x1)
   U22_gga(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(38) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   U7_GGGG(X1, X2, X3, X4, membercB_out_gag(X1, X5, X3)) -> U9_GGGG(X1, X2, X3, X4, X5, membercC_in_gg(X5, X4))
   U11_GGGG(X1, X2, X3, X4, X5, deletecE_out_gga(X5, X4, X6)) -> REACHD_IN_GGGG(X5, X2, X3, X6)

Strictly oriented rules of the TRS R:

   deletecE_in_gga(X1, .(X1, X2)) -> deletecE_out_gga(X1, .(X1, X2), X2)
   deletecE_in_gga(X1, .(X2, X3)) -> U22_gga(X1, X2, X3, deletecE_in_gga(X1, X3))

Used ordering: Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2 + 2*x_2
   POL(REACHD_IN_GGGG(x_1, x_2, x_3, x_4)) = 1 + x_2 + 2*x_4
   POL(U11_GGGG(x_1, x_2, x_3, x_4, x_5, x_6)) = x_2 + 2*x_6
   POL(U15_gag(x_1, x_2, x_3, x_4)) = 0
   POL(U16_gg(x_1, x_2, x_3, x_4)) = 0
   POL(U22_gga(x_1, x_2, x_3, x_4)) = 1 + 2*x_4
   POL(U7_GGGG(x_1, x_2, x_3, x_4, x_5)) = 1 + x_2 + 2*x_4
   POL(U9_GGGG(x_1, x_2, x_3, x_4, x_5, x_6)) = x_2 + 2*x_4
   POL([]) = 0
   POL(deletecE_in_gga(x_1, x_2)) = x_2
   POL(deletecE_out_gga(x_1, x_2, x_3)) = 1 + x_3
   POL(membercB_in_gag(x_1, x_2)) = 0
   POL(membercB_out_gag(x_1, x_2, x_3)) = 0
   POL(membercC_in_gg(x_1, x_2)) = 0
   POL(membercC_out_gg(x_1, x_2)) = 0


----------------------------------------

(39)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   REACHD_IN_GGGG(X1, X2, X3, X4) -> U7_GGGG(X1, X2, X3, X4, membercB_in_gag(X1, X3))
   U9_GGGG(X1, X2, X3, X4, X5, membercC_out_gg(X5, X4)) -> U11_GGGG(X1, X2, X3, X4, X5, deletecE_in_gga(X5, X4))

The TRS R consists of the following rules:

   membercB_in_gag(X1, .(.(X1, .(X2, [])), X3)) -> membercB_out_gag(X1, X2, .(.(X1, .(X2, [])), X3))
   membercB_in_gag(X1, .(X3, X4)) -> U15_gag(X1, X3, X4, membercB_in_gag(X1, X4))
   U15_gag(X1, X3, X4, membercB_out_gag(X1, X2, X4)) -> membercB_out_gag(X1, X2, .(X3, X4))
   membercC_in_gg(X1, .(X1, X2)) -> membercC_out_gg(X1, .(X1, X2))
   membercC_in_gg(X1, .(X2, X3)) -> U16_gg(X1, X2, X3, membercC_in_gg(X1, X3))
   U16_gg(X1, X2, X3, membercC_out_gg(X1, X3)) -> membercC_out_gg(X1, .(X2, X3))
   U22_gga(X1, X2, X3, deletecE_out_gga(X1, X3, X4)) -> deletecE_out_gga(X1, .(X2, X3), .(X2, X4))

The set Q consists of the following terms:

   membercB_in_gag(x0, x1)
   U15_gag(x0, x1, x2, x3)
   membercC_in_gg(x0, x1)
   U16_gg(x0, x1, x2, x3)
   deletecE_in_gga(x0, x1)
   U22_gga(x0, x1, x2, x3)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(40) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(41)
TRUE
