YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/pAmGf.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

mergesort(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToTRSTransformerProof [SOUND, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (16) YES
    (17) QDP
        (18) QDPOrderProof [EQUIVALENT, 7 ms]
        (19) QDP
        (20) DependencyGraphProof [EQUIVALENT, 0 ms]
        (21) TRUE
    (22) QDP
        (23) UsableRulesProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (26) YES
    (27) QDP
        (28) QDPOrderProof [EQUIVALENT, 120 ms]
        (29) QDP
        (30) DependencyGraphProof [EQUIVALENT, 0 ms]
        (31) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

mergesort([], []).
mergesort(.(X, []), .(X, [])).
mergesort(.(X, .(Y, Xs)), Ys) :- ','(split(.(X, .(Y, Xs)), X1s, X2s), ','(mergesort(X1s, Y1s), ','(mergesort(X2s, Y2s), merge(Y1s, Y2s, Ys)))).
split([], [], []).
split(.(X, Xs), .(X, Ys), Zs) :- split(Xs, Zs, Ys).
merge([], Xs, Xs).
merge(Xs, [], Xs).
merge(.(X, Xs), .(Y, Ys), .(X, Zs)) :- ','(le(X, Y), merge(Xs, .(Y, Ys), Zs)).
merge(.(X, Xs), .(Y, Ys), .(Y, Zs)) :- ','(gt(X, Y), merge(.(X, Xs), Ys, Zs)).
gt(s(X), s(Y)) :- gt(X, Y).
gt(s(X), 0).
le(s(X), s(Y)) :- le(X, Y).
le(0, s(Y)).
le(0, 0).


Query: mergesort(g,a)
----------------------------------------

(1) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(mergesort ([]) ([]))",
                null
            ],
            [
                "(mergesort (. X ([])) (. X ([])))",
                null
            ],
            [
                "(mergesort (. X (. Y Xs)) Ys)",
                "(',' (split (. X (. Y Xs)) X1s X2s) (',' (mergesort X1s Y1s) (',' (mergesort X2s Y2s) (merge Y1s Y2s Ys))))"
            ],
            [
                "(split ([]) ([]) ([]))",
                null
            ],
            [
                "(split (. X Xs) (. X Ys) Zs)",
                "(split Xs Zs Ys)"
            ],
            [
                "(merge ([]) Xs Xs)",
                null
            ],
            [
                "(merge Xs ([]) Xs)",
                null
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. X Zs))",
                "(',' (le X Y) (merge Xs (. Y Ys) Zs))"
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. Y Zs))",
                "(',' (gt X Y) (merge (. X Xs) Ys Zs))"
            ],
            [
                "(gt (s X) (s Y))",
                "(gt X Y)"
            ],
            [
                "(gt (s X) (0))",
                null
            ],
            [
                "(le (s X) (s Y))",
                "(le X Y)"
            ],
            [
                "(le (0) (s Y))",
                null
            ],
            [
                "(le (0) (0))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "470": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "471": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "472": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "473": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "474": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "112": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "475": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "113": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (gt T119 T121) (merge (. T119 T120) T122 T124))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T120",
                        "T121",
                        "T122"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "114": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "478": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(gt T119 T121)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T121"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "116": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T119 T120) T122 T124)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T120",
                        "T122"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "118": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T16 (. T17 T18)) X22 X23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (mergesort T21 X24) (',' (mergesort T22 X25) (merge X24 X25 T20)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X24",
                        "X25"
                    ],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(split (. T16 (. T17 T18)) X22 X23)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(split (. T16 (. T17 T18)) X22 X23)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(split (. T16 (. T17 T18)) X22 X23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 7,
                        "term": "(gt T119 T121)"
                    },
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(gt T119 T121)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T121"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": 9,
                    "scope": 7,
                    "term": "(gt T119 T121)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T121"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(gt T119 T121)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T119",
                        "T121"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(gt T137 T138)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T137",
                        "T138"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "165": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T43 X79 X78)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T43"],
                    "free": [
                        "X78",
                        "X79"
                    ],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "486": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(mergesort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "487": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(mergesort T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "172": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T21 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X24"],
                    "exprvars": []
                }
            },
            "173": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (mergesort T22 X25) (merge T44 X25 T20))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T22",
                        "T44"
                    ],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "176": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(mergesort T22 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [{
                    "clause": 6,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "177": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "452": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "457": {
                "goal": [{
                    "clause": 7,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [{
                    "clause": 8,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (le T78 T80) (merge T79 (. T80 T81) T83))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T79",
                        "T80",
                        "T81"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "30": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T16 (. T17 T18)) X22 X23) (',' (mergesort X22 X24) (',' (mergesort X23 X25) (merge X24 X25 T20))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T16",
                        "T17",
                        "T18"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X24",
                        "X25"
                    ],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "183": {
                "goal": [{
                    "clause": 5,
                    "scope": 5,
                    "term": "(merge T44 T45 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "184": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    },
                    {
                        "clause": 8,
                        "scope": 5,
                        "term": "(merge T44 T45 T20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "185": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "460": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "186": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "461": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T78 T80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "187": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "462": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T79 (. T80 T81) T83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T79",
                        "T80",
                        "T81"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "463": {
                "goal": [
                    {
                        "clause": 11,
                        "scope": 6,
                        "term": "(le T78 T80)"
                    },
                    {
                        "clause": 12,
                        "scope": 6,
                        "term": "(le T78 T80)"
                    },
                    {
                        "clause": 13,
                        "scope": 6,
                        "term": "(le T78 T80)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "464": {
                "goal": [{
                    "clause": 11,
                    "scope": 6,
                    "term": "(le T78 T80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "465": {
                "goal": [
                    {
                        "clause": 12,
                        "scope": 6,
                        "term": "(le T78 T80)"
                    },
                    {
                        "clause": 13,
                        "scope": 6,
                        "term": "(le T78 T80)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T96 T97)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T96",
                        "T97"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "468": {
                "goal": [{
                    "clause": 12,
                    "scope": 6,
                    "term": "(le T78 T80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "106": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T37 X61 X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            },
            "469": {
                "goal": [{
                    "clause": 13,
                    "scope": 6,
                    "term": "(le T78 T80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T80"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "80": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T30 T31) X43 X42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(split (. T30 T31) X43 X42)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(split (. T30 T31) X43 X42)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(split (. T30 T31) X43 X42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": [
                        "X42",
                        "X43"
                    ],
                    "exprvars": []
                }
            },
            "109": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(split T37 X61 X60)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(split T37 X61 X60)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X60",
                        "X61"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 3,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 4,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 9,
                "label": "EVAL with clause\nmergesort([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 3,
                "to": 10,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 4,
                "to": 12,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 13,
                "label": "PARALLEL"
            },
            {
                "from": 9,
                "to": 11,
                "label": "SUCCESS"
            },
            {
                "from": 12,
                "to": 14,
                "label": "EVAL with clause\nmergesort(.(X5, []), .(X5, [])).\nand substitutionX5 -> T7,\nT1 -> .(T7, []),\nT2 -> .(T7, [])"
            },
            {
                "from": 12,
                "to": 15,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 30,
                "label": "EVAL with clause\nmergesort(.(X18, .(X19, X20)), X21) :- ','(split(.(X18, .(X19, X20)), X22, X23), ','(mergesort(X22, X24), ','(mergesort(X23, X25), merge(X24, X25, X21)))).\nand substitutionX18 -> T16,\nX19 -> T17,\nX20 -> T18,\nT1 -> .(T16, .(T17, T18)),\nT2 -> T20,\nX21 -> T20,\nT19 -> T20"
            },
            {
                "from": 13,
                "to": 31,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 14,
                "to": 16,
                "label": "SUCCESS"
            },
            {
                "from": 30,
                "to": 56,
                "label": "SPLIT 1"
            },
            {
                "from": 30,
                "to": 57,
                "label": "SPLIT 2\nnew knowledge:\nT16 is ground\nT17 is ground\nT18 is ground\nT21 is ground\nT22 is ground\nreplacements:X22 -> T21,\nX23 -> T22"
            },
            {
                "from": 56,
                "to": 58,
                "label": "CASE"
            },
            {
                "from": 57,
                "to": 172,
                "label": "SPLIT 1"
            },
            {
                "from": 57,
                "to": 173,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nT44 is ground\nreplacements:X24 -> T44"
            },
            {
                "from": 58,
                "to": 59,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 59,
                "to": 80,
                "label": "ONLY EVAL with clause\nsplit(.(X38, X39), .(X38, X40), X41) :- split(X39, X41, X40).\nand substitutionT16 -> T29,\nX38 -> T29,\nT17 -> T30,\nT18 -> T31,\nX39 -> .(T30, T31),\nX40 -> X42,\nX22 -> .(T29, X42),\nX23 -> X43,\nX41 -> X43"
            },
            {
                "from": 80,
                "to": 81,
                "label": "CASE"
            },
            {
                "from": 81,
                "to": 82,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 82,
                "to": 106,
                "label": "ONLY EVAL with clause\nsplit(.(X56, X57), .(X56, X58), X59) :- split(X57, X59, X58).\nand substitutionT30 -> T36,\nX56 -> T36,\nT31 -> T37,\nX57 -> T37,\nX58 -> X60,\nX43 -> .(T36, X60),\nX42 -> X61,\nX59 -> X61"
            },
            {
                "from": 106,
                "to": 109,
                "label": "CASE"
            },
            {
                "from": 109,
                "to": 112,
                "label": "PARALLEL"
            },
            {
                "from": 109,
                "to": 113,
                "label": "PARALLEL"
            },
            {
                "from": 112,
                "to": 114,
                "label": "EVAL with clause\nsplit([], [], []).\nand substitutionT37 -> [],\nX61 -> [],\nX60 -> []"
            },
            {
                "from": 112,
                "to": 116,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 113,
                "to": 165,
                "label": "EVAL with clause\nsplit(.(X74, X75), .(X74, X76), X77) :- split(X75, X77, X76).\nand substitutionX74 -> T42,\nX75 -> T43,\nT37 -> .(T42, T43),\nX76 -> X78,\nX61 -> .(T42, X78),\nX60 -> X79,\nX77 -> X79"
            },
            {
                "from": 113,
                "to": 166,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 114,
                "to": 118,
                "label": "SUCCESS"
            },
            {
                "from": 165,
                "to": 106,
                "label": "INSTANCE with matching:\nT37 -> T43\nX61 -> X79\nX60 -> X78"
            },
            {
                "from": 172,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T21\nT2 -> X24"
            },
            {
                "from": 173,
                "to": 176,
                "label": "SPLIT 1"
            },
            {
                "from": 173,
                "to": 177,
                "label": "SPLIT 2\nnew knowledge:\nT22 is ground\nT45 is ground\nreplacements:X25 -> T45"
            },
            {
                "from": 176,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T22\nT2 -> X25"
            },
            {
                "from": 177,
                "to": 180,
                "label": "CASE"
            },
            {
                "from": 180,
                "to": 183,
                "label": "PARALLEL"
            },
            {
                "from": 180,
                "to": 184,
                "label": "PARALLEL"
            },
            {
                "from": 183,
                "to": 185,
                "label": "EVAL with clause\nmerge([], X86, X86).\nand substitutionT44 -> [],\nT45 -> T52,\nX86 -> T52,\nT20 -> T52"
            },
            {
                "from": 183,
                "to": 186,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 184,
                "to": 451,
                "label": "PARALLEL"
            },
            {
                "from": 184,
                "to": 452,
                "label": "PARALLEL"
            },
            {
                "from": 185,
                "to": 187,
                "label": "SUCCESS"
            },
            {
                "from": 451,
                "to": 454,
                "label": "EVAL with clause\nmerge(X91, [], X91).\nand substitutionT44 -> T57,\nX91 -> T57,\nT45 -> [],\nT20 -> T57"
            },
            {
                "from": 451,
                "to": 455,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 452,
                "to": 457,
                "label": "PARALLEL"
            },
            {
                "from": 452,
                "to": 458,
                "label": "PARALLEL"
            },
            {
                "from": 454,
                "to": 456,
                "label": "SUCCESS"
            },
            {
                "from": 457,
                "to": 459,
                "label": "EVAL with clause\nmerge(.(X112, X113), .(X114, X115), .(X112, X116)) :- ','(le(X112, X114), merge(X113, .(X114, X115), X116)).\nand substitutionX112 -> T78,\nX113 -> T79,\nT44 -> .(T78, T79),\nX114 -> T80,\nX115 -> T81,\nT45 -> .(T80, T81),\nX116 -> T83,\nT20 -> .(T78, T83),\nT82 -> T83"
            },
            {
                "from": 457,
                "to": 460,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 458,
                "to": 476,
                "label": "EVAL with clause\nmerge(.(X150, X151), .(X152, X153), .(X152, X154)) :- ','(gt(X150, X152), merge(.(X150, X151), X153, X154)).\nand substitutionX150 -> T119,\nX151 -> T120,\nT44 -> .(T119, T120),\nX152 -> T121,\nX153 -> T122,\nT45 -> .(T121, T122),\nX154 -> T124,\nT20 -> .(T121, T124),\nT123 -> T124"
            },
            {
                "from": 458,
                "to": 477,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 459,
                "to": 461,
                "label": "SPLIT 1"
            },
            {
                "from": 459,
                "to": 462,
                "label": "SPLIT 2\nnew knowledge:\nT78 is ground\nT80 is ground"
            },
            {
                "from": 461,
                "to": 463,
                "label": "CASE"
            },
            {
                "from": 462,
                "to": 177,
                "label": "INSTANCE with matching:\nT44 -> T79\nT45 -> .(T80, T81)\nT20 -> T83"
            },
            {
                "from": 463,
                "to": 464,
                "label": "PARALLEL"
            },
            {
                "from": 463,
                "to": 465,
                "label": "PARALLEL"
            },
            {
                "from": 464,
                "to": 466,
                "label": "EVAL with clause\nle(s(X129), s(X130)) :- le(X129, X130).\nand substitutionX129 -> T96,\nT78 -> s(T96),\nX130 -> T97,\nT80 -> s(T97)"
            },
            {
                "from": 464,
                "to": 467,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 465,
                "to": 468,
                "label": "PARALLEL"
            },
            {
                "from": 465,
                "to": 469,
                "label": "PARALLEL"
            },
            {
                "from": 466,
                "to": 461,
                "label": "INSTANCE with matching:\nT78 -> T96\nT80 -> T97"
            },
            {
                "from": 468,
                "to": 470,
                "label": "EVAL with clause\nle(0, s(X137)).\nand substitutionT78 -> 0,\nX137 -> T104,\nT80 -> s(T104)"
            },
            {
                "from": 468,
                "to": 471,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 469,
                "to": 473,
                "label": "EVAL with clause\nle(0, 0).\nand substitutionT78 -> 0,\nT80 -> 0"
            },
            {
                "from": 469,
                "to": 474,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 470,
                "to": 472,
                "label": "SUCCESS"
            },
            {
                "from": 473,
                "to": 475,
                "label": "SUCCESS"
            },
            {
                "from": 476,
                "to": 478,
                "label": "SPLIT 1"
            },
            {
                "from": 476,
                "to": 479,
                "label": "SPLIT 2\nnew knowledge:\nT119 is ground\nT121 is ground"
            },
            {
                "from": 478,
                "to": 480,
                "label": "CASE"
            },
            {
                "from": 479,
                "to": 177,
                "label": "INSTANCE with matching:\nT44 -> .(T119, T120)\nT45 -> T122\nT20 -> T124"
            },
            {
                "from": 480,
                "to": 481,
                "label": "PARALLEL"
            },
            {
                "from": 480,
                "to": 482,
                "label": "PARALLEL"
            },
            {
                "from": 481,
                "to": 483,
                "label": "EVAL with clause\ngt(s(X167), s(X168)) :- gt(X167, X168).\nand substitutionX167 -> T137,\nT119 -> s(T137),\nX168 -> T138,\nT121 -> s(T138)"
            },
            {
                "from": 481,
                "to": 484,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 482,
                "to": 485,
                "label": "EVAL with clause\ngt(s(X173), 0).\nand substitutionX173 -> T143,\nT119 -> s(T143),\nT121 -> 0"
            },
            {
                "from": 482,
                "to": 486,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 483,
                "to": 478,
                "label": "INSTANCE with matching:\nT119 -> T137\nT121 -> T138"
            },
            {
                "from": 485,
                "to": 487,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(.(T16, .(T17, T18))) -> U1^1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   F1_IN(.(T16, .(T17, T18))) -> F30_IN(T16, T17, T18)
   F106_IN(.(T42, T43)) -> U2^1(f106_in(T43), .(T42, T43))
   F106_IN(.(T42, T43)) -> F106_IN(T43)
   F177_IN(.(T78, T79), .(T80, T81)) -> U3^1(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   F177_IN(.(T78, T79), .(T80, T81)) -> F459_IN(T78, T80, T79, T81)
   F177_IN(.(T119, T120), .(T121, T122)) -> U4^1(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   F177_IN(.(T119, T120), .(T121, T122)) -> F476_IN(T119, T121, T120, T122)
   F461_IN(s(T96), s(T97)) -> U5^1(f461_in(T96, T97), s(T96), s(T97))
   F461_IN(s(T96), s(T97)) -> F461_IN(T96, T97)
   F478_IN(s(T137), s(T138)) -> U6^1(f478_in(T137, T138), s(T137), s(T138))
   F478_IN(s(T137), s(T138)) -> F478_IN(T137, T138)
   F56_IN(T29, T36, T37) -> U7^1(f106_in(T37), T29, T36, T37)
   F56_IN(T29, T36, T37) -> F106_IN(T37)
   F30_IN(T16, T17, T18) -> U8^1(f56_in(T16, T17, T18), T16, T17, T18)
   F30_IN(T16, T17, T18) -> F56_IN(T16, T17, T18)
   U8^1(f56_out1(T21, T22), T16, T17, T18) -> U9^1(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U8^1(f56_out1(T21, T22), T16, T17, T18) -> F57_IN(T21, T22)
   F57_IN(T21, T22) -> U10^1(f1_in(T21), T21, T22)
   F57_IN(T21, T22) -> F1_IN(T21)
   U10^1(f1_out1(T44), T21, T22) -> U11^1(f173_in(T22, T44), T21, T22, T44)
   U10^1(f1_out1(T44), T21, T22) -> F173_IN(T22, T44)
   F173_IN(T22, T44) -> U12^1(f1_in(T22), T22, T44)
   F173_IN(T22, T44) -> F1_IN(T22)
   U12^1(f1_out1(T45), T22, T44) -> U13^1(f177_in(T44, T45), T22, T44, T45)
   U12^1(f1_out1(T45), T22, T44) -> F177_IN(T44, T45)
   F459_IN(T78, T80, T79, T81) -> U14^1(f461_in(T78, T80), T78, T80, T79, T81)
   F459_IN(T78, T80, T79, T81) -> F461_IN(T78, T80)
   U14^1(f461_out1, T78, T80, T79, T81) -> U15^1(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U14^1(f461_out1, T78, T80, T79, T81) -> F177_IN(T79, .(T80, T81))
   F476_IN(T119, T121, T120, T122) -> U16^1(f478_in(T119, T121), T119, T121, T120, T122)
   F476_IN(T119, T121, T120, T122) -> F478_IN(T119, T121)
   U16^1(f478_out1, T119, T121, T120, T122) -> U17^1(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U16^1(f478_out1, T119, T121, T120, T122) -> F177_IN(.(T119, T120), T122)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 18 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F478_IN(s(T137), s(T138)) -> F478_IN(T137, T138)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F478_IN(s(T137), s(T138)) -> F478_IN(T137, T138)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F478_IN(s(T137), s(T138)) -> F478_IN(T137, T138)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F461_IN(s(T96), s(T97)) -> F461_IN(T96, T97)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F461_IN(s(T96), s(T97)) -> F461_IN(T96, T97)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F461_IN(s(T96), s(T97)) -> F461_IN(T96, T97)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F177_IN(.(T78, T79), .(T80, T81)) -> F459_IN(T78, T80, T79, T81)
   F459_IN(T78, T80, T79, T81) -> U14^1(f461_in(T78, T80), T78, T80, T79, T81)
   U14^1(f461_out1, T78, T80, T79, T81) -> F177_IN(T79, .(T80, T81))
   F177_IN(.(T119, T120), .(T121, T122)) -> F476_IN(T119, T121, T120, T122)
   F476_IN(T119, T121, T120, T122) -> U16^1(f478_in(T119, T121), T119, T121, T120, T122)
   U16^1(f478_out1, T119, T121, T120, T122) -> F177_IN(.(T119, T120), T122)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F177_IN(.(T78, T79), .(T80, T81)) -> F459_IN(T78, T80, T79, T81)
   F177_IN(.(T119, T120), .(T121, T122)) -> F476_IN(T119, T121, T120, T122)
   U16^1(f478_out1, T119, T121, T120, T122) -> F177_IN(.(T119, T120), T122)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U14^1_5(x_1, ..., x_5) ) = x_1 + 2x_3 + 2x_4 + 2x_5 + 2
POL( f461_in_2(x_1, x_2) ) = x_1
POL( s_1(x_1) ) = 2x_1 + 2
POL( U5_3(x_1, ..., x_3) ) = 2
POL( 0 ) = 2
POL( f461_out1 ) = 2
POL( U16^1_5(x_1, ..., x_5) ) = 2x_1 + 2x_2 + 2x_4 + 2x_5 + 2
POL( f478_in_2(x_1, x_2) ) = x_2
POL( U6_3(x_1, ..., x_3) ) = max{0, 2x_1 - 2}
POL( f478_out1 ) = 2
POL( F177_IN_2(x_1, x_2) ) = 2x_1 + 2x_2
POL( ._2(x_1, x_2) ) = x_1 + x_2 + 2
POL( F459_IN_4(x_1, ..., x_4) ) = x_1 + 2x_2 + 2x_3 + 2x_4 + 2
POL( F476_IN_4(x_1, ..., x_4) ) = 2x_1 + 2x_2 + 2x_3 + 2x_4 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   f478_in(s(T143), 0) -> f478_out1
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   U6(f478_out1, s(T137), s(T138)) -> f478_out1


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F459_IN(T78, T80, T79, T81) -> U14^1(f461_in(T78, T80), T78, T80, T79, T81)
   U14^1(f461_out1, T78, T80, T79, T81) -> F177_IN(T79, .(T80, T81))
   F476_IN(T119, T121, T120, T122) -> U16^1(f478_in(T119, T121), T119, T121, T120, T122)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 3 less nodes.
----------------------------------------

(21)
TRUE

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F106_IN(.(T42, T43)) -> F106_IN(T43)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F106_IN(.(T42, T43)) -> F106_IN(T43)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F106_IN(.(T42, T43)) -> F106_IN(T43)
The graph contains the following edges 1 > 1


----------------------------------------

(26)
YES

----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(.(T16, .(T17, T18))) -> F30_IN(T16, T17, T18)
   F30_IN(T16, T17, T18) -> U8^1(f56_in(T16, T17, T18), T16, T17, T18)
   U8^1(f56_out1(T21, T22), T16, T17, T18) -> F57_IN(T21, T22)
   F57_IN(T21, T22) -> U10^1(f1_in(T21), T21, T22)
   U10^1(f1_out1(T44), T21, T22) -> F173_IN(T22, T44)
   F173_IN(T22, T44) -> F1_IN(T22)
   F57_IN(T21, T22) -> F1_IN(T21)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F1_IN(.(T16, .(T17, T18))) -> F30_IN(T16, T17, T18)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U8^1_4(x_1, ..., x_4) ) = x_1 + 2
POL( U10^1_3(x_1, ..., x_3) ) = x_3
POL( U8_4(x_1, ..., x_4) ) = 2x_2 + 2
POL( f56_in_3(x_1, ..., x_3) ) = 2x_3
POL( U7_4(x_1, ..., x_4) ) = 2x_1
POL( f106_in_1(x_1) ) = x_1
POL( f1_in_1(x_1) ) = 0
POL( [] ) = 0
POL( f1_out1_1(x_1) ) = max{0, 2x_1 - 2}
POL( ._2(x_1, x_2) ) = 2x_2 + 1
POL( U1_2(x_1, x_2) ) = 2x_1 + x_2 + 1
POL( f30_in_3(x_1, ..., x_3) ) = x_1 + 2x_2 + x_3 + 2
POL( f30_out1_5(x_1, ..., x_5) ) = 2x_1 + 2x_2 + 2x_3 + 2x_4 + 1
POL( f56_out1_2(x_1, x_2) ) = max{0, x_1 + x_2 - 2}
POL( U9_6(x_1, ..., x_6) ) = 2x_5 + 2
POL( f57_in_2(x_1, x_2) ) = 0
POL( f57_out1_3(x_1, ..., x_3) ) = 2x_1 + x_3 + 2
POL( U10_3(x_1, ..., x_3) ) = 2
POL( U11_4(x_1, ..., x_4) ) = max{0, 2x_4 - 2}
POL( f173_in_2(x_1, x_2) ) = 2x_1 + 1
POL( f173_out1_2(x_1, x_2) ) = 2x_1 + 2x_2 + 2
POL( U12_3(x_1, ..., x_3) ) = max{0, x_2 - 2}
POL( U13_4(x_1, ..., x_4) ) = max{0, x_3 + 2x_4 - 2}
POL( f177_in_2(x_1, x_2) ) = 0
POL( f106_out1_2(x_1, x_2) ) = x_1 + x_2
POL( U2_2(x_1, x_2) ) = 2x_1 + 1
POL( f177_out1_1(x_1) ) = 2
POL( U3_3(x_1, ..., x_3) ) = max{0, 2x_1 - 2}
POL( f459_in_4(x_1, ..., x_4) ) = 2x_2 + 2
POL( U4_3(x_1, ..., x_3) ) = 2x_1 + 2x_2 + x_3 + 1
POL( f476_in_4(x_1, ..., x_4) ) = 2x_1 + 2x_2 + 2x_3 + 2
POL( f459_out1_1(x_1) ) = 1
POL( U14_5(x_1, ..., x_5) ) = max{0, x_4 + x_5 - 2}
POL( f461_in_2(x_1, x_2) ) = 0
POL( s_1(x_1) ) = 2x_1
POL( U5_3(x_1, ..., x_3) ) = max{0, x_2 - 2}
POL( 0 ) = 0
POL( f461_out1 ) = 0
POL( U15_5(x_1, ..., x_5) ) = max{0, x_2 - 2}
POL( f476_out1_1(x_1) ) = 0
POL( U16_5(x_1, ..., x_5) ) = max{0, x_4 + 2x_5 - 2}
POL( f478_in_2(x_1, x_2) ) = 2x_1 + 2x_2
POL( U6_3(x_1, ..., x_3) ) = max{0, 2x_1 + 2x_2 + 2x_3 - 2}
POL( f478_out1 ) = 2
POL( U17_5(x_1, ..., x_5) ) = max{0, 2x_3 - 2}
POL( F1_IN_1(x_1) ) = x_1
POL( F30_IN_3(x_1, ..., x_3) ) = 2x_3 + 2
POL( F57_IN_2(x_1, x_2) ) = x_1 + x_2
POL( F173_IN_2(x_1, x_2) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F30_IN(T16, T17, T18) -> U8^1(f56_in(T16, T17, T18), T16, T17, T18)
   U8^1(f56_out1(T21, T22), T16, T17, T18) -> F57_IN(T21, T22)
   F57_IN(T21, T22) -> U10^1(f1_in(T21), T21, T22)
   U10^1(f1_out1(T44), T21, T22) -> F173_IN(T22, T44)
   F173_IN(T22, T44) -> F1_IN(T22)
   F57_IN(T21, T22) -> F1_IN(T21)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1([])
   f1_in(.(T7, [])) -> f1_out1(.(T7, []))
   f1_in(.(T16, .(T17, T18))) -> U1(f30_in(T16, T17, T18), .(T16, .(T17, T18)))
   U1(f30_out1(X22, X23, X24, X25, T20), .(T16, .(T17, T18))) -> f1_out1(T20)
   f106_in([]) -> f106_out1([], [])
   f106_in(.(T42, T43)) -> U2(f106_in(T43), .(T42, T43))
   U2(f106_out1(X79, X78), .(T42, T43)) -> f106_out1(.(T42, X78), X79)
   f177_in([], T52) -> f177_out1(T52)
   f177_in(T57, []) -> f177_out1(T57)
   f177_in(.(T78, T79), .(T80, T81)) -> U3(f459_in(T78, T80, T79, T81), .(T78, T79), .(T80, T81))
   U3(f459_out1(T83), .(T78, T79), .(T80, T81)) -> f177_out1(.(T78, T83))
   f177_in(.(T119, T120), .(T121, T122)) -> U4(f476_in(T119, T121, T120, T122), .(T119, T120), .(T121, T122))
   U4(f476_out1(T124), .(T119, T120), .(T121, T122)) -> f177_out1(.(T121, T124))
   f461_in(s(T96), s(T97)) -> U5(f461_in(T96, T97), s(T96), s(T97))
   U5(f461_out1, s(T96), s(T97)) -> f461_out1
   f461_in(0, s(T104)) -> f461_out1
   f461_in(0, 0) -> f461_out1
   f478_in(s(T137), s(T138)) -> U6(f478_in(T137, T138), s(T137), s(T138))
   U6(f478_out1, s(T137), s(T138)) -> f478_out1
   f478_in(s(T143), 0) -> f478_out1
   f56_in(T29, T36, T37) -> U7(f106_in(T37), T29, T36, T37)
   U7(f106_out1(X61, X60), T29, T36, T37) -> f56_out1(.(T29, X61), .(T36, X60))
   f30_in(T16, T17, T18) -> U8(f56_in(T16, T17, T18), T16, T17, T18)
   U8(f56_out1(T21, T22), T16, T17, T18) -> U9(f57_in(T21, T22), T16, T17, T18, T21, T22)
   U9(f57_out1(X24, X25, T20), T16, T17, T18, T21, T22) -> f30_out1(T21, T22, X24, X25, T20)
   f57_in(T21, T22) -> U10(f1_in(T21), T21, T22)
   U10(f1_out1(T44), T21, T22) -> U11(f173_in(T22, T44), T21, T22, T44)
   U11(f173_out1(X25, T20), T21, T22, T44) -> f57_out1(T44, X25, T20)
   f173_in(T22, T44) -> U12(f1_in(T22), T22, T44)
   U12(f1_out1(T45), T22, T44) -> U13(f177_in(T44, T45), T22, T44, T45)
   U13(f177_out1(T20), T22, T44, T45) -> f173_out1(T45, T20)
   f459_in(T78, T80, T79, T81) -> U14(f461_in(T78, T80), T78, T80, T79, T81)
   U14(f461_out1, T78, T80, T79, T81) -> U15(f177_in(T79, .(T80, T81)), T78, T80, T79, T81)
   U15(f177_out1(T83), T78, T80, T79, T81) -> f459_out1(T83)
   f476_in(T119, T121, T120, T122) -> U16(f478_in(T119, T121), T119, T121, T120, T122)
   U16(f478_out1, T119, T121, T120, T122) -> U17(f177_in(.(T119, T120), T122), T119, T121, T120, T122)
   U17(f177_out1(T124), T119, T121, T120, T122) -> f476_out1(T124)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 6 less nodes.
----------------------------------------

(31)
TRUE
