MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/PqLWh.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

ms(a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 21 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [SOUND, 0 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (20) YES
        (21) PiDP
            (22) UsableRulesProof [EQUIVALENT, 0 ms]
            (23) PiDP
            (24) PiDPToQDPProof [SOUND, 0 ms]
            (25) QDP
            (26) NonTerminationLoopProof [COMPLETE, 0 ms]
            (27) NO
        (28) PiDP
            (29) UsableRulesProof [EQUIVALENT, 0 ms]
            (30) PiDP
            (31) PiDPToQDPProof [SOUND, 0 ms]
            (32) QDP
            (33) TransformationProof [SOUND, 0 ms]
            (34) QDP
            (35) TransformationProof [SOUND, 0 ms]
            (36) QDP
        (37) PiDP
            (38) UsableRulesProof [EQUIVALENT, 0 ms]
            (39) PiDP
        (40) PiDP
            (41) UsableRulesProof [EQUIVALENT, 0 ms]
            (42) PiDP
(43) PrologToPiTRSProof [SOUND, 0 ms]
(44) PiTRS
    (45) DependencyPairsProof [EQUIVALENT, 13 ms]
    (46) PiDP
    (47) DependencyGraphProof [EQUIVALENT, 0 ms]
    (48) AND
        (49) PiDP
            (50) UsableRulesProof [EQUIVALENT, 0 ms]
            (51) PiDP
            (52) PiDPToQDPProof [SOUND, 0 ms]
            (53) QDP
            (54) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (55) YES
        (56) PiDP
            (57) UsableRulesProof [EQUIVALENT, 0 ms]
            (58) PiDP
            (59) PiDPToQDPProof [SOUND, 0 ms]
            (60) QDP
            (61) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (62) YES
        (63) PiDP
            (64) UsableRulesProof [EQUIVALENT, 0 ms]
            (65) PiDP
            (66) PiDPToQDPProof [SOUND, 0 ms]
            (67) QDP
            (68) NonTerminationLoopProof [COMPLETE, 2 ms]
            (69) NO
        (70) PiDP
            (71) UsableRulesProof [EQUIVALENT, 0 ms]
            (72) PiDP
            (73) PiDPToQDPProof [SOUND, 0 ms]
            (74) QDP
            (75) TransformationProof [SOUND, 0 ms]
            (76) QDP
            (77) TransformationProof [SOUND, 0 ms]
            (78) QDP
        (79) PiDP
            (80) UsableRulesProof [EQUIVALENT, 0 ms]
            (81) PiDP
        (82) PiDP
            (83) UsableRulesProof [EQUIVALENT, 0 ms]
            (84) PiDP
(85) PrologToTRSTransformerProof [SOUND, 32 ms]
(86) QTRS
    (87) DependencyPairsProof [EQUIVALENT, 0 ms]
    (88) QDP
    (89) DependencyGraphProof [EQUIVALENT, 0 ms]
    (90) AND
        (91) QDP
            (92) UsableRulesProof [EQUIVALENT, 0 ms]
            (93) QDP
            (94) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (95) YES
        (96) QDP
            (97) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (98) YES
        (99) QDP
            (100) UsableRulesProof [EQUIVALENT, 0 ms]
            (101) QDP
            (102) NonTerminationLoopProof [COMPLETE, 0 ms]
            (103) NO
        (104) QDP
            (105) UsableRulesProof [EQUIVALENT, 0 ms]
            (106) QDP
        (107) QDP
            (108) UsableRulesProof [EQUIVALENT, 0 ms]
            (109) QDP
            (110) NonTerminationLoopProof [COMPLETE, 0 ms]
            (111) NO
        (112) QDP
            (113) UsableRulesProof [EQUIVALENT, 0 ms]
            (114) QDP
(115) PrologToDTProblemTransformerProof [SOUND, 88 ms]
(116) TRIPLES
    (117) UndefinedPredicateInTriplesTransformerProof [SOUND, 0 ms]
    (118) TRIPLES
    (119) TriplesToPiDPProof [SOUND, 41 ms]
    (120) PiDP
    (121) DependencyGraphProof [EQUIVALENT, 0 ms]
    (122) AND
        (123) PiDP
            (124) UsableRulesProof [EQUIVALENT, 0 ms]
            (125) PiDP
            (126) PiDPToQDPProof [SOUND, 0 ms]
            (127) QDP
            (128) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (129) YES
        (130) PiDP
            (131) UsableRulesProof [EQUIVALENT, 0 ms]
            (132) PiDP
            (133) PiDPToQDPProof [SOUND, 0 ms]
            (134) QDP
            (135) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (136) YES
        (137) PiDP
            (138) UsableRulesProof [EQUIVALENT, 0 ms]
            (139) PiDP
            (140) PiDPToQDPProof [SOUND, 0 ms]
            (141) QDP
            (142) NonTerminationLoopProof [COMPLETE, 0 ms]
            (143) NO
        (144) PiDP
            (145) UsableRulesProof [EQUIVALENT, 0 ms]
            (146) PiDP
            (147) PiDPToQDPProof [SOUND, 0 ms]
            (148) QDP
        (149) PiDP
            (150) UsableRulesProof [EQUIVALENT, 0 ms]
            (151) PiDP
        (152) PiDP
            (153) UsableRulesProof [EQUIVALENT, 0 ms]
            (154) PiDP
(155) PrologToIRSwTTransformerProof [SOUND, 73 ms]
(156) AND
    (157) IRSwT
        (158) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (159) TRUE
    (160) IRSwT
        (161) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (162) TRUE
    (163) IRSwT
        (164) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (165) TRUE
    (166) IRSwT
        (167) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (168) TRUE
    (169) IRSwT
        (170) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (171) IRSwT
        (172) IntTRSCompressionProof [EQUIVALENT, 8 ms]
        (173) IRSwT
        (174) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (175) IRSwT
        (176) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
        (177) IRSwT
        (178) FilterProof [EQUIVALENT, 0 ms]
        (179) IntTRS
        (180) IntTRSNonPeriodicNontermProof [COMPLETE, 5 ms]
        (181) NO
    (182) IRSwT
        (183) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (184) IRSwT
        (185) IntTRSCompressionProof [EQUIVALENT, 9 ms]
        (186) IRSwT
        (187) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (188) IRSwT
        (189) IRSwTTerminationDigraphProof [EQUIVALENT, 9 ms]
        (190) IRSwT
        (191) FilterProof [EQUIVALENT, 0 ms]
        (192) IntTRS
        (193) IntTRSNonPeriodicNontermProof [COMPLETE, 3 ms]
        (194) NO


----------------------------------------

(0)
Obligation:
Clauses:

ms([], []).
ms(.(X, []), .(X, [])).
ms(.(X, .(Y, Xs)), Ys) :- ','(split(.(X, .(Y, Xs)), X1s, X2s), ','(ms(X1s, Y1s), ','(ms(X2s, Y2s), merge(Y1s, Y2s, Ys)))).
split([], [], []).
split(.(X, Xs), .(X, Ys), Zs) :- split(Xs, Zs, Ys).
merge([], Xs, Xs).
merge(Xs, [], Xs).
merge(.(X, Xs), .(Y, Ys), .(X, Zs)) :- ','(less(X, s(Y)), merge(Xs, .(Y, Ys), Zs)).
merge(.(X, Xs), .(Y, Ys), .(Y, Zs)) :- ','(less(Y, X), merge(.(X, Xs), Ys, Zs)).
less(0, s(X1)).
less(s(X), s(Y)) :- less(X, Y).


Query: ms(a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

ms_in_2: (f,b) (f,f)

split_in_3: (f,f,f)

merge_in_3: (f,f,f) (f,f,b)

less_in_2: (f,f) (b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> U1_AG(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> U5_AAA(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AG(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AA(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AA(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAA(Y1s, Y2s, Ys)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_AA(X, s(Y))
   LESS_IN_AA(s(X), s(Y)) -> U10_AA(X, Y, less_in_aa(X, Y))
   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_AA(Y, X)
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AG(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AG(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAG(Y1s, Y2s, Ys)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_GA(X, s(Y))
   LESS_IN_GA(s(X), s(Y)) -> U10_GA(X, Y, less_in_ga(X, Y))
   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_GA(Y, X)
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

MS_IN_AG(x1, x2)  =  MS_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x4, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5, x6)  =  U3_AA(x6)

U4_AA(x1, x2, x3, x4, x5)  =  U4_AA(x5)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA

U10_AA(x1, x2, x3)  =  U10_AA(x3)

U7_AAA(x1, x2, x3, x4, x5, x6)  =  U7_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)

U9_AAA(x1, x2, x3, x4, x5, x6)  =  U9_AAA(x6)

U3_AG(x1, x2, x3, x4, x5, x6)  =  U3_AG(x4, x6)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x4, x5)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)

U10_GA(x1, x2, x3)  =  U10_GA(x1, x3)

U7_AAG(x1, x2, x3, x4, x5, x6)  =  U7_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)

U9_AAG(x1, x2, x3, x4, x5, x6)  =  U9_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> U1_AG(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> U5_AAA(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AG(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AA(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AA(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAA(Y1s, Y2s, Ys)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_AA(X, s(Y))
   LESS_IN_AA(s(X), s(Y)) -> U10_AA(X, Y, less_in_aa(X, Y))
   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_AA(Y, X)
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AG(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AG(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAG(Y1s, Y2s, Ys)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_GA(X, s(Y))
   LESS_IN_GA(s(X), s(Y)) -> U10_GA(X, Y, less_in_ga(X, Y))
   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_GA(Y, X)
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

MS_IN_AG(x1, x2)  =  MS_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x4, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5, x6)  =  U3_AA(x6)

U4_AA(x1, x2, x3, x4, x5)  =  U4_AA(x5)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA

U10_AA(x1, x2, x3)  =  U10_AA(x3)

U7_AAA(x1, x2, x3, x4, x5, x6)  =  U7_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)

U9_AAA(x1, x2, x3, x4, x5, x6)  =  U9_AAA(x6)

U3_AG(x1, x2, x3, x4, x5, x6)  =  U3_AG(x4, x6)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x4, x5)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)

U10_GA(x1, x2, x3)  =  U10_GA(x1, x3)

U7_AAG(x1, x2, x3, x4, x5, x6)  =  U7_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)

U9_AAG(x1, x2, x3, x4, x5, x6)  =  U9_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 6 SCCs with 23 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X)) -> LESS_IN_GA(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LESS_IN_GA(s(X)) -> LESS_IN_GA(X)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Zs, less_out_ga(X)) -> MERGE_IN_AAG(Zs)
   MERGE_IN_AAG(.(X, Zs)) -> U6_AAG(X, Zs, less_in_ga(X))
   MERGE_IN_AAG(.(Y, Zs)) -> U8_AAG(Y, Zs, less_in_ga(Y))
   U8_AAG(Y, Zs, less_out_ga(Y)) -> MERGE_IN_AAG(Zs)

The TRS R consists of the following rules:

   less_in_ga(0) -> less_out_ga(0)
   less_in_ga(s(X)) -> U10_ga(X, less_in_ga(X))
   U10_ga(X, less_out_ga(X)) -> less_out_ga(s(X))

The set Q consists of the following terms:

   less_in_ga(x0)
   U10_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MERGE_IN_AAG(.(X, Zs)) -> U6_AAG(X, Zs, less_in_ga(X))
The graph contains the following edges 1 > 1, 1 > 2


*MERGE_IN_AAG(.(Y, Zs)) -> U8_AAG(Y, Zs, less_in_ga(Y))
The graph contains the following edges 1 > 1, 1 > 2


*U6_AAG(X, Zs, less_out_ga(X)) -> MERGE_IN_AAG(Zs)
The graph contains the following edges 2 >= 1


*U8_AAG(Y, Zs, less_out_ga(Y)) -> MERGE_IN_AAG(Zs)
The graph contains the following edges 2 >= 1


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA -> LESS_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = LESS_IN_AA evaluates to  t =LESS_IN_AA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from LESS_IN_AA to LESS_IN_AA.




----------------------------------------

(27)
NO

----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

0  =  0

s(x1)  =  s(x1)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_in_aa)
   MERGE_IN_AAA -> U8_AAA(less_in_aa)
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (SOUND)
By narrowing [LPAR04] the rule MERGE_IN_AAA -> U6_AAA(less_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (MERGE_IN_AAA -> U6_AAA(less_out_aa(0)),MERGE_IN_AAA -> U6_AAA(less_out_aa(0)))
   (MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa)),MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa)))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U8_AAA(less_in_aa)
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa))

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(35) TransformationProof (SOUND)
By narrowing [LPAR04] the rule MERGE_IN_AAA -> U8_AAA(less_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (MERGE_IN_AAA -> U8_AAA(less_out_aa(0)),MERGE_IN_AAA -> U8_AAA(less_out_aa(0)))
   (MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa)),MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa)))


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa))
   MERGE_IN_AAA -> U8_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa))

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(37)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(38) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(39)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(40)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x4, x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2, x3)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga(x1)

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x1, x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x5, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x5, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(41) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(42)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)

The TRS R consists of the following rules:

   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x1, x2)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

0  =  0

s(x1)  =  s(x1)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(43) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

ms_in_2: (f,b) (f,f)

split_in_3: (f,f,f)

merge_in_3: (f,f,f) (f,f,b)

less_in_2: (f,f) (b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(44)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)



----------------------------------------

(45) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> U1_AG(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> U5_AAA(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AG(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AA(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AA(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAA(Y1s, Y2s, Ys)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_AA(X, s(Y))
   LESS_IN_AA(s(X), s(Y)) -> U10_AA(X, Y, less_in_aa(X, Y))
   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_AA(Y, X)
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AG(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AG(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAG(Y1s, Y2s, Ys)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_GA(X, s(Y))
   LESS_IN_GA(s(X), s(Y)) -> U10_GA(X, Y, less_in_ga(X, Y))
   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_GA(Y, X)
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

MS_IN_AG(x1, x2)  =  MS_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x4, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5, x6)  =  U3_AA(x6)

U4_AA(x1, x2, x3, x4, x5)  =  U4_AA(x5)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA

U10_AA(x1, x2, x3)  =  U10_AA(x3)

U7_AAA(x1, x2, x3, x4, x5, x6)  =  U7_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)

U9_AAA(x1, x2, x3, x4, x5, x6)  =  U9_AAA(x6)

U3_AG(x1, x2, x3, x4, x5, x6)  =  U3_AG(x4, x6)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x5)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)

U10_GA(x1, x2, x3)  =  U10_GA(x3)

U7_AAG(x1, x2, x3, x4, x5, x6)  =  U7_AAG(x1, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)

U9_AAG(x1, x2, x3, x4, x5, x6)  =  U9_AAG(x3, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(46)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> U1_AG(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AG(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> U5_AAA(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AG(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AG(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> SPLIT_IN_AAA(.(X, .(Y, Xs)), X1s, X2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AA(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AA(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U3_AA(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAA(Y1s, Y2s, Ys)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_AA(X, s(Y))
   LESS_IN_AA(s(X), s(Y)) -> U10_AA(X, Y, less_in_aa(X, Y))
   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_AA(Y, X)
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_AAA(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_AG(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U2_AG(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_AG(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   U3_AG(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> MERGE_IN_AAG(Y1s, Y2s, Ys)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> LESS_IN_GA(X, s(Y))
   LESS_IN_GA(s(X), s(Y)) -> U10_GA(X, Y, less_in_ga(X, Y))
   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> LESS_IN_GA(Y, X)
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_AAG(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

MS_IN_AG(x1, x2)  =  MS_IN_AG(x2)

U1_AG(x1, x2, x3, x4, x5)  =  U1_AG(x4, x5)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U2_AG(x1, x2, x3, x4, x5, x6)  =  U2_AG(x4, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5, x6)  =  U3_AA(x6)

U4_AA(x1, x2, x3, x4, x5)  =  U4_AA(x5)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA

U10_AA(x1, x2, x3)  =  U10_AA(x3)

U7_AAA(x1, x2, x3, x4, x5, x6)  =  U7_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)

U9_AAA(x1, x2, x3, x4, x5, x6)  =  U9_AAA(x6)

U3_AG(x1, x2, x3, x4, x5, x6)  =  U3_AG(x4, x6)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x5)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)

U10_GA(x1, x2, x3)  =  U10_GA(x3)

U7_AAG(x1, x2, x3, x4, x5, x6)  =  U7_AAG(x1, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)

U9_AAG(x1, x2, x3, x4, x5, x6)  =  U9_AAG(x3, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(47) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 6 SCCs with 23 less nodes.
----------------------------------------

(48)
Complex Obligation (AND)

----------------------------------------

(49)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(50) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(51)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X), s(Y)) -> LESS_IN_GA(X, Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESS_IN_GA(x1, x2)  =  LESS_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(52) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(53)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESS_IN_GA(s(X)) -> LESS_IN_GA(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(54) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LESS_IN_GA(s(X)) -> LESS_IN_GA(X)
The graph contains the following edges 1 > 1


----------------------------------------

(55)
YES

----------------------------------------

(56)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(57) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(58)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> MERGE_IN_AAG(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAG(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   MERGE_IN_AAG(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAG(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_AAG(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> MERGE_IN_AAG(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

MERGE_IN_AAG(x1, x2, x3)  =  MERGE_IN_AAG(x3)

U6_AAG(x1, x2, x3, x4, x5, x6)  =  U6_AAG(x1, x5, x6)

U8_AAG(x1, x2, x3, x4, x5, x6)  =  U8_AAG(x3, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(59) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAG(X, Zs, less_out_ga) -> MERGE_IN_AAG(Zs)
   MERGE_IN_AAG(.(X, Zs)) -> U6_AAG(X, Zs, less_in_ga(X))
   MERGE_IN_AAG(.(Y, Zs)) -> U8_AAG(Y, Zs, less_in_ga(Y))
   U8_AAG(Y, Zs, less_out_ga) -> MERGE_IN_AAG(Zs)

The TRS R consists of the following rules:

   less_in_ga(0) -> less_out_ga
   less_in_ga(s(X)) -> U10_ga(less_in_ga(X))
   U10_ga(less_out_ga) -> less_out_ga

The set Q consists of the following terms:

   less_in_ga(x0)
   U10_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(61) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MERGE_IN_AAG(.(X, Zs)) -> U6_AAG(X, Zs, less_in_ga(X))
The graph contains the following edges 1 > 1, 1 > 2


*MERGE_IN_AAG(.(Y, Zs)) -> U8_AAG(Y, Zs, less_in_ga(Y))
The graph contains the following edges 1 > 1, 1 > 2


*U6_AAG(X, Zs, less_out_ga) -> MERGE_IN_AAG(Zs)
The graph contains the following edges 2 >= 1


*U8_AAG(Y, Zs, less_out_ga) -> MERGE_IN_AAG(Zs)
The graph contains the following edges 2 >= 1


----------------------------------------

(62)
YES

----------------------------------------

(63)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(64) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(65)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA(s(X), s(Y)) -> LESS_IN_AA(X, Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESS_IN_AA(x1, x2)  =  LESS_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(66) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(67)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESS_IN_AA -> LESS_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(68) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = LESS_IN_AA evaluates to  t =LESS_IN_AA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from LESS_IN_AA to LESS_IN_AA.




----------------------------------------

(69)
NO

----------------------------------------

(70)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(71) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(72)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U6_AAA(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> MERGE_IN_AAA(Xs, .(Y, Ys), Zs)
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_AAA(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   MERGE_IN_AAA(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_AAA(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_AAA(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> MERGE_IN_AAA(.(X, Xs), Ys, Zs)

The TRS R consists of the following rules:

   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

0  =  0

s(x1)  =  s(x1)

MERGE_IN_AAA(x1, x2, x3)  =  MERGE_IN_AAA

U6_AAA(x1, x2, x3, x4, x5, x6)  =  U6_AAA(x6)

U8_AAA(x1, x2, x3, x4, x5, x6)  =  U8_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(73) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(74)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_in_aa)
   MERGE_IN_AAA -> U8_AAA(less_in_aa)
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(75) TransformationProof (SOUND)
By narrowing [LPAR04] the rule MERGE_IN_AAA -> U6_AAA(less_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (MERGE_IN_AAA -> U6_AAA(less_out_aa(0)),MERGE_IN_AAA -> U6_AAA(less_out_aa(0)))
   (MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa)),MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa)))


----------------------------------------

(76)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U8_AAA(less_in_aa)
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa))

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(77) TransformationProof (SOUND)
By narrowing [LPAR04] the rule MERGE_IN_AAA -> U8_AAA(less_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (MERGE_IN_AAA -> U8_AAA(less_out_aa(0)),MERGE_IN_AAA -> U8_AAA(less_out_aa(0)))
   (MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa)),MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa)))


----------------------------------------

(78)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(less_out_aa(X)) -> MERGE_IN_AAA
   U8_AAA(less_out_aa(Y)) -> MERGE_IN_AAA
   MERGE_IN_AAA -> U6_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U6_AAA(U10_aa(less_in_aa))
   MERGE_IN_AAA -> U8_AAA(less_out_aa(0))
   MERGE_IN_AAA -> U8_AAA(U10_aa(less_in_aa))

The TRS R consists of the following rules:

   less_in_aa -> less_out_aa(0)
   less_in_aa -> U10_aa(less_in_aa)
   U10_aa(less_out_aa(X)) -> less_out_aa(s(X))

The set Q consists of the following terms:

   less_in_aa
   U10_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(79)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(80) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(81)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLIT_IN_AAA(.(X, Xs), .(X, Ys), Zs) -> SPLIT_IN_AAA(Xs, Zs, Ys)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

SPLIT_IN_AAA(x1, x2, x3)  =  SPLIT_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(82)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)

The TRS R consists of the following rules:

   ms_in_ag([], []) -> ms_out_ag([], [])
   ms_in_ag(.(X, []), .(X, [])) -> ms_out_ag(.(X, []), .(X, []))
   ms_in_ag(.(X, .(Y, Xs)), Ys) -> U1_ag(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_ag(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_ag(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   U2_ag(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_ag(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_ag(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_ag(X, Y, Xs, Ys, merge_in_aag(Y1s, Y2s, Ys))
   merge_in_aag([], Xs, Xs) -> merge_out_aag([], Xs, Xs)
   merge_in_aag(Xs, [], Xs) -> merge_out_aag(Xs, [], Xs)
   merge_in_aag(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aag(X, Xs, Y, Ys, Zs, less_in_ga(X, s(Y)))
   less_in_ga(0, s(X1)) -> less_out_ga(0, s(X1))
   less_in_ga(s(X), s(Y)) -> U10_ga(X, Y, less_in_ga(X, Y))
   U10_ga(X, Y, less_out_ga(X, Y)) -> less_out_ga(s(X), s(Y))
   U6_aag(X, Xs, Y, Ys, Zs, less_out_ga(X, s(Y))) -> U7_aag(X, Xs, Y, Ys, Zs, merge_in_aag(Xs, .(Y, Ys), Zs))
   merge_in_aag(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aag(X, Xs, Y, Ys, Zs, less_in_ga(Y, X))
   U8_aag(X, Xs, Y, Ys, Zs, less_out_ga(Y, X)) -> U9_aag(X, Xs, Y, Ys, Zs, merge_in_aag(.(X, Xs), Ys, Zs))
   U9_aag(X, Xs, Y, Ys, Zs, merge_out_aag(.(X, Xs), Ys, Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U7_aag(X, Xs, Y, Ys, Zs, merge_out_aag(Xs, .(Y, Ys), Zs)) -> merge_out_aag(.(X, Xs), .(Y, Ys), .(X, Zs))
   U4_ag(X, Y, Xs, Ys, merge_out_aag(Y1s, Y2s, Ys)) -> ms_out_ag(.(X, .(Y, Xs)), Ys)

The argument filtering Pi contains the following mapping:
ms_in_ag(x1, x2)  =  ms_in_ag(x2)

[]  =  []

ms_out_ag(x1, x2)  =  ms_out_ag

.(x1, x2)  =  .(x1, x2)

U1_ag(x1, x2, x3, x4, x5)  =  U1_ag(x4, x5)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

U2_ag(x1, x2, x3, x4, x5, x6)  =  U2_ag(x4, x6)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

U3_ag(x1, x2, x3, x4, x5, x6)  =  U3_ag(x4, x6)

U4_ag(x1, x2, x3, x4, x5)  =  U4_ag(x5)

merge_in_aag(x1, x2, x3)  =  merge_in_aag(x3)

merge_out_aag(x1, x2, x3)  =  merge_out_aag(x1, x2)

U6_aag(x1, x2, x3, x4, x5, x6)  =  U6_aag(x1, x5, x6)

less_in_ga(x1, x2)  =  less_in_ga(x1)

0  =  0

less_out_ga(x1, x2)  =  less_out_ga

s(x1)  =  s(x1)

U10_ga(x1, x2, x3)  =  U10_ga(x3)

U7_aag(x1, x2, x3, x4, x5, x6)  =  U7_aag(x1, x6)

U8_aag(x1, x2, x3, x4, x5, x6)  =  U8_aag(x3, x5, x6)

U9_aag(x1, x2, x3, x4, x5, x6)  =  U9_aag(x3, x6)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(83) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(84)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MS_IN_AA(.(X, .(Y, Xs)), Ys) -> U1_AA(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_AA(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   U2_AA(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> MS_IN_AA(X2s, Y2s)
   U1_AA(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> MS_IN_AA(X1s, Y1s)

The TRS R consists of the following rules:

   split_in_aaa(.(X, Xs), .(X, Ys), Zs) -> U5_aaa(X, Xs, Ys, Zs, split_in_aaa(Xs, Zs, Ys))
   ms_in_aa([], []) -> ms_out_aa([], [])
   ms_in_aa(.(X, []), .(X, [])) -> ms_out_aa(.(X, []), .(X, []))
   ms_in_aa(.(X, .(Y, Xs)), Ys) -> U1_aa(X, Y, Xs, Ys, split_in_aaa(.(X, .(Y, Xs)), X1s, X2s))
   U5_aaa(X, Xs, Ys, Zs, split_out_aaa(Xs, Zs, Ys)) -> split_out_aaa(.(X, Xs), .(X, Ys), Zs)
   U1_aa(X, Y, Xs, Ys, split_out_aaa(.(X, .(Y, Xs)), X1s, X2s)) -> U2_aa(X, Y, Xs, Ys, X2s, ms_in_aa(X1s, Y1s))
   split_in_aaa([], [], []) -> split_out_aaa([], [], [])
   U2_aa(X, Y, Xs, Ys, X2s, ms_out_aa(X1s, Y1s)) -> U3_aa(X, Y, Xs, Ys, Y1s, ms_in_aa(X2s, Y2s))
   U3_aa(X, Y, Xs, Ys, Y1s, ms_out_aa(X2s, Y2s)) -> U4_aa(X, Y, Xs, Ys, merge_in_aaa(Y1s, Y2s, Ys))
   U4_aa(X, Y, Xs, Ys, merge_out_aaa(Y1s, Y2s, Ys)) -> ms_out_aa(.(X, .(Y, Xs)), Ys)
   merge_in_aaa([], Xs, Xs) -> merge_out_aaa([], Xs, Xs)
   merge_in_aaa(Xs, [], Xs) -> merge_out_aaa(Xs, [], Xs)
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(X, Zs)) -> U6_aaa(X, Xs, Y, Ys, Zs, less_in_aa(X, s(Y)))
   merge_in_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs)) -> U8_aaa(X, Xs, Y, Ys, Zs, less_in_aa(Y, X))
   U6_aaa(X, Xs, Y, Ys, Zs, less_out_aa(X, s(Y))) -> U7_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(Xs, .(Y, Ys), Zs))
   U8_aaa(X, Xs, Y, Ys, Zs, less_out_aa(Y, X)) -> U9_aaa(X, Xs, Y, Ys, Zs, merge_in_aaa(.(X, Xs), Ys, Zs))
   less_in_aa(0, s(X1)) -> less_out_aa(0, s(X1))
   less_in_aa(s(X), s(Y)) -> U10_aa(X, Y, less_in_aa(X, Y))
   U7_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(Xs, .(Y, Ys), Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(X, Zs))
   U9_aaa(X, Xs, Y, Ys, Zs, merge_out_aaa(.(X, Xs), Ys, Zs)) -> merge_out_aaa(.(X, Xs), .(Y, Ys), .(Y, Zs))
   U10_aa(X, Y, less_out_aa(X, Y)) -> less_out_aa(s(X), s(Y))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x1, x2)

split_in_aaa(x1, x2, x3)  =  split_in_aaa

split_out_aaa(x1, x2, x3)  =  split_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

ms_in_aa(x1, x2)  =  ms_in_aa

ms_out_aa(x1, x2)  =  ms_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5, x6)  =  U3_aa(x6)

U4_aa(x1, x2, x3, x4, x5)  =  U4_aa(x5)

merge_in_aaa(x1, x2, x3)  =  merge_in_aaa

merge_out_aaa(x1, x2, x3)  =  merge_out_aaa

U6_aaa(x1, x2, x3, x4, x5, x6)  =  U6_aaa(x6)

less_in_aa(x1, x2)  =  less_in_aa

less_out_aa(x1, x2)  =  less_out_aa(x1)

U10_aa(x1, x2, x3)  =  U10_aa(x3)

U7_aaa(x1, x2, x3, x4, x5, x6)  =  U7_aaa(x6)

U8_aaa(x1, x2, x3, x4, x5, x6)  =  U8_aaa(x6)

U9_aaa(x1, x2, x3, x4, x5, x6)  =  U9_aaa(x6)

0  =  0

s(x1)  =  s(x1)

MS_IN_AA(x1, x2)  =  MS_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(85) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ms ([]) ([]))",
                null
            ],
            [
                "(ms (. X ([])) (. X ([])))",
                null
            ],
            [
                "(ms (. X (. Y Xs)) Ys)",
                "(',' (split (. X (. Y Xs)) X1s X2s) (',' (ms X1s Y1s) (',' (ms X2s Y2s) (merge Y1s Y2s Ys))))"
            ],
            [
                "(split ([]) ([]) ([]))",
                null
            ],
            [
                "(split (. X Xs) (. X Ys) Zs)",
                "(split Xs Zs Ys)"
            ],
            [
                "(merge ([]) Xs Xs)",
                null
            ],
            [
                "(merge Xs ([]) Xs)",
                null
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. X Zs))",
                "(',' (less X (s Y)) (merge Xs (. Y Ys) Zs))"
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. Y Zs))",
                "(',' (less Y X) (merge (. X Xs) Ys Zs))"
            ],
            [
                "(less (0) (s X1))",
                null
            ],
            [
                "(less (s X) (s Y))",
                "(less X Y)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "907": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T75 X107) (merge T74 X107 X108))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "990": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "991": {
                "goal": [{
                    "clause": 5,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "992": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "993": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "994": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1059": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T279 T280) T281 T273)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T273"],
                    "free": [],
                    "exprvars": []
                }
            },
            "511": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T36 T37) X44 X43)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "995": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1058": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T271 T274)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T271"],
                    "free": [],
                    "exprvars": []
                }
            },
            "996": {
                "goal": [{
                    "clause": 6,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1057": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "997": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1056": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T271 T274) (merge (. T274 T276) T275 T273))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T271",
                        "T273"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "998": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "911": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T75 X107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X107"],
                    "exprvars": []
                }
            },
            "999": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "912": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "915": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "916": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "917": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "401": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(split (. T20 (. T21 T22)) X23 X24)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(split (. T20 (. T21 T22)) X23 X24)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "921": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "922": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "923": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "924": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "529": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(split (. T36 T37) X44 X43)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(split (. T36 T37) X44 X43)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "925": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "409": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(split (. T20 (. T21 T22)) X23 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "928": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "929": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1000": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "370": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T20 (. T21 T22)) X23 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "375": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T23 X25) (',' (ms T24 X26) (merge X25 X26 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "532": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(split (. T36 T37) X44 X43)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "930": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "932": {
                "goal": [{
                    "clause": 7,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "934": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "1011": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1010": {
                "goal": [{
                    "clause": 10,
                    "scope": 10,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1008": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(less T212 (s T217))"
                    },
                    {
                        "clause": 10,
                        "scope": 10,
                        "term": "(less T212 (s T217))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1007": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T222 (. T223 T224) T216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T216"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1006": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1005": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1004": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T212 (s T217)) (merge T218 (. T217 T219) T216))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T212",
                        "T216"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "940": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T110 (s T111)) (merge T112 (. T111 T113) X150))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X150"],
                    "exprvars": []
                }
            },
            "1002": {
                "goal": [{
                    "clause": 8,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "942": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1001": {
                "goal": [{
                    "clause": 7,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "306": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "307": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "704": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T52 X80 X79)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X79",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "705": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1009": {
                "goal": [{
                    "clause": 9,
                    "scope": 10,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "48": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1021": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1020": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1019": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1018": {
                "goal": [{
                    "clause": 10,
                    "scope": 11,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "310": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1017": {
                "goal": [{
                    "clause": 9,
                    "scope": 11,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "311": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1016": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 11,
                        "term": "(less T236 T238)"
                    },
                    {
                        "clause": 10,
                        "scope": 11,
                        "term": "(less T236 T238)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "312": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1015": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1014": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1013": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1012": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "716": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "717": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T54 X26) (merge T53 X26 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "565": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "720": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "1025": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T20 (. T21 T22)) X23 X24) (',' (ms X23 X25) (',' (ms X24 X26) (merge X25 X26 T19))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X23",
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "721": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "1024": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T250 T252)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T250"],
                    "free": [],
                    "exprvars": []
                }
            },
            "722": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "966": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "725": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "967": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T116 (. T117 T118) X150)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X150"],
                    "exprvars": []
                }
            },
            "726": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "968": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 7,
                        "term": "(less T110 (s T111))"
                    },
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(less T110 (s T111))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "969": {
                "goal": [{
                    "clause": 9,
                    "scope": 7,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "728": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "571": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(split T45 X62 X61)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(split T45 X62 X61)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "970": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "575": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "971": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "576": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "972": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "973": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "974": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "975": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "976": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 8,
                        "term": "(less T132 T133)"
                    },
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(less T132 T133)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "977": {
                "goal": [{
                    "clause": 9,
                    "scope": 8,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "857": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T69 (. T70 T71)) X104 X105) (',' (ms X104 X106) (',' (ms X105 X107) (merge X106 X107 X108))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X104",
                        "X105",
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "978": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "737": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "858": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "979": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "738": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "76": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "77": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "78": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "581": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "584": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "980": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "981": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "982": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T147 T148)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "587": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "741": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "862": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T69 (. T70 T71)) X104 X105)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X104",
                        "X105"
                    ],
                    "exprvars": []
                }
            },
            "983": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "742": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "863": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T72 X106) (',' (ms T73 X107) (merge X106 X107 X108)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "984": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T167 T168) (merge (. T168 T170) T169 X200))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "743": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "985": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "986": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T167 T168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "987": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T173 T174) T175 X200)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "988": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T54 X26)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "989": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "906": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T72 X106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X106"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 3,
                "label": "CASE"
            },
            {
                "from": 3,
                "to": 48,
                "label": "PARALLEL"
            },
            {
                "from": 3,
                "to": 49,
                "label": "PARALLEL"
            },
            {
                "from": 48,
                "to": 76,
                "label": "EVAL with clause\nms([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 48,
                "to": 77,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 49,
                "to": 306,
                "label": "PARALLEL"
            },
            {
                "from": 49,
                "to": 307,
                "label": "PARALLEL"
            },
            {
                "from": 76,
                "to": 78,
                "label": "SUCCESS"
            },
            {
                "from": 306,
                "to": 310,
                "label": "EVAL with clause\nms(.(X6, []), .(X6, [])).\nand substitutionX6 -> T7,\nT1 -> .(T7, []),\nT2 -> .(T7, [])"
            },
            {
                "from": 306,
                "to": 311,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 307,
                "to": 325,
                "label": "EVAL with clause\nms(.(X19, .(X20, X21)), X22) :- ','(split(.(X19, .(X20, X21)), X23, X24), ','(ms(X23, X25), ','(ms(X24, X26), merge(X25, X26, X22)))).\nand substitutionX19 -> T20,\nX20 -> T21,\nX21 -> T22,\nT1 -> .(T20, .(T21, T22)),\nT2 -> T19,\nX22 -> T19,\nT16 -> T20,\nT17 -> T21,\nT18 -> T22"
            },
            {
                "from": 307,
                "to": 327,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 310,
                "to": 312,
                "label": "SUCCESS"
            },
            {
                "from": 325,
                "to": 370,
                "label": "SPLIT 1"
            },
            {
                "from": 325,
                "to": 375,
                "label": "SPLIT 2\nreplacements:X23 -> T23,\nX24 -> T24"
            },
            {
                "from": 370,
                "to": 401,
                "label": "CASE"
            },
            {
                "from": 375,
                "to": 716,
                "label": "SPLIT 1"
            },
            {
                "from": 375,
                "to": 717,
                "label": "SPLIT 2\nreplacements:X25 -> T53,\nT24 -> T54"
            },
            {
                "from": 401,
                "to": 409,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 409,
                "to": 511,
                "label": "ONLY EVAL with clause\nsplit(.(X39, X40), .(X39, X41), X42) :- split(X40, X42, X41).\nand substitutionT20 -> T33,\nX39 -> T33,\nT21 -> T36,\nT22 -> T37,\nX40 -> .(T36, T37),\nX41 -> X43,\nX23 -> .(T33, X43),\nX24 -> X44,\nX42 -> X44,\nT34 -> T36,\nT35 -> T37"
            },
            {
                "from": 511,
                "to": 529,
                "label": "CASE"
            },
            {
                "from": 529,
                "to": 532,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 532,
                "to": 565,
                "label": "ONLY EVAL with clause\nsplit(.(X57, X58), .(X57, X59), X60) :- split(X58, X60, X59).\nand substitutionT36 -> T43,\nX57 -> T43,\nT37 -> T45,\nX58 -> T45,\nX59 -> X61,\nX44 -> .(T43, X61),\nX43 -> X62,\nX60 -> X62,\nT44 -> T45"
            },
            {
                "from": 565,
                "to": 571,
                "label": "CASE"
            },
            {
                "from": 571,
                "to": 575,
                "label": "PARALLEL"
            },
            {
                "from": 571,
                "to": 576,
                "label": "PARALLEL"
            },
            {
                "from": 575,
                "to": 581,
                "label": "EVAL with clause\nsplit([], [], []).\nand substitutionT45 -> [],\nX62 -> [],\nX61 -> []"
            },
            {
                "from": 575,
                "to": 584,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 576,
                "to": 704,
                "label": "EVAL with clause\nsplit(.(X75, X76), .(X75, X77), X78) :- split(X76, X78, X77).\nand substitutionX75 -> T50,\nX76 -> T52,\nT45 -> .(T50, T52),\nX77 -> X79,\nX62 -> .(T50, X79),\nX61 -> X80,\nX78 -> X80,\nT51 -> T52"
            },
            {
                "from": 576,
                "to": 705,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 581,
                "to": 587,
                "label": "SUCCESS"
            },
            {
                "from": 704,
                "to": 565,
                "label": "INSTANCE with matching:\nT45 -> T52\nX62 -> X80\nX61 -> X79"
            },
            {
                "from": 716,
                "to": 720,
                "label": "CASE"
            },
            {
                "from": 717,
                "to": 988,
                "label": "SPLIT 1"
            },
            {
                "from": 717,
                "to": 989,
                "label": "SPLIT 2\nreplacements:X26 -> T178,\nT53 -> T179"
            },
            {
                "from": 720,
                "to": 721,
                "label": "PARALLEL"
            },
            {
                "from": 720,
                "to": 722,
                "label": "PARALLEL"
            },
            {
                "from": 721,
                "to": 725,
                "label": "EVAL with clause\nms([], []).\nand substitutionT23 -> [],\nX25 -> []"
            },
            {
                "from": 721,
                "to": 726,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 722,
                "to": 737,
                "label": "PARALLEL"
            },
            {
                "from": 722,
                "to": 738,
                "label": "PARALLEL"
            },
            {
                "from": 725,
                "to": 728,
                "label": "SUCCESS"
            },
            {
                "from": 737,
                "to": 741,
                "label": "EVAL with clause\nms(.(X85, []), .(X85, [])).\nand substitutionX85 -> T59,\nT23 -> .(T59, []),\nX25 -> .(T59, [])"
            },
            {
                "from": 737,
                "to": 742,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 738,
                "to": 857,
                "label": "EVAL with clause\nms(.(X100, .(X101, X102)), X103) :- ','(split(.(X100, .(X101, X102)), X104, X105), ','(ms(X104, X106), ','(ms(X105, X107), merge(X106, X107, X103)))).\nand substitutionX100 -> T69,\nX101 -> T70,\nX102 -> T71,\nT23 -> .(T69, .(T70, T71)),\nX25 -> X108,\nX103 -> X108,\nT66 -> T69,\nT67 -> T70,\nT68 -> T71"
            },
            {
                "from": 738,
                "to": 858,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 741,
                "to": 743,
                "label": "SUCCESS"
            },
            {
                "from": 857,
                "to": 862,
                "label": "SPLIT 1"
            },
            {
                "from": 857,
                "to": 863,
                "label": "SPLIT 2\nreplacements:X104 -> T72,\nX105 -> T73"
            },
            {
                "from": 862,
                "to": 370,
                "label": "INSTANCE with matching:\nT20 -> T69\nT21 -> T70\nT22 -> T71\nX23 -> X104\nX24 -> X105"
            },
            {
                "from": 863,
                "to": 906,
                "label": "SPLIT 1"
            },
            {
                "from": 863,
                "to": 907,
                "label": "SPLIT 2\nreplacements:X106 -> T74,\nT73 -> T75"
            },
            {
                "from": 906,
                "to": 716,
                "label": "INSTANCE with matching:\nT23 -> T72\nX25 -> X106"
            },
            {
                "from": 907,
                "to": 911,
                "label": "SPLIT 1"
            },
            {
                "from": 907,
                "to": 912,
                "label": "SPLIT 2\nreplacements:X107 -> T76,\nT74 -> T77"
            },
            {
                "from": 911,
                "to": 716,
                "label": "INSTANCE with matching:\nT23 -> T75\nX25 -> X107"
            },
            {
                "from": 912,
                "to": 915,
                "label": "CASE"
            },
            {
                "from": 915,
                "to": 916,
                "label": "PARALLEL"
            },
            {
                "from": 915,
                "to": 917,
                "label": "PARALLEL"
            },
            {
                "from": 916,
                "to": 921,
                "label": "EVAL with clause\nmerge([], X115, X115).\nand substitutionT77 -> [],\nT76 -> T84,\nX115 -> T84,\nX108 -> T84"
            },
            {
                "from": 916,
                "to": 922,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 917,
                "to": 924,
                "label": "PARALLEL"
            },
            {
                "from": 917,
                "to": 925,
                "label": "PARALLEL"
            },
            {
                "from": 921,
                "to": 923,
                "label": "SUCCESS"
            },
            {
                "from": 924,
                "to": 928,
                "label": "EVAL with clause\nmerge(X120, [], X120).\nand substitutionT77 -> T89,\nX120 -> T89,\nT76 -> [],\nX108 -> T89"
            },
            {
                "from": 924,
                "to": 929,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 925,
                "to": 932,
                "label": "PARALLEL"
            },
            {
                "from": 925,
                "to": 934,
                "label": "PARALLEL"
            },
            {
                "from": 928,
                "to": 930,
                "label": "SUCCESS"
            },
            {
                "from": 932,
                "to": 940,
                "label": "EVAL with clause\nmerge(.(X145, X146), .(X147, X148), .(X145, X149)) :- ','(less(X145, s(X147)), merge(X146, .(X147, X148), X149)).\nand substitutionX145 -> T110,\nX146 -> T112,\nT77 -> .(T110, T112),\nX147 -> T111,\nX148 -> T113,\nT76 -> .(T111, T113),\nX149 -> X150,\nX108 -> .(T110, X150),\nT106 -> T110,\nT108 -> T111,\nT107 -> T112,\nT109 -> T113"
            },
            {
                "from": 932,
                "to": 942,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 934,
                "to": 984,
                "label": "EVAL with clause\nmerge(.(X195, X196), .(X197, X198), .(X197, X199)) :- ','(less(X197, X195), merge(.(X195, X196), X198, X199)).\nand substitutionX195 -> T168,\nX196 -> T170,\nT77 -> .(T168, T170),\nX197 -> T167,\nX198 -> T169,\nT76 -> .(T167, T169),\nX199 -> X200,\nX108 -> .(T167, X200),\nT165 -> T167,\nT163 -> T168,\nT166 -> T169,\nT164 -> T170"
            },
            {
                "from": 934,
                "to": 985,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 940,
                "to": 966,
                "label": "SPLIT 1"
            },
            {
                "from": 940,
                "to": 967,
                "label": "SPLIT 2\nnew knowledge:\nT110 is ground\nreplacements:T112 -> T116,\nT111 -> T117,\nT113 -> T118"
            },
            {
                "from": 966,
                "to": 968,
                "label": "CASE"
            },
            {
                "from": 967,
                "to": 912,
                "label": "INSTANCE with matching:\nT77 -> T116\nT76 -> .(T117, T118)\nX108 -> X150"
            },
            {
                "from": 968,
                "to": 969,
                "label": "PARALLEL"
            },
            {
                "from": 968,
                "to": 970,
                "label": "PARALLEL"
            },
            {
                "from": 969,
                "to": 971,
                "label": "EVAL with clause\nless(0, s(X159)).\nand substitutionT110 -> 0,\nT111 -> T125,\nX159 -> T125"
            },
            {
                "from": 969,
                "to": 972,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 970,
                "to": 974,
                "label": "EVAL with clause\nless(s(X164), s(X165)) :- less(X164, X165).\nand substitutionX164 -> T132,\nT110 -> s(T132),\nT111 -> T133,\nX165 -> T133,\nT130 -> T132,\nT131 -> T133"
            },
            {
                "from": 970,
                "to": 975,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 971,
                "to": 973,
                "label": "SUCCESS"
            },
            {
                "from": 974,
                "to": 976,
                "label": "CASE"
            },
            {
                "from": 976,
                "to": 977,
                "label": "PARALLEL"
            },
            {
                "from": 976,
                "to": 978,
                "label": "PARALLEL"
            },
            {
                "from": 977,
                "to": 979,
                "label": "EVAL with clause\nless(0, s(X172)).\nand substitutionT132 -> 0,\nX172 -> T140,\nT133 -> s(T140)"
            },
            {
                "from": 977,
                "to": 980,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 978,
                "to": 982,
                "label": "EVAL with clause\nless(s(X177), s(X178)) :- less(X177, X178).\nand substitutionX177 -> T147,\nT132 -> s(T147),\nX178 -> T148,\nT133 -> s(T148),\nT145 -> T147,\nT146 -> T148"
            },
            {
                "from": 978,
                "to": 983,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 979,
                "to": 981,
                "label": "SUCCESS"
            },
            {
                "from": 982,
                "to": 974,
                "label": "INSTANCE with matching:\nT132 -> T147\nT133 -> T148"
            },
            {
                "from": 984,
                "to": 986,
                "label": "SPLIT 1"
            },
            {
                "from": 984,
                "to": 987,
                "label": "SPLIT 2\nnew knowledge:\nT167 is ground\nreplacements:T168 -> T173,\nT170 -> T174,\nT169 -> T175"
            },
            {
                "from": 986,
                "to": 974,
                "label": "INSTANCE with matching:\nT132 -> T167\nT133 -> T168"
            },
            {
                "from": 987,
                "to": 912,
                "label": "INSTANCE with matching:\nT77 -> .(T173, T174)\nT76 -> T175\nX108 -> X200"
            },
            {
                "from": 988,
                "to": 716,
                "label": "INSTANCE with matching:\nT23 -> T54\nX25 -> X26"
            },
            {
                "from": 989,
                "to": 990,
                "label": "CASE"
            },
            {
                "from": 990,
                "to": 991,
                "label": "PARALLEL"
            },
            {
                "from": 990,
                "to": 992,
                "label": "PARALLEL"
            },
            {
                "from": 991,
                "to": 993,
                "label": "EVAL with clause\nmerge([], X213, X213).\nand substitutionT179 -> [],\nT178 -> T186,\nX213 -> T186,\nT19 -> T186"
            },
            {
                "from": 991,
                "to": 994,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 992,
                "to": 996,
                "label": "PARALLEL"
            },
            {
                "from": 992,
                "to": 997,
                "label": "PARALLEL"
            },
            {
                "from": 993,
                "to": 995,
                "label": "SUCCESS"
            },
            {
                "from": 996,
                "to": 998,
                "label": "EVAL with clause\nmerge(X218, [], X218).\nand substitutionT179 -> T191,\nX218 -> T191,\nT178 -> [],\nT19 -> T191"
            },
            {
                "from": 996,
                "to": 999,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 997,
                "to": 1001,
                "label": "PARALLEL"
            },
            {
                "from": 997,
                "to": 1002,
                "label": "PARALLEL"
            },
            {
                "from": 998,
                "to": 1000,
                "label": "SUCCESS"
            },
            {
                "from": 1001,
                "to": 1004,
                "label": "EVAL with clause\nmerge(.(X239, X240), .(X241, X242), .(X239, X243)) :- ','(less(X239, s(X241)), merge(X240, .(X241, X242), X243)).\nand substitutionX239 -> T212,\nX240 -> T218,\nT179 -> .(T212, T218),\nX241 -> T217,\nX242 -> T219,\nT178 -> .(T217, T219),\nX243 -> T216,\nT19 -> .(T212, T216),\nT214 -> T217,\nT213 -> T218,\nT215 -> T219"
            },
            {
                "from": 1001,
                "to": 1005,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1002,
                "to": 1056,
                "label": "EVAL with clause\nmerge(.(X286, X287), .(X288, X289), .(X288, X290)) :- ','(less(X288, X286), merge(.(X286, X287), X289, X290)).\nand substitutionX286 -> T274,\nX287 -> T276,\nT179 -> .(T274, T276),\nX288 -> T271,\nX289 -> T275,\nT178 -> .(T271, T275),\nX290 -> T273,\nT19 -> .(T271, T273),\nT269 -> T274,\nT272 -> T275,\nT270 -> T276"
            },
            {
                "from": 1002,
                "to": 1057,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1004,
                "to": 1006,
                "label": "SPLIT 1"
            },
            {
                "from": 1004,
                "to": 1007,
                "label": "SPLIT 2\nnew knowledge:\nT212 is ground\nreplacements:T218 -> T222,\nT217 -> T223,\nT219 -> T224"
            },
            {
                "from": 1006,
                "to": 1008,
                "label": "CASE"
            },
            {
                "from": 1007,
                "to": 989,
                "label": "INSTANCE with matching:\nT179 -> T222\nT178 -> .(T223, T224)\nT19 -> T216"
            },
            {
                "from": 1008,
                "to": 1009,
                "label": "PARALLEL"
            },
            {
                "from": 1008,
                "to": 1010,
                "label": "PARALLEL"
            },
            {
                "from": 1009,
                "to": 1011,
                "label": "EVAL with clause\nless(0, s(X252)).\nand substitutionT212 -> 0,\nT217 -> T231,\nX252 -> T231"
            },
            {
                "from": 1009,
                "to": 1012,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1010,
                "to": 1014,
                "label": "EVAL with clause\nless(s(X257), s(X258)) :- less(X257, X258).\nand substitutionX257 -> T236,\nT212 -> s(T236),\nT217 -> T238,\nX258 -> T238,\nT237 -> T238"
            },
            {
                "from": 1010,
                "to": 1015,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1011,
                "to": 1013,
                "label": "SUCCESS"
            },
            {
                "from": 1014,
                "to": 1016,
                "label": "CASE"
            },
            {
                "from": 1016,
                "to": 1017,
                "label": "PARALLEL"
            },
            {
                "from": 1016,
                "to": 1018,
                "label": "PARALLEL"
            },
            {
                "from": 1017,
                "to": 1019,
                "label": "EVAL with clause\nless(0, s(X265)).\nand substitutionT236 -> 0,\nX265 -> T245,\nT238 -> s(T245)"
            },
            {
                "from": 1017,
                "to": 1020,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1018,
                "to": 1024,
                "label": "EVAL with clause\nless(s(X270), s(X271)) :- less(X270, X271).\nand substitutionX270 -> T250,\nT236 -> s(T250),\nX271 -> T252,\nT238 -> s(T252),\nT251 -> T252"
            },
            {
                "from": 1018,
                "to": 1025,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1019,
                "to": 1021,
                "label": "SUCCESS"
            },
            {
                "from": 1024,
                "to": 1014,
                "label": "INSTANCE with matching:\nT236 -> T250\nT238 -> T252"
            },
            {
                "from": 1056,
                "to": 1058,
                "label": "SPLIT 1"
            },
            {
                "from": 1056,
                "to": 1059,
                "label": "SPLIT 2\nnew knowledge:\nT271 is ground\nreplacements:T274 -> T279,\nT276 -> T280,\nT275 -> T281"
            },
            {
                "from": 1058,
                "to": 1014,
                "label": "INSTANCE with matching:\nT236 -> T271\nT238 -> T274"
            },
            {
                "from": 1059,
                "to": 989,
                "label": "INSTANCE with matching:\nT179 -> .(T279, T280)\nT178 -> T281\nT19 -> T273"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(86)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.

----------------------------------------

(87) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(88)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(T19) -> U1^1(f325_in(T19), T19)
   F1_IN(T19) -> F325_IN(T19)
   F565_IN -> U2^1(f565_in)
   F565_IN -> F565_IN
   F370_IN -> U3^1(f565_in)
   F370_IN -> F565_IN
   F716_IN -> U4^1(f857_in)
   F716_IN -> F857_IN
   F912_IN -> U5^1(f940_in)
   F912_IN -> F940_IN
   F912_IN -> U6^1(f984_in)
   F912_IN -> F984_IN
   F974_IN -> U7^1(f974_in)
   F974_IN -> F974_IN
   F989_IN(.(T212, T216)) -> U8^1(f1004_in(T212, T216), .(T212, T216))
   F989_IN(.(T212, T216)) -> F1004_IN(T212, T216)
   F989_IN(.(T271, T273)) -> U9^1(f1056_in(T271, T273), .(T271, T273))
   F989_IN(.(T271, T273)) -> F1056_IN(T271, T273)
   F1014_IN(s(T250)) -> U10^1(f1014_in(T250), s(T250))
   F1014_IN(s(T250)) -> F1014_IN(T250)
   F966_IN -> U11^1(f974_in)
   F966_IN -> F974_IN
   F1006_IN(s(T236)) -> U12^1(f1014_in(T236), s(T236))
   F1006_IN(s(T236)) -> F1014_IN(T236)
   F325_IN(T19) -> U13^1(f370_in, T19)
   F325_IN(T19) -> F370_IN
   U13^1(f370_out1, T19) -> U14^1(f375_in(T19), T19)
   U13^1(f370_out1, T19) -> F375_IN(T19)
   F375_IN(T19) -> U15^1(f716_in, T19)
   F375_IN(T19) -> F716_IN
   U15^1(f716_out1, T19) -> U16^1(f717_in(T19), T19)
   U15^1(f716_out1, T19) -> F717_IN(T19)
   F717_IN(T19) -> U17^1(f716_in, T19)
   F717_IN(T19) -> F716_IN
   U17^1(f716_out1, T19) -> U18^1(f989_in(T19), T19)
   U17^1(f716_out1, T19) -> F989_IN(T19)
   F857_IN -> U19^1(f370_in)
   F857_IN -> F370_IN
   U19^1(f370_out1) -> U20^1(f863_in)
   U19^1(f370_out1) -> F863_IN
   F863_IN -> U21^1(f716_in)
   F863_IN -> F716_IN
   U21^1(f716_out1) -> U22^1(f907_in)
   U21^1(f716_out1) -> F907_IN
   F907_IN -> U23^1(f716_in)
   F907_IN -> F716_IN
   U23^1(f716_out1) -> U24^1(f912_in)
   U23^1(f716_out1) -> F912_IN
   F940_IN -> U25^1(f966_in)
   F940_IN -> F966_IN
   U25^1(f966_out1(T110)) -> U26^1(f912_in, T110)
   U25^1(f966_out1(T110)) -> F912_IN
   F984_IN -> U27^1(f974_in)
   F984_IN -> F974_IN
   U27^1(f974_out1(T167)) -> U28^1(f912_in, T167)
   U27^1(f974_out1(T167)) -> F912_IN
   F1004_IN(T212, T216) -> U29^1(f1006_in(T212), T212, T216)
   F1004_IN(T212, T216) -> F1006_IN(T212)
   U29^1(f1006_out1, T212, T216) -> U30^1(f989_in(T216), T212, T216)
   U29^1(f1006_out1, T212, T216) -> F989_IN(T216)
   F1056_IN(T271, T273) -> U31^1(f1014_in(T271), T271, T273)
   F1056_IN(T271, T273) -> F1014_IN(T271)
   U31^1(f1014_out1, T271, T273) -> U32^1(f989_in(T273), T271, T273)
   U31^1(f1014_out1, T271, T273) -> F989_IN(T273)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(89) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 6 SCCs with 42 less nodes.
----------------------------------------

(90)
Complex Obligation (AND)

----------------------------------------

(91)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1014_IN(s(T250)) -> F1014_IN(T250)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(92) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(93)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1014_IN(s(T250)) -> F1014_IN(T250)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(94) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F1014_IN(s(T250)) -> F1014_IN(T250)
The graph contains the following edges 1 > 1


----------------------------------------

(95)
YES

----------------------------------------

(96)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F989_IN(.(T212, T216)) -> F1004_IN(T212, T216)
   F1004_IN(T212, T216) -> U29^1(f1006_in(T212), T212, T216)
   U29^1(f1006_out1, T212, T216) -> F989_IN(T216)
   F989_IN(.(T271, T273)) -> F1056_IN(T271, T273)
   F1056_IN(T271, T273) -> U31^1(f1014_in(T271), T271, T273)
   U31^1(f1014_out1, T271, T273) -> F989_IN(T273)

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(97) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F1004_IN(T212, T216) -> U29^1(f1006_in(T212), T212, T216)
The graph contains the following edges 1 >= 2, 2 >= 3


*U29^1(f1006_out1, T212, T216) -> F989_IN(T216)
The graph contains the following edges 3 >= 1


*U31^1(f1014_out1, T271, T273) -> F989_IN(T273)
The graph contains the following edges 3 >= 1


*F989_IN(.(T212, T216)) -> F1004_IN(T212, T216)
The graph contains the following edges 1 > 1, 1 > 2


*F989_IN(.(T271, T273)) -> F1056_IN(T271, T273)
The graph contains the following edges 1 > 1, 1 > 2


*F1056_IN(T271, T273) -> U31^1(f1014_in(T271), T271, T273)
The graph contains the following edges 1 >= 2, 2 >= 3


----------------------------------------

(98)
YES

----------------------------------------

(99)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F974_IN -> F974_IN

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(100) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(101)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F974_IN -> F974_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(102) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F974_IN evaluates to  t =F974_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F974_IN to F974_IN.




----------------------------------------

(103)
NO

----------------------------------------

(104)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F912_IN -> F940_IN
   F940_IN -> U25^1(f966_in)
   U25^1(f966_out1(T110)) -> F912_IN
   F912_IN -> F984_IN
   F984_IN -> U27^1(f974_in)
   U27^1(f974_out1(T167)) -> F912_IN

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(105) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(106)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F912_IN -> F940_IN
   F940_IN -> U25^1(f966_in)
   U25^1(f966_out1(T110)) -> F912_IN
   F912_IN -> F984_IN
   F984_IN -> U27^1(f974_in)
   U27^1(f974_out1(T167)) -> F912_IN

The TRS R consists of the following rules:

   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F565_IN -> F565_IN

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(108) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(109)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F565_IN -> F565_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(110) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F565_IN evaluates to  t =F565_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F565_IN to F565_IN.




----------------------------------------

(111)
NO

----------------------------------------

(112)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F857_IN -> U19^1(f370_in)
   U19^1(f370_out1) -> F863_IN
   F863_IN -> U21^1(f716_in)
   U21^1(f716_out1) -> F907_IN
   F907_IN -> F716_IN
   F716_IN -> F857_IN
   F863_IN -> F716_IN

The TRS R consists of the following rules:

   f1_in([]) -> f1_out1
   f1_in(.(T7, [])) -> f1_out1
   f1_in(T19) -> U1(f325_in(T19), T19)
   U1(f325_out1(X25, X26), T19) -> f1_out1
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U2(f565_out1) -> f565_out1
   f370_in -> U3(f565_in)
   U3(f565_out1) -> f370_out1
   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   U4(f857_out1) -> f716_out1
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   U5(f940_out1(T110)) -> f912_out1
   f912_in -> U6(f984_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f989_in(T186) -> f989_out1([], T186)
   f989_in(T191) -> f989_out1(T191, [])
   f989_in(.(T212, T216)) -> U8(f1004_in(T212, T216), .(T212, T216))
   U8(f1004_out1(T218, T217, T219), .(T212, T216)) -> f989_out1(.(T212, T218), .(T217, T219))
   f989_in(.(T271, T273)) -> U9(f1056_in(T271, T273), .(T271, T273))
   U9(f1056_out1(T274, T276, T275), .(T271, T273)) -> f989_out1(.(T274, T276), .(T271, T275))
   f1014_in(0) -> f1014_out1
   f1014_in(s(T250)) -> U10(f1014_in(T250), s(T250))
   U10(f1014_out1, s(T250)) -> f1014_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f1006_in(0) -> f1006_out1
   f1006_in(s(T236)) -> U12(f1014_in(T236), s(T236))
   U12(f1014_out1, s(T236)) -> f1006_out1
   f325_in(T19) -> U13(f370_in, T19)
   U13(f370_out1, T19) -> U14(f375_in(T19), T19)
   U14(f375_out1(X25, X26), T19) -> f325_out1(X25, X26)
   f375_in(T19) -> U15(f716_in, T19)
   U15(f716_out1, T19) -> U16(f717_in(T19), T19)
   U16(f717_out1(T53, X26), T19) -> f375_out1(T53, X26)
   f717_in(T19) -> U17(f716_in, T19)
   U17(f716_out1, T19) -> U18(f989_in(T19), T19)
   U18(f989_out1(T179, T178), T19) -> f717_out1(T179, T178)
   f857_in -> U19(f370_in)
   U19(f370_out1) -> U20(f863_in)
   U20(f863_out1) -> f857_out1
   f863_in -> U21(f716_in)
   U21(f716_out1) -> U22(f907_in)
   U22(f907_out1) -> f863_out1
   f907_in -> U23(f716_in)
   U23(f716_out1) -> U24(f912_in)
   U24(f912_out1) -> f907_out1
   f940_in -> U25(f966_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   f984_in -> U27(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   f1004_in(T212, T216) -> U29(f1006_in(T212), T212, T216)
   U29(f1006_out1, T212, T216) -> U30(f989_in(T216), T212, T216)
   U30(f989_out1(T222, .(T223, T224)), T212, T216) -> f1004_out1(T222, T223, T224)
   f1056_in(T271, T273) -> U31(f1014_in(T271), T271, T273)
   U31(f1014_out1, T271, T273) -> U32(f989_in(T273), T271, T273)
   U32(f989_out1(.(T279, T280), T281), T271, T273) -> f1056_out1(T279, T280, T281)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(113) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(114)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F857_IN -> U19^1(f370_in)
   U19^1(f370_out1) -> F863_IN
   F863_IN -> U21^1(f716_in)
   U21^1(f716_out1) -> F907_IN
   F907_IN -> F716_IN
   F716_IN -> F857_IN
   F863_IN -> F716_IN

The TRS R consists of the following rules:

   f716_in -> f716_out1
   f716_in -> U4(f857_in)
   f857_in -> U19(f370_in)
   U4(f857_out1) -> f716_out1
   f370_in -> U3(f565_in)
   U19(f370_out1) -> U20(f863_in)
   f863_in -> U21(f716_in)
   U20(f863_out1) -> f857_out1
   U21(f716_out1) -> U22(f907_in)
   f907_in -> U23(f716_in)
   U22(f907_out1) -> f863_out1
   U23(f716_out1) -> U24(f912_in)
   f912_in -> f912_out1
   f912_in -> U5(f940_in)
   f912_in -> U6(f984_in)
   U24(f912_out1) -> f907_out1
   f984_in -> U27(f974_in)
   U6(f984_out1(T167)) -> f912_out1
   f974_in -> f974_out1(0)
   f974_in -> U7(f974_in)
   U27(f974_out1(T167)) -> U28(f912_in, T167)
   U28(f912_out1, T167) -> f984_out1(T167)
   U7(f974_out1(T147)) -> f974_out1(s(T147))
   f940_in -> U25(f966_in)
   U5(f940_out1(T110)) -> f912_out1
   f966_in -> f966_out1(0)
   f966_in -> U11(f974_in)
   U25(f966_out1(T110)) -> U26(f912_in, T110)
   U26(f912_out1, T110) -> f940_out1(T110)
   U11(f974_out1(T132)) -> f966_out1(s(T132))
   f565_in -> f565_out1
   f565_in -> U2(f565_in)
   U3(f565_out1) -> f370_out1
   U2(f565_out1) -> f565_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(115) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 5,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ms ([]) ([]))",
                null
            ],
            [
                "(ms (. X ([])) (. X ([])))",
                null
            ],
            [
                "(ms (. X (. Y Xs)) Ys)",
                "(',' (split (. X (. Y Xs)) X1s X2s) (',' (ms X1s Y1s) (',' (ms X2s Y2s) (merge Y1s Y2s Ys))))"
            ],
            [
                "(split ([]) ([]) ([]))",
                null
            ],
            [
                "(split (. X Xs) (. X Ys) Zs)",
                "(split Xs Zs Ys)"
            ],
            [
                "(merge ([]) Xs Xs)",
                null
            ],
            [
                "(merge Xs ([]) Xs)",
                null
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. X Zs))",
                "(',' (less X (s Y)) (merge Xs (. Y Ys) Zs))"
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. Y Zs))",
                "(',' (less Y X) (merge (. X Xs) Ys Zs))"
            ],
            [
                "(less (0) (s X1))",
                null
            ],
            [
                "(less (s X) (s Y))",
                "(less X Y)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "235": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T25 T26) X32 X31)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X31",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "237": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms (. T30 T29) X13) (',' (ms T28 X14) (merge X13 X14 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "1110": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T244 T243 (. T219 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1106": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T242 X258) (merge T241 X258 (. T219 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": ["X258"],
                    "exprvars": []
                }
            },
            "1105": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms (. T240 T239) X257)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X257"],
                    "exprvars": []
                }
            },
            "246": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(split (. T25 T26) X32 X31)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(split (. T25 T26) X32 X31)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X31",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "247": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(split (. T25 T26) X32 X31)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X31",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "804": {
                "goal": [{
                    "clause": 5,
                    "scope": 7,
                    "term": "(merge T87 T86 X96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "805": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 7,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 8,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "1109": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T242 X258)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X258"],
                    "exprvars": []
                }
            },
            "1121": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1120": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "251": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T38 X50 X49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X49",
                        "X50"
                    ],
                    "exprvars": []
                }
            },
            "252": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(split T38 X50 X49)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(split T38 X50 X49)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X49",
                        "X50"
                    ],
                    "exprvars": []
                }
            },
            "253": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(split T38 X50 X49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X49",
                        "X50"
                    ],
                    "exprvars": []
                }
            },
            "1118": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 8,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "254": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(split T38 X50 X49)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X49",
                        "X50"
                    ],
                    "exprvars": []
                }
            },
            "1117": {
                "goal": [{
                    "clause": 6,
                    "scope": 12,
                    "term": "(merge T244 T243 (. T219 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "255": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1116": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "256": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1115": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "257": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1114": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1113": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 7,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 8,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1112": {
                "goal": [{
                    "clause": 5,
                    "scope": 12,
                    "term": "(merge T244 T243 (. T219 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1111": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 6,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 7,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    },
                    {
                        "clause": 8,
                        "scope": 12,
                        "term": "(merge T244 T243 (. T219 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1119": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T45 X68 X67)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X67",
                        "X68"
                    ],
                    "exprvars": []
                }
            },
            "1127": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T294 (. T295 T296) ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1126": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T285 (s T289))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T285"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1125": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "269": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1003": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T183 T184) T185 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "1124": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T285 (s T289)) (merge T290 (. T289 T291) ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T285"],
                    "free": [],
                    "exprvars": []
                }
            },
            "820": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1123": {
                "goal": [{
                    "clause": 8,
                    "scope": 12,
                    "term": "(merge T244 T243 (. T219 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1122": {
                "goal": [{
                    "clause": 7,
                    "scope": 12,
                    "term": "(merge T244 T243 (. T219 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [],
                    "exprvars": []
                }
            },
            "822": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "943": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T120 (s T121)) (merge T122 (. T121 T123) X166))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "944": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "824": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "945": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T120 (s T121))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "946": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T126 (. T127 T128) X166)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "947": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 8,
                        "term": "(less T120 (s T121))"
                    },
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(less T120 (s T121))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "706": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T65 X94)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "948": {
                "goal": [{
                    "clause": 9,
                    "scope": 8,
                    "term": "(less T120 (s T121))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "707": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T68 X95) (merge T67 X95 X96))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X96",
                        "X95"
                    ],
                    "exprvars": []
                }
            },
            "949": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(less T120 (s T121))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1143": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T320 T321) T322 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1142": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T313 T315)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T313"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1139": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1138": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T313 T315) (merge (. T315 T317) T316 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T313"],
                    "free": [],
                    "exprvars": []
                }
            },
            "950": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "951": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "710": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 6,
                        "term": "(ms T65 X94)"
                    },
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ms T65 X94)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ms T65 X94)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "952": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "711": {
                "goal": [{
                    "clause": 0,
                    "scope": 6,
                    "term": "(ms T65 X94)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "953": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T142 T143)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "712": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ms T65 X94)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ms T65 X94)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "954": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "713": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "955": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 9,
                        "term": "(less T142 T143)"
                    },
                    {
                        "clause": 10,
                        "scope": 9,
                        "term": "(less T142 T143)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "714": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "835": {
                "goal": [{
                    "clause": 6,
                    "scope": 7,
                    "term": "(merge T87 T86 X96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "956": {
                "goal": [{
                    "clause": 9,
                    "scope": 9,
                    "term": "(less T142 T143)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "715": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "836": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 8,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "957": {
                "goal": [{
                    "clause": 10,
                    "scope": 9,
                    "term": "(less T142 T143)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "958": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "959": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "718": {
                "goal": [{
                    "clause": 1,
                    "scope": 6,
                    "term": "(ms T65 X94)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "719": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(ms T65 X94)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X94"],
                    "exprvars": []
                }
            },
            "55": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 ([]))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ms T1 T2)",
                        "(ms ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 ([]))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ms T1 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1154": {
                "goal": [{
                    "clause": 4,
                    "scope": 13,
                    "term": "(',' (split (. T333 (. T334 T335)) X349 X350) (',' (ms X349 X351) (',' (ms X350 X352) (merge X351 X352 T332))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T1 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T1 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X349",
                        "X350",
                        "X351",
                        "X352"
                    ],
                    "exprvars": []
                }
            },
            "960": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "961": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T157 T158)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1147": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 13,
                        "term": "(',' (split (. T333 (. T334 T335)) X349 X350) (',' (ms X349 X351) (',' (ms X350 X352) (merge X351 X352 T332))))"
                    },
                    {
                        "clause": 4,
                        "scope": 13,
                        "term": "(',' (split (. T333 (. T334 T335)) X349 X350) (',' (ms X349 X351) (',' (ms X350 X352) (merge X351 X352 T332))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T1 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T1 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X349",
                        "X350",
                        "X351",
                        "X352"
                    ],
                    "exprvars": []
                }
            },
            "962": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1146": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "842": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "963": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T177 T178) (merge (. T178 T180) T179 X216))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "1145": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T333 (. T334 T335)) X349 X350) (',' (ms X349 X351) (',' (ms X350 X352) (merge X351 X352 T332))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T1 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T1 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X349",
                        "X350",
                        "X351",
                        "X352"
                    ],
                    "exprvars": []
                }
            },
            "843": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "964": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "844": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "965": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T177 T178)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "727": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "729": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1044": {
                "goal": [{
                    "clause": 5,
                    "scope": 10,
                    "term": "(merge T189 T188 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1165": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1043": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 6,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1164": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 8,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1163": {
                "goal": [{
                    "clause": 5,
                    "scope": 14,
                    "term": "(merge T359 T358 T332)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "292": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms (. T30 T29) X13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X13"],
                    "exprvars": []
                }
            },
            "1162": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 8,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "293": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T47 X14) (merge T46 X14 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X14"],
                    "exprvars": []
                }
            },
            "1161": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T359 T358 T332)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1160": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T356 X352)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X352"],
                    "exprvars": []
                }
            },
            "296": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ms (. T30 T29) X13)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms (. T30 T29) X13)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms (. T30 T29) X13)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X13"],
                    "exprvars": []
                }
            },
            "297": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms (. T30 T29) X13)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms (. T30 T29) X13)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X13"],
                    "exprvars": []
                }
            },
            "298": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ms (. T30 T29) X13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X13"],
                    "exprvars": []
                }
            },
            "299": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ms (. T30 T29) X13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X13"],
                    "exprvars": []
                }
            },
            "850": {
                "goal": [{
                    "clause": 7,
                    "scope": 7,
                    "term": "(merge T87 T86 X96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "1159": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T356 X352) (merge T355 X352 T332))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T357 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T357 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X352"
                    ],
                    "exprvars": []
                }
            },
            "851": {
                "goal": [{
                    "clause": 8,
                    "scope": 7,
                    "term": "(merge T87 T86 X96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "1037": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T189 T188 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1158": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms (. T353 T352) X351)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X351"],
                    "exprvars": []
                }
            },
            "731": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1036": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T47 X14)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X14"],
                    "exprvars": []
                }
            },
            "1157": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms (. T353 T352) X351) (',' (ms T351 X352) (merge X351 X352 T332)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T354 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T354 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X351",
                        "X352"
                    ],
                    "exprvars": []
                }
            },
            "1156": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T348 T349) X370 X369)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X369",
                        "X370"
                    ],
                    "exprvars": []
                }
            },
            "1155": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T348 T349) X370 X369) (',' (ms (. T350 X369) X351) (',' (ms X370 X352) (merge X351 X352 T332))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T1 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T1 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": [
                        "X246",
                        "X351",
                        "X352",
                        "X369",
                        "X370"
                    ],
                    "exprvars": []
                }
            },
            "79": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T10 (. T11 T12)) X11 X12) (',' (ms X11 X13) (',' (ms X12 X14) (merge X13 X14 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12",
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "1055": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1176": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1054": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1175": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T393 (s T398)) (merge T399 (. T398 T400) T397))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T360 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1053": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1174": {
                "goal": [{
                    "clause": 8,
                    "scope": 14,
                    "term": "(merge T359 T358 T332)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1052": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1173": {
                "goal": [{
                    "clause": 7,
                    "scope": 14,
                    "term": "(merge T359 T358 T332)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1051": {
                "goal": [{
                    "clause": 6,
                    "scope": 10,
                    "term": "(merge T189 T188 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1172": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1050": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1171": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1170": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1169": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    },
                    {
                        "clause": 8,
                        "scope": 14,
                        "term": "(merge T359 T358 T332)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1047": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1168": {
                "goal": [{
                    "clause": 6,
                    "scope": 14,
                    "term": "(merge T359 T358 T332)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T360 T332)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T360 T332)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T332"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1046": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1167": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1045": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    },
                    {
                        "clause": 8,
                        "scope": 10,
                        "term": "(merge T189 T188 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1166": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "80": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (split (. T10 (. T11 T12)) X11 X12) (',' (ms X11 X13) (',' (ms X12 X14) (merge X13 X14 ([])))))"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (split (. T10 (. T11 T12)) X11 X12) (',' (ms X11 X13) (',' (ms X12 X14) (merge X13 X14 ([])))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12",
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(',' (split (. T10 (. T11 T12)) X11 X12) (',' (ms X11 X13) (',' (ms X12 X14) (merge X13 X14 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X11",
                        "X12",
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "747": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T83 (. T84 T85)) X120 X121) (',' (ms X120 X122) (',' (ms X121 X123) (merge X122 X123 X124))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X124",
                        "X120",
                        "X121",
                        "X122",
                        "X123"
                    ],
                    "exprvars": []
                }
            },
            "83": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T25 T26) X32 X31) (',' (ms (. T27 X31) X13) (',' (ms X32 X14) (merge X13 X14 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X13",
                        "X14",
                        "X31",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "748": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1066": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1065": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T220 (. T221 T222)) X255 X256) (',' (ms X255 X257) (',' (ms X256 X258) (merge X257 X258 (. T219 ([]))))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [
                        "X255",
                        "X256",
                        "X257",
                        "X258"
                    ],
                    "exprvars": []
                }
            },
            "1064": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ms T1 (. T211 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T211"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1185": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 8,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1063": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ms T1 T2)",
                            "(ms ([]) ([]))"
                        ],
                        [
                            "(ms T1 T2)",
                            "(ms (. X246 ([])) (. X246 ([])))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1184": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1062": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 (. T211 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T211"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1183": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1061": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1182": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1060": {
                "goal": [{
                    "clause": 8,
                    "scope": 10,
                    "term": "(merge T189 T188 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1181": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 7,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 8,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1180": {
                "goal": [{
                    "clause": 5,
                    "scope": 15,
                    "term": "(merge T403 (. T404 T405) T397)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1179": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 6,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 7,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    },
                    {
                        "clause": 8,
                        "scope": 15,
                        "term": "(merge T403 (. T404 T405) T397)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1178": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T403 (. T404 T405) T397)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1177": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T393 (s T398))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T360 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1077": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms (. T240 T239) X257) (',' (ms T238 X258) (merge X257 X258 (. T219 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [
                        "X257",
                        "X258"
                    ],
                    "exprvars": []
                }
            },
            "1198": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 6,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 7,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 8,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1076": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T235 T236) X276 X275)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X275",
                        "X276"
                    ],
                    "exprvars": []
                }
            },
            "1197": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T454 (. T455 T456) T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1075": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T235 T236) X276 X275) (',' (ms (. T237 X275) X257) (',' (ms X276 X258) (merge X257 X258 (. T219 ([]))))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [
                        "X257",
                        "X258",
                        "X275",
                        "X276"
                    ],
                    "exprvars": []
                }
            },
            "1196": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T444 (s T449))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T444"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1195": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1194": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T444 (s T449)) (merge T450 (. T449 T451) T448))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T444",
                        "T448"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1193": {
                "goal": [{
                    "clause": 8,
                    "scope": 15,
                    "term": "(merge T403 (. T404 T405) T397)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1192": {
                "goal": [{
                    "clause": 7,
                    "scope": 15,
                    "term": "(merge T403 (. T404 T405) T397)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T406 (. T393 T397))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T393",
                        "T397"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1068": {
                "goal": [{
                    "clause": 4,
                    "scope": 11,
                    "term": "(',' (split (. T220 (. T221 T222)) X255 X256) (',' (ms X255 X257) (',' (ms X256 X258) (merge X257 X258 (. T219 ([]))))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [
                        "X255",
                        "X256",
                        "X257",
                        "X258"
                    ],
                    "exprvars": []
                }
            },
            "1067": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 11,
                        "term": "(',' (split (. T220 (. T221 T222)) X255 X256) (',' (ms X255 X257) (',' (ms X256 X258) (merge X257 X258 (. T219 ([]))))))"
                    },
                    {
                        "clause": 4,
                        "scope": 11,
                        "term": "(',' (split (. T220 (. T221 T222)) X255 X256) (',' (ms X255 X257) (',' (ms X256 X258) (merge X257 X258 (. T219 ([]))))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T219"],
                    "free": [
                        "X255",
                        "X256",
                        "X257",
                        "X258"
                    ],
                    "exprvars": []
                }
            },
            "1199": {
                "goal": [{
                    "clause": 5,
                    "scope": 16,
                    "term": "(merge T454 (. T455 T456) T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "300": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "301": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "302": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "787": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T68 X95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X95"],
                    "exprvars": []
                }
            },
            "788": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T87 T86 X96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "789": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 6,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 7,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    },
                    {
                        "clause": 8,
                        "scope": 7,
                        "term": "(merge T87 T86 X96)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X96"],
                    "exprvars": []
                }
            },
            "308": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T62 (. T63 T64)) X92 X93) (',' (ms X92 X94) (',' (ms X93 X95) (merge X94 X95 X96))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X96",
                        "X92",
                        "X93",
                        "X94",
                        "X95"
                    ],
                    "exprvars": []
                }
            },
            "309": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1305": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T516 T519)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T516"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1304": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1303": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T516 T519) (merge (. T519 T521) T520 T518))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T516",
                        "T518"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1302": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1301": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T494 (s T499)) (merge T500 (. T499 T501) T498))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T494",
                        "T498"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1309": {
                "goal": [{
                    "clause": 6,
                    "scope": 17,
                    "term": "(merge (. T524 T525) T526 T518)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1308": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 7,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 8,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1307": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 6,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 7,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 8,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1306": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T524 T525) T526 T518)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1316": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T559 (s T564)) (merge T565 (. T564 T566) T563))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T559",
                        "T563"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1315": {
                "goal": [{
                    "clause": 8,
                    "scope": 17,
                    "term": "(merge (. T524 T525) T526 T518)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1314": {
                "goal": [{
                    "clause": 7,
                    "scope": 17,
                    "term": "(merge (. T524 T525) T526 T518)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "696": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T62 (. T63 T64)) X92 X93)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X92",
                        "X93"
                    ],
                    "exprvars": []
                }
            },
            "1313": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "697": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T65 X94) (',' (ms T66 X95) (merge X94 X95 X96)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X96",
                        "X94",
                        "X95"
                    ],
                    "exprvars": []
                }
            },
            "1312": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1311": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1310": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    },
                    {
                        "clause": 8,
                        "scope": 17,
                        "term": "(merge (. T524 T525) T526 T518)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T518"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1319": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1318": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T581 T584) (merge (. T584 T586) T585 T583))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T581",
                        "T583"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1317": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1204": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 8,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1203": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1202": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1323": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1201": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1322": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T621 T624) (merge (. T624 T626) T625 T623))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ms T360 (. T621 T623))",
                        "(ms (. X246 ([])) (. X246 ([])))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T621",
                        "T623"
                    ],
                    "free": ["X246"],
                    "exprvars": []
                }
            },
            "1200": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 7,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    },
                    {
                        "clause": 8,
                        "scope": 16,
                        "term": "(merge T454 (. T455 T456) T448)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1321": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1320": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T601 T604) (merge (. T604 T606) T605 T603))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T601",
                        "T603"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1209": {
                "goal": [{
                    "clause": 8,
                    "scope": 16,
                    "term": "(merge T454 (. T455 T456) T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1208": {
                "goal": [{
                    "clause": 7,
                    "scope": 16,
                    "term": "(merge T454 (. T455 T456) T448)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T448"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 5,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 55,
                "label": "EVAL with clause\nms([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 6,
                "to": 56,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 55,
                "to": 57,
                "label": "SUCCESS"
            },
            {
                "from": 56,
                "to": 1062,
                "label": "EVAL with clause\nms(.(X246, []), .(X246, [])).\nand substitutionX246 -> T211,\nT1 -> .(T211, []),\nT2 -> .(T211, [])"
            },
            {
                "from": 56,
                "to": 1063,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 57,
                "to": 58,
                "label": "BACKTRACK\nfor clause: ms(.(X, []), .(X, []))because of non-unification"
            },
            {
                "from": 58,
                "to": 79,
                "label": "EVAL with clause\nms(.(X7, .(X8, X9)), X10) :- ','(split(.(X7, .(X8, X9)), X11, X12), ','(ms(X11, X13), ','(ms(X12, X14), merge(X13, X14, X10)))).\nand substitutionX7 -> T10,\nX8 -> T11,\nX9 -> T12,\nT1 -> .(T10, .(T11, T12)),\nX10 -> [],\nT7 -> T10,\nT8 -> T11,\nT9 -> T12"
            },
            {
                "from": 58,
                "to": 80,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 79,
                "to": 81,
                "label": "CASE"
            },
            {
                "from": 81,
                "to": 82,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 82,
                "to": 83,
                "label": "ONLY EVAL with clause\nsplit(.(X27, X28), .(X27, X29), X30) :- split(X28, X30, X29).\nand substitutionT10 -> T27,\nX27 -> T27,\nT11 -> T25,\nT12 -> T26,\nX28 -> .(T25, T26),\nX29 -> X31,\nX11 -> .(T27, X31),\nX12 -> X32,\nX30 -> X32,\nT23 -> T25,\nT24 -> T26,\nT22 -> T27"
            },
            {
                "from": 83,
                "to": 235,
                "label": "SPLIT 1"
            },
            {
                "from": 83,
                "to": 237,
                "label": "SPLIT 2\nreplacements:X32 -> T28,\nX31 -> T29,\nT27 -> T30"
            },
            {
                "from": 235,
                "to": 246,
                "label": "CASE"
            },
            {
                "from": 237,
                "to": 292,
                "label": "SPLIT 1"
            },
            {
                "from": 237,
                "to": 293,
                "label": "SPLIT 2\nreplacements:X13 -> T46,\nT28 -> T47"
            },
            {
                "from": 246,
                "to": 247,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 247,
                "to": 251,
                "label": "ONLY EVAL with clause\nsplit(.(X45, X46), .(X45, X47), X48) :- split(X46, X48, X47).\nand substitutionT25 -> T36,\nX45 -> T36,\nT26 -> T38,\nX46 -> T38,\nX47 -> X49,\nX32 -> .(T36, X49),\nX31 -> X50,\nX48 -> X50,\nT37 -> T38"
            },
            {
                "from": 251,
                "to": 252,
                "label": "CASE"
            },
            {
                "from": 252,
                "to": 253,
                "label": "PARALLEL"
            },
            {
                "from": 252,
                "to": 254,
                "label": "PARALLEL"
            },
            {
                "from": 253,
                "to": 255,
                "label": "EVAL with clause\nsplit([], [], []).\nand substitutionT38 -> [],\nX50 -> [],\nX49 -> []"
            },
            {
                "from": 253,
                "to": 256,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 254,
                "to": 266,
                "label": "EVAL with clause\nsplit(.(X63, X64), .(X63, X65), X66) :- split(X64, X66, X65).\nand substitutionX63 -> T43,\nX64 -> T45,\nT38 -> .(T43, T45),\nX65 -> X67,\nX50 -> .(T43, X67),\nX49 -> X68,\nX66 -> X68,\nT44 -> T45"
            },
            {
                "from": 254,
                "to": 269,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 255,
                "to": 257,
                "label": "SUCCESS"
            },
            {
                "from": 266,
                "to": 251,
                "label": "INSTANCE with matching:\nT38 -> T45\nX50 -> X68\nX49 -> X67"
            },
            {
                "from": 292,
                "to": 296,
                "label": "CASE"
            },
            {
                "from": 293,
                "to": 1036,
                "label": "SPLIT 1"
            },
            {
                "from": 293,
                "to": 1037,
                "label": "SPLIT 2\nreplacements:X14 -> T188,\nT46 -> T189"
            },
            {
                "from": 296,
                "to": 297,
                "label": "BACKTRACK\nfor clause: ms([], [])because of non-unification"
            },
            {
                "from": 297,
                "to": 298,
                "label": "PARALLEL"
            },
            {
                "from": 297,
                "to": 299,
                "label": "PARALLEL"
            },
            {
                "from": 298,
                "to": 300,
                "label": "EVAL with clause\nms(.(X73, []), .(X73, [])).\nand substitutionT30 -> T52,\nX73 -> T52,\nT29 -> [],\nX13 -> .(T52, [])"
            },
            {
                "from": 298,
                "to": 301,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 299,
                "to": 308,
                "label": "EVAL with clause\nms(.(X88, .(X89, X90)), X91) :- ','(split(.(X88, .(X89, X90)), X92, X93), ','(ms(X92, X94), ','(ms(X93, X95), merge(X94, X95, X91)))).\nand substitutionT30 -> T62,\nX88 -> T62,\nX89 -> T63,\nX90 -> T64,\nT29 -> .(T63, T64),\nX13 -> X96,\nX91 -> X96,\nT59 -> T62,\nT60 -> T63,\nT61 -> T64"
            },
            {
                "from": 299,
                "to": 309,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 300,
                "to": 302,
                "label": "SUCCESS"
            },
            {
                "from": 308,
                "to": 696,
                "label": "SPLIT 1"
            },
            {
                "from": 308,
                "to": 697,
                "label": "SPLIT 2\nreplacements:X92 -> T65,\nX93 -> T66"
            },
            {
                "from": 696,
                "to": 235,
                "label": "INSTANCE with matching:\nT25 -> T62\nT26 -> .(T63, T64)\nX32 -> X92\nX31 -> X93"
            },
            {
                "from": 697,
                "to": 706,
                "label": "SPLIT 1"
            },
            {
                "from": 697,
                "to": 707,
                "label": "SPLIT 2\nreplacements:X94 -> T67,\nT66 -> T68"
            },
            {
                "from": 706,
                "to": 710,
                "label": "CASE"
            },
            {
                "from": 707,
                "to": 787,
                "label": "SPLIT 1"
            },
            {
                "from": 707,
                "to": 788,
                "label": "SPLIT 2\nreplacements:X95 -> T86,\nT67 -> T87"
            },
            {
                "from": 710,
                "to": 711,
                "label": "PARALLEL"
            },
            {
                "from": 710,
                "to": 712,
                "label": "PARALLEL"
            },
            {
                "from": 711,
                "to": 713,
                "label": "EVAL with clause\nms([], []).\nand substitutionT65 -> [],\nX94 -> []"
            },
            {
                "from": 711,
                "to": 714,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 712,
                "to": 718,
                "label": "PARALLEL"
            },
            {
                "from": 712,
                "to": 719,
                "label": "PARALLEL"
            },
            {
                "from": 713,
                "to": 715,
                "label": "SUCCESS"
            },
            {
                "from": 718,
                "to": 727,
                "label": "EVAL with clause\nms(.(X101, []), .(X101, [])).\nand substitutionX101 -> T73,\nT65 -> .(T73, []),\nX94 -> .(T73, [])"
            },
            {
                "from": 718,
                "to": 729,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 719,
                "to": 747,
                "label": "EVAL with clause\nms(.(X116, .(X117, X118)), X119) :- ','(split(.(X116, .(X117, X118)), X120, X121), ','(ms(X120, X122), ','(ms(X121, X123), merge(X122, X123, X119)))).\nand substitutionX116 -> T83,\nX117 -> T84,\nX118 -> T85,\nT65 -> .(T83, .(T84, T85)),\nX94 -> X124,\nX119 -> X124,\nT80 -> T83,\nT81 -> T84,\nT82 -> T85"
            },
            {
                "from": 719,
                "to": 748,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 727,
                "to": 731,
                "label": "SUCCESS"
            },
            {
                "from": 747,
                "to": 308,
                "label": "INSTANCE with matching:\nT62 -> T83\nT63 -> T84\nT64 -> T85\nX92 -> X120\nX93 -> X121\nX94 -> X122\nX95 -> X123\nX96 -> X124"
            },
            {
                "from": 787,
                "to": 706,
                "label": "INSTANCE with matching:\nT65 -> T68\nX94 -> X95"
            },
            {
                "from": 788,
                "to": 789,
                "label": "CASE"
            },
            {
                "from": 789,
                "to": 804,
                "label": "PARALLEL"
            },
            {
                "from": 789,
                "to": 805,
                "label": "PARALLEL"
            },
            {
                "from": 804,
                "to": 820,
                "label": "EVAL with clause\nmerge([], X131, X131).\nand substitutionT87 -> [],\nT86 -> T94,\nX131 -> T94,\nX96 -> T94"
            },
            {
                "from": 804,
                "to": 822,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 805,
                "to": 835,
                "label": "PARALLEL"
            },
            {
                "from": 805,
                "to": 836,
                "label": "PARALLEL"
            },
            {
                "from": 820,
                "to": 824,
                "label": "SUCCESS"
            },
            {
                "from": 835,
                "to": 842,
                "label": "EVAL with clause\nmerge(X136, [], X136).\nand substitutionT87 -> T99,\nX136 -> T99,\nT86 -> [],\nX96 -> T99"
            },
            {
                "from": 835,
                "to": 843,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 836,
                "to": 850,
                "label": "PARALLEL"
            },
            {
                "from": 836,
                "to": 851,
                "label": "PARALLEL"
            },
            {
                "from": 842,
                "to": 844,
                "label": "SUCCESS"
            },
            {
                "from": 850,
                "to": 943,
                "label": "EVAL with clause\nmerge(.(X161, X162), .(X163, X164), .(X161, X165)) :- ','(less(X161, s(X163)), merge(X162, .(X163, X164), X165)).\nand substitutionX161 -> T120,\nX162 -> T122,\nT87 -> .(T120, T122),\nX163 -> T121,\nX164 -> T123,\nT86 -> .(T121, T123),\nX165 -> X166,\nX96 -> .(T120, X166),\nT116 -> T120,\nT118 -> T121,\nT117 -> T122,\nT119 -> T123"
            },
            {
                "from": 850,
                "to": 944,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 851,
                "to": 963,
                "label": "EVAL with clause\nmerge(.(X211, X212), .(X213, X214), .(X213, X215)) :- ','(less(X213, X211), merge(.(X211, X212), X214, X215)).\nand substitutionX211 -> T178,\nX212 -> T180,\nT87 -> .(T178, T180),\nX213 -> T177,\nX214 -> T179,\nT86 -> .(T177, T179),\nX215 -> X216,\nX96 -> .(T177, X216),\nT175 -> T177,\nT173 -> T178,\nT176 -> T179,\nT174 -> T180"
            },
            {
                "from": 851,
                "to": 964,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 943,
                "to": 945,
                "label": "SPLIT 1"
            },
            {
                "from": 943,
                "to": 946,
                "label": "SPLIT 2\nnew knowledge:\nT120 is ground\nreplacements:T122 -> T126,\nT121 -> T127,\nT123 -> T128"
            },
            {
                "from": 945,
                "to": 947,
                "label": "CASE"
            },
            {
                "from": 946,
                "to": 788,
                "label": "INSTANCE with matching:\nT87 -> T126\nT86 -> .(T127, T128)\nX96 -> X166"
            },
            {
                "from": 947,
                "to": 948,
                "label": "PARALLEL"
            },
            {
                "from": 947,
                "to": 949,
                "label": "PARALLEL"
            },
            {
                "from": 948,
                "to": 950,
                "label": "EVAL with clause\nless(0, s(X175)).\nand substitutionT120 -> 0,\nT121 -> T135,\nX175 -> T135"
            },
            {
                "from": 948,
                "to": 951,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 949,
                "to": 953,
                "label": "EVAL with clause\nless(s(X180), s(X181)) :- less(X180, X181).\nand substitutionX180 -> T142,\nT120 -> s(T142),\nT121 -> T143,\nX181 -> T143,\nT140 -> T142,\nT141 -> T143"
            },
            {
                "from": 949,
                "to": 954,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 950,
                "to": 952,
                "label": "SUCCESS"
            },
            {
                "from": 953,
                "to": 955,
                "label": "CASE"
            },
            {
                "from": 955,
                "to": 956,
                "label": "PARALLEL"
            },
            {
                "from": 955,
                "to": 957,
                "label": "PARALLEL"
            },
            {
                "from": 956,
                "to": 958,
                "label": "EVAL with clause\nless(0, s(X188)).\nand substitutionT142 -> 0,\nX188 -> T150,\nT143 -> s(T150)"
            },
            {
                "from": 956,
                "to": 959,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 957,
                "to": 961,
                "label": "EVAL with clause\nless(s(X193), s(X194)) :- less(X193, X194).\nand substitutionX193 -> T157,\nT142 -> s(T157),\nX194 -> T158,\nT143 -> s(T158),\nT155 -> T157,\nT156 -> T158"
            },
            {
                "from": 957,
                "to": 962,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 958,
                "to": 960,
                "label": "SUCCESS"
            },
            {
                "from": 961,
                "to": 953,
                "label": "INSTANCE with matching:\nT142 -> T157\nT143 -> T158"
            },
            {
                "from": 963,
                "to": 965,
                "label": "SPLIT 1"
            },
            {
                "from": 963,
                "to": 1003,
                "label": "SPLIT 2\nnew knowledge:\nT177 is ground\nreplacements:T178 -> T183,\nT180 -> T184,\nT179 -> T185"
            },
            {
                "from": 965,
                "to": 953,
                "label": "INSTANCE with matching:\nT142 -> T177\nT143 -> T178"
            },
            {
                "from": 1003,
                "to": 788,
                "label": "INSTANCE with matching:\nT87 -> .(T183, T184)\nT86 -> T185\nX96 -> X216"
            },
            {
                "from": 1036,
                "to": 706,
                "label": "INSTANCE with matching:\nT65 -> T47\nX94 -> X14"
            },
            {
                "from": 1037,
                "to": 1043,
                "label": "CASE"
            },
            {
                "from": 1043,
                "to": 1044,
                "label": "PARALLEL"
            },
            {
                "from": 1043,
                "to": 1045,
                "label": "PARALLEL"
            },
            {
                "from": 1044,
                "to": 1046,
                "label": "EVAL with clause\nmerge([], X229, X229).\nand substitutionT189 -> [],\nT188 -> [],\nX229 -> [],\nT196 -> []"
            },
            {
                "from": 1044,
                "to": 1047,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1045,
                "to": 1051,
                "label": "PARALLEL"
            },
            {
                "from": 1045,
                "to": 1052,
                "label": "PARALLEL"
            },
            {
                "from": 1046,
                "to": 1050,
                "label": "SUCCESS"
            },
            {
                "from": 1051,
                "to": 1053,
                "label": "EVAL with clause\nmerge(X234, [], X234).\nand substitutionT189 -> [],\nX234 -> [],\nT188 -> [],\nT201 -> []"
            },
            {
                "from": 1051,
                "to": 1054,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1052,
                "to": 1060,
                "label": "BACKTRACK\nfor clause: merge(.(X, Xs), .(Y, Ys), .(X, Zs)) :- ','(less(X, s(Y)), merge(Xs, .(Y, Ys), Zs))because of non-unification"
            },
            {
                "from": 1053,
                "to": 1055,
                "label": "SUCCESS"
            },
            {
                "from": 1060,
                "to": 1061,
                "label": "BACKTRACK\nfor clause: merge(.(X, Xs), .(Y, Ys), .(Y, Zs)) :- ','(less(Y, X), merge(.(X, Xs), Ys, Zs))because of non-unification"
            },
            {
                "from": 1062,
                "to": 1064,
                "label": "SUCCESS"
            },
            {
                "from": 1063,
                "to": 1145,
                "label": "EVAL with clause\nms(.(X345, .(X346, X347)), X348) :- ','(split(.(X345, .(X346, X347)), X349, X350), ','(ms(X349, X351), ','(ms(X350, X352), merge(X351, X352, X348)))).\nand substitutionX345 -> T333,\nX346 -> T334,\nX347 -> T335,\nT1 -> .(T333, .(T334, T335)),\nT2 -> T332,\nX348 -> T332,\nT329 -> T333,\nT330 -> T334,\nT331 -> T335"
            },
            {
                "from": 1063,
                "to": 1146,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1064,
                "to": 1065,
                "label": "EVAL with clause\nms(.(X251, .(X252, X253)), X254) :- ','(split(.(X251, .(X252, X253)), X255, X256), ','(ms(X255, X257), ','(ms(X256, X258), merge(X257, X258, X254)))).\nand substitutionX251 -> T220,\nX252 -> T221,\nX253 -> T222,\nT1 -> .(T220, .(T221, T222)),\nT211 -> T219,\nX254 -> .(T219, []),\nT216 -> T220,\nT217 -> T221,\nT218 -> T222"
            },
            {
                "from": 1064,
                "to": 1066,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1065,
                "to": 1067,
                "label": "CASE"
            },
            {
                "from": 1067,
                "to": 1068,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 1068,
                "to": 1075,
                "label": "ONLY EVAL with clause\nsplit(.(X271, X272), .(X271, X273), X274) :- split(X272, X274, X273).\nand substitutionT220 -> T237,\nX271 -> T237,\nT221 -> T235,\nT222 -> T236,\nX272 -> .(T235, T236),\nX273 -> X275,\nX255 -> .(T237, X275),\nX256 -> X276,\nX274 -> X276,\nT233 -> T235,\nT234 -> T236,\nT232 -> T237"
            },
            {
                "from": 1075,
                "to": 1076,
                "label": "SPLIT 1"
            },
            {
                "from": 1075,
                "to": 1077,
                "label": "SPLIT 2\nreplacements:X276 -> T238,\nX275 -> T239,\nT237 -> T240"
            },
            {
                "from": 1076,
                "to": 235,
                "label": "INSTANCE with matching:\nT25 -> T235\nT26 -> T236\nX32 -> X276\nX31 -> X275"
            },
            {
                "from": 1077,
                "to": 1105,
                "label": "SPLIT 1"
            },
            {
                "from": 1077,
                "to": 1106,
                "label": "SPLIT 2\nreplacements:X257 -> T241,\nT238 -> T242"
            },
            {
                "from": 1105,
                "to": 292,
                "label": "INSTANCE with matching:\nT30 -> T240\nT29 -> T239\nX13 -> X257"
            },
            {
                "from": 1106,
                "to": 1109,
                "label": "SPLIT 1"
            },
            {
                "from": 1106,
                "to": 1110,
                "label": "SPLIT 2\nreplacements:X258 -> T243,\nT241 -> T244"
            },
            {
                "from": 1109,
                "to": 706,
                "label": "INSTANCE with matching:\nT65 -> T242\nX94 -> X258"
            },
            {
                "from": 1110,
                "to": 1111,
                "label": "CASE"
            },
            {
                "from": 1111,
                "to": 1112,
                "label": "PARALLEL"
            },
            {
                "from": 1111,
                "to": 1113,
                "label": "PARALLEL"
            },
            {
                "from": 1112,
                "to": 1114,
                "label": "EVAL with clause\nmerge([], X283, X283).\nand substitutionT244 -> [],\nT243 -> .(T258, []),\nX283 -> .(T258, []),\nT219 -> T258,\nT257 -> .(T258, [])"
            },
            {
                "from": 1112,
                "to": 1115,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1113,
                "to": 1117,
                "label": "PARALLEL"
            },
            {
                "from": 1113,
                "to": 1118,
                "label": "PARALLEL"
            },
            {
                "from": 1114,
                "to": 1116,
                "label": "SUCCESS"
            },
            {
                "from": 1117,
                "to": 1119,
                "label": "EVAL with clause\nmerge(X288, [], X288).\nand substitutionT244 -> .(T268, []),\nX288 -> .(T268, []),\nT243 -> [],\nT219 -> T268,\nT267 -> .(T268, [])"
            },
            {
                "from": 1117,
                "to": 1120,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1118,
                "to": 1122,
                "label": "PARALLEL"
            },
            {
                "from": 1118,
                "to": 1123,
                "label": "PARALLEL"
            },
            {
                "from": 1119,
                "to": 1121,
                "label": "SUCCESS"
            },
            {
                "from": 1122,
                "to": 1124,
                "label": "EVAL with clause\nmerge(.(X309, X310), .(X311, X312), .(X309, X313)) :- ','(less(X309, s(X311)), merge(X310, .(X311, X312), X313)).\nand substitutionX309 -> T285,\nX310 -> T290,\nT244 -> .(T285, T290),\nX311 -> T289,\nX312 -> T291,\nT243 -> .(T289, T291),\nT219 -> T285,\nX313 -> [],\nT287 -> T289,\nT286 -> T290,\nT288 -> T291"
            },
            {
                "from": 1122,
                "to": 1125,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1123,
                "to": 1138,
                "label": "EVAL with clause\nmerge(.(X330, X331), .(X332, X333), .(X332, X334)) :- ','(less(X332, X330), merge(.(X330, X331), X333, X334)).\nand substitutionX330 -> T315,\nX331 -> T317,\nT244 -> .(T315, T317),\nX332 -> T313,\nX333 -> T316,\nT243 -> .(T313, T316),\nT219 -> T313,\nX334 -> [],\nT311 -> T315,\nT314 -> T316,\nT312 -> T317"
            },
            {
                "from": 1123,
                "to": 1139,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1124,
                "to": 1126,
                "label": "SPLIT 1"
            },
            {
                "from": 1124,
                "to": 1127,
                "label": "SPLIT 2\nnew knowledge:\nT285 is ground\nreplacements:T290 -> T294,\nT289 -> T295,\nT291 -> T296"
            },
            {
                "from": 1126,
                "to": 945,
                "label": "INSTANCE with matching:\nT120 -> T285\nT121 -> T289"
            },
            {
                "from": 1127,
                "to": 1037,
                "label": "INSTANCE with matching:\nT189 -> T294\nT188 -> .(T295, T296)"
            },
            {
                "from": 1138,
                "to": 1142,
                "label": "SPLIT 1"
            },
            {
                "from": 1138,
                "to": 1143,
                "label": "SPLIT 2\nnew knowledge:\nT313 is ground\nreplacements:T315 -> T320,\nT317 -> T321,\nT316 -> T322"
            },
            {
                "from": 1142,
                "to": 953,
                "label": "INSTANCE with matching:\nT142 -> T313\nT143 -> T315"
            },
            {
                "from": 1143,
                "to": 1037,
                "label": "INSTANCE with matching:\nT189 -> .(T320, T321)\nT188 -> T322"
            },
            {
                "from": 1145,
                "to": 1147,
                "label": "CASE"
            },
            {
                "from": 1147,
                "to": 1154,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 1154,
                "to": 1155,
                "label": "ONLY EVAL with clause\nsplit(.(X365, X366), .(X365, X367), X368) :- split(X366, X368, X367).\nand substitutionT333 -> T350,\nX365 -> T350,\nT334 -> T348,\nT335 -> T349,\nX366 -> .(T348, T349),\nX367 -> X369,\nX349 -> .(T350, X369),\nX350 -> X370,\nX368 -> X370,\nT346 -> T348,\nT347 -> T349,\nT345 -> T350"
            },
            {
                "from": 1155,
                "to": 1156,
                "label": "SPLIT 1"
            },
            {
                "from": 1155,
                "to": 1157,
                "label": "SPLIT 2\nreplacements:X370 -> T351,\nX369 -> T352,\nT350 -> T353,\nT1 -> T354"
            },
            {
                "from": 1156,
                "to": 235,
                "label": "INSTANCE with matching:\nT25 -> T348\nT26 -> T349\nX32 -> X370\nX31 -> X369"
            },
            {
                "from": 1157,
                "to": 1158,
                "label": "SPLIT 1"
            },
            {
                "from": 1157,
                "to": 1159,
                "label": "SPLIT 2\nreplacements:X351 -> T355,\nT351 -> T356,\nT354 -> T357"
            },
            {
                "from": 1158,
                "to": 292,
                "label": "INSTANCE with matching:\nT30 -> T353\nT29 -> T352\nX13 -> X351"
            },
            {
                "from": 1159,
                "to": 1160,
                "label": "SPLIT 1"
            },
            {
                "from": 1159,
                "to": 1161,
                "label": "SPLIT 2\nreplacements:X352 -> T358,\nT355 -> T359,\nT357 -> T360"
            },
            {
                "from": 1160,
                "to": 706,
                "label": "INSTANCE with matching:\nT65 -> T356\nX94 -> X352"
            },
            {
                "from": 1161,
                "to": 1162,
                "label": "CASE"
            },
            {
                "from": 1162,
                "to": 1163,
                "label": "PARALLEL"
            },
            {
                "from": 1162,
                "to": 1164,
                "label": "PARALLEL"
            },
            {
                "from": 1163,
                "to": 1165,
                "label": "EVAL with clause\nmerge([], X377, X377).\nand substitutionT359 -> [],\nT358 -> T367,\nX377 -> T367,\nT332 -> T367"
            },
            {
                "from": 1163,
                "to": 1166,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1164,
                "to": 1168,
                "label": "PARALLEL"
            },
            {
                "from": 1164,
                "to": 1169,
                "label": "PARALLEL"
            },
            {
                "from": 1165,
                "to": 1167,
                "label": "SUCCESS"
            },
            {
                "from": 1168,
                "to": 1170,
                "label": "EVAL with clause\nmerge(X382, [], X382).\nand substitutionT359 -> T372,\nX382 -> T372,\nT358 -> [],\nT332 -> T372"
            },
            {
                "from": 1168,
                "to": 1171,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1169,
                "to": 1173,
                "label": "PARALLEL"
            },
            {
                "from": 1169,
                "to": 1174,
                "label": "PARALLEL"
            },
            {
                "from": 1170,
                "to": 1172,
                "label": "SUCCESS"
            },
            {
                "from": 1173,
                "to": 1175,
                "label": "EVAL with clause\nmerge(.(X403, X404), .(X405, X406), .(X403, X407)) :- ','(less(X403, s(X405)), merge(X404, .(X405, X406), X407)).\nand substitutionX403 -> T393,\nX404 -> T399,\nT359 -> .(T393, T399),\nX405 -> T398,\nX406 -> T400,\nT358 -> .(T398, T400),\nX407 -> T397,\nT332 -> .(T393, T397),\nT395 -> T398,\nT394 -> T399,\nT396 -> T400"
            },
            {
                "from": 1173,
                "to": 1176,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1174,
                "to": 1322,
                "label": "EVAL with clause\nmerge(.(X582, X583), .(X584, X585), .(X584, X586)) :- ','(less(X584, X582), merge(.(X582, X583), X585, X586)).\nand substitutionX582 -> T624,\nX583 -> T626,\nT359 -> .(T624, T626),\nX584 -> T621,\nX585 -> T625,\nT358 -> .(T621, T625),\nX586 -> T623,\nT332 -> .(T621, T623),\nT619 -> T624,\nT622 -> T625,\nT620 -> T626"
            },
            {
                "from": 1174,
                "to": 1323,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1175,
                "to": 1177,
                "label": "SPLIT 1"
            },
            {
                "from": 1175,
                "to": 1178,
                "label": "SPLIT 2\nnew knowledge:\nT393 is ground\nreplacements:T399 -> T403,\nT398 -> T404,\nT400 -> T405,\nT360 -> T406"
            },
            {
                "from": 1177,
                "to": 945,
                "label": "INSTANCE with matching:\nT120 -> T393\nT121 -> T398"
            },
            {
                "from": 1178,
                "to": 1179,
                "label": "CASE"
            },
            {
                "from": 1179,
                "to": 1180,
                "label": "PARALLEL"
            },
            {
                "from": 1179,
                "to": 1181,
                "label": "PARALLEL"
            },
            {
                "from": 1180,
                "to": 1182,
                "label": "EVAL with clause\nmerge([], X418, X418).\nand substitutionT403 -> [],\nT404 -> T421,\nT405 -> T422,\nX418 -> .(T421, T422),\nT397 -> .(T421, T422)"
            },
            {
                "from": 1180,
                "to": 1183,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1181,
                "to": 1185,
                "label": "BACKTRACK\nfor clause: merge(Xs, [], Xs)because of non-unification"
            },
            {
                "from": 1182,
                "to": 1184,
                "label": "SUCCESS"
            },
            {
                "from": 1185,
                "to": 1192,
                "label": "PARALLEL"
            },
            {
                "from": 1185,
                "to": 1193,
                "label": "PARALLEL"
            },
            {
                "from": 1192,
                "to": 1194,
                "label": "EVAL with clause\nmerge(.(X440, X441), .(X442, X443), .(X440, X444)) :- ','(less(X440, s(X442)), merge(X441, .(X442, X443), X444)).\nand substitutionX440 -> T444,\nX441 -> T450,\nT403 -> .(T444, T450),\nT404 -> T449,\nX442 -> T449,\nT405 -> T451,\nX443 -> T451,\nX444 -> T448,\nT397 -> .(T444, T448),\nT446 -> T449,\nT445 -> T450,\nT447 -> T451"
            },
            {
                "from": 1192,
                "to": 1195,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1193,
                "to": 1320,
                "label": "EVAL with clause\nmerge(.(X565, X566), .(X567, X568), .(X567, X569)) :- ','(less(X567, X565), merge(.(X565, X566), X568, X569)).\nand substitutionX565 -> T604,\nX566 -> T606,\nT403 -> .(T604, T606),\nT404 -> T601,\nX567 -> T601,\nT405 -> T605,\nX568 -> T605,\nX569 -> T603,\nT397 -> .(T601, T603),\nT599 -> T604,\nT602 -> T605,\nT600 -> T606"
            },
            {
                "from": 1193,
                "to": 1321,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1194,
                "to": 1196,
                "label": "SPLIT 1"
            },
            {
                "from": 1194,
                "to": 1197,
                "label": "SPLIT 2\nnew knowledge:\nT444 is ground\nreplacements:T450 -> T454,\nT449 -> T455,\nT451 -> T456"
            },
            {
                "from": 1196,
                "to": 945,
                "label": "INSTANCE with matching:\nT120 -> T444\nT121 -> T449"
            },
            {
                "from": 1197,
                "to": 1198,
                "label": "CASE"
            },
            {
                "from": 1198,
                "to": 1199,
                "label": "PARALLEL"
            },
            {
                "from": 1198,
                "to": 1200,
                "label": "PARALLEL"
            },
            {
                "from": 1199,
                "to": 1201,
                "label": "EVAL with clause\nmerge([], X455, X455).\nand substitutionT454 -> [],\nT455 -> T471,\nT456 -> T472,\nX455 -> .(T471, T472),\nT448 -> .(T471, T472)"
            },
            {
                "from": 1199,
                "to": 1202,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1200,
                "to": 1204,
                "label": "BACKTRACK\nfor clause: merge(Xs, [], Xs)because of non-unification"
            },
            {
                "from": 1201,
                "to": 1203,
                "label": "SUCCESS"
            },
            {
                "from": 1204,
                "to": 1208,
                "label": "PARALLEL"
            },
            {
                "from": 1204,
                "to": 1209,
                "label": "PARALLEL"
            },
            {
                "from": 1208,
                "to": 1301,
                "label": "EVAL with clause\nmerge(.(X477, X478), .(X479, X480), .(X477, X481)) :- ','(less(X477, s(X479)), merge(X478, .(X479, X480), X481)).\nand substitutionX477 -> T494,\nX478 -> T500,\nT454 -> .(T494, T500),\nT455 -> T499,\nX479 -> T499,\nT456 -> T501,\nX480 -> T501,\nX481 -> T498,\nT448 -> .(T494, T498),\nT496 -> T499,\nT495 -> T500,\nT497 -> T501"
            },
            {
                "from": 1208,
                "to": 1302,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1209,
                "to": 1303,
                "label": "EVAL with clause\nmerge(.(X494, X495), .(X496, X497), .(X496, X498)) :- ','(less(X496, X494), merge(.(X494, X495), X497, X498)).\nand substitutionX494 -> T519,\nX495 -> T521,\nT454 -> .(T519, T521),\nT455 -> T516,\nX496 -> T516,\nT456 -> T520,\nX497 -> T520,\nX498 -> T518,\nT448 -> .(T516, T518),\nT514 -> T519,\nT517 -> T520,\nT515 -> T521"
            },
            {
                "from": 1209,
                "to": 1304,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1301,
                "to": 1194,
                "label": "INSTANCE with matching:\nT444 -> T494\nT449 -> T499\nT450 -> T500\nT451 -> T501\nT448 -> T498"
            },
            {
                "from": 1303,
                "to": 1305,
                "label": "SPLIT 1"
            },
            {
                "from": 1303,
                "to": 1306,
                "label": "SPLIT 2\nnew knowledge:\nT516 is ground\nreplacements:T519 -> T524,\nT521 -> T525,\nT520 -> T526"
            },
            {
                "from": 1305,
                "to": 953,
                "label": "INSTANCE with matching:\nT142 -> T516\nT143 -> T519"
            },
            {
                "from": 1306,
                "to": 1307,
                "label": "CASE"
            },
            {
                "from": 1307,
                "to": 1308,
                "label": "BACKTRACK\nfor clause: merge([], Xs, Xs)because of non-unification"
            },
            {
                "from": 1308,
                "to": 1309,
                "label": "PARALLEL"
            },
            {
                "from": 1308,
                "to": 1310,
                "label": "PARALLEL"
            },
            {
                "from": 1309,
                "to": 1311,
                "label": "EVAL with clause\nmerge(X510, [], X510).\nand substitutionT524 -> T537,\nT525 -> T538,\nX510 -> .(T537, T538),\nT526 -> [],\nT518 -> .(T537, T538)"
            },
            {
                "from": 1309,
                "to": 1312,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1310,
                "to": 1314,
                "label": "PARALLEL"
            },
            {
                "from": 1310,
                "to": 1315,
                "label": "PARALLEL"
            },
            {
                "from": 1311,
                "to": 1313,
                "label": "SUCCESS"
            },
            {
                "from": 1314,
                "to": 1316,
                "label": "EVAL with clause\nmerge(.(X531, X532), .(X533, X534), .(X531, X535)) :- ','(less(X531, s(X533)), merge(X532, .(X533, X534), X535)).\nand substitutionT524 -> T559,\nX531 -> T559,\nT525 -> T565,\nX532 -> T565,\nX533 -> T564,\nX534 -> T566,\nT526 -> .(T564, T566),\nX535 -> T563,\nT518 -> .(T559, T563),\nT561 -> T564,\nT560 -> T565,\nT562 -> T566"
            },
            {
                "from": 1314,
                "to": 1317,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1315,
                "to": 1318,
                "label": "EVAL with clause\nmerge(.(X548, X549), .(X550, X551), .(X550, X552)) :- ','(less(X550, X548), merge(.(X548, X549), X551, X552)).\nand substitutionT524 -> T584,\nX548 -> T584,\nT525 -> T586,\nX549 -> T586,\nX550 -> T581,\nX551 -> T585,\nT526 -> .(T581, T585),\nX552 -> T583,\nT518 -> .(T581, T583),\nT579 -> T584,\nT582 -> T585,\nT580 -> T586"
            },
            {
                "from": 1315,
                "to": 1319,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1316,
                "to": 1194,
                "label": "INSTANCE with matching:\nT444 -> T559\nT449 -> T564\nT450 -> T565\nT451 -> T566\nT448 -> T563"
            },
            {
                "from": 1318,
                "to": 1303,
                "label": "INSTANCE with matching:\nT516 -> T581\nT519 -> T584\nT521 -> T586\nT520 -> T585\nT518 -> T583"
            },
            {
                "from": 1320,
                "to": 1303,
                "label": "INSTANCE with matching:\nT516 -> T601\nT519 -> T604\nT521 -> T606\nT520 -> T605\nT518 -> T603"
            },
            {
                "from": 1322,
                "to": 1303,
                "label": "INSTANCE with matching:\nT516 -> T621\nT519 -> T624\nT521 -> T626\nT520 -> T625\nT518 -> T623"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(116)
Obligation:
Triples:

splitA(.(X1, X2), .(X1, X3), X4) :- splitA(X2, X4, X3).
splitB(X1, X2, .(X1, X3), X4) :- splitA(X2, X4, X3).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- splitB(X1, .(X2, X3), X4, X5).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), msE(X4, X6)).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), msE(X5, X7))).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), ','(mscE(X5, X7), mergeD(X6, X7, X8)))).
msE(.(X1, .(X2, X3)), X4) :- pC(X1, X2, X3, X5, X6, X7, X8, X4).
mergeD(.(X1, X2), .(X3, X4), .(X1, X5)) :- lessF(X1, X3).
mergeD(.(X1, X2), .(X3, X4), .(X1, X5)) :- ','(lesscF(X1, X3), mergeD(X2, .(X3, X4), X5)).
mergeD(.(X1, X2), .(X3, X4), .(X3, X5)) :- lessG(X3, X1).
mergeD(.(X1, X2), .(X3, X4), .(X3, X5)) :- ','(lesscG(X3, X1), mergeD(.(X1, X2), X4, X5)).
lessG(s(X1), s(X2)) :- lessG(X1, X2).
msH(X1, .(X2, X3), X4) :- pC(X1, X2, X3, X5, X6, X7, X8, X4).
lessF(s(X1), X2) :- lessG(X1, X2).
pJ(X1, X2, X3, X4, X5) :- lessF(X1, X2).
pJ(X1, X2, .(X3, X4), X5, .(X3, X6)) :- ','(lesscF(X1, X2), pJ(X3, X2, X4, X5, X6)).
pJ(X1, X2, .(X3, X4), X5, .(X2, X6)) :- ','(lesscF(X1, X2), pK(X2, X3, X4, X5, X6)).
pK(X1, X2, X3, X4, X5) :- lessG(X1, X2).
pK(X1, X2, X3, .(X4, X5), .(X2, X6)) :- ','(lesscG(X1, X2), pJ(X2, X4, X3, X5, X6)).
pK(X1, X2, X3, .(X4, X5), .(X4, X6)) :- ','(lesscG(X1, X2), pK(X4, X2, X3, X5, X6)).
msL(.(X1, .(X2, X3)), []) :- splitB(X2, X3, X4, X5).
msL(.(X1, .(X2, X3)), []) :- ','(splitcB(X2, X3, X4, X5), msH(X1, X5, X6)).
msL(.(X1, .(X2, X3)), []) :- ','(splitcB(X2, X3, X4, X5), ','(mscH(X1, X5, X6), msE(X4, X7))).
msL(.(X1, .(X2, X3)), []) :- ','(splitcB(X2, X3, X4, X5), ','(mscH(X1, X5, X6), ','(mscE(X4, X7), mergeI(X6, X7)))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- splitB(X2, X3, X5, X6).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), msH(X1, X6, X7)).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, X7), msE(X5, X8))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X4, X7)), ','(mscE(X5, .(X8, X9)), lessF(X4, X8)))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X4, X7)), ','(mscE(X5, .(X8, X9)), ','(lesscF(X4, X8), mergeI(X7, .(X8, X9)))))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X7, X8)), ','(mscE(X5, .(X4, X9)), lessG(X4, X7)))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X7, X8)), ','(mscE(X5, .(X4, X9)), ','(lesscG(X4, X7), mergeI(.(X7, X8), X9))))).
msL(.(X1, .(X2, X3)), X4) :- splitB(X2, X3, X5, X6).
msL(.(X1, .(X2, X3)), X4) :- ','(splitcB(X2, X3, X5, X6), msH(X1, X6, X7)).
msL(.(X1, .(X2, X3)), X4) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, X7), msE(X5, X8))).
msL(.(X1, .(X2, X3)), .(X4, X5)) :- ','(splitcB(X2, X3, X6, X7), ','(mscH(X1, X7, .(X4, X8)), ','(mscE(X6, .(X9, X10)), lessF(X4, X9)))).
msL(.(X1, .(X2, X3)), .(X4, .(X5, X6))) :- ','(splitcB(X2, X3, X7, X8), ','(mscH(X1, X8, .(X4, .(X5, X9))), ','(mscE(X7, .(X10, X11)), ','(lesscF(X4, X10), pJ(X5, X10, X9, X11, X6))))).
msL(.(X1, .(X2, X3)), .(X4, .(X5, X6))) :- ','(splitcB(X2, X3, X7, X8), ','(mscH(X1, X8, .(X4, .(X9, X10))), ','(mscE(X7, .(X5, X11)), ','(lesscF(X4, X5), pK(X5, X9, X10, X11, X6))))).
msL(.(X1, .(X2, X3)), .(X4, X5)) :- ','(splitcB(X2, X3, X6, X7), ','(mscH(X1, X7, .(X8, X9)), ','(mscE(X6, .(X4, X10)), pK(X4, X8, X9, X10, X5)))).

Clauses:

splitcA([], [], []).
splitcA(.(X1, X2), .(X1, X3), X4) :- splitcA(X2, X4, X3).
splitcB(X1, X2, .(X1, X3), X4) :- splitcA(X2, X4, X3).
qcC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), ','(mscE(X5, X7), mergecD(X6, X7, X8)))).
mscE([], []).
mscE(.(X1, []), .(X1, [])).
mscE(.(X1, .(X2, X3)), X4) :- qcC(X1, X2, X3, X5, X6, X7, X8, X4).
mergecD([], X1, X1).
mergecD(X1, [], X1).
mergecD(.(X1, X2), .(X3, X4), .(X1, X5)) :- ','(lesscF(X1, X3), mergecD(X2, .(X3, X4), X5)).
mergecD(.(X1, X2), .(X3, X4), .(X3, X5)) :- ','(lesscG(X3, X1), mergecD(.(X1, X2), X4, X5)).
lesscG(0, s(X1)).
lesscG(s(X1), s(X2)) :- lesscG(X1, X2).
mscH(X1, [], .(X1, [])).
mscH(X1, .(X2, X3), X4) :- qcC(X1, X2, X3, X5, X6, X7, X8, X4).
lesscF(0, X1).
lesscF(s(X1), X2) :- lesscG(X1, X2).
mergecI([], []).
mergecI([], []).
qcJ(X1, X2, [], X3, .(X2, X3)) :- lesscF(X1, X2).
qcJ(X1, X2, .(X3, X4), X5, .(X3, X6)) :- ','(lesscF(X1, X2), qcJ(X3, X2, X4, X5, X6)).
qcJ(X1, X2, .(X3, X4), X5, .(X2, X6)) :- ','(lesscF(X1, X2), qcK(X2, X3, X4, X5, X6)).
qcK(X1, X2, X3, [], .(X2, X3)) :- lesscG(X1, X2).
qcK(X1, X2, X3, .(X4, X5), .(X2, X6)) :- ','(lesscG(X1, X2), qcJ(X2, X4, X3, X5, X6)).
qcK(X1, X2, X3, .(X4, X5), .(X4, X6)) :- ','(lesscG(X1, X2), qcK(X4, X2, X3, X5, X6)).

Afs:

msL(x1, x2)  =  msL(x2)


----------------------------------------

(117) UndefinedPredicateInTriplesTransformerProof (SOUND)
Deleted triples and predicates having undefined goals [DT09].
----------------------------------------

(118)
Obligation:
Triples:

splitA(.(X1, X2), .(X1, X3), X4) :- splitA(X2, X4, X3).
splitB(X1, X2, .(X1, X3), X4) :- splitA(X2, X4, X3).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- splitB(X1, .(X2, X3), X4, X5).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), msE(X4, X6)).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), msE(X5, X7))).
pC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), ','(mscE(X5, X7), mergeD(X6, X7, X8)))).
msE(.(X1, .(X2, X3)), X4) :- pC(X1, X2, X3, X5, X6, X7, X8, X4).
mergeD(.(X1, X2), .(X3, X4), .(X1, X5)) :- lessF(X1, X3).
mergeD(.(X1, X2), .(X3, X4), .(X1, X5)) :- ','(lesscF(X1, X3), mergeD(X2, .(X3, X4), X5)).
mergeD(.(X1, X2), .(X3, X4), .(X3, X5)) :- lessG(X3, X1).
mergeD(.(X1, X2), .(X3, X4), .(X3, X5)) :- ','(lesscG(X3, X1), mergeD(.(X1, X2), X4, X5)).
lessG(s(X1), s(X2)) :- lessG(X1, X2).
msH(X1, .(X2, X3), X4) :- pC(X1, X2, X3, X5, X6, X7, X8, X4).
lessF(s(X1), X2) :- lessG(X1, X2).
pJ(X1, X2, X3, X4, X5) :- lessF(X1, X2).
pJ(X1, X2, .(X3, X4), X5, .(X3, X6)) :- ','(lesscF(X1, X2), pJ(X3, X2, X4, X5, X6)).
pJ(X1, X2, .(X3, X4), X5, .(X2, X6)) :- ','(lesscF(X1, X2), pK(X2, X3, X4, X5, X6)).
pK(X1, X2, X3, X4, X5) :- lessG(X1, X2).
pK(X1, X2, X3, .(X4, X5), .(X2, X6)) :- ','(lesscG(X1, X2), pJ(X2, X4, X3, X5, X6)).
pK(X1, X2, X3, .(X4, X5), .(X4, X6)) :- ','(lesscG(X1, X2), pK(X4, X2, X3, X5, X6)).
msL(.(X1, .(X2, X3)), []) :- splitB(X2, X3, X4, X5).
msL(.(X1, .(X2, X3)), []) :- ','(splitcB(X2, X3, X4, X5), msH(X1, X5, X6)).
msL(.(X1, .(X2, X3)), []) :- ','(splitcB(X2, X3, X4, X5), ','(mscH(X1, X5, X6), msE(X4, X7))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- splitB(X2, X3, X5, X6).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), msH(X1, X6, X7)).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, X7), msE(X5, X8))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X4, X7)), ','(mscE(X5, .(X8, X9)), lessF(X4, X8)))).
msL(.(X1, .(X2, X3)), .(X4, [])) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, .(X7, X8)), ','(mscE(X5, .(X4, X9)), lessG(X4, X7)))).
msL(.(X1, .(X2, X3)), X4) :- splitB(X2, X3, X5, X6).
msL(.(X1, .(X2, X3)), X4) :- ','(splitcB(X2, X3, X5, X6), msH(X1, X6, X7)).
msL(.(X1, .(X2, X3)), X4) :- ','(splitcB(X2, X3, X5, X6), ','(mscH(X1, X6, X7), msE(X5, X8))).
msL(.(X1, .(X2, X3)), .(X4, X5)) :- ','(splitcB(X2, X3, X6, X7), ','(mscH(X1, X7, .(X4, X8)), ','(mscE(X6, .(X9, X10)), lessF(X4, X9)))).
msL(.(X1, .(X2, X3)), .(X4, .(X5, X6))) :- ','(splitcB(X2, X3, X7, X8), ','(mscH(X1, X8, .(X4, .(X5, X9))), ','(mscE(X7, .(X10, X11)), ','(lesscF(X4, X10), pJ(X5, X10, X9, X11, X6))))).
msL(.(X1, .(X2, X3)), .(X4, .(X5, X6))) :- ','(splitcB(X2, X3, X7, X8), ','(mscH(X1, X8, .(X4, .(X9, X10))), ','(mscE(X7, .(X5, X11)), ','(lesscF(X4, X5), pK(X5, X9, X10, X11, X6))))).
msL(.(X1, .(X2, X3)), .(X4, X5)) :- ','(splitcB(X2, X3, X6, X7), ','(mscH(X1, X7, .(X8, X9)), ','(mscE(X6, .(X4, X10)), pK(X4, X8, X9, X10, X5)))).

Clauses:

splitcA([], [], []).
splitcA(.(X1, X2), .(X1, X3), X4) :- splitcA(X2, X4, X3).
splitcB(X1, X2, .(X1, X3), X4) :- splitcA(X2, X4, X3).
qcC(X1, X2, X3, X4, X5, X6, X7, X8) :- ','(splitcB(X1, .(X2, X3), X4, X5), ','(mscE(X4, X6), ','(mscE(X5, X7), mergecD(X6, X7, X8)))).
mscE([], []).
mscE(.(X1, []), .(X1, [])).
mscE(.(X1, .(X2, X3)), X4) :- qcC(X1, X2, X3, X5, X6, X7, X8, X4).
mergecD([], X1, X1).
mergecD(X1, [], X1).
mergecD(.(X1, X2), .(X3, X4), .(X1, X5)) :- ','(lesscF(X1, X3), mergecD(X2, .(X3, X4), X5)).
mergecD(.(X1, X2), .(X3, X4), .(X3, X5)) :- ','(lesscG(X3, X1), mergecD(.(X1, X2), X4, X5)).
lesscG(0, s(X1)).
lesscG(s(X1), s(X2)) :- lesscG(X1, X2).
mscH(X1, [], .(X1, [])).
mscH(X1, .(X2, X3), X4) :- qcC(X1, X2, X3, X5, X6, X7, X8, X4).
lesscF(0, X1).
lesscF(s(X1), X2) :- lesscG(X1, X2).
mergecI([], []).
mergecI([], []).
qcJ(X1, X2, [], X3, .(X2, X3)) :- lesscF(X1, X2).
qcJ(X1, X2, .(X3, X4), X5, .(X3, X6)) :- ','(lesscF(X1, X2), qcJ(X3, X2, X4, X5, X6)).
qcJ(X1, X2, .(X3, X4), X5, .(X2, X6)) :- ','(lesscF(X1, X2), qcK(X2, X3, X4, X5, X6)).
qcK(X1, X2, X3, [], .(X2, X3)) :- lesscG(X1, X2).
qcK(X1, X2, X3, .(X4, X5), .(X2, X6)) :- ','(lesscG(X1, X2), qcJ(X2, X4, X3, X5, X6)).
qcK(X1, X2, X3, .(X4, X5), .(X4, X6)) :- ','(lesscG(X1, X2), qcK(X4, X2, X3, X5, X6)).

Afs:

msL(x1, x2)  =  msL(x2)


----------------------------------------

(119) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

msL_in_2: (f,b)

splitB_in_4: (f,f,f,f)

splitA_in_3: (f,f,f)

splitcB_in_4: (f,f,f,f)

splitcA_in_3: (f,f,f)

msH_in_3: (f,f,f)

pC_in_8: (f,f,f,f,f,f,f,f)

msE_in_2: (f,f)

mscE_in_2: (f,f)

qcC_in_8: (f,f,f,f,f,f,f,f)

mergecD_in_3: (f,f,f)

lesscF_in_2: (f,f) (b,f) (b,b)

lesscG_in_2: (f,f) (b,b) (b,f)

mergeD_in_3: (f,f,f)

lessF_in_2: (f,f) (b,f)

lessG_in_2: (f,f) (b,f)

mscH_in_3: (f,f,f)

pK_in_5: (b,f,f,f,b)

pJ_in_5: (b,f,f,f,b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   MSL_IN_AG(.(X1, .(X2, X3)), []) -> U30_AG(X1, X2, X3, splitB_in_aaaa(X2, X3, X4, X5))
   MSL_IN_AG(.(X1, .(X2, X3)), []) -> SPLITB_IN_AAAA(X2, X3, X4, X5)
   SPLITB_IN_AAAA(X1, X2, .(X1, X3), X4) -> U2_AAAA(X1, X2, X3, X4, splitA_in_aaa(X2, X4, X3))
   SPLITB_IN_AAAA(X1, X2, .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)
   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> U1_AAA(X1, X2, X3, X4, splitA_in_aaa(X2, X4, X3))
   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)
   MSL_IN_AG(.(X1, .(X2, X3)), []) -> U31_AG(X1, X2, X3, splitcB_in_aaaa(X2, X3, X4, X5))
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> U32_AG(X1, X2, X3, msH_in_aaa(X1, X5, X6))
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> MSH_IN_AAA(X1, X5, X6)
   MSH_IN_AAA(X1, .(X2, X3), X4) -> U18_AAA(X1, X2, X3, X4, pC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   MSH_IN_AAA(X1, .(X2, X3), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U3_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitB_in_aaaa(X1, .(X2, X3), X4, X5))
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> SPLITB_IN_AAAA(X1, .(X2, X3), X4, X5)
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U5_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, msE_in_aa(X4, X6))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> MSE_IN_AA(X4, X6)
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> U10_AA(X1, X2, X3, X4, pC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U7_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, msE_in_aa(X5, X7))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> MSE_IN_AA(X5, X7)
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U9_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mergeD_in_aaa(X6, X7, X8))
   U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> MERGED_IN_AAA(X6, X7, X8)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U11_AAA(X1, X2, X3, X4, X5, lessF_in_aa(X1, X3))
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> LESSF_IN_AA(X1, X3)
   LESSF_IN_AA(s(X1), X2) -> U19_AA(X1, X2, lessG_in_aa(X1, X2))
   LESSF_IN_AA(s(X1), X2) -> LESSG_IN_AA(X1, X2)
   LESSG_IN_AA(s(X1), s(X2)) -> U17_AA(X1, X2, lessG_in_aa(X1, X2))
   LESSG_IN_AA(s(X1), s(X2)) -> LESSG_IN_AA(X1, X2)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U12_AAA(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U13_AAA(X1, X2, X3, X4, X5, mergeD_in_aaa(X2, .(X3, X4), X5))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> MERGED_IN_AAA(X2, .(X3, X4), X5)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U14_AAA(X1, X2, X3, X4, X5, lessG_in_aa(X3, X1))
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> LESSG_IN_AA(X3, X1)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U15_AAA(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U16_AAA(X1, X2, X3, X4, X5, mergeD_in_aaa(.(X1, X2), X4, X5))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> MERGED_IN_AAA(.(X1, X2), X4, X5)
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> U33_AG(X1, X2, X3, X4, mscH_in_aaa(X1, X5, X6))
   U33_AG(X1, X2, X3, X4, mscH_out_aaa(X1, X5, X6)) -> U34_AG(X1, X2, X3, msE_in_aa(X4, X7))
   U33_AG(X1, X2, X3, X4, mscH_out_aaa(X1, X5, X6)) -> MSE_IN_AA(X4, X7)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> U35_AG(X1, X2, X3, X4, splitB_in_aaaa(X2, X3, X5, X6))
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> SPLITB_IN_AAAA(X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> U36_AG(X1, X2, X3, X4, splitcB_in_aaaa(X2, X3, X5, X6))
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U37_AG(X1, X2, X3, X4, msH_in_aaa(X1, X6, X7))
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> MSH_IN_AAA(X1, X6, X7)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U38_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, X7))
   U38_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> U39_AG(X1, X2, X3, X4, msE_in_aa(X5, X8))
   U38_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> MSE_IN_AA(X5, X8)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U40_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, .(X4, X7)))
   U40_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, .(X4, X7))) -> U41_AG(X1, X2, X3, X4, mscE_in_aa(X5, .(X8, X9)))
   U41_AG(X1, X2, X3, X4, mscE_out_aa(X5, .(X8, X9))) -> U42_AG(X1, X2, X3, X4, lessF_in_ga(X4, X8))
   U41_AG(X1, X2, X3, X4, mscE_out_aa(X5, .(X8, X9))) -> LESSF_IN_GA(X4, X8)
   LESSF_IN_GA(s(X1), X2) -> U19_GA(X1, X2, lessG_in_ga(X1, X2))
   LESSF_IN_GA(s(X1), X2) -> LESSG_IN_GA(X1, X2)
   LESSG_IN_GA(s(X1), s(X2)) -> U17_GA(X1, X2, lessG_in_ga(X1, X2))
   LESSG_IN_GA(s(X1), s(X2)) -> LESSG_IN_GA(X1, X2)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U43_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, .(X7, X8)))
   U43_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, .(X7, X8))) -> U44_AG(X1, X2, X3, X4, X7, mscE_in_aa(X5, .(X4, X9)))
   U44_AG(X1, X2, X3, X4, X7, mscE_out_aa(X5, .(X4, X9))) -> U45_AG(X1, X2, X3, X4, lessG_in_ga(X4, X7))
   U44_AG(X1, X2, X3, X4, X7, mscE_out_aa(X5, .(X4, X9))) -> LESSG_IN_GA(X4, X7)
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> U46_AG(X1, X2, X3, X4, splitB_in_aaaa(X2, X3, X5, X6))
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> SPLITB_IN_AAAA(X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> U47_AG(X1, X2, X3, X4, splitcB_in_aaaa(X2, X3, X5, X6))
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U48_AG(X1, X2, X3, X4, msH_in_aaa(X1, X6, X7))
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> MSH_IN_AAA(X1, X6, X7)
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U49_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, X7))
   U49_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> U50_AG(X1, X2, X3, X4, msE_in_aa(X5, X8))
   U49_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> MSE_IN_AA(X5, X8)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, X5)) -> U51_AG(X1, X2, X3, X4, X5, splitcB_in_aaaa(X2, X3, X6, X7))
   U51_AG(X1, X2, X3, X4, X5, splitcB_out_aaaa(X2, X3, X6, X7)) -> U52_AG(X1, X2, X3, X4, X5, X6, mscH_in_aaa(X1, X7, .(X4, X8)))
   U52_AG(X1, X2, X3, X4, X5, X6, mscH_out_aaa(X1, X7, .(X4, X8))) -> U53_AG(X1, X2, X3, X4, X5, mscE_in_aa(X6, .(X9, X10)))
   U53_AG(X1, X2, X3, X4, X5, mscE_out_aa(X6, .(X9, X10))) -> U54_AG(X1, X2, X3, X4, X5, lessF_in_ga(X4, X9))
   U53_AG(X1, X2, X3, X4, X5, mscE_out_aa(X6, .(X9, X10))) -> LESSF_IN_GA(X4, X9)
   U51_AG(X1, X2, X3, X4, X5, splitcB_out_aaaa(X2, X3, X6, X7)) -> U55_AG(X1, X2, X3, X4, X5, X6, mscH_in_aaa(X1, X7, .(X8, X9)))
   U55_AG(X1, X2, X3, X4, X5, X6, mscH_out_aaa(X1, X7, .(X8, X9))) -> U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_in_aa(X6, .(X4, X10)))
   U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_out_aa(X6, .(X4, X10))) -> U57_AG(X1, X2, X3, X4, X5, pK_in_gaaag(X4, X8, X9, X10, X5))
   U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_out_aa(X6, .(X4, X10))) -> PK_IN_GAAAG(X4, X8, X9, X10, X5)
   PK_IN_GAAAG(X1, X2, X3, X4, X5) -> U25_GAAAG(X1, X2, X3, X4, X5, lessG_in_ga(X1, X2))
   PK_IN_GAAAG(X1, X2, X3, X4, X5) -> LESSG_IN_GA(X1, X2)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X2, X6)) -> U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_gg(X1, X2))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> U27_GAAAG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X2, X4, X3, X5, X6))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X4, X3, X5, X6)
   PJ_IN_GAAAG(X1, X2, X3, X4, X5) -> U20_GAAAG(X1, X2, X3, X4, X5, lessF_in_ga(X1, X2))
   PJ_IN_GAAAG(X1, X2, X3, X4, X5) -> LESSF_IN_GA(X1, X2)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X3, X6)) -> U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_ga(X1, X2))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> U22_GAAAG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X3, X2, X4, X5, X6))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> PJ_IN_GAAAG(X3, X2, X4, X5, X6)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X2, X6)) -> U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_gg(X1, X2))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> U24_GAAAG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X2, X3, X4, X5, X6))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X3, X4, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X4, X6)) -> U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_ga(X1, X2))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> U29_GAAAG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X4, X2, X3, X5, X6))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> PK_IN_GAAAG(X4, X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, .(X5, X6))) -> U58_AG(X1, X2, X3, X4, X5, X6, splitcB_in_aaaa(X2, X3, X7, X8))
   U58_AG(X1, X2, X3, X4, X5, X6, splitcB_out_aaaa(X2, X3, X7, X8)) -> U59_AG(X1, X2, X3, X4, X5, X6, X7, mscH_in_aaa(X1, X8, .(X4, .(X5, X9))))
   U59_AG(X1, X2, X3, X4, X5, X6, X7, mscH_out_aaa(X1, X8, .(X4, .(X5, X9)))) -> U60_AG(X1, X2, X3, X4, X5, X6, X9, mscE_in_aa(X7, .(X10, X11)))
   U60_AG(X1, X2, X3, X4, X5, X6, X9, mscE_out_aa(X7, .(X10, X11))) -> U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_in_ga(X4, X10))
   U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_ga(X4, X10)) -> U62_AG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X5, X10, X9, X11, X6))
   U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_ga(X4, X10)) -> PJ_IN_GAAAG(X5, X10, X9, X11, X6)
   U58_AG(X1, X2, X3, X4, X5, X6, splitcB_out_aaaa(X2, X3, X7, X8)) -> U63_AG(X1, X2, X3, X4, X5, X6, X7, mscH_in_aaa(X1, X8, .(X4, .(X9, X10))))
   U63_AG(X1, X2, X3, X4, X5, X6, X7, mscH_out_aaa(X1, X8, .(X4, .(X9, X10)))) -> U64_AG(X1, X2, X3, X4, X5, X6, X9, X10, mscE_in_aa(X7, .(X5, X11)))
   U64_AG(X1, X2, X3, X4, X5, X6, X9, X10, mscE_out_aa(X7, .(X5, X11))) -> U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_in_gg(X4, X5))
   U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_gg(X4, X5)) -> U66_AG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X5, X9, X10, X11, X6))
   U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_gg(X4, X5)) -> PK_IN_GAAAG(X5, X9, X10, X11, X6)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitB_in_aaaa(x1, x2, x3, x4)  =  splitB_in_aaaa

splitA_in_aaa(x1, x2, x3)  =  splitA_in_aaa

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

msH_in_aaa(x1, x2, x3)  =  msH_in_aaa

pC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  pC_in_aaaaaaaa

msE_in_aa(x1, x2)  =  msE_in_aa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mergeD_in_aaa(x1, x2, x3)  =  mergeD_in_aaa

lessF_in_aa(x1, x2)  =  lessF_in_aa

lessG_in_aa(x1, x2)  =  lessG_in_aa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

lessF_in_ga(x1, x2)  =  lessF_in_ga(x1)

s(x1)  =  s(x1)

lessG_in_ga(x1, x2)  =  lessG_in_ga(x1)

pK_in_gaaag(x1, x2, x3, x4, x5)  =  pK_in_gaaag(x1, x5)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

pJ_in_gaaag(x1, x2, x3, x4, x5)  =  pJ_in_gaaag(x1, x5)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

MSL_IN_AG(x1, x2)  =  MSL_IN_AG(x2)

U30_AG(x1, x2, x3, x4)  =  U30_AG(x4)

SPLITB_IN_AAAA(x1, x2, x3, x4)  =  SPLITB_IN_AAAA

U2_AAAA(x1, x2, x3, x4, x5)  =  U2_AAAA(x5)

SPLITA_IN_AAA(x1, x2, x3)  =  SPLITA_IN_AAA

U1_AAA(x1, x2, x3, x4, x5)  =  U1_AAA(x5)

U31_AG(x1, x2, x3, x4)  =  U31_AG(x4)

U32_AG(x1, x2, x3, x4)  =  U32_AG(x4)

MSH_IN_AAA(x1, x2, x3)  =  MSH_IN_AAA

U18_AAA(x1, x2, x3, x4, x5)  =  U18_AAA(x5)

PC_IN_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  PC_IN_AAAAAAAA

U3_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U3_AAAAAAAA(x9)

U4_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U4_AAAAAAAA(x9)

U5_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U5_AAAAAAAA(x9)

MSE_IN_AA(x1, x2)  =  MSE_IN_AA

U10_AA(x1, x2, x3, x4, x5)  =  U10_AA(x5)

U6_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U6_AAAAAAAA(x9)

U7_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U7_AAAAAAAA(x9)

U8_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAAAAA(x9)

U9_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U9_AAAAAAAA(x9)

MERGED_IN_AAA(x1, x2, x3)  =  MERGED_IN_AAA

U11_AAA(x1, x2, x3, x4, x5, x6)  =  U11_AAA(x6)

LESSF_IN_AA(x1, x2)  =  LESSF_IN_AA

U19_AA(x1, x2, x3)  =  U19_AA(x3)

LESSG_IN_AA(x1, x2)  =  LESSG_IN_AA

U17_AA(x1, x2, x3)  =  U17_AA(x3)

U12_AAA(x1, x2, x3, x4, x5, x6)  =  U12_AAA(x6)

U13_AAA(x1, x2, x3, x4, x5, x6)  =  U13_AAA(x6)

U14_AAA(x1, x2, x3, x4, x5, x6)  =  U14_AAA(x6)

U15_AAA(x1, x2, x3, x4, x5, x6)  =  U15_AAA(x6)

U16_AAA(x1, x2, x3, x4, x5, x6)  =  U16_AAA(x6)

U33_AG(x1, x2, x3, x4, x5)  =  U33_AG(x5)

U34_AG(x1, x2, x3, x4)  =  U34_AG(x4)

U35_AG(x1, x2, x3, x4, x5)  =  U35_AG(x4, x5)

U36_AG(x1, x2, x3, x4, x5)  =  U36_AG(x4, x5)

U37_AG(x1, x2, x3, x4, x5)  =  U37_AG(x4, x5)

U38_AG(x1, x2, x3, x4, x5, x6)  =  U38_AG(x4, x6)

U39_AG(x1, x2, x3, x4, x5)  =  U39_AG(x4, x5)

U40_AG(x1, x2, x3, x4, x5, x6)  =  U40_AG(x4, x6)

U41_AG(x1, x2, x3, x4, x5)  =  U41_AG(x4, x5)

U42_AG(x1, x2, x3, x4, x5)  =  U42_AG(x4, x5)

LESSF_IN_GA(x1, x2)  =  LESSF_IN_GA(x1)

U19_GA(x1, x2, x3)  =  U19_GA(x1, x3)

LESSG_IN_GA(x1, x2)  =  LESSG_IN_GA(x1)

U17_GA(x1, x2, x3)  =  U17_GA(x1, x3)

U43_AG(x1, x2, x3, x4, x5, x6)  =  U43_AG(x4, x6)

U44_AG(x1, x2, x3, x4, x5, x6)  =  U44_AG(x4, x6)

U45_AG(x1, x2, x3, x4, x5)  =  U45_AG(x4, x5)

U46_AG(x1, x2, x3, x4, x5)  =  U46_AG(x4, x5)

U47_AG(x1, x2, x3, x4, x5)  =  U47_AG(x4, x5)

U48_AG(x1, x2, x3, x4, x5)  =  U48_AG(x4, x5)

U49_AG(x1, x2, x3, x4, x5, x6)  =  U49_AG(x4, x6)

U50_AG(x1, x2, x3, x4, x5)  =  U50_AG(x4, x5)

U51_AG(x1, x2, x3, x4, x5, x6)  =  U51_AG(x4, x5, x6)

U52_AG(x1, x2, x3, x4, x5, x6, x7)  =  U52_AG(x4, x5, x7)

U53_AG(x1, x2, x3, x4, x5, x6)  =  U53_AG(x4, x5, x6)

U54_AG(x1, x2, x3, x4, x5, x6)  =  U54_AG(x4, x5, x6)

U55_AG(x1, x2, x3, x4, x5, x6, x7)  =  U55_AG(x4, x5, x7)

U56_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U56_AG(x4, x5, x8)

U57_AG(x1, x2, x3, x4, x5, x6)  =  U57_AG(x4, x5, x6)

PK_IN_GAAAG(x1, x2, x3, x4, x5)  =  PK_IN_GAAAG(x1, x5)

U25_GAAAG(x1, x2, x3, x4, x5, x6)  =  U25_GAAAG(x1, x5, x6)

U26_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U26_GAAAG(x1, x2, x6, x7)

U27_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U27_GAAAG(x1, x2, x6, x7)

PJ_IN_GAAAG(x1, x2, x3, x4, x5)  =  PJ_IN_GAAAG(x1, x5)

U20_GAAAG(x1, x2, x3, x4, x5, x6)  =  U20_GAAAG(x1, x5, x6)

U21_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U21_GAAAG(x1, x3, x6, x7)

U22_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U22_GAAAG(x1, x3, x6, x7)

U23_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U23_GAAAG(x1, x2, x6, x7)

U24_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U24_GAAAG(x1, x2, x6, x7)

U28_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U28_GAAAG(x1, x4, x6, x7)

U29_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U29_GAAAG(x1, x4, x6, x7)

U58_AG(x1, x2, x3, x4, x5, x6, x7)  =  U58_AG(x4, x5, x6, x7)

U59_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U59_AG(x4, x5, x6, x8)

U60_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U60_AG(x4, x5, x6, x8)

U61_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U61_AG(x4, x5, x6, x10)

U62_AG(x1, x2, x3, x4, x5, x6, x7)  =  U62_AG(x4, x5, x6, x7)

U63_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U63_AG(x4, x5, x6, x8)

U64_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U64_AG(x4, x5, x6, x9)

U65_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U65_AG(x4, x5, x6, x10)

U66_AG(x1, x2, x3, x4, x5, x6, x7)  =  U66_AG(x4, x5, x6, x7)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(120)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MSL_IN_AG(.(X1, .(X2, X3)), []) -> U30_AG(X1, X2, X3, splitB_in_aaaa(X2, X3, X4, X5))
   MSL_IN_AG(.(X1, .(X2, X3)), []) -> SPLITB_IN_AAAA(X2, X3, X4, X5)
   SPLITB_IN_AAAA(X1, X2, .(X1, X3), X4) -> U2_AAAA(X1, X2, X3, X4, splitA_in_aaa(X2, X4, X3))
   SPLITB_IN_AAAA(X1, X2, .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)
   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> U1_AAA(X1, X2, X3, X4, splitA_in_aaa(X2, X4, X3))
   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)
   MSL_IN_AG(.(X1, .(X2, X3)), []) -> U31_AG(X1, X2, X3, splitcB_in_aaaa(X2, X3, X4, X5))
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> U32_AG(X1, X2, X3, msH_in_aaa(X1, X5, X6))
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> MSH_IN_AAA(X1, X5, X6)
   MSH_IN_AAA(X1, .(X2, X3), X4) -> U18_AAA(X1, X2, X3, X4, pC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   MSH_IN_AAA(X1, .(X2, X3), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U3_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitB_in_aaaa(X1, .(X2, X3), X4, X5))
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> SPLITB_IN_AAAA(X1, .(X2, X3), X4, X5)
   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U5_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, msE_in_aa(X4, X6))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> MSE_IN_AA(X4, X6)
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> U10_AA(X1, X2, X3, X4, pC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U7_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, msE_in_aa(X5, X7))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> MSE_IN_AA(X5, X7)
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U9_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mergeD_in_aaa(X6, X7, X8))
   U8_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> MERGED_IN_AAA(X6, X7, X8)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U11_AAA(X1, X2, X3, X4, X5, lessF_in_aa(X1, X3))
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> LESSF_IN_AA(X1, X3)
   LESSF_IN_AA(s(X1), X2) -> U19_AA(X1, X2, lessG_in_aa(X1, X2))
   LESSF_IN_AA(s(X1), X2) -> LESSG_IN_AA(X1, X2)
   LESSG_IN_AA(s(X1), s(X2)) -> U17_AA(X1, X2, lessG_in_aa(X1, X2))
   LESSG_IN_AA(s(X1), s(X2)) -> LESSG_IN_AA(X1, X2)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U12_AAA(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U13_AAA(X1, X2, X3, X4, X5, mergeD_in_aaa(X2, .(X3, X4), X5))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> MERGED_IN_AAA(X2, .(X3, X4), X5)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U14_AAA(X1, X2, X3, X4, X5, lessG_in_aa(X3, X1))
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> LESSG_IN_AA(X3, X1)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U15_AAA(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U16_AAA(X1, X2, X3, X4, X5, mergeD_in_aaa(.(X1, X2), X4, X5))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> MERGED_IN_AAA(.(X1, X2), X4, X5)
   U31_AG(X1, X2, X3, splitcB_out_aaaa(X2, X3, X4, X5)) -> U33_AG(X1, X2, X3, X4, mscH_in_aaa(X1, X5, X6))
   U33_AG(X1, X2, X3, X4, mscH_out_aaa(X1, X5, X6)) -> U34_AG(X1, X2, X3, msE_in_aa(X4, X7))
   U33_AG(X1, X2, X3, X4, mscH_out_aaa(X1, X5, X6)) -> MSE_IN_AA(X4, X7)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> U35_AG(X1, X2, X3, X4, splitB_in_aaaa(X2, X3, X5, X6))
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> SPLITB_IN_AAAA(X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, [])) -> U36_AG(X1, X2, X3, X4, splitcB_in_aaaa(X2, X3, X5, X6))
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U37_AG(X1, X2, X3, X4, msH_in_aaa(X1, X6, X7))
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> MSH_IN_AAA(X1, X6, X7)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U38_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, X7))
   U38_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> U39_AG(X1, X2, X3, X4, msE_in_aa(X5, X8))
   U38_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> MSE_IN_AA(X5, X8)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U40_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, .(X4, X7)))
   U40_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, .(X4, X7))) -> U41_AG(X1, X2, X3, X4, mscE_in_aa(X5, .(X8, X9)))
   U41_AG(X1, X2, X3, X4, mscE_out_aa(X5, .(X8, X9))) -> U42_AG(X1, X2, X3, X4, lessF_in_ga(X4, X8))
   U41_AG(X1, X2, X3, X4, mscE_out_aa(X5, .(X8, X9))) -> LESSF_IN_GA(X4, X8)
   LESSF_IN_GA(s(X1), X2) -> U19_GA(X1, X2, lessG_in_ga(X1, X2))
   LESSF_IN_GA(s(X1), X2) -> LESSG_IN_GA(X1, X2)
   LESSG_IN_GA(s(X1), s(X2)) -> U17_GA(X1, X2, lessG_in_ga(X1, X2))
   LESSG_IN_GA(s(X1), s(X2)) -> LESSG_IN_GA(X1, X2)
   U36_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U43_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, .(X7, X8)))
   U43_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, .(X7, X8))) -> U44_AG(X1, X2, X3, X4, X7, mscE_in_aa(X5, .(X4, X9)))
   U44_AG(X1, X2, X3, X4, X7, mscE_out_aa(X5, .(X4, X9))) -> U45_AG(X1, X2, X3, X4, lessG_in_ga(X4, X7))
   U44_AG(X1, X2, X3, X4, X7, mscE_out_aa(X5, .(X4, X9))) -> LESSG_IN_GA(X4, X7)
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> U46_AG(X1, X2, X3, X4, splitB_in_aaaa(X2, X3, X5, X6))
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> SPLITB_IN_AAAA(X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), X4) -> U47_AG(X1, X2, X3, X4, splitcB_in_aaaa(X2, X3, X5, X6))
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U48_AG(X1, X2, X3, X4, msH_in_aaa(X1, X6, X7))
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> MSH_IN_AAA(X1, X6, X7)
   U47_AG(X1, X2, X3, X4, splitcB_out_aaaa(X2, X3, X5, X6)) -> U49_AG(X1, X2, X3, X4, X5, mscH_in_aaa(X1, X6, X7))
   U49_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> U50_AG(X1, X2, X3, X4, msE_in_aa(X5, X8))
   U49_AG(X1, X2, X3, X4, X5, mscH_out_aaa(X1, X6, X7)) -> MSE_IN_AA(X5, X8)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, X5)) -> U51_AG(X1, X2, X3, X4, X5, splitcB_in_aaaa(X2, X3, X6, X7))
   U51_AG(X1, X2, X3, X4, X5, splitcB_out_aaaa(X2, X3, X6, X7)) -> U52_AG(X1, X2, X3, X4, X5, X6, mscH_in_aaa(X1, X7, .(X4, X8)))
   U52_AG(X1, X2, X3, X4, X5, X6, mscH_out_aaa(X1, X7, .(X4, X8))) -> U53_AG(X1, X2, X3, X4, X5, mscE_in_aa(X6, .(X9, X10)))
   U53_AG(X1, X2, X3, X4, X5, mscE_out_aa(X6, .(X9, X10))) -> U54_AG(X1, X2, X3, X4, X5, lessF_in_ga(X4, X9))
   U53_AG(X1, X2, X3, X4, X5, mscE_out_aa(X6, .(X9, X10))) -> LESSF_IN_GA(X4, X9)
   U51_AG(X1, X2, X3, X4, X5, splitcB_out_aaaa(X2, X3, X6, X7)) -> U55_AG(X1, X2, X3, X4, X5, X6, mscH_in_aaa(X1, X7, .(X8, X9)))
   U55_AG(X1, X2, X3, X4, X5, X6, mscH_out_aaa(X1, X7, .(X8, X9))) -> U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_in_aa(X6, .(X4, X10)))
   U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_out_aa(X6, .(X4, X10))) -> U57_AG(X1, X2, X3, X4, X5, pK_in_gaaag(X4, X8, X9, X10, X5))
   U56_AG(X1, X2, X3, X4, X5, X8, X9, mscE_out_aa(X6, .(X4, X10))) -> PK_IN_GAAAG(X4, X8, X9, X10, X5)
   PK_IN_GAAAG(X1, X2, X3, X4, X5) -> U25_GAAAG(X1, X2, X3, X4, X5, lessG_in_ga(X1, X2))
   PK_IN_GAAAG(X1, X2, X3, X4, X5) -> LESSG_IN_GA(X1, X2)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X2, X6)) -> U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_gg(X1, X2))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> U27_GAAAG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X2, X4, X3, X5, X6))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X4, X3, X5, X6)
   PJ_IN_GAAAG(X1, X2, X3, X4, X5) -> U20_GAAAG(X1, X2, X3, X4, X5, lessF_in_ga(X1, X2))
   PJ_IN_GAAAG(X1, X2, X3, X4, X5) -> LESSF_IN_GA(X1, X2)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X3, X6)) -> U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_ga(X1, X2))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> U22_GAAAG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X3, X2, X4, X5, X6))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> PJ_IN_GAAAG(X3, X2, X4, X5, X6)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X2, X6)) -> U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_gg(X1, X2))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> U24_GAAAG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X2, X3, X4, X5, X6))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X3, X4, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X4, X6)) -> U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_ga(X1, X2))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> U29_GAAAG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X4, X2, X3, X5, X6))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> PK_IN_GAAAG(X4, X2, X3, X5, X6)
   MSL_IN_AG(.(X1, .(X2, X3)), .(X4, .(X5, X6))) -> U58_AG(X1, X2, X3, X4, X5, X6, splitcB_in_aaaa(X2, X3, X7, X8))
   U58_AG(X1, X2, X3, X4, X5, X6, splitcB_out_aaaa(X2, X3, X7, X8)) -> U59_AG(X1, X2, X3, X4, X5, X6, X7, mscH_in_aaa(X1, X8, .(X4, .(X5, X9))))
   U59_AG(X1, X2, X3, X4, X5, X6, X7, mscH_out_aaa(X1, X8, .(X4, .(X5, X9)))) -> U60_AG(X1, X2, X3, X4, X5, X6, X9, mscE_in_aa(X7, .(X10, X11)))
   U60_AG(X1, X2, X3, X4, X5, X6, X9, mscE_out_aa(X7, .(X10, X11))) -> U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_in_ga(X4, X10))
   U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_ga(X4, X10)) -> U62_AG(X1, X2, X3, X4, X5, X6, pJ_in_gaaag(X5, X10, X9, X11, X6))
   U61_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_ga(X4, X10)) -> PJ_IN_GAAAG(X5, X10, X9, X11, X6)
   U58_AG(X1, X2, X3, X4, X5, X6, splitcB_out_aaaa(X2, X3, X7, X8)) -> U63_AG(X1, X2, X3, X4, X5, X6, X7, mscH_in_aaa(X1, X8, .(X4, .(X9, X10))))
   U63_AG(X1, X2, X3, X4, X5, X6, X7, mscH_out_aaa(X1, X8, .(X4, .(X9, X10)))) -> U64_AG(X1, X2, X3, X4, X5, X6, X9, X10, mscE_in_aa(X7, .(X5, X11)))
   U64_AG(X1, X2, X3, X4, X5, X6, X9, X10, mscE_out_aa(X7, .(X5, X11))) -> U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_in_gg(X4, X5))
   U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_gg(X4, X5)) -> U66_AG(X1, X2, X3, X4, X5, X6, pK_in_gaaag(X5, X9, X10, X11, X6))
   U65_AG(X1, X2, X3, X4, X5, X6, X9, X10, X11, lesscF_out_gg(X4, X5)) -> PK_IN_GAAAG(X5, X9, X10, X11, X6)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitB_in_aaaa(x1, x2, x3, x4)  =  splitB_in_aaaa

splitA_in_aaa(x1, x2, x3)  =  splitA_in_aaa

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

msH_in_aaa(x1, x2, x3)  =  msH_in_aaa

pC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  pC_in_aaaaaaaa

msE_in_aa(x1, x2)  =  msE_in_aa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mergeD_in_aaa(x1, x2, x3)  =  mergeD_in_aaa

lessF_in_aa(x1, x2)  =  lessF_in_aa

lessG_in_aa(x1, x2)  =  lessG_in_aa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

lessF_in_ga(x1, x2)  =  lessF_in_ga(x1)

s(x1)  =  s(x1)

lessG_in_ga(x1, x2)  =  lessG_in_ga(x1)

pK_in_gaaag(x1, x2, x3, x4, x5)  =  pK_in_gaaag(x1, x5)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

pJ_in_gaaag(x1, x2, x3, x4, x5)  =  pJ_in_gaaag(x1, x5)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

MSL_IN_AG(x1, x2)  =  MSL_IN_AG(x2)

U30_AG(x1, x2, x3, x4)  =  U30_AG(x4)

SPLITB_IN_AAAA(x1, x2, x3, x4)  =  SPLITB_IN_AAAA

U2_AAAA(x1, x2, x3, x4, x5)  =  U2_AAAA(x5)

SPLITA_IN_AAA(x1, x2, x3)  =  SPLITA_IN_AAA

U1_AAA(x1, x2, x3, x4, x5)  =  U1_AAA(x5)

U31_AG(x1, x2, x3, x4)  =  U31_AG(x4)

U32_AG(x1, x2, x3, x4)  =  U32_AG(x4)

MSH_IN_AAA(x1, x2, x3)  =  MSH_IN_AAA

U18_AAA(x1, x2, x3, x4, x5)  =  U18_AAA(x5)

PC_IN_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  PC_IN_AAAAAAAA

U3_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U3_AAAAAAAA(x9)

U4_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U4_AAAAAAAA(x9)

U5_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U5_AAAAAAAA(x9)

MSE_IN_AA(x1, x2)  =  MSE_IN_AA

U10_AA(x1, x2, x3, x4, x5)  =  U10_AA(x5)

U6_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U6_AAAAAAAA(x9)

U7_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U7_AAAAAAAA(x9)

U8_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U8_AAAAAAAA(x9)

U9_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U9_AAAAAAAA(x9)

MERGED_IN_AAA(x1, x2, x3)  =  MERGED_IN_AAA

U11_AAA(x1, x2, x3, x4, x5, x6)  =  U11_AAA(x6)

LESSF_IN_AA(x1, x2)  =  LESSF_IN_AA

U19_AA(x1, x2, x3)  =  U19_AA(x3)

LESSG_IN_AA(x1, x2)  =  LESSG_IN_AA

U17_AA(x1, x2, x3)  =  U17_AA(x3)

U12_AAA(x1, x2, x3, x4, x5, x6)  =  U12_AAA(x6)

U13_AAA(x1, x2, x3, x4, x5, x6)  =  U13_AAA(x6)

U14_AAA(x1, x2, x3, x4, x5, x6)  =  U14_AAA(x6)

U15_AAA(x1, x2, x3, x4, x5, x6)  =  U15_AAA(x6)

U16_AAA(x1, x2, x3, x4, x5, x6)  =  U16_AAA(x6)

U33_AG(x1, x2, x3, x4, x5)  =  U33_AG(x5)

U34_AG(x1, x2, x3, x4)  =  U34_AG(x4)

U35_AG(x1, x2, x3, x4, x5)  =  U35_AG(x4, x5)

U36_AG(x1, x2, x3, x4, x5)  =  U36_AG(x4, x5)

U37_AG(x1, x2, x3, x4, x5)  =  U37_AG(x4, x5)

U38_AG(x1, x2, x3, x4, x5, x6)  =  U38_AG(x4, x6)

U39_AG(x1, x2, x3, x4, x5)  =  U39_AG(x4, x5)

U40_AG(x1, x2, x3, x4, x5, x6)  =  U40_AG(x4, x6)

U41_AG(x1, x2, x3, x4, x5)  =  U41_AG(x4, x5)

U42_AG(x1, x2, x3, x4, x5)  =  U42_AG(x4, x5)

LESSF_IN_GA(x1, x2)  =  LESSF_IN_GA(x1)

U19_GA(x1, x2, x3)  =  U19_GA(x1, x3)

LESSG_IN_GA(x1, x2)  =  LESSG_IN_GA(x1)

U17_GA(x1, x2, x3)  =  U17_GA(x1, x3)

U43_AG(x1, x2, x3, x4, x5, x6)  =  U43_AG(x4, x6)

U44_AG(x1, x2, x3, x4, x5, x6)  =  U44_AG(x4, x6)

U45_AG(x1, x2, x3, x4, x5)  =  U45_AG(x4, x5)

U46_AG(x1, x2, x3, x4, x5)  =  U46_AG(x4, x5)

U47_AG(x1, x2, x3, x4, x5)  =  U47_AG(x4, x5)

U48_AG(x1, x2, x3, x4, x5)  =  U48_AG(x4, x5)

U49_AG(x1, x2, x3, x4, x5, x6)  =  U49_AG(x4, x6)

U50_AG(x1, x2, x3, x4, x5)  =  U50_AG(x4, x5)

U51_AG(x1, x2, x3, x4, x5, x6)  =  U51_AG(x4, x5, x6)

U52_AG(x1, x2, x3, x4, x5, x6, x7)  =  U52_AG(x4, x5, x7)

U53_AG(x1, x2, x3, x4, x5, x6)  =  U53_AG(x4, x5, x6)

U54_AG(x1, x2, x3, x4, x5, x6)  =  U54_AG(x4, x5, x6)

U55_AG(x1, x2, x3, x4, x5, x6, x7)  =  U55_AG(x4, x5, x7)

U56_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U56_AG(x4, x5, x8)

U57_AG(x1, x2, x3, x4, x5, x6)  =  U57_AG(x4, x5, x6)

PK_IN_GAAAG(x1, x2, x3, x4, x5)  =  PK_IN_GAAAG(x1, x5)

U25_GAAAG(x1, x2, x3, x4, x5, x6)  =  U25_GAAAG(x1, x5, x6)

U26_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U26_GAAAG(x1, x2, x6, x7)

U27_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U27_GAAAG(x1, x2, x6, x7)

PJ_IN_GAAAG(x1, x2, x3, x4, x5)  =  PJ_IN_GAAAG(x1, x5)

U20_GAAAG(x1, x2, x3, x4, x5, x6)  =  U20_GAAAG(x1, x5, x6)

U21_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U21_GAAAG(x1, x3, x6, x7)

U22_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U22_GAAAG(x1, x3, x6, x7)

U23_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U23_GAAAG(x1, x2, x6, x7)

U24_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U24_GAAAG(x1, x2, x6, x7)

U28_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U28_GAAAG(x1, x4, x6, x7)

U29_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U29_GAAAG(x1, x4, x6, x7)

U58_AG(x1, x2, x3, x4, x5, x6, x7)  =  U58_AG(x4, x5, x6, x7)

U59_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U59_AG(x4, x5, x6, x8)

U60_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U60_AG(x4, x5, x6, x8)

U61_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U61_AG(x4, x5, x6, x10)

U62_AG(x1, x2, x3, x4, x5, x6, x7)  =  U62_AG(x4, x5, x6, x7)

U63_AG(x1, x2, x3, x4, x5, x6, x7, x8)  =  U63_AG(x4, x5, x6, x8)

U64_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U64_AG(x4, x5, x6, x9)

U65_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  U65_AG(x4, x5, x6, x10)

U66_AG(x1, x2, x3, x4, x5, x6, x7)  =  U66_AG(x4, x5, x6, x7)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(121) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 6 SCCs with 85 less nodes.
----------------------------------------

(122)
Complex Obligation (AND)

----------------------------------------

(123)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSG_IN_GA(s(X1), s(X2)) -> LESSG_IN_GA(X1, X2)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

LESSG_IN_GA(x1, x2)  =  LESSG_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(124) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(125)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSG_IN_GA(s(X1), s(X2)) -> LESSG_IN_GA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESSG_IN_GA(x1, x2)  =  LESSG_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(126) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(127)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESSG_IN_GA(s(X1)) -> LESSG_IN_GA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(128) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LESSG_IN_GA(s(X1)) -> LESSG_IN_GA(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(129)
YES

----------------------------------------

(130)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X3, X6)) -> U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_ga(X1, X2))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> PJ_IN_GAAAG(X3, X2, X4, X5, X6)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X2, X6)) -> U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_gg(X1, X2))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X3, X4, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X2, X6)) -> U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_gg(X1, X2))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X4, X3, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X4, X6)) -> U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_ga(X1, X2))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> PK_IN_GAAAG(X4, X2, X3, X5, X6)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

PK_IN_GAAAG(x1, x2, x3, x4, x5)  =  PK_IN_GAAAG(x1, x5)

U26_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U26_GAAAG(x1, x2, x6, x7)

PJ_IN_GAAAG(x1, x2, x3, x4, x5)  =  PJ_IN_GAAAG(x1, x5)

U21_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U21_GAAAG(x1, x3, x6, x7)

U23_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U23_GAAAG(x1, x2, x6, x7)

U28_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U28_GAAAG(x1, x4, x6, x7)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(131) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(132)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X3, X6)) -> U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_ga(X1, X2))
   U21_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_ga(X1, X2)) -> PJ_IN_GAAAG(X3, X2, X4, X5, X6)
   PJ_IN_GAAAG(X1, X2, .(X3, X4), X5, .(X2, X6)) -> U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_in_gg(X1, X2))
   U23_GAAAG(X1, X2, X3, X4, X5, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X3, X4, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X2, X6)) -> U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_gg(X1, X2))
   U26_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X4, X3, X5, X6)
   PK_IN_GAAAG(X1, X2, X3, .(X4, X5), .(X4, X6)) -> U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_in_ga(X1, X2))
   U28_GAAAG(X1, X2, X3, X4, X5, X6, lesscG_out_ga(X1, X2)) -> PK_IN_GAAAG(X4, X2, X3, X5, X6)

The TRS R consists of the following rules:

   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

PK_IN_GAAAG(x1, x2, x3, x4, x5)  =  PK_IN_GAAAG(x1, x5)

U26_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U26_GAAAG(x1, x2, x6, x7)

PJ_IN_GAAAG(x1, x2, x3, x4, x5)  =  PJ_IN_GAAAG(x1, x5)

U21_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U21_GAAAG(x1, x3, x6, x7)

U23_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U23_GAAAG(x1, x2, x6, x7)

U28_GAAAG(x1, x2, x3, x4, x5, x6, x7)  =  U28_GAAAG(x1, x4, x6, x7)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(133) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(134)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PJ_IN_GAAAG(X1, .(X3, X6)) -> U21_GAAAG(X1, X3, X6, lesscF_in_ga(X1))
   U21_GAAAG(X1, X3, X6, lesscF_out_ga(X1)) -> PJ_IN_GAAAG(X3, X6)
   PJ_IN_GAAAG(X1, .(X2, X6)) -> U23_GAAAG(X1, X2, X6, lesscF_in_gg(X1, X2))
   U23_GAAAG(X1, X2, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X6)
   PK_IN_GAAAG(X1, .(X2, X6)) -> U26_GAAAG(X1, X2, X6, lesscG_in_gg(X1, X2))
   U26_GAAAG(X1, X2, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X6)
   PK_IN_GAAAG(X1, .(X4, X6)) -> U28_GAAAG(X1, X4, X6, lesscG_in_ga(X1))
   U28_GAAAG(X1, X4, X6, lesscG_out_ga(X1)) -> PK_IN_GAAAG(X4, X6)

The TRS R consists of the following rules:

   lesscF_in_ga(0) -> lesscF_out_ga(0)
   lesscF_in_ga(s(X1)) -> U81_ga(X1, lesscG_in_ga(X1))
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   lesscG_in_ga(0) -> lesscG_out_ga(0)
   lesscG_in_ga(s(X1)) -> U79_ga(X1, lesscG_in_ga(X1))
   U81_ga(X1, lesscG_out_ga(X1)) -> lesscF_out_ga(s(X1))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   U79_ga(X1, lesscG_out_ga(X1)) -> lesscG_out_ga(s(X1))

The set Q consists of the following terms:

   lesscF_in_ga(x0)
   lesscF_in_gg(x0, x1)
   lesscG_in_gg(x0, x1)
   lesscG_in_ga(x0)
   U81_ga(x0, x1)
   U81_gg(x0, x1, x2)
   U79_gg(x0, x1, x2)
   U79_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(135) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U21_GAAAG(X1, X3, X6, lesscF_out_ga(X1)) -> PJ_IN_GAAAG(X3, X6)
The graph contains the following edges 2 >= 1, 3 >= 2


*U26_GAAAG(X1, X2, X6, lesscG_out_gg(X1, X2)) -> PJ_IN_GAAAG(X2, X6)
The graph contains the following edges 2 >= 1, 4 > 1, 3 >= 2


*PJ_IN_GAAAG(X1, .(X3, X6)) -> U21_GAAAG(X1, X3, X6, lesscF_in_ga(X1))
The graph contains the following edges 1 >= 1, 2 > 2, 2 > 3


*PJ_IN_GAAAG(X1, .(X2, X6)) -> U23_GAAAG(X1, X2, X6, lesscF_in_gg(X1, X2))
The graph contains the following edges 1 >= 1, 2 > 2, 2 > 3


*U23_GAAAG(X1, X2, X6, lesscF_out_gg(X1, X2)) -> PK_IN_GAAAG(X2, X6)
The graph contains the following edges 2 >= 1, 4 > 1, 3 >= 2


*U28_GAAAG(X1, X4, X6, lesscG_out_ga(X1)) -> PK_IN_GAAAG(X4, X6)
The graph contains the following edges 2 >= 1, 3 >= 2


*PK_IN_GAAAG(X1, .(X2, X6)) -> U26_GAAAG(X1, X2, X6, lesscG_in_gg(X1, X2))
The graph contains the following edges 1 >= 1, 2 > 2, 2 > 3


*PK_IN_GAAAG(X1, .(X4, X6)) -> U28_GAAAG(X1, X4, X6, lesscG_in_ga(X1))
The graph contains the following edges 1 >= 1, 2 > 2, 2 > 3


----------------------------------------

(136)
YES

----------------------------------------

(137)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSG_IN_AA(s(X1), s(X2)) -> LESSG_IN_AA(X1, X2)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

LESSG_IN_AA(x1, x2)  =  LESSG_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(138) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(139)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSG_IN_AA(s(X1), s(X2)) -> LESSG_IN_AA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

LESSG_IN_AA(x1, x2)  =  LESSG_IN_AA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(140) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(141)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LESSG_IN_AA -> LESSG_IN_AA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(142) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = LESSG_IN_AA evaluates to  t =LESSG_IN_AA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from LESSG_IN_AA to LESSG_IN_AA.




----------------------------------------

(143)
NO

----------------------------------------

(144)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U12_AAA(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> MERGED_IN_AAA(X2, .(X3, X4), X5)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U15_AAA(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> MERGED_IN_AAA(.(X1, X2), X4, X5)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

MERGED_IN_AAA(x1, x2, x3)  =  MERGED_IN_AAA

U12_AAA(x1, x2, x3, x4, x5, x6)  =  U12_AAA(x6)

U15_AAA(x1, x2, x3, x4, x5, x6)  =  U15_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(145) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(146)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X1, X5)) -> U12_AAA(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   U12_AAA(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> MERGED_IN_AAA(X2, .(X3, X4), X5)
   MERGED_IN_AAA(.(X1, X2), .(X3, X4), .(X3, X5)) -> U15_AAA(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U15_AAA(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> MERGED_IN_AAA(.(X1, X2), X4, X5)

The TRS R consists of the following rules:

   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))

The argument filtering Pi contains the following mapping:
lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

0  =  0

MERGED_IN_AAA(x1, x2, x3)  =  MERGED_IN_AAA

U12_AAA(x1, x2, x3, x4, x5, x6)  =  U12_AAA(x6)

U15_AAA(x1, x2, x3, x4, x5, x6)  =  U15_AAA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(147) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(148)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MERGED_IN_AAA -> U12_AAA(lesscF_in_aa)
   U12_AAA(lesscF_out_aa(X1)) -> MERGED_IN_AAA
   MERGED_IN_AAA -> U15_AAA(lesscG_in_aa)
   U15_AAA(lesscG_out_aa(X3)) -> MERGED_IN_AAA

The TRS R consists of the following rules:

   lesscF_in_aa -> lesscF_out_aa(0)
   lesscF_in_aa -> U81_aa(lesscG_in_aa)
   lesscG_in_aa -> lesscG_out_aa(0)
   lesscG_in_aa -> U79_aa(lesscG_in_aa)
   U81_aa(lesscG_out_aa(X1)) -> lesscF_out_aa(s(X1))
   U79_aa(lesscG_out_aa(X1)) -> lesscG_out_aa(s(X1))

The set Q consists of the following terms:

   lesscF_in_aa
   lesscG_in_aa
   U81_aa(x0)
   U79_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(149)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

SPLITA_IN_AAA(x1, x2, x3)  =  SPLITA_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(150) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(151)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SPLITA_IN_AAA(.(X1, X2), .(X1, X3), X4) -> SPLITA_IN_AAA(X2, X4, X3)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

SPLITA_IN_AAA(x1, x2, x3)  =  SPLITA_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(152)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> MSE_IN_AA(X4, X6)
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> MSE_IN_AA(X5, X7)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   mscH_in_aaa(X1, [], .(X1, [])) -> mscH_out_aaa(X1, [], .(X1, []))
   mscH_in_aaa(X1, .(X2, X3), X4) -> U80_aaa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U80_aaa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscH_out_aaa(X1, .(X2, X3), X4)
   lesscG_in_gg(0, s(X1)) -> lesscG_out_gg(0, s(X1))
   lesscG_in_gg(s(X1), s(X2)) -> U79_gg(X1, X2, lesscG_in_gg(X1, X2))
   U79_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscG_out_gg(s(X1), s(X2))
   lesscF_in_ga(0, X1) -> lesscF_out_ga(0, X1)
   lesscF_in_ga(s(X1), X2) -> U81_ga(X1, X2, lesscG_in_ga(X1, X2))
   lesscG_in_ga(0, s(X1)) -> lesscG_out_ga(0, s(X1))
   lesscG_in_ga(s(X1), s(X2)) -> U79_ga(X1, X2, lesscG_in_ga(X1, X2))
   U79_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscG_out_ga(s(X1), s(X2))
   U81_ga(X1, X2, lesscG_out_ga(X1, X2)) -> lesscF_out_ga(s(X1), X2)
   lesscF_in_gg(0, X1) -> lesscF_out_gg(0, X1)
   lesscF_in_gg(s(X1), X2) -> U81_gg(X1, X2, lesscG_in_gg(X1, X2))
   U81_gg(X1, X2, lesscG_out_gg(X1, X2)) -> lesscF_out_gg(s(X1), X2)

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

mscH_in_aaa(x1, x2, x3)  =  mscH_in_aaa

mscH_out_aaa(x1, x2, x3)  =  mscH_out_aaa

U80_aaa(x1, x2, x3, x4, x5)  =  U80_aaa(x5)

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

lesscG_in_gg(x1, x2)  =  lesscG_in_gg(x1, x2)

0  =  0

lesscG_out_gg(x1, x2)  =  lesscG_out_gg(x1, x2)

U79_gg(x1, x2, x3)  =  U79_gg(x1, x2, x3)

lesscF_in_ga(x1, x2)  =  lesscF_in_ga(x1)

lesscF_out_ga(x1, x2)  =  lesscF_out_ga(x1)

U81_ga(x1, x2, x3)  =  U81_ga(x1, x3)

lesscG_in_ga(x1, x2)  =  lesscG_in_ga(x1)

lesscG_out_ga(x1, x2)  =  lesscG_out_ga(x1)

U79_ga(x1, x2, x3)  =  U79_ga(x1, x3)

lesscF_in_gg(x1, x2)  =  lesscF_in_gg(x1, x2)

lesscF_out_gg(x1, x2)  =  lesscF_out_gg(x1, x2)

U81_gg(x1, x2, x3)  =  U81_gg(x1, x2, x3)

PC_IN_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  PC_IN_AAAAAAAA

U4_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U4_AAAAAAAA(x9)

MSE_IN_AA(x1, x2)  =  MSE_IN_AA

U6_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U6_AAAAAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(153) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(154)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8) -> U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> MSE_IN_AA(X4, X6)
   MSE_IN_AA(.(X1, .(X2, X3)), X4) -> PC_IN_AAAAAAAA(X1, X2, X3, X5, X6, X7, X8, X4)
   U4_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U6_AAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> MSE_IN_AA(X5, X7)

The TRS R consists of the following rules:

   splitcB_in_aaaa(X1, X2, .(X1, X3), X4) -> U69_aaaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   mscE_in_aa([], []) -> mscE_out_aa([], [])
   mscE_in_aa(.(X1, []), .(X1, [])) -> mscE_out_aa(.(X1, []), .(X1, []))
   mscE_in_aa(.(X1, .(X2, X3)), X4) -> U74_aa(X1, X2, X3, X4, qcC_in_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4))
   U69_aaaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcB_out_aaaa(X1, X2, .(X1, X3), X4)
   U74_aa(X1, X2, X3, X4, qcC_out_aaaaaaaa(X1, X2, X3, X5, X6, X7, X8, X4)) -> mscE_out_aa(.(X1, .(X2, X3)), X4)
   splitcA_in_aaa([], [], []) -> splitcA_out_aaa([], [], [])
   splitcA_in_aaa(.(X1, X2), .(X1, X3), X4) -> U68_aaa(X1, X2, X3, X4, splitcA_in_aaa(X2, X4, X3))
   qcC_in_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8) -> U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_in_aaaa(X1, .(X2, X3), X4, X5))
   U68_aaa(X1, X2, X3, X4, splitcA_out_aaa(X2, X4, X3)) -> splitcA_out_aaa(.(X1, X2), .(X1, X3), X4)
   U70_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, splitcB_out_aaaa(X1, .(X2, X3), X4, X5)) -> U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X4, X6))
   U71_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X4, X6)) -> U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_in_aa(X5, X7))
   U72_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mscE_out_aa(X5, X7)) -> U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_in_aaa(X6, X7, X8))
   U73_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, mergecD_out_aaa(X6, X7, X8)) -> qcC_out_aaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8)
   mergecD_in_aaa([], X1, X1) -> mergecD_out_aaa([], X1, X1)
   mergecD_in_aaa(X1, [], X1) -> mergecD_out_aaa(X1, [], X1)
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X1, X5)) -> U75_aaa(X1, X2, X3, X4, X5, lesscF_in_aa(X1, X3))
   mergecD_in_aaa(.(X1, X2), .(X3, X4), .(X3, X5)) -> U77_aaa(X1, X2, X3, X4, X5, lesscG_in_aa(X3, X1))
   U75_aaa(X1, X2, X3, X4, X5, lesscF_out_aa(X1, X3)) -> U76_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(X2, .(X3, X4), X5))
   U77_aaa(X1, X2, X3, X4, X5, lesscG_out_aa(X3, X1)) -> U78_aaa(X1, X2, X3, X4, X5, mergecD_in_aaa(.(X1, X2), X4, X5))
   lesscF_in_aa(0, X1) -> lesscF_out_aa(0, X1)
   lesscF_in_aa(s(X1), X2) -> U81_aa(X1, X2, lesscG_in_aa(X1, X2))
   U76_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(X2, .(X3, X4), X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X1, X5))
   lesscG_in_aa(0, s(X1)) -> lesscG_out_aa(0, s(X1))
   lesscG_in_aa(s(X1), s(X2)) -> U79_aa(X1, X2, lesscG_in_aa(X1, X2))
   U78_aaa(X1, X2, X3, X4, X5, mergecD_out_aaa(.(X1, X2), X4, X5)) -> mergecD_out_aaa(.(X1, X2), .(X3, X4), .(X3, X5))
   U81_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscF_out_aa(s(X1), X2)
   U79_aa(X1, X2, lesscG_out_aa(X1, X2)) -> lesscG_out_aa(s(X1), s(X2))

The argument filtering Pi contains the following mapping:
[]  =  []

splitcB_in_aaaa(x1, x2, x3, x4)  =  splitcB_in_aaaa

U69_aaaa(x1, x2, x3, x4, x5)  =  U69_aaaa(x5)

splitcA_in_aaa(x1, x2, x3)  =  splitcA_in_aaa

splitcA_out_aaa(x1, x2, x3)  =  splitcA_out_aaa

U68_aaa(x1, x2, x3, x4, x5)  =  U68_aaa(x5)

splitcB_out_aaaa(x1, x2, x3, x4)  =  splitcB_out_aaaa

mscE_in_aa(x1, x2)  =  mscE_in_aa

mscE_out_aa(x1, x2)  =  mscE_out_aa

U74_aa(x1, x2, x3, x4, x5)  =  U74_aa(x5)

qcC_in_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_in_aaaaaaaa

U70_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U70_aaaaaaaa(x9)

U71_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U71_aaaaaaaa(x9)

U72_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U72_aaaaaaaa(x9)

U73_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U73_aaaaaaaa(x9)

mergecD_in_aaa(x1, x2, x3)  =  mergecD_in_aaa

mergecD_out_aaa(x1, x2, x3)  =  mergecD_out_aaa

U75_aaa(x1, x2, x3, x4, x5, x6)  =  U75_aaa(x6)

lesscF_in_aa(x1, x2)  =  lesscF_in_aa

lesscF_out_aa(x1, x2)  =  lesscF_out_aa(x1)

U81_aa(x1, x2, x3)  =  U81_aa(x3)

lesscG_in_aa(x1, x2)  =  lesscG_in_aa

lesscG_out_aa(x1, x2)  =  lesscG_out_aa(x1)

U79_aa(x1, x2, x3)  =  U79_aa(x3)

U76_aaa(x1, x2, x3, x4, x5, x6)  =  U76_aaa(x6)

U77_aaa(x1, x2, x3, x4, x5, x6)  =  U77_aaa(x6)

U78_aaa(x1, x2, x3, x4, x5, x6)  =  U78_aaa(x6)

qcC_out_aaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8)  =  qcC_out_aaaaaaaa

.(x1, x2)  =  .(x1, x2)

s(x1)  =  s(x1)

0  =  0

PC_IN_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8)  =  PC_IN_AAAAAAAA

U4_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U4_AAAAAAAA(x9)

MSE_IN_AA(x1, x2)  =  MSE_IN_AA

U6_AAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9)  =  U6_AAAAAAAA(x9)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(155) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ms ([]) ([]))",
                null
            ],
            [
                "(ms (. X ([])) (. X ([])))",
                null
            ],
            [
                "(ms (. X (. Y Xs)) Ys)",
                "(',' (split (. X (. Y Xs)) X1s X2s) (',' (ms X1s Y1s) (',' (ms X2s Y2s) (merge Y1s Y2s Ys))))"
            ],
            [
                "(split ([]) ([]) ([]))",
                null
            ],
            [
                "(split (. X Xs) (. X Ys) Zs)",
                "(split Xs Zs Ys)"
            ],
            [
                "(merge ([]) Xs Xs)",
                null
            ],
            [
                "(merge Xs ([]) Xs)",
                null
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. X Zs))",
                "(',' (less X (s Y)) (merge Xs (. Y Ys) Zs))"
            ],
            [
                "(merge (. X Xs) (. Y Ys) (. Y Zs))",
                "(',' (less Y X) (merge (. X Xs) Ys Zs))"
            ],
            [
                "(less (0) (s X1))",
                null
            ],
            [
                "(less (s X) (s Y))",
                "(less X Y)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "908": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "909": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T116 (. T117 T118) X150)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X150"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "910": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 7,
                        "term": "(less T110 (s T111))"
                    },
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(less T110 (s T111))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "913": {
                "goal": [{
                    "clause": 9,
                    "scope": 7,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "914": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(less T110 (s T111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "918": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "919": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1070": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1107": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T250 T252)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T250"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1104": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1103": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1069": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T212 (s T217)) (merge T218 (. T217 T219) T216))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T212",
                        "T216"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1102": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1101": {
                "goal": [{
                    "clause": 10,
                    "scope": 11,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "920": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1100": {
                "goal": [{
                    "clause": 9,
                    "scope": 11,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ms T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "926": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "927": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1108": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1080": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 10,
                        "term": "(less T212 (s T217))"
                    },
                    {
                        "clause": 10,
                        "scope": 10,
                        "term": "(less T212 (s T217))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1088": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1087": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1086": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1082": {
                "goal": [{
                    "clause": 10,
                    "scope": 10,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1081": {
                "goal": [{
                    "clause": 9,
                    "scope": 10,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1079": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T222 (. T223 T224) T216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T216"],
                    "free": [],
                    "exprvars": []
                }
            },
            "931": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 8,
                        "term": "(less T132 T133)"
                    },
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(less T132 T133)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1078": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T212 (s T217))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T212"],
                    "free": [],
                    "exprvars": []
                }
            },
            "933": {
                "goal": [{
                    "clause": 9,
                    "scope": 8,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "814": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T69 (. T70 T71)) X104 X105)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X104",
                        "X105"
                    ],
                    "exprvars": []
                }
            },
            "935": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(less T132 T133)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "815": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T72 X106) (',' (ms T73 X107) (merge X106 X107 X108)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "936": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "937": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "938": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "939": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T147 T148)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1098": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 11,
                        "term": "(less T236 T238)"
                    },
                    {
                        "clause": 10,
                        "scope": 11,
                        "term": "(less T236 T238)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1096": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1095": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T236 T238)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T236"],
                    "free": [],
                    "exprvars": []
                }
            },
            "303": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T36 T37) X44 X43)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "941": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "304": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(split (. T36 T37) X44 X43)"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(split (. T36 T37) X44 X43)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "700": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "305": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(split (. T36 T37) X44 X43)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X43",
                        "X44"
                    ],
                    "exprvars": []
                }
            },
            "701": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "702": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "703": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "708": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T52 X80 X79)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X79",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "709": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1022": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T167 T168) (merge (. T168 T170) T169 X200))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "794": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T69 (. T70 T71)) X104 X105) (',' (ms X104 X106) (',' (ms X105 X107) (merge X106 X107 X108))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X104",
                        "X105",
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "796": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1033": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1032": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1153": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T279 T280) T281 T273)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T273"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1031": {
                "goal": [{
                    "clause": 5,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1152": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T271 T274)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T271"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1030": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 6,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1029": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "288": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (split (. T20 (. T21 T22)) X23 X24) (',' (ms X23 X25) (',' (ms X24 X26) (merge X25 X26 T19))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X23",
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "1028": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T54 X26)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "1149": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "289": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1027": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge (. T173 T174) T175 X200)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "1148": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T271 T274) (merge (. T274 T276) T275 T273))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T271",
                        "T273"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "840": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T72 X106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X106"],
                    "exprvars": []
                }
            },
            "1026": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(less T167 T168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "841": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T75 X107) (merge T74 X107 X108))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X108",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "1023": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "723": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "724": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T54 X26) (merge T53 X26 T19))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "845": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ms T75 X107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X107"],
                    "exprvars": []
                }
            },
            "60": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "846": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "847": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "848": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "849": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "290": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split (. T20 (. T21 T22)) X23 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "291": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ms T23 X25) (',' (ms T24 X26) (merge X25 X26 T19)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "1042": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1041": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1040": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "294": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(split (. T20 (. T21 T22)) X23 X24)"
                    },
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(split (. T20 (. T21 T22)) X23 X24)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "295": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(split (. T20 (. T21 T22)) X23 X24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X23",
                        "X24"
                    ],
                    "exprvars": []
                }
            },
            "695": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "1039": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    },
                    {
                        "clause": 8,
                        "scope": 9,
                        "term": "(merge T179 T178 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1038": {
                "goal": [{
                    "clause": 6,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "730": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "698": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(split T45 X62 X61)"
                    },
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(split T45 X62 X61)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "852": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "699": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(split T45 X62 X61)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X61",
                        "X62"
                    ],
                    "exprvars": []
                }
            },
            "732": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "853": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1035": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "733": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ms T23 X25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "854": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1034": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "734": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "855": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "735": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "856": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(merge T77 T76 X108)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "736": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ms T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "859": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "74": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "739": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "860": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "740": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ms T23 X25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X25"],
                    "exprvars": []
                }
            },
            "861": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1049": {
                "goal": [{
                    "clause": 8,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "1048": {
                "goal": [{
                    "clause": 7,
                    "scope": 9,
                    "term": "(merge T179 T178 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "744": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "745": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "746": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "902": {
                "goal": [{
                    "clause": 7,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "903": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(merge T77 T76 X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "904": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (less T110 (s T111)) (merge T112 (. T111 T113) X150))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X150"],
                    "exprvars": []
                }
            },
            "905": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 8,
                "label": "PARALLEL"
            },
            {
                "from": 7,
                "to": 59,
                "label": "EVAL with clause\nms([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 7,
                "to": 60,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 8,
                "to": 71,
                "label": "PARALLEL"
            },
            {
                "from": 8,
                "to": 72,
                "label": "PARALLEL"
            },
            {
                "from": 59,
                "to": 61,
                "label": "SUCCESS"
            },
            {
                "from": 71,
                "to": 73,
                "label": "EVAL with clause\nms(.(X6, []), .(X6, [])).\nand substitutionX6 -> T7,\nT1 -> .(T7, []),\nT2 -> .(T7, [])"
            },
            {
                "from": 71,
                "to": 74,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 72,
                "to": 288,
                "label": "EVAL with clause\nms(.(X19, .(X20, X21)), X22) :- ','(split(.(X19, .(X20, X21)), X23, X24), ','(ms(X23, X25), ','(ms(X24, X26), merge(X25, X26, X22)))).\nand substitutionX19 -> T20,\nX20 -> T21,\nX21 -> T22,\nT1 -> .(T20, .(T21, T22)),\nT2 -> T19,\nX22 -> T19,\nT16 -> T20,\nT17 -> T21,\nT18 -> T22"
            },
            {
                "from": 72,
                "to": 289,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 73,
                "to": 75,
                "label": "SUCCESS"
            },
            {
                "from": 288,
                "to": 290,
                "label": "SPLIT 1"
            },
            {
                "from": 288,
                "to": 291,
                "label": "SPLIT 2\nreplacements:X23 -> T23,\nX24 -> T24"
            },
            {
                "from": 290,
                "to": 294,
                "label": "CASE"
            },
            {
                "from": 291,
                "to": 723,
                "label": "SPLIT 1"
            },
            {
                "from": 291,
                "to": 724,
                "label": "SPLIT 2\nreplacements:X25 -> T53,\nT24 -> T54"
            },
            {
                "from": 294,
                "to": 295,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 295,
                "to": 303,
                "label": "ONLY EVAL with clause\nsplit(.(X39, X40), .(X39, X41), X42) :- split(X40, X42, X41).\nand substitutionT20 -> T33,\nX39 -> T33,\nT21 -> T36,\nT22 -> T37,\nX40 -> .(T36, T37),\nX41 -> X43,\nX23 -> .(T33, X43),\nX24 -> X44,\nX42 -> X44,\nT34 -> T36,\nT35 -> T37"
            },
            {
                "from": 303,
                "to": 304,
                "label": "CASE"
            },
            {
                "from": 304,
                "to": 305,
                "label": "BACKTRACK\nfor clause: split([], [], [])because of non-unification"
            },
            {
                "from": 305,
                "to": 695,
                "label": "ONLY EVAL with clause\nsplit(.(X57, X58), .(X57, X59), X60) :- split(X58, X60, X59).\nand substitutionT36 -> T43,\nX57 -> T43,\nT37 -> T45,\nX58 -> T45,\nX59 -> X61,\nX44 -> .(T43, X61),\nX43 -> X62,\nX60 -> X62,\nT44 -> T45"
            },
            {
                "from": 695,
                "to": 698,
                "label": "CASE"
            },
            {
                "from": 698,
                "to": 699,
                "label": "PARALLEL"
            },
            {
                "from": 698,
                "to": 700,
                "label": "PARALLEL"
            },
            {
                "from": 699,
                "to": 701,
                "label": "EVAL with clause\nsplit([], [], []).\nand substitutionT45 -> [],\nX62 -> [],\nX61 -> []"
            },
            {
                "from": 699,
                "to": 702,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 700,
                "to": 708,
                "label": "EVAL with clause\nsplit(.(X75, X76), .(X75, X77), X78) :- split(X76, X78, X77).\nand substitutionX75 -> T50,\nX76 -> T52,\nT45 -> .(T50, T52),\nX77 -> X79,\nX62 -> .(T50, X79),\nX61 -> X80,\nX78 -> X80,\nT51 -> T52"
            },
            {
                "from": 700,
                "to": 709,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 701,
                "to": 703,
                "label": "SUCCESS"
            },
            {
                "from": 708,
                "to": 695,
                "label": "INSTANCE with matching:\nT45 -> T52\nX62 -> X80\nX61 -> X79"
            },
            {
                "from": 723,
                "to": 730,
                "label": "CASE"
            },
            {
                "from": 724,
                "to": 1028,
                "label": "SPLIT 1"
            },
            {
                "from": 724,
                "to": 1029,
                "label": "SPLIT 2\nreplacements:X26 -> T178,\nT53 -> T179"
            },
            {
                "from": 730,
                "to": 732,
                "label": "PARALLEL"
            },
            {
                "from": 730,
                "to": 733,
                "label": "PARALLEL"
            },
            {
                "from": 732,
                "to": 734,
                "label": "EVAL with clause\nms([], []).\nand substitutionT23 -> [],\nX25 -> []"
            },
            {
                "from": 732,
                "to": 735,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 733,
                "to": 739,
                "label": "PARALLEL"
            },
            {
                "from": 733,
                "to": 740,
                "label": "PARALLEL"
            },
            {
                "from": 734,
                "to": 736,
                "label": "SUCCESS"
            },
            {
                "from": 739,
                "to": 744,
                "label": "EVAL with clause\nms(.(X85, []), .(X85, [])).\nand substitutionX85 -> T59,\nT23 -> .(T59, []),\nX25 -> .(T59, [])"
            },
            {
                "from": 739,
                "to": 745,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 740,
                "to": 794,
                "label": "EVAL with clause\nms(.(X100, .(X101, X102)), X103) :- ','(split(.(X100, .(X101, X102)), X104, X105), ','(ms(X104, X106), ','(ms(X105, X107), merge(X106, X107, X103)))).\nand substitutionX100 -> T69,\nX101 -> T70,\nX102 -> T71,\nT23 -> .(T69, .(T70, T71)),\nX25 -> X108,\nX103 -> X108,\nT66 -> T69,\nT67 -> T70,\nT68 -> T71"
            },
            {
                "from": 740,
                "to": 796,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 744,
                "to": 746,
                "label": "SUCCESS"
            },
            {
                "from": 794,
                "to": 814,
                "label": "SPLIT 1"
            },
            {
                "from": 794,
                "to": 815,
                "label": "SPLIT 2\nreplacements:X104 -> T72,\nX105 -> T73"
            },
            {
                "from": 814,
                "to": 290,
                "label": "INSTANCE with matching:\nT20 -> T69\nT21 -> T70\nT22 -> T71\nX23 -> X104\nX24 -> X105"
            },
            {
                "from": 815,
                "to": 840,
                "label": "SPLIT 1"
            },
            {
                "from": 815,
                "to": 841,
                "label": "SPLIT 2\nreplacements:X106 -> T74,\nT73 -> T75"
            },
            {
                "from": 840,
                "to": 723,
                "label": "INSTANCE with matching:\nT23 -> T72\nX25 -> X106"
            },
            {
                "from": 841,
                "to": 845,
                "label": "SPLIT 1"
            },
            {
                "from": 841,
                "to": 846,
                "label": "SPLIT 2\nreplacements:X107 -> T76,\nT74 -> T77"
            },
            {
                "from": 845,
                "to": 723,
                "label": "INSTANCE with matching:\nT23 -> T75\nX25 -> X107"
            },
            {
                "from": 846,
                "to": 847,
                "label": "CASE"
            },
            {
                "from": 847,
                "to": 848,
                "label": "PARALLEL"
            },
            {
                "from": 847,
                "to": 849,
                "label": "PARALLEL"
            },
            {
                "from": 848,
                "to": 852,
                "label": "EVAL with clause\nmerge([], X115, X115).\nand substitutionT77 -> [],\nT76 -> T84,\nX115 -> T84,\nX108 -> T84"
            },
            {
                "from": 848,
                "to": 853,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 849,
                "to": 855,
                "label": "PARALLEL"
            },
            {
                "from": 849,
                "to": 856,
                "label": "PARALLEL"
            },
            {
                "from": 852,
                "to": 854,
                "label": "SUCCESS"
            },
            {
                "from": 855,
                "to": 859,
                "label": "EVAL with clause\nmerge(X120, [], X120).\nand substitutionT77 -> T89,\nX120 -> T89,\nT76 -> [],\nX108 -> T89"
            },
            {
                "from": 855,
                "to": 860,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 856,
                "to": 902,
                "label": "PARALLEL"
            },
            {
                "from": 856,
                "to": 903,
                "label": "PARALLEL"
            },
            {
                "from": 859,
                "to": 861,
                "label": "SUCCESS"
            },
            {
                "from": 902,
                "to": 904,
                "label": "EVAL with clause\nmerge(.(X145, X146), .(X147, X148), .(X145, X149)) :- ','(less(X145, s(X147)), merge(X146, .(X147, X148), X149)).\nand substitutionX145 -> T110,\nX146 -> T112,\nT77 -> .(T110, T112),\nX147 -> T111,\nX148 -> T113,\nT76 -> .(T111, T113),\nX149 -> X150,\nX108 -> .(T110, X150),\nT106 -> T110,\nT108 -> T111,\nT107 -> T112,\nT109 -> T113"
            },
            {
                "from": 902,
                "to": 905,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 903,
                "to": 1022,
                "label": "EVAL with clause\nmerge(.(X195, X196), .(X197, X198), .(X197, X199)) :- ','(less(X197, X195), merge(.(X195, X196), X198, X199)).\nand substitutionX195 -> T168,\nX196 -> T170,\nT77 -> .(T168, T170),\nX197 -> T167,\nX198 -> T169,\nT76 -> .(T167, T169),\nX199 -> X200,\nX108 -> .(T167, X200),\nT165 -> T167,\nT163 -> T168,\nT166 -> T169,\nT164 -> T170"
            },
            {
                "from": 903,
                "to": 1023,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 904,
                "to": 908,
                "label": "SPLIT 1"
            },
            {
                "from": 904,
                "to": 909,
                "label": "SPLIT 2\nnew knowledge:\nT110 is ground\nreplacements:T112 -> T116,\nT111 -> T117,\nT113 -> T118"
            },
            {
                "from": 908,
                "to": 910,
                "label": "CASE"
            },
            {
                "from": 909,
                "to": 846,
                "label": "INSTANCE with matching:\nT77 -> T116\nT76 -> .(T117, T118)\nX108 -> X150"
            },
            {
                "from": 910,
                "to": 913,
                "label": "PARALLEL"
            },
            {
                "from": 910,
                "to": 914,
                "label": "PARALLEL"
            },
            {
                "from": 913,
                "to": 918,
                "label": "EVAL with clause\nless(0, s(X159)).\nand substitutionT110 -> 0,\nT111 -> T125,\nX159 -> T125"
            },
            {
                "from": 913,
                "to": 919,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 914,
                "to": 926,
                "label": "EVAL with clause\nless(s(X164), s(X165)) :- less(X164, X165).\nand substitutionX164 -> T132,\nT110 -> s(T132),\nT111 -> T133,\nX165 -> T133,\nT130 -> T132,\nT131 -> T133"
            },
            {
                "from": 914,
                "to": 927,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 918,
                "to": 920,
                "label": "SUCCESS"
            },
            {
                "from": 926,
                "to": 931,
                "label": "CASE"
            },
            {
                "from": 931,
                "to": 933,
                "label": "PARALLEL"
            },
            {
                "from": 931,
                "to": 935,
                "label": "PARALLEL"
            },
            {
                "from": 933,
                "to": 936,
                "label": "EVAL with clause\nless(0, s(X172)).\nand substitutionT132 -> 0,\nX172 -> T140,\nT133 -> s(T140)"
            },
            {
                "from": 933,
                "to": 937,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 935,
                "to": 939,
                "label": "EVAL with clause\nless(s(X177), s(X178)) :- less(X177, X178).\nand substitutionX177 -> T147,\nT132 -> s(T147),\nX178 -> T148,\nT133 -> s(T148),\nT145 -> T147,\nT146 -> T148"
            },
            {
                "from": 935,
                "to": 941,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 936,
                "to": 938,
                "label": "SUCCESS"
            },
            {
                "from": 939,
                "to": 926,
                "label": "INSTANCE with matching:\nT132 -> T147\nT133 -> T148"
            },
            {
                "from": 1022,
                "to": 1026,
                "label": "SPLIT 1"
            },
            {
                "from": 1022,
                "to": 1027,
                "label": "SPLIT 2\nnew knowledge:\nT167 is ground\nreplacements:T168 -> T173,\nT170 -> T174,\nT169 -> T175"
            },
            {
                "from": 1026,
                "to": 926,
                "label": "INSTANCE with matching:\nT132 -> T167\nT133 -> T168"
            },
            {
                "from": 1027,
                "to": 846,
                "label": "INSTANCE with matching:\nT77 -> .(T173, T174)\nT76 -> T175\nX108 -> X200"
            },
            {
                "from": 1028,
                "to": 723,
                "label": "INSTANCE with matching:\nT23 -> T54\nX25 -> X26"
            },
            {
                "from": 1029,
                "to": 1030,
                "label": "CASE"
            },
            {
                "from": 1030,
                "to": 1031,
                "label": "PARALLEL"
            },
            {
                "from": 1030,
                "to": 1032,
                "label": "PARALLEL"
            },
            {
                "from": 1031,
                "to": 1033,
                "label": "EVAL with clause\nmerge([], X213, X213).\nand substitutionT179 -> [],\nT178 -> T186,\nX213 -> T186,\nT19 -> T186"
            },
            {
                "from": 1031,
                "to": 1034,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1032,
                "to": 1038,
                "label": "PARALLEL"
            },
            {
                "from": 1032,
                "to": 1039,
                "label": "PARALLEL"
            },
            {
                "from": 1033,
                "to": 1035,
                "label": "SUCCESS"
            },
            {
                "from": 1038,
                "to": 1040,
                "label": "EVAL with clause\nmerge(X218, [], X218).\nand substitutionT179 -> T191,\nX218 -> T191,\nT178 -> [],\nT19 -> T191"
            },
            {
                "from": 1038,
                "to": 1041,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1039,
                "to": 1048,
                "label": "PARALLEL"
            },
            {
                "from": 1039,
                "to": 1049,
                "label": "PARALLEL"
            },
            {
                "from": 1040,
                "to": 1042,
                "label": "SUCCESS"
            },
            {
                "from": 1048,
                "to": 1069,
                "label": "EVAL with clause\nmerge(.(X239, X240), .(X241, X242), .(X239, X243)) :- ','(less(X239, s(X241)), merge(X240, .(X241, X242), X243)).\nand substitutionX239 -> T212,\nX240 -> T218,\nT179 -> .(T212, T218),\nX241 -> T217,\nX242 -> T219,\nT178 -> .(T217, T219),\nX243 -> T216,\nT19 -> .(T212, T216),\nT214 -> T217,\nT213 -> T218,\nT215 -> T219"
            },
            {
                "from": 1048,
                "to": 1070,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1049,
                "to": 1148,
                "label": "EVAL with clause\nmerge(.(X286, X287), .(X288, X289), .(X288, X290)) :- ','(less(X288, X286), merge(.(X286, X287), X289, X290)).\nand substitutionX286 -> T274,\nX287 -> T276,\nT179 -> .(T274, T276),\nX288 -> T271,\nX289 -> T275,\nT178 -> .(T271, T275),\nX290 -> T273,\nT19 -> .(T271, T273),\nT269 -> T274,\nT272 -> T275,\nT270 -> T276"
            },
            {
                "from": 1049,
                "to": 1149,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1069,
                "to": 1078,
                "label": "SPLIT 1"
            },
            {
                "from": 1069,
                "to": 1079,
                "label": "SPLIT 2\nnew knowledge:\nT212 is ground\nreplacements:T218 -> T222,\nT217 -> T223,\nT219 -> T224"
            },
            {
                "from": 1078,
                "to": 1080,
                "label": "CASE"
            },
            {
                "from": 1079,
                "to": 1029,
                "label": "INSTANCE with matching:\nT179 -> T222\nT178 -> .(T223, T224)\nT19 -> T216"
            },
            {
                "from": 1080,
                "to": 1081,
                "label": "PARALLEL"
            },
            {
                "from": 1080,
                "to": 1082,
                "label": "PARALLEL"
            },
            {
                "from": 1081,
                "to": 1086,
                "label": "EVAL with clause\nless(0, s(X252)).\nand substitutionT212 -> 0,\nT217 -> T231,\nX252 -> T231"
            },
            {
                "from": 1081,
                "to": 1087,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1082,
                "to": 1095,
                "label": "EVAL with clause\nless(s(X257), s(X258)) :- less(X257, X258).\nand substitutionX257 -> T236,\nT212 -> s(T236),\nT217 -> T238,\nX258 -> T238,\nT237 -> T238"
            },
            {
                "from": 1082,
                "to": 1096,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1086,
                "to": 1088,
                "label": "SUCCESS"
            },
            {
                "from": 1095,
                "to": 1098,
                "label": "CASE"
            },
            {
                "from": 1098,
                "to": 1100,
                "label": "PARALLEL"
            },
            {
                "from": 1098,
                "to": 1101,
                "label": "PARALLEL"
            },
            {
                "from": 1100,
                "to": 1102,
                "label": "EVAL with clause\nless(0, s(X265)).\nand substitutionT236 -> 0,\nX265 -> T245,\nT238 -> s(T245)"
            },
            {
                "from": 1100,
                "to": 1103,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1101,
                "to": 1107,
                "label": "EVAL with clause\nless(s(X270), s(X271)) :- less(X270, X271).\nand substitutionX270 -> T250,\nT236 -> s(T250),\nX271 -> T252,\nT238 -> s(T252),\nT251 -> T252"
            },
            {
                "from": 1101,
                "to": 1108,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1102,
                "to": 1104,
                "label": "SUCCESS"
            },
            {
                "from": 1107,
                "to": 1095,
                "label": "INSTANCE with matching:\nT236 -> T250\nT238 -> T252"
            },
            {
                "from": 1148,
                "to": 1152,
                "label": "SPLIT 1"
            },
            {
                "from": 1148,
                "to": 1153,
                "label": "SPLIT 2\nnew knowledge:\nT271 is ground\nreplacements:T274 -> T279,\nT276 -> T280,\nT275 -> T281"
            },
            {
                "from": 1152,
                "to": 1095,
                "label": "INSTANCE with matching:\nT236 -> T271\nT238 -> T274"
            },
            {
                "from": 1153,
                "to": 1029,
                "label": "INSTANCE with matching:\nT179 -> .(T279, T280)\nT178 -> T281\nT19 -> T273"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(156)
Complex Obligation (AND)

----------------------------------------

(157)
Obligation:
Rules:
f1107_in(T250) -> f1095_in(T250) :|: TRUE
f1095_out(x) -> f1107_out(x) :|: TRUE
f1101_in(s(x1)) -> f1107_in(x1) :|: TRUE
f1101_in(T236) -> f1108_in :|: TRUE
f1107_out(x2) -> f1101_out(s(x2)) :|: TRUE
f1108_out -> f1101_out(x3) :|: TRUE
f1098_in(x4) -> f1100_in(x4) :|: TRUE
f1101_out(x5) -> f1098_out(x5) :|: TRUE
f1098_in(x6) -> f1101_in(x6) :|: TRUE
f1100_out(x7) -> f1098_out(x7) :|: TRUE
f1098_out(x8) -> f1095_out(x8) :|: TRUE
f1095_in(x9) -> f1098_in(x9) :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x10) -> f2_out(x10) :|: TRUE
f7_out(x11) -> f4_out(x11) :|: TRUE
f4_in(x12) -> f7_in(x12) :|: TRUE
f4_in(x13) -> f8_in(x13) :|: TRUE
f8_out(x14) -> f4_out(x14) :|: TRUE
f71_out(x15) -> f8_out(x15) :|: TRUE
f8_in(x16) -> f72_in(x16) :|: TRUE
f8_in(x17) -> f71_in(x17) :|: TRUE
f72_out(x18) -> f8_out(x18) :|: TRUE
f289_out -> f72_out(x19) :|: TRUE
f288_out(T19) -> f72_out(T19) :|: TRUE
f72_in(x20) -> f289_in :|: TRUE
f72_in(x21) -> f288_in(x21) :|: TRUE
f288_in(x22) -> f290_in :|: TRUE
f291_out(x23) -> f288_out(x23) :|: TRUE
f290_out -> f291_in(x24) :|: TRUE
f724_out(x25) -> f291_out(x25) :|: TRUE
f723_out -> f724_in(x26) :|: TRUE
f291_in(x27) -> f723_in :|: TRUE
f1029_out(x28) -> f724_out(x28) :|: TRUE
f1028_out -> f1029_in(x29) :|: TRUE
f724_in(x30) -> f1028_in :|: TRUE
f1029_in(x31) -> f1030_in(x31) :|: TRUE
f1030_out(x32) -> f1029_out(x32) :|: TRUE
f1030_in(x33) -> f1031_in(x33) :|: TRUE
f1032_out(x34) -> f1030_out(x34) :|: TRUE
f1030_in(x35) -> f1032_in(x35) :|: TRUE
f1031_out(x36) -> f1030_out(x36) :|: TRUE
f1039_out(x37) -> f1032_out(x37) :|: TRUE
f1032_in(x38) -> f1039_in(x38) :|: TRUE
f1032_in(x39) -> f1038_in(x39) :|: TRUE
f1038_out(x40) -> f1032_out(x40) :|: TRUE
f1039_in(x41) -> f1049_in(x41) :|: TRUE
f1039_in(x42) -> f1048_in(x42) :|: TRUE
f1048_out(x43) -> f1039_out(x43) :|: TRUE
f1049_out(x44) -> f1039_out(x44) :|: TRUE
f1049_in(x45) -> f1149_in :|: TRUE
f1148_out(T271, T273) -> f1049_out(.(T271, T273)) :|: TRUE
f1049_in(.(x46, x47)) -> f1148_in(x46, x47) :|: TRUE
f1149_out -> f1049_out(x48) :|: TRUE
f1152_out(x49) -> f1153_in(x50) :|: TRUE
f1148_in(x51, x52) -> f1152_in(x51) :|: TRUE
f1153_out(x53) -> f1148_out(x54, x53) :|: TRUE
f1152_in(x55) -> f1095_in(x55) :|: TRUE
f1095_out(x56) -> f1152_out(x56) :|: TRUE
f1048_in(x57) -> f1070_in :|: TRUE
f1069_out(T212, T216) -> f1048_out(.(T212, T216)) :|: TRUE
f1070_out -> f1048_out(x58) :|: TRUE
f1048_in(.(x59, x60)) -> f1069_in(x59, x60) :|: TRUE
f1069_in(x61, x62) -> f1078_in(x61) :|: TRUE
f1079_out(x63) -> f1069_out(x64, x63) :|: TRUE
f1078_out(x65) -> f1079_in(x66) :|: TRUE
f1080_out(x67) -> f1078_out(x67) :|: TRUE
f1078_in(x68) -> f1080_in(x68) :|: TRUE
f1080_in(x69) -> f1081_in(x69) :|: TRUE
f1080_in(x70) -> f1082_in(x70) :|: TRUE
f1081_out(x71) -> f1080_out(x71) :|: TRUE
f1082_out(x72) -> f1080_out(x72) :|: TRUE
f1082_in(x73) -> f1096_in :|: TRUE
f1095_out(x74) -> f1082_out(s(x74)) :|: TRUE
f1082_in(s(x75)) -> f1095_in(x75) :|: TRUE
f1096_out -> f1082_out(x76) :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(158) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(159)
TRUE

----------------------------------------

(160)
Obligation:
Rules:
f1152_in(T271) -> f1095_in(T271) :|: TRUE
f1095_out(x) -> f1152_out(x) :|: TRUE
f1107_in(T250) -> f1095_in(T250) :|: TRUE
f1095_out(x1) -> f1107_out(x1) :|: TRUE
f1086_in -> f1086_out :|: TRUE
f1103_out -> f1100_out(T236) :|: TRUE
f1100_in(x2) -> f1103_in :|: TRUE
f1102_out -> f1100_out(0) :|: TRUE
f1100_in(0) -> f1102_in :|: TRUE
f1102_in -> f1102_out :|: TRUE
f1030_in(T19) -> f1031_in(T19) :|: TRUE
f1032_out(x3) -> f1030_out(x3) :|: TRUE
f1030_in(x4) -> f1032_in(x4) :|: TRUE
f1031_out(x5) -> f1030_out(x5) :|: TRUE
f1079_in(T216) -> f1029_in(T216) :|: TRUE
f1029_out(x6) -> f1079_out(x6) :|: TRUE
f1098_out(x7) -> f1095_out(x7) :|: TRUE
f1095_in(x8) -> f1098_in(x8) :|: TRUE
f1069_in(x9, x10) -> f1078_in(x9) :|: TRUE
f1079_out(x11) -> f1069_out(x12, x11) :|: TRUE
f1078_out(x13) -> f1079_in(x14) :|: TRUE
f1081_in(0) -> f1086_in :|: TRUE
f1086_out -> f1081_out(0) :|: TRUE
f1087_out -> f1081_out(T212) :|: TRUE
f1081_in(x15) -> f1087_in :|: TRUE
f1153_in(T273) -> f1029_in(T273) :|: TRUE
f1029_out(x16) -> f1153_out(x16) :|: TRUE
f1039_out(x17) -> f1032_out(x17) :|: TRUE
f1032_in(x18) -> f1039_in(x18) :|: TRUE
f1032_in(x19) -> f1038_in(x19) :|: TRUE
f1038_out(x20) -> f1032_out(x20) :|: TRUE
f1049_in(x21) -> f1149_in :|: TRUE
f1148_out(x22, x23) -> f1049_out(.(x22, x23)) :|: TRUE
f1049_in(.(x24, x25)) -> f1148_in(x24, x25) :|: TRUE
f1149_out -> f1049_out(x26) :|: TRUE
f1029_in(x27) -> f1030_in(x27) :|: TRUE
f1030_out(x28) -> f1029_out(x28) :|: TRUE
f1152_out(x29) -> f1153_in(x30) :|: TRUE
f1148_in(x31, x32) -> f1152_in(x31) :|: TRUE
f1153_out(x33) -> f1148_out(x34, x33) :|: TRUE
f1080_out(x35) -> f1078_out(x35) :|: TRUE
f1078_in(x36) -> f1080_in(x36) :|: TRUE
f1098_in(x37) -> f1100_in(x37) :|: TRUE
f1101_out(x38) -> f1098_out(x38) :|: TRUE
f1098_in(x39) -> f1101_in(x39) :|: TRUE
f1100_out(x40) -> f1098_out(x40) :|: TRUE
f1101_in(s(x41)) -> f1107_in(x41) :|: TRUE
f1101_in(x42) -> f1108_in :|: TRUE
f1107_out(x43) -> f1101_out(s(x43)) :|: TRUE
f1108_out -> f1101_out(x44) :|: TRUE
f1082_in(x45) -> f1096_in :|: TRUE
f1095_out(x46) -> f1082_out(s(x46)) :|: TRUE
f1082_in(s(x47)) -> f1095_in(x47) :|: TRUE
f1096_out -> f1082_out(x48) :|: TRUE
f1039_in(x49) -> f1049_in(x49) :|: TRUE
f1039_in(x50) -> f1048_in(x50) :|: TRUE
f1048_out(x51) -> f1039_out(x51) :|: TRUE
f1049_out(x52) -> f1039_out(x52) :|: TRUE
f1080_in(x53) -> f1081_in(x53) :|: TRUE
f1080_in(x54) -> f1082_in(x54) :|: TRUE
f1081_out(x55) -> f1080_out(x55) :|: TRUE
f1082_out(x56) -> f1080_out(x56) :|: TRUE
f1048_in(x57) -> f1070_in :|: TRUE
f1069_out(x58, x59) -> f1048_out(.(x58, x59)) :|: TRUE
f1070_out -> f1048_out(x60) :|: TRUE
f1048_in(.(x61, x62)) -> f1069_in(x61, x62) :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x63) -> f2_out(x63) :|: TRUE
f7_out(x64) -> f4_out(x64) :|: TRUE
f4_in(x65) -> f7_in(x65) :|: TRUE
f4_in(x66) -> f8_in(x66) :|: TRUE
f8_out(x67) -> f4_out(x67) :|: TRUE
f71_out(x68) -> f8_out(x68) :|: TRUE
f8_in(x69) -> f72_in(x69) :|: TRUE
f8_in(x70) -> f71_in(x70) :|: TRUE
f72_out(x71) -> f8_out(x71) :|: TRUE
f289_out -> f72_out(x72) :|: TRUE
f288_out(x73) -> f72_out(x73) :|: TRUE
f72_in(x74) -> f289_in :|: TRUE
f72_in(x75) -> f288_in(x75) :|: TRUE
f288_in(x76) -> f290_in :|: TRUE
f291_out(x77) -> f288_out(x77) :|: TRUE
f290_out -> f291_in(x78) :|: TRUE
f724_out(x79) -> f291_out(x79) :|: TRUE
f723_out -> f724_in(x80) :|: TRUE
f291_in(x81) -> f723_in :|: TRUE
f1029_out(x82) -> f724_out(x82) :|: TRUE
f1028_out -> f1029_in(x83) :|: TRUE
f724_in(x84) -> f1028_in :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(161) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(162)
TRUE

----------------------------------------

(163)
Obligation:
Rules:
f935_out -> f931_out :|: TRUE
f933_out -> f931_out :|: TRUE
f931_in -> f935_in :|: TRUE
f931_in -> f933_in :|: TRUE
f939_in -> f926_in :|: TRUE
f926_out -> f939_out :|: TRUE
f926_in -> f931_in :|: TRUE
f931_out -> f926_out :|: TRUE
f935_in -> f941_in :|: TRUE
f939_out -> f935_out :|: TRUE
f941_out -> f935_out :|: TRUE
f935_in -> f939_in :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x) -> f2_out(x) :|: TRUE
f7_out(x1) -> f4_out(x1) :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f4_in(x3) -> f8_in(x3) :|: TRUE
f8_out(x4) -> f4_out(x4) :|: TRUE
f71_out(x5) -> f8_out(x5) :|: TRUE
f8_in(x6) -> f72_in(x6) :|: TRUE
f8_in(x7) -> f71_in(x7) :|: TRUE
f72_out(x8) -> f8_out(x8) :|: TRUE
f289_out -> f72_out(x9) :|: TRUE
f288_out(T19) -> f72_out(T19) :|: TRUE
f72_in(x10) -> f289_in :|: TRUE
f72_in(x11) -> f288_in(x11) :|: TRUE
f288_in(x12) -> f290_in :|: TRUE
f291_out(x13) -> f288_out(x13) :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f724_out(x15) -> f291_out(x15) :|: TRUE
f723_out -> f724_in(x16) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE
f1029_out(x18) -> f724_out(x18) :|: TRUE
f1028_out -> f1029_in(x19) :|: TRUE
f724_in(x20) -> f1028_in :|: TRUE
f1028_in -> f723_in :|: TRUE
f723_out -> f1028_out :|: TRUE
f723_in -> f730_in :|: TRUE
f730_out -> f723_out :|: TRUE
f732_out -> f730_out :|: TRUE
f733_out -> f730_out :|: TRUE
f730_in -> f732_in :|: TRUE
f730_in -> f733_in :|: TRUE
f733_in -> f740_in :|: TRUE
f733_in -> f739_in :|: TRUE
f740_out -> f733_out :|: TRUE
f739_out -> f733_out :|: TRUE
f796_out -> f740_out :|: TRUE
f740_in -> f794_in :|: TRUE
f794_out -> f740_out :|: TRUE
f740_in -> f796_in :|: TRUE
f815_out -> f794_out :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f815_in -> f840_in :|: TRUE
f840_out -> f841_in :|: TRUE
f841_out -> f815_out :|: TRUE
f845_out -> f846_in :|: TRUE
f841_in -> f845_in :|: TRUE
f846_out -> f841_out :|: TRUE
f846_in -> f847_in :|: TRUE
f847_out -> f846_out :|: TRUE
f847_in -> f849_in :|: TRUE
f849_out -> f847_out :|: TRUE
f847_in -> f848_in :|: TRUE
f848_out -> f847_out :|: TRUE
f849_in -> f855_in :|: TRUE
f849_in -> f856_in :|: TRUE
f855_out -> f849_out :|: TRUE
f856_out -> f849_out :|: TRUE
f903_out -> f856_out :|: TRUE
f856_in -> f902_in :|: TRUE
f856_in -> f903_in :|: TRUE
f902_out -> f856_out :|: TRUE
f1023_out -> f903_out :|: TRUE
f1022_out -> f903_out :|: TRUE
f903_in -> f1023_in :|: TRUE
f903_in -> f1022_in :|: TRUE
f1026_out -> f1027_in :|: TRUE
f1022_in -> f1026_in :|: TRUE
f1027_out -> f1022_out :|: TRUE
f926_out -> f1026_out :|: TRUE
f1026_in -> f926_in :|: TRUE
f902_in -> f904_in :|: TRUE
f902_in -> f905_in :|: TRUE
f904_out -> f902_out :|: TRUE
f905_out -> f902_out :|: TRUE
f908_out -> f909_in :|: TRUE
f904_in -> f908_in :|: TRUE
f909_out -> f904_out :|: TRUE
f908_in -> f910_in :|: TRUE
f910_out -> f908_out :|: TRUE
f910_in -> f914_in :|: TRUE
f910_in -> f913_in :|: TRUE
f914_out -> f910_out :|: TRUE
f913_out -> f910_out :|: TRUE
f926_out -> f914_out :|: TRUE
f914_in -> f927_in :|: TRUE
f914_in -> f926_in :|: TRUE
f927_out -> f914_out :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(164) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(165)
TRUE

----------------------------------------

(166)
Obligation:
Rules:
f1023_out -> f903_out :|: TRUE
f1022_out -> f903_out :|: TRUE
f903_in -> f1023_in :|: TRUE
f903_in -> f1022_in :|: TRUE
f933_in -> f937_in :|: TRUE
f937_out -> f933_out :|: TRUE
f936_out -> f933_out :|: TRUE
f933_in -> f936_in :|: TRUE
f846_in -> f847_in :|: TRUE
f847_out -> f846_out :|: TRUE
f936_in -> f936_out :|: TRUE
f1026_out -> f1027_in :|: TRUE
f1022_in -> f1026_in :|: TRUE
f1027_out -> f1022_out :|: TRUE
f846_out -> f1027_out :|: TRUE
f1027_in -> f846_in :|: TRUE
f909_in -> f846_in :|: TRUE
f846_out -> f909_out :|: TRUE
f926_out -> f1026_out :|: TRUE
f1026_in -> f926_in :|: TRUE
f926_out -> f914_out :|: TRUE
f914_in -> f927_in :|: TRUE
f914_in -> f926_in :|: TRUE
f927_out -> f914_out :|: TRUE
f903_out -> f856_out :|: TRUE
f856_in -> f902_in :|: TRUE
f856_in -> f903_in :|: TRUE
f902_out -> f856_out :|: TRUE
f910_in -> f914_in :|: TRUE
f910_in -> f913_in :|: TRUE
f914_out -> f910_out :|: TRUE
f913_out -> f910_out :|: TRUE
f939_in -> f926_in :|: TRUE
f926_out -> f939_out :|: TRUE
f935_in -> f941_in :|: TRUE
f939_out -> f935_out :|: TRUE
f941_out -> f935_out :|: TRUE
f935_in -> f939_in :|: TRUE
f847_in -> f849_in :|: TRUE
f849_out -> f847_out :|: TRUE
f847_in -> f848_in :|: TRUE
f848_out -> f847_out :|: TRUE
f902_in -> f904_in :|: TRUE
f902_in -> f905_in :|: TRUE
f904_out -> f902_out :|: TRUE
f905_out -> f902_out :|: TRUE
f926_in -> f931_in :|: TRUE
f931_out -> f926_out :|: TRUE
f908_out -> f909_in :|: TRUE
f904_in -> f908_in :|: TRUE
f909_out -> f904_out :|: TRUE
f908_in -> f910_in :|: TRUE
f910_out -> f908_out :|: TRUE
f935_out -> f931_out :|: TRUE
f933_out -> f931_out :|: TRUE
f931_in -> f935_in :|: TRUE
f931_in -> f933_in :|: TRUE
f918_in -> f918_out :|: TRUE
f849_in -> f855_in :|: TRUE
f849_in -> f856_in :|: TRUE
f855_out -> f849_out :|: TRUE
f856_out -> f849_out :|: TRUE
f919_out -> f913_out :|: TRUE
f918_out -> f913_out :|: TRUE
f913_in -> f918_in :|: TRUE
f913_in -> f919_in :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x) -> f2_out(x) :|: TRUE
f7_out(x1) -> f4_out(x1) :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f4_in(x3) -> f8_in(x3) :|: TRUE
f8_out(x4) -> f4_out(x4) :|: TRUE
f71_out(x5) -> f8_out(x5) :|: TRUE
f8_in(x6) -> f72_in(x6) :|: TRUE
f8_in(x7) -> f71_in(x7) :|: TRUE
f72_out(x8) -> f8_out(x8) :|: TRUE
f289_out -> f72_out(x9) :|: TRUE
f288_out(T19) -> f72_out(T19) :|: TRUE
f72_in(x10) -> f289_in :|: TRUE
f72_in(x11) -> f288_in(x11) :|: TRUE
f288_in(x12) -> f290_in :|: TRUE
f291_out(x13) -> f288_out(x13) :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f724_out(x15) -> f291_out(x15) :|: TRUE
f723_out -> f724_in(x16) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE
f723_in -> f730_in :|: TRUE
f730_out -> f723_out :|: TRUE
f732_out -> f730_out :|: TRUE
f733_out -> f730_out :|: TRUE
f730_in -> f732_in :|: TRUE
f730_in -> f733_in :|: TRUE
f733_in -> f740_in :|: TRUE
f733_in -> f739_in :|: TRUE
f740_out -> f733_out :|: TRUE
f739_out -> f733_out :|: TRUE
f796_out -> f740_out :|: TRUE
f740_in -> f794_in :|: TRUE
f794_out -> f740_out :|: TRUE
f740_in -> f796_in :|: TRUE
f815_out -> f794_out :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f815_in -> f840_in :|: TRUE
f840_out -> f841_in :|: TRUE
f841_out -> f815_out :|: TRUE
f845_out -> f846_in :|: TRUE
f841_in -> f845_in :|: TRUE
f846_out -> f841_out :|: TRUE
f1029_out(x18) -> f724_out(x18) :|: TRUE
f1028_out -> f1029_in(x19) :|: TRUE
f724_in(x20) -> f1028_in :|: TRUE
f1028_in -> f723_in :|: TRUE
f723_out -> f1028_out :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(167) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(168)
TRUE

----------------------------------------

(169)
Obligation:
Rules:
f700_out -> f698_out :|: TRUE
f698_in -> f699_in :|: TRUE
f698_in -> f700_in :|: TRUE
f699_out -> f698_out :|: TRUE
f700_in -> f709_in :|: TRUE
f708_out -> f700_out :|: TRUE
f700_in -> f708_in :|: TRUE
f709_out -> f700_out :|: TRUE
f708_in -> f695_in :|: TRUE
f695_out -> f708_out :|: TRUE
f698_out -> f695_out :|: TRUE
f695_in -> f698_in :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x) -> f2_out(x) :|: TRUE
f7_out(x1) -> f4_out(x1) :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f4_in(x3) -> f8_in(x3) :|: TRUE
f8_out(x4) -> f4_out(x4) :|: TRUE
f71_out(x5) -> f8_out(x5) :|: TRUE
f8_in(x6) -> f72_in(x6) :|: TRUE
f8_in(x7) -> f71_in(x7) :|: TRUE
f72_out(x8) -> f8_out(x8) :|: TRUE
f289_out -> f72_out(x9) :|: TRUE
f288_out(T19) -> f72_out(T19) :|: TRUE
f72_in(x10) -> f289_in :|: TRUE
f72_in(x11) -> f288_in(x11) :|: TRUE
f288_in(x12) -> f290_in :|: TRUE
f291_out(x13) -> f288_out(x13) :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f724_out(x15) -> f291_out(x15) :|: TRUE
f723_out -> f724_in(x16) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE
f723_in -> f730_in :|: TRUE
f730_out -> f723_out :|: TRUE
f732_out -> f730_out :|: TRUE
f733_out -> f730_out :|: TRUE
f730_in -> f732_in :|: TRUE
f730_in -> f733_in :|: TRUE
f733_in -> f740_in :|: TRUE
f733_in -> f739_in :|: TRUE
f740_out -> f733_out :|: TRUE
f739_out -> f733_out :|: TRUE
f796_out -> f740_out :|: TRUE
f740_in -> f794_in :|: TRUE
f794_out -> f740_out :|: TRUE
f740_in -> f796_in :|: TRUE
f815_out -> f794_out :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f290_out -> f814_out :|: TRUE
f814_in -> f290_in :|: TRUE
f290_in -> f294_in :|: TRUE
f294_out -> f290_out :|: TRUE
f295_out -> f294_out :|: TRUE
f294_in -> f295_in :|: TRUE
f295_in -> f303_in :|: TRUE
f303_out -> f295_out :|: TRUE
f303_in -> f304_in :|: TRUE
f304_out -> f303_out :|: TRUE
f304_in -> f305_in :|: TRUE
f305_out -> f304_out :|: TRUE
f305_in -> f695_in :|: TRUE
f695_out -> f305_out :|: TRUE
f1029_out(x18) -> f724_out(x18) :|: TRUE
f1028_out -> f1029_in(x19) :|: TRUE
f724_in(x20) -> f1028_in :|: TRUE
f1028_in -> f723_in :|: TRUE
f723_out -> f1028_out :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(170) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f698_in -> f700_in :|: TRUE
f700_in -> f708_in :|: TRUE
f708_in -> f695_in :|: TRUE
f695_in -> f698_in :|: TRUE


----------------------------------------

(171)
Obligation:
Rules:
f698_in -> f700_in :|: TRUE
f700_in -> f708_in :|: TRUE
f708_in -> f695_in :|: TRUE
f695_in -> f698_in :|: TRUE

----------------------------------------

(172) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(173)
Obligation:
Rules:
f698_in -> f698_in :|: TRUE

----------------------------------------

(174) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(175)
Obligation:
Rules:
f698_in -> f698_in :|: TRUE

----------------------------------------

(176) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f698_in -> f698_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(177)
Obligation:

Termination digraph:
Nodes:
(1) f698_in -> f698_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(178) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f698_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(179)
Obligation:
Rules:
f698_in -> f698_in :|: TRUE

----------------------------------------

(180) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
((run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 1)) and T)) and !(((run2_0 * 1)) = ((1 * 1)) and T))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
(run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 1)) and T))

----------------------------------------

(181)
NO

----------------------------------------

(182)
Obligation:
Rules:
f1023_out -> f903_out :|: TRUE
f1022_out -> f903_out :|: TRUE
f903_in -> f1023_in :|: TRUE
f903_in -> f1022_in :|: TRUE
f933_in -> f937_in :|: TRUE
f937_out -> f933_out :|: TRUE
f936_out -> f933_out :|: TRUE
f933_in -> f936_in :|: TRUE
f859_in -> f859_out :|: TRUE
f700_out -> f698_out :|: TRUE
f698_in -> f699_in :|: TRUE
f698_in -> f700_in :|: TRUE
f699_out -> f698_out :|: TRUE
f909_in -> f846_in :|: TRUE
f846_out -> f909_out :|: TRUE
f840_in -> f723_in :|: TRUE
f723_out -> f840_out :|: TRUE
f304_in -> f305_in :|: TRUE
f305_out -> f304_out :|: TRUE
f926_out -> f1026_out :|: TRUE
f1026_in -> f926_in :|: TRUE
f926_out -> f914_out :|: TRUE
f914_in -> f927_in :|: TRUE
f914_in -> f926_in :|: TRUE
f927_out -> f914_out :|: TRUE
f903_out -> f856_out :|: TRUE
f856_in -> f902_in :|: TRUE
f856_in -> f903_in :|: TRUE
f902_out -> f856_out :|: TRUE
f910_in -> f914_in :|: TRUE
f910_in -> f913_in :|: TRUE
f914_out -> f910_out :|: TRUE
f913_out -> f910_out :|: TRUE
f845_in -> f723_in :|: TRUE
f723_out -> f845_out :|: TRUE
f815_in -> f840_in :|: TRUE
f840_out -> f841_in :|: TRUE
f841_out -> f815_out :|: TRUE
f935_in -> f941_in :|: TRUE
f939_out -> f935_out :|: TRUE
f941_out -> f935_out :|: TRUE
f935_in -> f939_in :|: TRUE
f723_in -> f730_in :|: TRUE
f730_out -> f723_out :|: TRUE
f847_in -> f849_in :|: TRUE
f849_out -> f847_out :|: TRUE
f847_in -> f848_in :|: TRUE
f848_out -> f847_out :|: TRUE
f926_in -> f931_in :|: TRUE
f931_out -> f926_out :|: TRUE
f700_in -> f709_in :|: TRUE
f708_out -> f700_out :|: TRUE
f700_in -> f708_in :|: TRUE
f709_out -> f700_out :|: TRUE
f702_out -> f699_out :|: TRUE
f699_in -> f701_in :|: TRUE
f699_in -> f702_in :|: TRUE
f701_out -> f699_out :|: TRUE
f908_in -> f910_in :|: TRUE
f910_out -> f908_out :|: TRUE
f935_out -> f931_out :|: TRUE
f933_out -> f931_out :|: TRUE
f931_in -> f935_in :|: TRUE
f931_in -> f933_in :|: TRUE
f295_out -> f294_out :|: TRUE
f294_in -> f295_in :|: TRUE
f919_out -> f913_out :|: TRUE
f918_out -> f913_out :|: TRUE
f913_in -> f918_in :|: TRUE
f913_in -> f919_in :|: TRUE
f846_in -> f847_in :|: TRUE
f847_out -> f846_out :|: TRUE
f936_in -> f936_out :|: TRUE
f1026_out -> f1027_in :|: TRUE
f1022_in -> f1026_in :|: TRUE
f1027_out -> f1022_out :|: TRUE
f846_out -> f1027_out :|: TRUE
f1027_in -> f846_in :|: TRUE
f815_out -> f794_out :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f701_in -> f701_out :|: TRUE
f939_in -> f926_in :|: TRUE
f926_out -> f939_out :|: TRUE
f295_in -> f303_in :|: TRUE
f303_out -> f295_out :|: TRUE
f303_in -> f304_in :|: TRUE
f304_out -> f303_out :|: TRUE
f732_out -> f730_out :|: TRUE
f733_out -> f730_out :|: TRUE
f730_in -> f732_in :|: TRUE
f730_in -> f733_in :|: TRUE
f852_in -> f852_out :|: TRUE
f845_out -> f846_in :|: TRUE
f841_in -> f845_in :|: TRUE
f846_out -> f841_out :|: TRUE
f796_out -> f740_out :|: TRUE
f740_in -> f794_in :|: TRUE
f794_out -> f740_out :|: TRUE
f740_in -> f796_in :|: TRUE
f852_out -> f848_out :|: TRUE
f848_in -> f853_in :|: TRUE
f853_out -> f848_out :|: TRUE
f848_in -> f852_in :|: TRUE
f902_in -> f904_in :|: TRUE
f902_in -> f905_in :|: TRUE
f904_out -> f902_out :|: TRUE
f905_out -> f902_out :|: TRUE
f908_out -> f909_in :|: TRUE
f904_in -> f908_in :|: TRUE
f909_out -> f904_out :|: TRUE
f290_in -> f294_in :|: TRUE
f294_out -> f290_out :|: TRUE
f290_out -> f814_out :|: TRUE
f814_in -> f290_in :|: TRUE
f859_out -> f855_out :|: TRUE
f860_out -> f855_out :|: TRUE
f855_in -> f860_in :|: TRUE
f855_in -> f859_in :|: TRUE
f733_in -> f740_in :|: TRUE
f733_in -> f739_in :|: TRUE
f740_out -> f733_out :|: TRUE
f739_out -> f733_out :|: TRUE
f305_in -> f695_in :|: TRUE
f695_out -> f305_out :|: TRUE
f918_in -> f918_out :|: TRUE
f849_in -> f855_in :|: TRUE
f849_in -> f856_in :|: TRUE
f855_out -> f849_out :|: TRUE
f856_out -> f849_out :|: TRUE
f698_out -> f695_out :|: TRUE
f695_in -> f698_in :|: TRUE
f708_in -> f695_in :|: TRUE
f695_out -> f708_out :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x) -> f2_out(x) :|: TRUE
f7_out(x1) -> f4_out(x1) :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f4_in(x3) -> f8_in(x3) :|: TRUE
f8_out(x4) -> f4_out(x4) :|: TRUE
f71_out(x5) -> f8_out(x5) :|: TRUE
f8_in(x6) -> f72_in(x6) :|: TRUE
f8_in(x7) -> f71_in(x7) :|: TRUE
f72_out(x8) -> f8_out(x8) :|: TRUE
f289_out -> f72_out(x9) :|: TRUE
f288_out(T19) -> f72_out(T19) :|: TRUE
f72_in(x10) -> f289_in :|: TRUE
f72_in(x11) -> f288_in(x11) :|: TRUE
f288_in(x12) -> f290_in :|: TRUE
f291_out(x13) -> f288_out(x13) :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f724_out(x15) -> f291_out(x15) :|: TRUE
f723_out -> f724_in(x16) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE
f1029_out(x18) -> f724_out(x18) :|: TRUE
f1028_out -> f1029_in(x19) :|: TRUE
f724_in(x20) -> f1028_in :|: TRUE
f1028_in -> f723_in :|: TRUE
f723_out -> f1028_out :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(183) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f700_out -> f698_out :|: TRUE
f698_in -> f699_in :|: TRUE
f698_in -> f700_in :|: TRUE
f699_out -> f698_out :|: TRUE
f840_in -> f723_in :|: TRUE
f304_in -> f305_in :|: TRUE
f305_out -> f304_out :|: TRUE
f815_in -> f840_in :|: TRUE
f723_in -> f730_in :|: TRUE
f708_out -> f700_out :|: TRUE
f700_in -> f708_in :|: TRUE
f699_in -> f701_in :|: TRUE
f701_out -> f699_out :|: TRUE
f295_out -> f294_out :|: TRUE
f294_in -> f295_in :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f701_in -> f701_out :|: TRUE
f295_in -> f303_in :|: TRUE
f303_out -> f295_out :|: TRUE
f303_in -> f304_in :|: TRUE
f304_out -> f303_out :|: TRUE
f730_in -> f733_in :|: TRUE
f740_in -> f794_in :|: TRUE
f290_in -> f294_in :|: TRUE
f294_out -> f290_out :|: TRUE
f290_out -> f814_out :|: TRUE
f814_in -> f290_in :|: TRUE
f733_in -> f740_in :|: TRUE
f305_in -> f695_in :|: TRUE
f695_out -> f305_out :|: TRUE
f698_out -> f695_out :|: TRUE
f695_in -> f698_in :|: TRUE
f708_in -> f695_in :|: TRUE
f695_out -> f708_out :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE


----------------------------------------

(184)
Obligation:
Rules:
f700_out -> f698_out :|: TRUE
f698_in -> f699_in :|: TRUE
f698_in -> f700_in :|: TRUE
f699_out -> f698_out :|: TRUE
f840_in -> f723_in :|: TRUE
f304_in -> f305_in :|: TRUE
f305_out -> f304_out :|: TRUE
f815_in -> f840_in :|: TRUE
f723_in -> f730_in :|: TRUE
f708_out -> f700_out :|: TRUE
f700_in -> f708_in :|: TRUE
f699_in -> f701_in :|: TRUE
f701_out -> f699_out :|: TRUE
f295_out -> f294_out :|: TRUE
f294_in -> f295_in :|: TRUE
f814_out -> f815_in :|: TRUE
f794_in -> f814_in :|: TRUE
f701_in -> f701_out :|: TRUE
f295_in -> f303_in :|: TRUE
f303_out -> f295_out :|: TRUE
f303_in -> f304_in :|: TRUE
f304_out -> f303_out :|: TRUE
f730_in -> f733_in :|: TRUE
f740_in -> f794_in :|: TRUE
f290_in -> f294_in :|: TRUE
f294_out -> f290_out :|: TRUE
f290_out -> f814_out :|: TRUE
f814_in -> f290_in :|: TRUE
f733_in -> f740_in :|: TRUE
f305_in -> f695_in :|: TRUE
f695_out -> f305_out :|: TRUE
f698_out -> f695_out :|: TRUE
f695_in -> f698_in :|: TRUE
f708_in -> f695_in :|: TRUE
f695_out -> f708_out :|: TRUE
f290_out -> f291_in(x14) :|: TRUE
f291_in(x17) -> f723_in :|: TRUE

----------------------------------------

(185) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(186)
Obligation:
Rules:
f695_out -> f698_in :|: TRUE
f695_out -> f695_out :|: TRUE
f698_in -> f698_in :|: TRUE
f698_in -> f695_out :|: TRUE

----------------------------------------

(187) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(188)
Obligation:
Rules:
f695_out -> f698_in :|: TRUE
f695_out -> f695_out :|: TRUE
f698_in -> f698_in :|: TRUE
f698_in -> f695_out :|: TRUE

----------------------------------------

(189) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f695_out -> f698_in :|: TRUE
(2) f695_out -> f695_out :|: TRUE
(3) f698_in -> f698_in :|: TRUE
(4) f698_in -> f695_out :|: TRUE

Arcs:
(1) -> (3), (4)
(2) -> (1), (2)
(3) -> (3), (4)
(4) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(190)
Obligation:

Termination digraph:
Nodes:
(1) f695_out -> f698_in :|: TRUE
(2) f695_out -> f695_out :|: TRUE
(3) f698_in -> f695_out :|: TRUE
(4) f698_in -> f698_in :|: TRUE

Arcs:
(1) -> (3), (4)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (3), (4)

This digraph is fully evaluated!

----------------------------------------

(191) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f695_out()
f698_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(192)
Obligation:
Rules:
f695_out -> f698_in :|: TRUE
f695_out -> f695_out :|: TRUE
f698_in -> f695_out :|: TRUE
f698_in -> f698_in :|: TRUE

----------------------------------------

(193) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(2) :|: pc = 1 && TRUE
f(pc) -> f(1) :|: pc = 1 && TRUE
f(pc) -> f(1) :|: pc = 2 && TRUE
f(pc) -> f(2) :|: pc = 2 && TRUE
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 2)) and (((run1_0 * 1)) = ((1 * 1)) and T)) or (run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 1)) and T)) or (run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 2)) and T)) or (run2_0 = ((1 * 2)) and (((run1_0 * 1)) = ((1 * 2)) and T))) and (!(((run2_0 * 1)) = ((1 * 1)) and T) and !(((run2_0 * 1)) = ((1 * 1)) and T) and !(((run2_0 * 1)) = ((1 * 2)) and T) and !(((run2_0 * 1)) = ((1 * 2)) and T)))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 2)) and (((run1_0 * 1)) = ((1 * 1)) and T)) or (run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 1)) and T)) or (run2_0 = ((1 * 1)) and (((run1_0 * 1)) = ((1 * 2)) and T)) or (run2_0 = ((1 * 2)) and (((run1_0 * 1)) = ((1 * 2)) and T)))

----------------------------------------

(194)
NO
