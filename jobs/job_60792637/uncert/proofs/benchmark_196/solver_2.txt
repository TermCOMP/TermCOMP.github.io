YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/czEUi.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

countstack(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [SOUND, 0 ms]
(8) QDP
(9) UsableRulesReductionPairsProof [EQUIVALENT, 4 ms]
(10) QDP
(11) PisEmptyProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Clauses:

countstack(empty, 0).
countstack(push(nil, T), X) :- countstack(T, X).
countstack(push(cons(U, V), T), s(X)) :- countstack(push(U, push(V, T)), X).


Query: countstack(g,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(countstack (empty) (0))",
                null
            ],
            [
                "(countstack (push (nil) T) X)",
                "(countstack T X)"
            ],
            [
                "(countstack (push (cons U V) T) (s X))",
                "(countstack (push U (push V T)) X)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "190": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(countstack (push T44 (push T45 T46)) T48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45",
                        "T46"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "191": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(countstack (push T44 (push T45 T46)) T48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45",
                        "T46"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "192": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack (push T61 T62) T64)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T61",
                        "T62"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "193": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "194": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack (push T75 (push T76 (push T77 T78))) T80)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T75",
                        "T76",
                        "T77",
                        "T78"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "195": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "153": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack (push T35 (push T36 T37)) T39)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "154": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "155": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(countstack (push (nil) T5) T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "136": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T5) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "115": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "116": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(countstack T1 T2)",
                        "(countstack (empty) (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "117": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "118": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(countstack (empty) T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "119": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "140": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack T16 T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": [],
                    "exprvars": []
                }
            },
            "185": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "120": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T5) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "142": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "186": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack (push T44 (push T45 T46)) T48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45",
                        "T46"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "121": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(countstack T1 T2)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T1 T2)",
                            "(countstack (empty) (0))"
                        ],
                        [
                            "(countstack T1 T2)",
                            "(countstack (push (nil) X9) X10)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [
                        "X9",
                        "X10"
                    ],
                    "exprvars": []
                }
            },
            "143": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(countstack T5 T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "187": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "122": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T5) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "144": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T5) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "188": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(countstack (push T44 (push T45 T46)) T48)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(countstack (push T44 (push T45 T46)) T48)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(countstack (push T44 (push T45 T46)) T48)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45",
                        "T46"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "123": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(countstack T5 T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "189": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(countstack (push T44 (push T45 T46)) T48)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(countstack (push T44 (push T45 T46)) T48)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T44",
                        "T45",
                        "T46"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "124": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(countstack T5 T7)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T5) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "125": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "126": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "127": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "128": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(countstack T5 T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 115,
                "label": "EVAL with clause\ncountstack(empty, 0).\nand substitutionT1 -> empty,\nT2 -> 0"
            },
            {
                "from": 6,
                "to": 116,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 115,
                "to": 117,
                "label": "SUCCESS"
            },
            {
                "from": 116,
                "to": 120,
                "label": "EVAL with clause\ncountstack(push(nil, X9), X10) :- countstack(X9, X10).\nand substitutionX9 -> T5,\nT1 -> push(nil, T5),\nT2 -> T7,\nX10 -> T7,\nT6 -> T7"
            },
            {
                "from": 116,
                "to": 121,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 117,
                "to": 118,
                "label": "BACKTRACK\nfor clause: countstack(push(nil, T), X) :- countstack(T, X)because of non-unification"
            },
            {
                "from": 118,
                "to": 119,
                "label": "BACKTRACK\nfor clause: countstack(push(cons(U, V), T), s(X)) :- countstack(push(U, push(V, T)), X)because of non-unification"
            },
            {
                "from": 120,
                "to": 122,
                "label": "CASE"
            },
            {
                "from": 121,
                "to": 186,
                "label": "EVAL with clause\ncountstack(push(cons(X49, X50), X51), s(X52)) :- countstack(push(X49, push(X50, X51)), X52).\nand substitutionX49 -> T44,\nX50 -> T45,\nX51 -> T46,\nT1 -> push(cons(T44, T45), T46),\nX52 -> T48,\nT2 -> s(T48),\nT47 -> T48"
            },
            {
                "from": 121,
                "to": 187,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 122,
                "to": 123,
                "label": "PARALLEL"
            },
            {
                "from": 122,
                "to": 124,
                "label": "PARALLEL"
            },
            {
                "from": 123,
                "to": 125,
                "label": "EVAL with clause\ncountstack(empty, 0).\nand substitutionT5 -> empty,\nT7 -> 0"
            },
            {
                "from": 123,
                "to": 126,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 124,
                "to": 128,
                "label": "PARALLEL"
            },
            {
                "from": 124,
                "to": 136,
                "label": "PARALLEL"
            },
            {
                "from": 125,
                "to": 127,
                "label": "SUCCESS"
            },
            {
                "from": 128,
                "to": 140,
                "label": "EVAL with clause\ncountstack(push(nil, X19), X20) :- countstack(X19, X20).\nand substitutionX19 -> T16,\nT5 -> push(nil, T16),\nT7 -> T18,\nX20 -> T18,\nT17 -> T18"
            },
            {
                "from": 128,
                "to": 142,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 136,
                "to": 143,
                "label": "PARALLEL"
            },
            {
                "from": 136,
                "to": 144,
                "label": "PARALLEL"
            },
            {
                "from": 140,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T16\nT2 -> T18"
            },
            {
                "from": 143,
                "to": 153,
                "label": "EVAL with clause\ncountstack(push(cons(X37, X38), X39), s(X40)) :- countstack(push(X37, push(X38, X39)), X40).\nand substitutionX37 -> T35,\nX38 -> T36,\nX39 -> T37,\nT5 -> push(cons(T35, T36), T37),\nX40 -> T39,\nT7 -> s(T39),\nT38 -> T39"
            },
            {
                "from": 143,
                "to": 154,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 144,
                "to": 155,
                "label": "FAILURE"
            },
            {
                "from": 153,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> push(T35, push(T36, T37))\nT2 -> T39"
            },
            {
                "from": 155,
                "to": 185,
                "label": "BACKTRACK\nfor clause: countstack(push(cons(U, V), T), s(X)) :- countstack(push(U, push(V, T)), X)because of non-unification"
            },
            {
                "from": 186,
                "to": 188,
                "label": "CASE"
            },
            {
                "from": 188,
                "to": 189,
                "label": "BACKTRACK\nfor clause: countstack(empty, 0)because of non-unification"
            },
            {
                "from": 189,
                "to": 190,
                "label": "PARALLEL"
            },
            {
                "from": 189,
                "to": 191,
                "label": "PARALLEL"
            },
            {
                "from": 190,
                "to": 192,
                "label": "EVAL with clause\ncountstack(push(nil, X61), X62) :- countstack(X61, X62).\nand substitutionT44 -> nil,\nT45 -> T61,\nT46 -> T62,\nX61 -> push(T61, T62),\nT48 -> T64,\nX62 -> T64,\nT63 -> T64"
            },
            {
                "from": 190,
                "to": 193,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 191,
                "to": 194,
                "label": "EVAL with clause\ncountstack(push(cons(X71, X72), X73), s(X74)) :- countstack(push(X71, push(X72, X73)), X74).\nand substitutionX71 -> T75,\nX72 -> T76,\nT44 -> cons(T75, T76),\nT45 -> T77,\nT46 -> T78,\nX73 -> push(T77, T78),\nX74 -> T80,\nT48 -> s(T80),\nT79 -> T80"
            },
            {
                "from": 191,
                "to": 195,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 192,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> push(T61, T62)\nT2 -> T64"
            },
            {
                "from": 194,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> push(T75, push(T76, push(T77, T78)))\nT2 -> T80"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

countstackA(push(nil, push(nil, X1)), X2) :- countstackA(X1, X2).
countstackA(push(nil, push(cons(X1, X2), X3)), s(X4)) :- countstackA(push(X1, push(X2, X3)), X4).
countstackA(push(cons(nil, X1), X2), s(X3)) :- countstackA(push(X1, X2), X3).
countstackA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) :- countstackA(push(X1, push(X2, push(X3, X4))), X5).

Clauses:

countstackcA(empty, 0).
countstackcA(push(nil, empty), 0).
countstackcA(push(nil, push(nil, X1)), X2) :- countstackcA(X1, X2).
countstackcA(push(nil, push(cons(X1, X2), X3)), s(X4)) :- countstackcA(push(X1, push(X2, X3)), X4).
countstackcA(push(cons(nil, X1), X2), s(X3)) :- countstackcA(push(X1, X2), X3).
countstackcA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) :- countstackcA(push(X1, push(X2, push(X3, X4))), X5).

Afs:

countstackA(x1, x2)  =  countstackA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

countstackA_in_2: (b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, push(nil, X1)), X2) -> U1_GA(X1, X2, countstackA_in_ga(X1, X2))
   COUNTSTACKA_IN_GA(push(nil, push(nil, X1)), X2) -> COUNTSTACKA_IN_GA(X1, X2)
   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3)), s(X4)) -> U2_GA(X1, X2, X3, X4, countstackA_in_ga(push(X1, push(X2, X3)), X4))
   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3)), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2), s(X3)) -> U3_GA(X1, X2, X3, countstackA_in_ga(push(X1, X2), X3))
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2), s(X3)) -> COUNTSTACKA_IN_GA(push(X1, X2), X3)
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) -> U4_GA(X1, X2, X3, X4, X5, countstackA_in_ga(push(X1, push(X2, push(X3, X4))), X5))
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) -> COUNTSTACKA_IN_GA(push(X1, push(X2, push(X3, X4))), X5)

R is empty.
The argument filtering Pi contains the following mapping:
countstackA_in_ga(x1, x2)  =  countstackA_in_ga(x1)

push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U2_GA(x1, x2, x3, x4, x5)  =  U2_GA(x1, x2, x3, x5)

U3_GA(x1, x2, x3, x4)  =  U3_GA(x1, x2, x4)

U4_GA(x1, x2, x3, x4, x5, x6)  =  U4_GA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, push(nil, X1)), X2) -> U1_GA(X1, X2, countstackA_in_ga(X1, X2))
   COUNTSTACKA_IN_GA(push(nil, push(nil, X1)), X2) -> COUNTSTACKA_IN_GA(X1, X2)
   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3)), s(X4)) -> U2_GA(X1, X2, X3, X4, countstackA_in_ga(push(X1, push(X2, X3)), X4))
   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3)), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2), s(X3)) -> U3_GA(X1, X2, X3, countstackA_in_ga(push(X1, X2), X3))
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2), s(X3)) -> COUNTSTACKA_IN_GA(push(X1, X2), X3)
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) -> U4_GA(X1, X2, X3, X4, X5, countstackA_in_ga(push(X1, push(X2, push(X3, X4))), X5))
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) -> COUNTSTACKA_IN_GA(push(X1, push(X2, push(X3, X4))), X5)

R is empty.
The argument filtering Pi contains the following mapping:
countstackA_in_ga(x1, x2)  =  countstackA_in_ga(x1)

push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U2_GA(x1, x2, x3, x4, x5)  =  U2_GA(x1, x2, x3, x5)

U3_GA(x1, x2, x3, x4)  =  U3_GA(x1, x2, x4)

U4_GA(x1, x2, x3, x4, x5, x6)  =  U4_GA(x1, x2, x3, x4, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 4 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3)), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)
   COUNTSTACKA_IN_GA(push(nil, push(nil, X1)), X2) -> COUNTSTACKA_IN_GA(X1, X2)
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2), s(X3)) -> COUNTSTACKA_IN_GA(push(X1, X2), X3)
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4), s(s(X5))) -> COUNTSTACKA_IN_GA(push(X1, push(X2, push(X3, X4))), X5)

R is empty.
The argument filtering Pi contains the following mapping:
push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3))) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)))
   COUNTSTACKA_IN_GA(push(nil, push(nil, X1))) -> COUNTSTACKA_IN_GA(X1)
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2)) -> COUNTSTACKA_IN_GA(push(X1, X2))
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, push(X3, X4))))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   COUNTSTACKA_IN_GA(push(nil, push(cons(X1, X2), X3))) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)))
   COUNTSTACKA_IN_GA(push(nil, push(nil, X1))) -> COUNTSTACKA_IN_GA(X1)
   COUNTSTACKA_IN_GA(push(cons(nil, X1), X2)) -> COUNTSTACKA_IN_GA(push(X1, X2))
   COUNTSTACKA_IN_GA(push(cons(cons(X1, X2), X3), X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, push(X3, X4))))
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(COUNTSTACKA_IN_GA(x_1)) = 2*x_1
   POL(cons(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(nil) = 0
   POL(push(x_1, x_2)) = x_1 + x_2


----------------------------------------

(10)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(12)
YES
