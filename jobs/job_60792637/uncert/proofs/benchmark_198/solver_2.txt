MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/dHcKB.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

f(g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [SOUND, 0 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) MRRProof [EQUIVALENT, 1 ms]
            (20) QDP
            (21) PisEmptyProof [EQUIVALENT, 0 ms]
            (22) YES
        (23) PiDP
            (24) UsableRulesProof [EQUIVALENT, 0 ms]
            (25) PiDP
            (26) PiDPToQDPProof [SOUND, 0 ms]
            (27) QDP
            (28) MRRProof [EQUIVALENT, 7 ms]
            (29) QDP
            (30) RFCMatchBoundsDPProof [EQUIVALENT, 0 ms]
            (31) YES
        (32) PiDP
            (33) UsableRulesProof [EQUIVALENT, 0 ms]
            (34) PiDP
            (35) PiDPToQDPProof [SOUND, 0 ms]
            (36) QDP
            (37) TransformationProof [SOUND, 0 ms]
            (38) QDP
            (39) TransformationProof [SOUND, 0 ms]
            (40) QDP
            (41) TransformationProof [EQUIVALENT, 0 ms]
            (42) QDP
            (43) TransformationProof [EQUIVALENT, 0 ms]
            (44) QDP
            (45) DependencyGraphProof [EQUIVALENT, 0 ms]
            (46) QDP
(47) PrologToPiTRSProof [SOUND, 0 ms]
(48) PiTRS
    (49) DependencyPairsProof [EQUIVALENT, 0 ms]
    (50) PiDP
    (51) DependencyGraphProof [EQUIVALENT, 0 ms]
    (52) AND
        (53) PiDP
            (54) UsableRulesProof [EQUIVALENT, 0 ms]
            (55) PiDP
            (56) PiDPToQDPProof [SOUND, 1 ms]
            (57) QDP
            (58) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (59) YES
        (60) PiDP
            (61) UsableRulesProof [EQUIVALENT, 0 ms]
            (62) PiDP
            (63) PiDPToQDPProof [SOUND, 0 ms]
            (64) QDP
            (65) QDPQMonotonicMRRProof [EQUIVALENT, 8 ms]
            (66) QDP
            (67) DependencyGraphProof [EQUIVALENT, 0 ms]
            (68) TRUE
        (69) PiDP
            (70) UsableRulesProof [EQUIVALENT, 0 ms]
            (71) PiDP
            (72) PiDPToQDPProof [SOUND, 0 ms]
            (73) QDP
            (74) TransformationProof [EQUIVALENT, 0 ms]
            (75) QDP
            (76) QDPQMonotonicMRRProof [EQUIVALENT, 5 ms]
            (77) QDP
            (78) QDPOrderProof [EQUIVALENT, 5 ms]
            (79) QDP
            (80) DependencyGraphProof [EQUIVALENT, 0 ms]
            (81) TRUE
        (82) PiDP
            (83) UsableRulesProof [EQUIVALENT, 0 ms]
            (84) PiDP
            (85) PiDPToQDPProof [SOUND, 0 ms]
            (86) QDP
(87) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(88) TRIPLES
    (89) TriplesToPiDPProof [SOUND, 4 ms]
    (90) PiDP
    (91) DependencyGraphProof [EQUIVALENT, 0 ms]
    (92) AND
        (93) PiDP
            (94) UsableRulesProof [EQUIVALENT, 0 ms]
            (95) PiDP
            (96) PiDPToQDPProof [SOUND, 0 ms]
            (97) QDP
            (98) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (99) YES
        (100) PiDP
            (101) UsableRulesProof [EQUIVALENT, 0 ms]
            (102) PiDP
            (103) PiDPToQDPProof [SOUND, 0 ms]
            (104) QDP
            (105) QDPQMonotonicMRRProof [EQUIVALENT, 6 ms]
            (106) QDP
            (107) QDPOrderProof [EQUIVALENT, 0 ms]
            (108) QDP
            (109) PisEmptyProof [EQUIVALENT, 0 ms]
            (110) YES
        (111) PiDP
            (112) UsableRulesProof [EQUIVALENT, 0 ms]
            (113) PiDP
            (114) PiDPToQDPProof [SOUND, 0 ms]
            (115) QDP
            (116) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (117) YES
        (118) PiDP
            (119) UsableRulesProof [EQUIVALENT, 0 ms]
            (120) PiDP
            (121) PiDPToQDPProof [SOUND, 0 ms]
            (122) QDP
            (123) TransformationProof [EQUIVALENT, 0 ms]
            (124) QDP
            (125) UsableRulesProof [EQUIVALENT, 0 ms]
            (126) QDP
            (127) QReductionProof [EQUIVALENT, 0 ms]
            (128) QDP
            (129) QDPQMonotonicMRRProof [EQUIVALENT, 7 ms]
            (130) QDP
            (131) DependencyGraphProof [EQUIVALENT, 0 ms]
            (132) TRUE
        (133) PiDP
            (134) UsableRulesProof [EQUIVALENT, 0 ms]
            (135) PiDP
            (136) PiDPToQDPProof [SOUND, 0 ms]
            (137) QDP
            (138) TransformationProof [EQUIVALENT, 0 ms]
            (139) QDP
            (140) QDPQMonotonicMRRProof [EQUIVALENT, 171 ms]
            (141) QDP
(142) PrologToTRSTransformerProof [SOUND, 26 ms]
(143) QTRS
    (144) Overlay + Local Confluence [EQUIVALENT, 0 ms]
    (145) QTRS
    (146) DependencyPairsProof [EQUIVALENT, 0 ms]
    (147) QDP
    (148) DependencyGraphProof [EQUIVALENT, 0 ms]
    (149) AND
        (150) QDP
            (151) UsableRulesProof [EQUIVALENT, 0 ms]
            (152) QDP
            (153) QReductionProof [EQUIVALENT, 0 ms]
            (154) QDP
            (155) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (156) YES
        (157) QDP
            (158) UsableRulesProof [EQUIVALENT, 0 ms]
            (159) QDP
            (160) QReductionProof [EQUIVALENT, 0 ms]
            (161) QDP
            (162) QDPOrderProof [EQUIVALENT, 7 ms]
            (163) QDP
            (164) DependencyGraphProof [EQUIVALENT, 0 ms]
            (165) TRUE
        (166) QDP
            (167) UsableRulesProof [EQUIVALENT, 0 ms]
            (168) QDP
            (169) QReductionProof [EQUIVALENT, 0 ms]
            (170) QDP
            (171) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (172) YES
        (173) QDP
            (174) UsableRulesProof [EQUIVALENT, 0 ms]
            (175) QDP
            (176) QReductionProof [EQUIVALENT, 0 ms]
            (177) QDP
            (178) QDPOrderProof [EQUIVALENT, 78 ms]
            (179) QDP
            (180) DependencyGraphProof [EQUIVALENT, 0 ms]
            (181) TRUE
        (182) QDP
            (183) MNOCProof [EQUIVALENT, 0 ms]
            (184) QDP
            (185) NonLoopProof [COMPLETE, 6890 ms]
            (186) NO
(187) PrologToIRSwTTransformerProof [SOUND, 30 ms]
(188) AND
    (189) IRSwT
        (190) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (191) TRUE
    (192) IRSwT
        (193) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (194) TRUE
    (195) IRSwT
        (196) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (197) IRSwT
        (198) IntTRSCompressionProof [EQUIVALENT, 9 ms]
        (199) IRSwT
        (200) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (201) IRSwT
        (202) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (203) IRSwT
        (204) TempFilterProof [SOUND, 1 ms]
        (205) IRSwT
        (206) IRSwTToQDPProof [SOUND, 0 ms]
        (207) QDP
        (208) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (209) YES
    (210) IRSwT
        (211) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (212) IRSwT
        (213) IntTRSCompressionProof [EQUIVALENT, 15 ms]
        (214) IRSwT
        (215) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (216) IRSwT
        (217) IRSwTTerminationDigraphProof [EQUIVALENT, 25 ms]
        (218) IRSwT
        (219) IntTRSCompressionProof [EQUIVALENT, 5 ms]
        (220) IRSwT
        (221) IRSwTToIntTRSProof [SOUND, 11 ms]
        (222) IRSwT
        (223) IntTRSCompressionProof [EQUIVALENT, 5 ms]
        (224) IRSwT
    (225) IRSwT


----------------------------------------

(0)
Obligation:
Clauses:

pred(0, 0).
pred(s(0), 0).
pred(s(s(X)), s(Y)) :- pred(s(X), Y).
double(0, 0).
double(s(X), s(s(Y))) :- ','(pred(s(X), Z), double(Z, Y)).
half(0, 0).
half(s(s(X)), s(U)) :- ','(pred(s(s(X)), Y), ','(pred(Y, Z), half(Z, U))).
f(s(X)) :- ','(half(s(X), Y), ','(double(Y, Z), f(Z))).


Query: f(g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

f_in_1: (b)

half_in_2: (b,f)

pred_in_2: (b,f)

double_in_2: (b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))
   F_IN_G(s(X)) -> HALF_IN_GA(s(X), Y)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))
   HALF_IN_GA(s(s(X)), s(U)) -> PRED_IN_GA(s(s(X)), Y)
   PRED_IN_GA(s(s(X)), s(Y)) -> U1_GA(X, Y, pred_in_ga(s(X), Y))
   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> PRED_IN_GA(Y, Z)
   U5_GA(X, U, pred_out_ga(Y, Z)) -> U6_GA(X, U, half_in_ga(Z, U))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U7_G(X, half_out_ga(s(X), Y)) -> DOUBLE_IN_GA(Y, Z)
   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   DOUBLE_IN_GA(s(X), s(s(Y))) -> PRED_IN_GA(s(X), Z)
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> U3_GA(X, Y, double_in_ga(Z, Y))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)
   U8_G(X, double_out_ga(Y, Z)) -> U9_G(X, f_in_g(Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x2)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x3)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x3)

U5_GA(x1, x2, x3)  =  U5_GA(x3)

U6_GA(x1, x2, x3)  =  U6_GA(x3)

U8_G(x1, x2)  =  U8_G(x2)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x3)

U3_GA(x1, x2, x3)  =  U3_GA(x3)

U9_G(x1, x2)  =  U9_G(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))
   F_IN_G(s(X)) -> HALF_IN_GA(s(X), Y)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))
   HALF_IN_GA(s(s(X)), s(U)) -> PRED_IN_GA(s(s(X)), Y)
   PRED_IN_GA(s(s(X)), s(Y)) -> U1_GA(X, Y, pred_in_ga(s(X), Y))
   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> PRED_IN_GA(Y, Z)
   U5_GA(X, U, pred_out_ga(Y, Z)) -> U6_GA(X, U, half_in_ga(Z, U))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U7_G(X, half_out_ga(s(X), Y)) -> DOUBLE_IN_GA(Y, Z)
   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   DOUBLE_IN_GA(s(X), s(s(Y))) -> PRED_IN_GA(s(X), Z)
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> U3_GA(X, Y, double_in_ga(Z, Y))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)
   U8_G(X, double_out_ga(Y, Z)) -> U9_G(X, f_in_g(Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x2)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x3)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x3)

U5_GA(x1, x2, x3)  =  U5_GA(x3)

U6_GA(x1, x2, x3)  =  U6_GA(x3)

U8_G(x1, x2)  =  U8_G(x2)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x3)

U3_GA(x1, x2, x3)  =  U3_GA(x3)

U9_G(x1, x2)  =  U9_G(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 9 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X))) -> PRED_IN_GA(s(X))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PRED_IN_GA(s(s(X))) -> PRED_IN_GA(s(X))
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)

The TRS R consists of the following rules:

   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X)) -> U2_GA(pred_in_ga(s(X)))
   U2_GA(pred_out_ga(Z)) -> DOUBLE_IN_GA(Z)

The TRS R consists of the following rules:

   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   DOUBLE_IN_GA(s(X)) -> U2_GA(pred_in_ga(s(X)))
   U2_GA(pred_out_ga(Z)) -> DOUBLE_IN_GA(Z)

Strictly oriented rules of the TRS R:

   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))

Used ordering: Knuth-Bendix order [KBO] with precedence:s_1 > pred_in_ga_1 > DOUBLE_IN_GA_1 > U1_ga_1 > pred_out_ga_1 > 0 > U2_GA_1

and weight map:

   0=1
   pred_in_ga_1=1
   s_1=4
   pred_out_ga_1=3
   U1_ga_1=4
   DOUBLE_IN_GA_1=3
   U2_GA_1=1

The variable weight is 1

----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES

----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x3)

U5_GA(x1, x2, x3)  =  U5_GA(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(25)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))

The TRS R consists of the following rules:

   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x3)

U5_GA(x1, x2, x3)  =  U5_GA(x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(26) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U4_GA(pred_out_ga(Y)) -> U5_GA(pred_in_ga(Y))
   U5_GA(pred_out_ga(Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(pred_in_ga(s(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0)
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(28) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   pred_in_ga(s(0)) -> pred_out_ga(0)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(HALF_IN_GA(x_1)) = 2*x_1
   POL(U1_ga(x_1)) = 2 + x_1
   POL(U4_GA(x_1)) = x_1
   POL(U5_GA(x_1)) = x_1
   POL(pred_in_ga(x_1)) = 2*x_1
   POL(pred_out_ga(x_1)) = 2*x_1
   POL(s(x_1)) = 1 + x_1


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U4_GA(pred_out_ga(Y)) -> U5_GA(pred_in_ga(Y))
   U5_GA(pred_out_ga(Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(pred_in_ga(s(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(30) RFCMatchBoundsDPProof (EQUIVALENT)
Termination of the TRS P cup R can be shown by a matchbound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies finiteness of the given DP problem.
The following rules (P cup R) were used to construct the certificate:

   pred_in_ga(0) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   U4_GA(pred_out_ga(Y)) -> U5_GA(pred_in_ga(Y))
   U5_GA(pred_out_ga(Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(pred_in_ga(s(s(X))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167

Node 1147 is start node and node 1148 is final node.

Those nodes are connected through the following edges:

* 1147 to 1150 labelled pred_out_ga_1(0)* 1147 to 1151 labelled U1_ga_1(0)* 1147 to 1152 labelled pred_out_ga_1(0)* 1147 to 1154 labelled U5_GA_1(0)* 1147 to 1148 labelled HALF_IN_GA_1(0)* 1147 to 1155 labelled U4_GA_1(0)* 1147 to 1160 labelled U4_GA_1(1)* 1147 to 1163 labelled HALF_IN_GA_1(1)* 1148 to 1148 labelled #_1(0)* 1150 to 1148 labelled 0(0)* 1151 to 1152 labelled pred_in_ga_1(0)* 1151 to 1164 labelled U1_ga_1(1)* 1152 to 1148 labelled s_1(0)* 1154 to 1148 labelled pred_in_ga_1(0)* 1154 to 1163 labelled pred_out_ga_1(1)* 1154 to 1164 labelled U1_ga_1(1)* 1155 to 1156 labelled pred_in_ga_1(0)* 1155 to 1164 labelled U1_ga_1(1)* 1156 to 1157 labelled s_1(0)* 1157 to 1148 labelled s_1(0)* 1160 to 1161 labelled pred_in_ga_1(1)* 1160 to 1166 labelled U1_ga_1(2)* 1161 to 1162 labelled s_1(1)* 1162 to 1148 labelled s_1(1)* 1163 to 1148 labelled 0(1)* 1164 to 1165 labelled pred_in_ga_1(1)* 1164 to 1164 labelled U1_ga_1(1)* 1165 to 1148 labelled s_1(1)* 1166 to 1167 labelled pred_in_ga_1(2)* 1166 to 1164 labelled U1_ga_1(1)* 1167 to 1148 labelled s_1(2)


----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

U8_g(x1, x2)  =  U8_g(x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

U9_g(x1, x2)  =  U9_g(x2)

f_out_g(x1)  =  f_out_g

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x2)

U8_G(x1, x2)  =  U8_G(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(33) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(34)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))

The TRS R consists of the following rules:

   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   half_in_ga(0, 0) -> half_out_ga(0, 0)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x2)

U4_ga(x1, x2, x3)  =  U4_ga(x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x2)

U1_ga(x1, x2, x3)  =  U1_ga(x3)

U5_ga(x1, x2, x3)  =  U5_ga(x3)

U6_ga(x1, x2, x3)  =  U6_ga(x3)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x2)

U2_ga(x1, x2, x3)  =  U2_ga(x3)

U3_ga(x1, x2, x3)  =  U3_ga(x3)

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x2)

U8_G(x1, x2)  =  U8_G(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(35) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_G(half_out_ga(Y)) -> U8_G(double_in_ga(Y))
   U8_G(double_out_ga(Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(half_in_ga(s(X)))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(37) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U7_G(half_out_ga(Y)) -> U8_G(double_in_ga(Y)) at position [0] we obtained the following new rules [LPAR04]:

   (U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0)),U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0)))
   (U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0)))),U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0)))))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_G(double_out_ga(Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(half_in_ga(s(X)))
   U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0))
   U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0))))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(39) TransformationProof (SOUND)
By narrowing [LPAR04] the rule F_IN_G(s(X)) -> U7_G(half_in_ga(s(X))) at position [0] we obtained the following new rules [LPAR04]:

   (F_IN_G(s(s(x0))) -> U7_G(U4_ga(pred_in_ga(s(s(x0))))),F_IN_G(s(s(x0))) -> U7_G(U4_ga(pred_in_ga(s(s(x0))))))


----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_G(double_out_ga(Z)) -> F_IN_G(Z)
   U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0))
   U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0))))
   F_IN_G(s(s(x0))) -> U7_G(U4_ga(pred_in_ga(s(s(x0)))))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F_IN_G(s(s(x0))) -> U7_G(U4_ga(pred_in_ga(s(s(x0))))) at position [0,0] we obtained the following new rules [LPAR04]:

   (F_IN_G(s(s(x0))) -> U7_G(U4_ga(U1_ga(pred_in_ga(s(x0))))),F_IN_G(s(s(x0))) -> U7_G(U4_ga(U1_ga(pred_in_ga(s(x0))))))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U8_G(double_out_ga(Z)) -> F_IN_G(Z)
   U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0))
   U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0))))
   F_IN_G(s(s(x0))) -> U7_G(U4_ga(U1_ga(pred_in_ga(s(x0)))))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule U8_G(double_out_ga(Z)) -> F_IN_G(Z) we obtained the following new rules [LPAR04]:

   (U8_G(double_out_ga(s(s(y_0)))) -> F_IN_G(s(s(y_0))),U8_G(double_out_ga(s(s(y_0)))) -> F_IN_G(s(s(y_0))))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_G(half_out_ga(0)) -> U8_G(double_out_ga(0))
   U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0))))
   F_IN_G(s(s(x0))) -> U7_G(U4_ga(U1_ga(pred_in_ga(s(x0)))))
   U8_G(double_out_ga(s(s(y_0)))) -> F_IN_G(s(s(y_0)))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(45) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_G(half_out_ga(s(x0))) -> U8_G(U2_ga(pred_in_ga(s(x0))))
   U8_G(double_out_ga(s(s(y_0)))) -> F_IN_G(s(s(y_0)))
   F_IN_G(s(s(x0))) -> U7_G(U4_ga(U1_ga(pred_in_ga(s(x0)))))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0)
   double_in_ga(s(X)) -> U2_ga(pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(pred_in_ga(s(s(X))))
   U2_ga(pred_out_ga(Z)) -> U3_ga(double_in_ga(Z))
   U4_ga(pred_out_ga(Y)) -> U5_ga(pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(0)
   pred_in_ga(s(s(X))) -> U1_ga(pred_in_ga(s(X)))
   U3_ga(double_out_ga(Y)) -> double_out_ga(s(s(Y)))
   U5_ga(pred_out_ga(Z)) -> U6_ga(half_in_ga(Z))
   U1_ga(pred_out_ga(Y)) -> pred_out_ga(s(Y))
   pred_in_ga(0) -> pred_out_ga(0)
   U6_ga(half_out_ga(U)) -> half_out_ga(s(U))
   half_in_ga(0) -> half_out_ga(0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0)
   U4_ga(x0)
   pred_in_ga(x0)
   U3_ga(x0)
   U5_ga(x0)
   U1_ga(x0)
   U6_ga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(47) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

f_in_1: (b)

half_in_2: (b,f)

pred_in_2: (b,f)

double_in_2: (b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(48)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)



----------------------------------------

(49) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))
   F_IN_G(s(X)) -> HALF_IN_GA(s(X), Y)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))
   HALF_IN_GA(s(s(X)), s(U)) -> PRED_IN_GA(s(s(X)), Y)
   PRED_IN_GA(s(s(X)), s(Y)) -> U1_GA(X, Y, pred_in_ga(s(X), Y))
   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> PRED_IN_GA(Y, Z)
   U5_GA(X, U, pred_out_ga(Y, Z)) -> U6_GA(X, U, half_in_ga(Z, U))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U7_G(X, half_out_ga(s(X), Y)) -> DOUBLE_IN_GA(Y, Z)
   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   DOUBLE_IN_GA(s(X), s(s(Y))) -> PRED_IN_GA(s(X), Z)
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> U3_GA(X, Y, double_in_ga(Z, Y))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)
   U8_G(X, double_out_ga(Y, Z)) -> U9_G(X, f_in_g(Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U6_GA(x1, x2, x3)  =  U6_GA(x1, x3)

U8_G(x1, x2)  =  U8_G(x1, x2)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

U9_G(x1, x2)  =  U9_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(50)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))
   F_IN_G(s(X)) -> HALF_IN_GA(s(X), Y)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))
   HALF_IN_GA(s(s(X)), s(U)) -> PRED_IN_GA(s(s(X)), Y)
   PRED_IN_GA(s(s(X)), s(Y)) -> U1_GA(X, Y, pred_in_ga(s(X), Y))
   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> PRED_IN_GA(Y, Z)
   U5_GA(X, U, pred_out_ga(Y, Z)) -> U6_GA(X, U, half_in_ga(Z, U))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U7_G(X, half_out_ga(s(X), Y)) -> DOUBLE_IN_GA(Y, Z)
   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   DOUBLE_IN_GA(s(X), s(s(Y))) -> PRED_IN_GA(s(X), Z)
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> U3_GA(X, Y, double_in_ga(Z, Y))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)
   U8_G(X, double_out_ga(Y, Z)) -> U9_G(X, f_in_g(Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U6_GA(x1, x2, x3)  =  U6_GA(x1, x3)

U8_G(x1, x2)  =  U8_G(x1, x2)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

U9_G(x1, x2)  =  U9_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(51) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 9 less nodes.
----------------------------------------

(52)
Complex Obligation (AND)

----------------------------------------

(53)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(54) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(55)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X)), s(Y)) -> PRED_IN_GA(s(X), Y)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

PRED_IN_GA(x1, x2)  =  PRED_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(56) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(57)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PRED_IN_GA(s(s(X))) -> PRED_IN_GA(s(X))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(58) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PRED_IN_GA(s(s(X))) -> PRED_IN_GA(s(X))
The graph contains the following edges 1 > 1


----------------------------------------

(59)
YES

----------------------------------------

(60)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(61) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(62)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X), s(s(Y))) -> U2_GA(X, Y, pred_in_ga(s(X), Z))
   U2_GA(X, Y, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z, Y)

The TRS R consists of the following rules:

   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

DOUBLE_IN_GA(x1, x2)  =  DOUBLE_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(63) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(64)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X)) -> U2_GA(X, pred_in_ga(s(X)))
   U2_GA(X, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z)

The TRS R consists of the following rules:

   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(65) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   U2_GA(X, pred_out_ga(s(X), Z)) -> DOUBLE_IN_GA(Z)

Strictly oriented rules of the TRS R:

   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(DOUBLE_IN_GA(x_1)) = 2 + x_1
   POL(U1_ga(x_1, x_2)) = 2*x_2
   POL(U2_GA(x_1, x_2)) = 2 + x_2
   POL(pred_in_ga(x_1)) = x_1
   POL(pred_out_ga(x_1, x_2)) = 2 + x_2
   POL(s(x_1)) = 1 + 2*x_1


----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE_IN_GA(s(X)) -> U2_GA(X, pred_in_ga(s(X)))

The TRS R consists of the following rules:

   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(67) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(68)
TRUE

----------------------------------------

(69)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(70) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(71)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U4_GA(X, U, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, U, pred_in_ga(Y, Z))
   U5_GA(X, U, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z, U)
   HALF_IN_GA(s(s(X)), s(U)) -> U4_GA(X, U, pred_in_ga(s(s(X)), Y))

The TRS R consists of the following rules:

   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

HALF_IN_GA(x1, x2)  =  HALF_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(72) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(73)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U4_GA(X, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, pred_in_ga(Y))
   U5_GA(X, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(X, pred_in_ga(s(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(74) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule HALF_IN_GA(s(s(X))) -> U4_GA(X, pred_in_ga(s(s(X)))) at position [1] we obtained the following new rules [LPAR04]:

   (HALF_IN_GA(s(s(X))) -> U4_GA(X, U1_ga(X, pred_in_ga(s(X)))),HALF_IN_GA(s(s(X))) -> U4_GA(X, U1_ga(X, pred_in_ga(s(X)))))


----------------------------------------

(75)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U4_GA(X, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, pred_in_ga(Y))
   U5_GA(X, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(X, U1_ga(X, pred_in_ga(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(76) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(HALF_IN_GA(x_1)) = 2*x_1
   POL(U1_ga(x_1, x_2)) = 2*x_2
   POL(U4_GA(x_1, x_2)) = 2*x_2
   POL(U5_GA(x_1, x_2)) = 2*x_2
   POL(pred_in_ga(x_1)) = x_1
   POL(pred_out_ga(x_1, x_2)) = x_2
   POL(s(x_1)) = 2*x_1


----------------------------------------

(77)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U4_GA(X, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, pred_in_ga(Y))
   U5_GA(X, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(X, U1_ga(X, pred_in_ga(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0, 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(78) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U4_GA(X, pred_out_ga(s(s(X)), Y)) -> U5_GA(X, pred_in_ga(Y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U5_GA_2(x_1, x_2) ) = 2
POL( pred_in_ga_1(x_1) ) = max{0, -2}
POL( 0 ) = 0
POL( pred_out_ga_2(x_1, x_2) ) = 2x_1 + 1
POL( U1_ga_2(x_1, x_2) ) = x_2
POL( U4_GA_2(x_1, x_2) ) = 2x_2 + 2
POL( s_1(x_1) ) = 2
POL( HALF_IN_GA_1(x_1) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))


----------------------------------------

(79)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_GA(X, pred_out_ga(Y, Z)) -> HALF_IN_GA(Z)
   HALF_IN_GA(s(s(X))) -> U4_GA(X, U1_ga(X, pred_in_ga(s(X))))

The TRS R consists of the following rules:

   pred_in_ga(0) -> pred_out_ga(0, 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))

The set Q consists of the following terms:

   pred_in_ga(x0)
   U1_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(80) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(81)
TRUE

----------------------------------------

(82)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))

The TRS R consists of the following rules:

   f_in_g(s(X)) -> U7_g(X, half_in_ga(s(X), Y))
   half_in_ga(0, 0) -> half_out_ga(0, 0)
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   U7_g(X, half_out_ga(s(X), Y)) -> U8_g(X, double_in_ga(Y, Z))
   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U8_g(X, double_out_ga(Y, Z)) -> U9_g(X, f_in_g(Z))
   U9_g(X, f_out_g(Z)) -> f_out_g(s(X))

The argument filtering Pi contains the following mapping:
f_in_g(x1)  =  f_in_g(x1)

s(x1)  =  s(x1)

U7_g(x1, x2)  =  U7_g(x1, x2)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

U8_g(x1, x2)  =  U8_g(x1, x2)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

U9_g(x1, x2)  =  U9_g(x1, x2)

f_out_g(x1)  =  f_out_g(x1)

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

U8_G(x1, x2)  =  U8_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(83) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(84)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y, Z))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X), Y))

The TRS R consists of the following rules:

   double_in_ga(0, 0) -> double_out_ga(0, 0)
   double_in_ga(s(X), s(s(Y))) -> U2_ga(X, Y, pred_in_ga(s(X), Z))
   half_in_ga(s(s(X)), s(U)) -> U4_ga(X, U, pred_in_ga(s(s(X)), Y))
   U2_ga(X, Y, pred_out_ga(s(X), Z)) -> U3_ga(X, Y, double_in_ga(Z, Y))
   U4_ga(X, U, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, U, pred_in_ga(Y, Z))
   pred_in_ga(s(0), 0) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X)), s(Y)) -> U1_ga(X, Y, pred_in_ga(s(X), Y))
   U3_ga(X, Y, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U5_ga(X, U, pred_out_ga(Y, Z)) -> U6_ga(X, U, half_in_ga(Z, U))
   U1_ga(X, Y, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   pred_in_ga(0, 0) -> pred_out_ga(0, 0)
   U6_ga(X, U, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   half_in_ga(0, 0) -> half_out_ga(0, 0)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

half_in_ga(x1, x2)  =  half_in_ga(x1)

0  =  0

half_out_ga(x1, x2)  =  half_out_ga(x1, x2)

U4_ga(x1, x2, x3)  =  U4_ga(x1, x3)

pred_in_ga(x1, x2)  =  pred_in_ga(x1)

pred_out_ga(x1, x2)  =  pred_out_ga(x1, x2)

U1_ga(x1, x2, x3)  =  U1_ga(x1, x3)

U5_ga(x1, x2, x3)  =  U5_ga(x1, x3)

U6_ga(x1, x2, x3)  =  U6_ga(x1, x3)

double_in_ga(x1, x2)  =  double_in_ga(x1)

double_out_ga(x1, x2)  =  double_out_ga(x1, x2)

U2_ga(x1, x2, x3)  =  U2_ga(x1, x3)

U3_ga(x1, x2, x3)  =  U3_ga(x1, x3)

F_IN_G(x1)  =  F_IN_G(x1)

U7_G(x1, x2)  =  U7_G(x1, x2)

U8_G(x1, x2)  =  U8_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(85) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(86)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_G(X, half_out_ga(s(X), Y)) -> U8_G(X, double_in_ga(Y))
   U8_G(X, double_out_ga(Y, Z)) -> F_IN_G(Z)
   F_IN_G(s(X)) -> U7_G(X, half_in_ga(s(X)))

The TRS R consists of the following rules:

   double_in_ga(0) -> double_out_ga(0, 0)
   double_in_ga(s(X)) -> U2_ga(X, pred_in_ga(s(X)))
   half_in_ga(s(s(X))) -> U4_ga(X, pred_in_ga(s(s(X))))
   U2_ga(X, pred_out_ga(s(X), Z)) -> U3_ga(X, double_in_ga(Z))
   U4_ga(X, pred_out_ga(s(s(X)), Y)) -> U5_ga(X, pred_in_ga(Y))
   pred_in_ga(s(0)) -> pred_out_ga(s(0), 0)
   pred_in_ga(s(s(X))) -> U1_ga(X, pred_in_ga(s(X)))
   U3_ga(X, double_out_ga(Z, Y)) -> double_out_ga(s(X), s(s(Y)))
   U5_ga(X, pred_out_ga(Y, Z)) -> U6_ga(X, half_in_ga(Z))
   U1_ga(X, pred_out_ga(s(X), Y)) -> pred_out_ga(s(s(X)), s(Y))
   pred_in_ga(0) -> pred_out_ga(0, 0)
   U6_ga(X, half_out_ga(Z, U)) -> half_out_ga(s(s(X)), s(U))
   half_in_ga(0) -> half_out_ga(0, 0)

The set Q consists of the following terms:

   double_in_ga(x0)
   half_in_ga(x0)
   U2_ga(x0, x1)
   U4_ga(x0, x1)
   pred_in_ga(x0)
   U3_ga(x0, x1)
   U5_ga(x0, x1)
   U1_ga(x0, x1)
   U6_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(87) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(pred (0) (0))",
                null
            ],
            [
                "(pred (s (0)) (0))",
                null
            ],
            [
                "(pred (s (s X)) (s Y))",
                "(pred (s X) Y)"
            ],
            [
                "(double (0) (0))",
                null
            ],
            [
                "(double (s X) (s (s Y)))",
                "(',' (pred (s X) Z) (double Z Y))"
            ],
            [
                "(half (0) (0))",
                null
            ],
            [
                "(half (s (s X)) (s U))",
                "(',' (pred (s (s X)) Y) (',' (pred Y Z) (half Z U)))"
            ],
            [
                "(f (s X))",
                "(',' (half (s X) Y) (',' (double Y Z) (f Z)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "48": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T10) X26)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "470": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(double (s T18) X4)"
                    },
                    {
                        "clause": 4,
                        "scope": 7,
                        "term": "(double (s T18) X4)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "471": {
                "goal": [{
                    "clause": 4,
                    "scope": 7,
                    "term": "(double (s T18) X4)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "472": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s T27) X67) (double X67 X68))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T27"],
                    "free": [
                        "X68",
                        "X67"
                    ],
                    "exprvars": []
                }
            },
            "473": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T27) X67)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T27"],
                    "free": ["X67"],
                    "exprvars": []
                }
            },
            "474": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double T28 X68)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "475": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(double T28 X68)"
                    },
                    {
                        "clause": 4,
                        "scope": 8,
                        "term": "(double T28 X68)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [{
                    "clause": 3,
                    "scope": 8,
                    "term": "(double T28 X68)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "312": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(pred (s T10) X26)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [{
                    "clause": 4,
                    "scope": 8,
                    "term": "(double T28 X68)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X68"],
                    "exprvars": []
                }
            },
            "313": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(pred (s T10) X26)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "478": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "435": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "436": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "316": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "437": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "317": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "438": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T17) X44)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": ["X44"],
                    "exprvars": []
                }
            },
            "318": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "439": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "52": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(pred (s T10) X26)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T10) X26)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T10) X26)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T10) X26)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T10) X26)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": ["X26"],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [{
                    "clause": 6,
                    "scope": 2,
                    "term": "(',' (half (s T3) X3) (',' (double X3 X4) (f X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X3",
                        "X4"
                    ],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (pred (s (s T6)) X15) (',' (pred X15 X16) (half X16 X17))) (',' (double (s X17) X4) (f X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X4",
                        "X17",
                        "X15",
                        "X16"
                    ],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s T31) X78) (double X78 X79))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": [
                        "X79",
                        "X78"
                    ],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "440": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half T14 X17)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": ["X17"],
                    "exprvars": []
                }
            },
            "441": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (double (s T18) X4) (f X4))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(half T14 X17)"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(half T14 X17)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": ["X17"],
                    "exprvars": []
                }
            },
            "322": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T13) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(half T14 X17)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": ["X17"],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(half T14 X17)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": ["X17"],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 7,
                    "scope": 1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "445": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "446": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (half (s T3) X3) (',' (double X3 X4) (f X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X3",
                        "X4"
                    ],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred T7 X16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "447": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (half T14 X17) (',' (double (s X17) X4) (f X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T14"],
                    "free": [
                        "X4",
                        "X17"
                    ],
                    "exprvars": []
                }
            },
            "448": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s (s T21)) X55) (',' (pred X55 X56) (half X56 X57)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": [
                        "X57",
                        "X55",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (half (s T3) X3) (',' (double X3 X4) (f X4)))"
                    },
                    {
                        "clause": 6,
                        "scope": 2,
                        "term": "(',' (half (s T3) X3) (',' (double X3 X4) (f X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X3",
                        "X4"
                    ],
                    "exprvars": []
                }
            },
            "449": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "450": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s (s T21)) X55)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X55"],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred T22 X56) (half X56 X57))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [
                        "X57",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "452": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred T22 X56)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X56"],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half T23 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T23"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "415": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(pred T7 X16)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T7 X16)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T7 X16)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(pred T7 X16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "417": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T7 X16)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T7 X16)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "418": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "419": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "38": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s (s T6)) X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "39": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (pred T7 X16) (half X16 X17)) (',' (double (s X17) X4) (f X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [
                        "X4",
                        "X17",
                        "X16"
                    ],
                    "exprvars": []
                }
            },
            "420": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "423": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(pred T7 X16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "424": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(pred T7 X16)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "468": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double (s T18) X4)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "469": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": [],
                    "exprvars": []
                }
            },
            "41": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(pred (s (s T6)) X15)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T6)) X15)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T6)) X15)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "42": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T6)) X15)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T6)) X15)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "43": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(pred (s (s T6)) X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X15"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 7,
                "label": "EVAL with clause\nf(s(X2)) :- ','(half(s(X2), X3), ','(double(X3, X4), f(X4))).\nand substitutionX2 -> T3,\nT1 -> s(T3)"
            },
            {
                "from": 5,
                "to": 8,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 7,
                "to": 9,
                "label": "CASE"
            },
            {
                "from": 9,
                "to": 11,
                "label": "BACKTRACK\nfor clause: half(0, 0)because of non-unification"
            },
            {
                "from": 11,
                "to": 15,
                "label": "EVAL with clause\nhalf(s(s(X13)), s(X14)) :- ','(pred(s(s(X13)), X15), ','(pred(X15, X16), half(X16, X14))).\nand substitutionX13 -> T6,\nT3 -> s(T6),\nX14 -> X17,\nX3 -> s(X17)"
            },
            {
                "from": 11,
                "to": 16,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 15,
                "to": 38,
                "label": "SPLIT 1"
            },
            {
                "from": 15,
                "to": 39,
                "label": "SPLIT 2\nnew knowledge:\nT6 is ground\nT7 is ground\nreplacements:X15 -> T7"
            },
            {
                "from": 38,
                "to": 41,
                "label": "CASE"
            },
            {
                "from": 39,
                "to": 326,
                "label": "SPLIT 1"
            },
            {
                "from": 39,
                "to": 327,
                "label": "SPLIT 2\nnew knowledge:\nT7 is ground\nT14 is ground\nreplacements:X16 -> T14"
            },
            {
                "from": 41,
                "to": 42,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 42,
                "to": 43,
                "label": "BACKTRACK\nfor clause: pred(s(0), 0)because of non-unification"
            },
            {
                "from": 43,
                "to": 48,
                "label": "ONLY EVAL with clause\npred(s(s(X24)), s(X25)) :- pred(s(X24), X25).\nand substitutionT6 -> T10,\nX24 -> T10,\nX25 -> X26,\nX15 -> s(X26)"
            },
            {
                "from": 48,
                "to": 52,
                "label": "CASE"
            },
            {
                "from": 52,
                "to": 53,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 53,
                "to": 312,
                "label": "PARALLEL"
            },
            {
                "from": 53,
                "to": 313,
                "label": "PARALLEL"
            },
            {
                "from": 312,
                "to": 316,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT10 -> 0,\nX26 -> 0"
            },
            {
                "from": 312,
                "to": 317,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 313,
                "to": 322,
                "label": "EVAL with clause\npred(s(s(X33)), s(X34)) :- pred(s(X33), X34).\nand substitutionX33 -> T13,\nT10 -> s(T13),\nX34 -> X35,\nX26 -> s(X35)"
            },
            {
                "from": 313,
                "to": 324,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 316,
                "to": 318,
                "label": "SUCCESS"
            },
            {
                "from": 322,
                "to": 48,
                "label": "INSTANCE with matching:\nT10 -> T13\nX26 -> X35"
            },
            {
                "from": 326,
                "to": 415,
                "label": "CASE"
            },
            {
                "from": 327,
                "to": 440,
                "label": "SPLIT 1"
            },
            {
                "from": 327,
                "to": 441,
                "label": "SPLIT 2\nnew knowledge:\nT14 is ground\nT18 is ground\nreplacements:X17 -> T18"
            },
            {
                "from": 415,
                "to": 416,
                "label": "PARALLEL"
            },
            {
                "from": 415,
                "to": 417,
                "label": "PARALLEL"
            },
            {
                "from": 416,
                "to": 418,
                "label": "EVAL with clause\npred(0, 0).\nand substitutionT7 -> 0,\nX16 -> 0"
            },
            {
                "from": 416,
                "to": 419,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 417,
                "to": 423,
                "label": "PARALLEL"
            },
            {
                "from": 417,
                "to": 424,
                "label": "PARALLEL"
            },
            {
                "from": 418,
                "to": 420,
                "label": "SUCCESS"
            },
            {
                "from": 423,
                "to": 435,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT7 -> s(0),\nX16 -> 0"
            },
            {
                "from": 423,
                "to": 436,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 424,
                "to": 438,
                "label": "EVAL with clause\npred(s(s(X42)), s(X43)) :- pred(s(X42), X43).\nand substitutionX42 -> T17,\nT7 -> s(s(T17)),\nX43 -> X44,\nX16 -> s(X44)"
            },
            {
                "from": 424,
                "to": 439,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 435,
                "to": 437,
                "label": "SUCCESS"
            },
            {
                "from": 438,
                "to": 326,
                "label": "INSTANCE with matching:\nT7 -> s(T17)\nX16 -> X44"
            },
            {
                "from": 440,
                "to": 442,
                "label": "CASE"
            },
            {
                "from": 441,
                "to": 468,
                "label": "SPLIT 1"
            },
            {
                "from": 441,
                "to": 469,
                "label": "SPLIT 2\nnew knowledge:\nT18 is ground\nT24 is ground\nreplacements:X4 -> T24"
            },
            {
                "from": 442,
                "to": 443,
                "label": "PARALLEL"
            },
            {
                "from": 442,
                "to": 444,
                "label": "PARALLEL"
            },
            {
                "from": 443,
                "to": 445,
                "label": "EVAL with clause\nhalf(0, 0).\nand substitutionT14 -> 0,\nX17 -> 0"
            },
            {
                "from": 443,
                "to": 446,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 444,
                "to": 448,
                "label": "EVAL with clause\nhalf(s(s(X53)), s(X54)) :- ','(pred(s(s(X53)), X55), ','(pred(X55, X56), half(X56, X54))).\nand substitutionX53 -> T21,\nT14 -> s(s(T21)),\nX54 -> X57,\nX17 -> s(X57)"
            },
            {
                "from": 444,
                "to": 449,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 445,
                "to": 447,
                "label": "SUCCESS"
            },
            {
                "from": 448,
                "to": 450,
                "label": "SPLIT 1"
            },
            {
                "from": 448,
                "to": 451,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nT22 is ground\nreplacements:X55 -> T22"
            },
            {
                "from": 450,
                "to": 38,
                "label": "INSTANCE with matching:\nT6 -> T21\nX15 -> X55"
            },
            {
                "from": 451,
                "to": 452,
                "label": "SPLIT 1"
            },
            {
                "from": 451,
                "to": 453,
                "label": "SPLIT 2\nnew knowledge:\nT22 is ground\nT23 is ground\nreplacements:X56 -> T23"
            },
            {
                "from": 452,
                "to": 326,
                "label": "INSTANCE with matching:\nT7 -> T22\nX16 -> X56"
            },
            {
                "from": 453,
                "to": 440,
                "label": "INSTANCE with matching:\nT14 -> T23\nX17 -> X57"
            },
            {
                "from": 468,
                "to": 470,
                "label": "CASE"
            },
            {
                "from": 469,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T24"
            },
            {
                "from": 470,
                "to": 471,
                "label": "BACKTRACK\nfor clause: double(0, 0)because of non-unification"
            },
            {
                "from": 471,
                "to": 472,
                "label": "ONLY EVAL with clause\ndouble(s(X65), s(s(X66))) :- ','(pred(s(X65), X67), double(X67, X66)).\nand substitutionT18 -> T27,\nX65 -> T27,\nX66 -> X68,\nX4 -> s(s(X68))"
            },
            {
                "from": 472,
                "to": 473,
                "label": "SPLIT 1"
            },
            {
                "from": 472,
                "to": 474,
                "label": "SPLIT 2\nnew knowledge:\nT27 is ground\nT28 is ground\nreplacements:X67 -> T28"
            },
            {
                "from": 473,
                "to": 326,
                "label": "INSTANCE with matching:\nT7 -> s(T27)\nX16 -> X67"
            },
            {
                "from": 474,
                "to": 475,
                "label": "CASE"
            },
            {
                "from": 475,
                "to": 476,
                "label": "PARALLEL"
            },
            {
                "from": 475,
                "to": 477,
                "label": "PARALLEL"
            },
            {
                "from": 476,
                "to": 478,
                "label": "EVAL with clause\ndouble(0, 0).\nand substitutionT28 -> 0,\nX68 -> 0"
            },
            {
                "from": 476,
                "to": 479,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 477,
                "to": 481,
                "label": "EVAL with clause\ndouble(s(X76), s(s(X77))) :- ','(pred(s(X76), X78), double(X78, X77)).\nand substitutionX76 -> T31,\nT28 -> s(T31),\nX77 -> X79,\nX68 -> s(s(X79))"
            },
            {
                "from": 477,
                "to": 482,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 478,
                "to": 480,
                "label": "SUCCESS"
            },
            {
                "from": 481,
                "to": 472,
                "label": "INSTANCE with matching:\nT27 -> T31\nX67 -> X78\nX68 -> X79"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(88)
Obligation:
Triples:

predA(s(X1), s(X2)) :- predA(X1, X2).
predB(s(s(X1)), s(X2)) :- predB(s(X1), X2).
predC(X1, s(X2)) :- predA(X1, X2).
halfD(s(s(X1)), s(X2)) :- predC(X1, X3).
halfD(s(s(X1)), s(X2)) :- ','(predcC(X1, X3), predB(X3, X4)).
halfD(s(s(X1)), s(X2)) :- ','(predcC(X1, X3), ','(predcB(X3, X4), halfD(X4, X2))).
pG(X1, X2, X3) :- predB(s(X1), X2).
pG(X1, s(X2), s(s(X3))) :- ','(predcB(s(X1), s(X2)), pG(X2, X4, X3)).
fE(s(s(X1))) :- predC(X1, X2).
fE(s(s(X1))) :- ','(predcC(X1, X2), predB(X2, X3)).
fE(s(s(X1))) :- ','(predcC(X1, X2), ','(predcB(X2, X3), halfD(X3, X4))).
fE(s(s(X1))) :- ','(predcC(X1, X2), ','(predcB(X2, X3), ','(halfcD(X3, X4), pG(X4, X5, X6)))).
fE(s(s(X1))) :- ','(predcC(X1, X2), ','(predcB(X2, X3), ','(halfcD(X3, X4), ','(doublecF(X4, X5), fE(X5))))).

Clauses:

predcA(0, 0).
predcA(s(X1), s(X2)) :- predcA(X1, X2).
predcB(0, 0).
predcB(s(0), 0).
predcB(s(s(X1)), s(X2)) :- predcB(s(X1), X2).
predcC(X1, s(X2)) :- predcA(X1, X2).
halfcD(0, 0).
halfcD(s(s(X1)), s(X2)) :- ','(predcC(X1, X3), ','(predcB(X3, X4), halfcD(X4, X2))).
fcE(s(s(X1))) :- ','(predcC(X1, X2), ','(predcB(X2, X3), ','(halfcD(X3, X4), ','(doublecF(X4, X5), fcE(X5))))).
qcG(X1, 0, 0) :- predcB(s(X1), 0).
qcG(X1, s(X2), s(s(X3))) :- ','(predcB(s(X1), s(X2)), qcG(X2, X4, X3)).
doublecF(X1, s(s(X2))) :- qcG(X1, X3, X2).

Afs:

fE(x1)  =  fE(x1)


----------------------------------------

(89) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

fE_in_1: (b)

predC_in_2: (b,f)

predA_in_2: (b,f)

predcC_in_2: (b,f)

predcA_in_2: (b,f)

predB_in_2: (b,f)

predcB_in_2: (b,f) (b,b)

halfD_in_2: (b,f)

halfcD_in_2: (b,f)

pG_in_3: (b,f,f)

doublecF_in_2: (b,f)

qcG_in_3: (b,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   FE_IN_G(s(s(X1))) -> U12_G(X1, predC_in_ga(X1, X2))
   FE_IN_G(s(s(X1))) -> PREDC_IN_GA(X1, X2)
   PREDC_IN_GA(X1, s(X2)) -> U3_GA(X1, X2, predA_in_ga(X1, X2))
   PREDC_IN_GA(X1, s(X2)) -> PREDA_IN_GA(X1, X2)
   PREDA_IN_GA(s(X1), s(X2)) -> U1_GA(X1, X2, predA_in_ga(X1, X2))
   PREDA_IN_GA(s(X1), s(X2)) -> PREDA_IN_GA(X1, X2)
   FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1, X2))
   U13_G(X1, predcC_out_ga(X1, X2)) -> U14_G(X1, predB_in_ga(X2, X3))
   U13_G(X1, predcC_out_ga(X1, X2)) -> PREDB_IN_GA(X2, X3)
   PREDB_IN_GA(s(s(X1)), s(X2)) -> U2_GA(X1, X2, predB_in_ga(s(X1), X2))
   PREDB_IN_GA(s(s(X1)), s(X2)) -> PREDB_IN_GA(s(X1), X2)
   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2, X3))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U16_G(X1, halfD_in_ga(X3, X4))
   U15_G(X1, predcB_out_ga(X2, X3)) -> HALFD_IN_GA(X3, X4)
   HALFD_IN_GA(s(s(X1)), s(X2)) -> U4_GA(X1, X2, predC_in_ga(X1, X3))
   HALFD_IN_GA(s(s(X1)), s(X2)) -> PREDC_IN_GA(X1, X3)
   HALFD_IN_GA(s(s(X1)), s(X2)) -> U5_GA(X1, X2, predcC_in_ga(X1, X3))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U6_GA(X1, X2, predB_in_ga(X3, X4))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> PREDB_IN_GA(X3, X4)
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U7_GA(X1, X2, predcB_in_ga(X3, X4))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> U8_GA(X1, X2, halfD_in_ga(X4, X2))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4, X2)
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3, X4))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U18_G(X1, pG_in_gaa(X4, X5, X6))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> PG_IN_GAA(X4, X5, X6)
   PG_IN_GAA(X1, X2, X3) -> U9_GAA(X1, X2, X3, predB_in_ga(s(X1), X2))
   PG_IN_GAA(X1, X2, X3) -> PREDB_IN_GA(s(X1), X2)
   PG_IN_GAA(X1, s(X2), s(s(X3))) -> U10_GAA(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U11_GAA(X1, X2, X3, pG_in_gaa(X2, X4, X3))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2, X4, X3)
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4, X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> U20_G(X1, fE_in_g(X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
fE_in_g(x1)  =  fE_in_g(x1)

s(x1)  =  s(x1)

predC_in_ga(x1, x2)  =  predC_in_ga(x1)

predA_in_ga(x1, x2)  =  predA_in_ga(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predB_in_ga(x1, x2)  =  predB_in_ga(x1)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfD_in_ga(x1, x2)  =  halfD_in_ga(x1)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

pG_in_gaa(x1, x2, x3)  =  pG_in_gaa(x1)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

FE_IN_G(x1)  =  FE_IN_G(x1)

U12_G(x1, x2)  =  U12_G(x1, x2)

PREDC_IN_GA(x1, x2)  =  PREDC_IN_GA(x1)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

PREDA_IN_GA(x1, x2)  =  PREDA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U13_G(x1, x2)  =  U13_G(x1, x2)

U14_G(x1, x2)  =  U14_G(x1, x2)

PREDB_IN_GA(x1, x2)  =  PREDB_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U15_G(x1, x2)  =  U15_G(x1, x2)

U16_G(x1, x2)  =  U16_G(x1, x2)

HALFD_IN_GA(x1, x2)  =  HALFD_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U6_GA(x1, x2, x3)  =  U6_GA(x1, x3)

U7_GA(x1, x2, x3)  =  U7_GA(x1, x3)

U8_GA(x1, x2, x3)  =  U8_GA(x1, x3)

U17_G(x1, x2)  =  U17_G(x1, x2)

U18_G(x1, x2)  =  U18_G(x1, x2)

PG_IN_GAA(x1, x2, x3)  =  PG_IN_GAA(x1)

U9_GAA(x1, x2, x3, x4)  =  U9_GAA(x1, x4)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)

U11_GAA(x1, x2, x3, x4)  =  U11_GAA(x1, x2, x4)

U19_G(x1, x2)  =  U19_G(x1, x2)

U20_G(x1, x2)  =  U20_G(x1, x2)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(90)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FE_IN_G(s(s(X1))) -> U12_G(X1, predC_in_ga(X1, X2))
   FE_IN_G(s(s(X1))) -> PREDC_IN_GA(X1, X2)
   PREDC_IN_GA(X1, s(X2)) -> U3_GA(X1, X2, predA_in_ga(X1, X2))
   PREDC_IN_GA(X1, s(X2)) -> PREDA_IN_GA(X1, X2)
   PREDA_IN_GA(s(X1), s(X2)) -> U1_GA(X1, X2, predA_in_ga(X1, X2))
   PREDA_IN_GA(s(X1), s(X2)) -> PREDA_IN_GA(X1, X2)
   FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1, X2))
   U13_G(X1, predcC_out_ga(X1, X2)) -> U14_G(X1, predB_in_ga(X2, X3))
   U13_G(X1, predcC_out_ga(X1, X2)) -> PREDB_IN_GA(X2, X3)
   PREDB_IN_GA(s(s(X1)), s(X2)) -> U2_GA(X1, X2, predB_in_ga(s(X1), X2))
   PREDB_IN_GA(s(s(X1)), s(X2)) -> PREDB_IN_GA(s(X1), X2)
   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2, X3))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U16_G(X1, halfD_in_ga(X3, X4))
   U15_G(X1, predcB_out_ga(X2, X3)) -> HALFD_IN_GA(X3, X4)
   HALFD_IN_GA(s(s(X1)), s(X2)) -> U4_GA(X1, X2, predC_in_ga(X1, X3))
   HALFD_IN_GA(s(s(X1)), s(X2)) -> PREDC_IN_GA(X1, X3)
   HALFD_IN_GA(s(s(X1)), s(X2)) -> U5_GA(X1, X2, predcC_in_ga(X1, X3))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U6_GA(X1, X2, predB_in_ga(X3, X4))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> PREDB_IN_GA(X3, X4)
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U7_GA(X1, X2, predcB_in_ga(X3, X4))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> U8_GA(X1, X2, halfD_in_ga(X4, X2))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4, X2)
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3, X4))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U18_G(X1, pG_in_gaa(X4, X5, X6))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> PG_IN_GAA(X4, X5, X6)
   PG_IN_GAA(X1, X2, X3) -> U9_GAA(X1, X2, X3, predB_in_ga(s(X1), X2))
   PG_IN_GAA(X1, X2, X3) -> PREDB_IN_GA(s(X1), X2)
   PG_IN_GAA(X1, s(X2), s(s(X3))) -> U10_GAA(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U11_GAA(X1, X2, X3, pG_in_gaa(X2, X4, X3))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2, X4, X3)
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4, X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> U20_G(X1, fE_in_g(X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
fE_in_g(x1)  =  fE_in_g(x1)

s(x1)  =  s(x1)

predC_in_ga(x1, x2)  =  predC_in_ga(x1)

predA_in_ga(x1, x2)  =  predA_in_ga(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predB_in_ga(x1, x2)  =  predB_in_ga(x1)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfD_in_ga(x1, x2)  =  halfD_in_ga(x1)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

pG_in_gaa(x1, x2, x3)  =  pG_in_gaa(x1)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

FE_IN_G(x1)  =  FE_IN_G(x1)

U12_G(x1, x2)  =  U12_G(x1, x2)

PREDC_IN_GA(x1, x2)  =  PREDC_IN_GA(x1)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

PREDA_IN_GA(x1, x2)  =  PREDA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U13_G(x1, x2)  =  U13_G(x1, x2)

U14_G(x1, x2)  =  U14_G(x1, x2)

PREDB_IN_GA(x1, x2)  =  PREDB_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U15_G(x1, x2)  =  U15_G(x1, x2)

U16_G(x1, x2)  =  U16_G(x1, x2)

HALFD_IN_GA(x1, x2)  =  HALFD_IN_GA(x1)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U6_GA(x1, x2, x3)  =  U6_GA(x1, x3)

U7_GA(x1, x2, x3)  =  U7_GA(x1, x3)

U8_GA(x1, x2, x3)  =  U8_GA(x1, x3)

U17_G(x1, x2)  =  U17_G(x1, x2)

U18_G(x1, x2)  =  U18_G(x1, x2)

PG_IN_GAA(x1, x2, x3)  =  PG_IN_GAA(x1)

U9_GAA(x1, x2, x3, x4)  =  U9_GAA(x1, x4)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)

U11_GAA(x1, x2, x3, x4)  =  U11_GAA(x1, x2, x4)

U19_G(x1, x2)  =  U19_G(x1, x2)

U20_G(x1, x2)  =  U20_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(91) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 5 SCCs with 21 less nodes.
----------------------------------------

(92)
Complex Obligation (AND)

----------------------------------------

(93)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PREDB_IN_GA(s(s(X1)), s(X2)) -> PREDB_IN_GA(s(X1), X2)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

PREDB_IN_GA(x1, x2)  =  PREDB_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(94) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(95)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PREDB_IN_GA(s(s(X1)), s(X2)) -> PREDB_IN_GA(s(X1), X2)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

PREDB_IN_GA(x1, x2)  =  PREDB_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(96) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(97)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PREDB_IN_GA(s(s(X1))) -> PREDB_IN_GA(s(X1))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(98) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PREDB_IN_GA(s(s(X1))) -> PREDB_IN_GA(s(X1))
The graph contains the following edges 1 > 1


----------------------------------------

(99)
YES

----------------------------------------

(100)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PG_IN_GAA(X1, s(X2), s(s(X3))) -> U10_GAA(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2, X4, X3)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

PG_IN_GAA(x1, x2, x3)  =  PG_IN_GAA(x1)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(101) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(102)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PG_IN_GAA(X1, s(X2), s(s(X3))) -> U10_GAA(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U10_GAA(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2, X4, X3)

The TRS R consists of the following rules:

   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

PG_IN_GAA(x1, x2, x3)  =  PG_IN_GAA(x1)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(103) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(104)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PG_IN_GAA(X1) -> U10_GAA(X1, predcB_in_ga(s(X1)))
   U10_GAA(X1, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2)

The TRS R consists of the following rules:

   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)

The set Q consists of the following terms:

   predcB_in_ga(x0)
   U23_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(105) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(PG_IN_GAA(x_1)) = 2 + 2*x_1
   POL(U10_GAA(x_1, x_2)) = x_2
   POL(U23_ga(x_1, x_2)) = 2 + x_2
   POL(predcB_in_ga(x_1)) = 2*x_1
   POL(predcB_out_ga(x_1, x_2)) = 2*x_2
   POL(s(x_1)) = 1 + x_1


----------------------------------------

(106)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PG_IN_GAA(X1) -> U10_GAA(X1, predcB_in_ga(s(X1)))
   U10_GAA(X1, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2)

The TRS R consists of the following rules:

   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))

The set Q consists of the following terms:

   predcB_in_ga(x0)
   U23_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(107) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   PG_IN_GAA(X1) -> U10_GAA(X1, predcB_in_ga(s(X1)))
   U10_GAA(X1, predcB_out_ga(s(X1), s(X2))) -> PG_IN_GAA(X2)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
PG_IN_GAA(x1)  =  PG_IN_GAA

U10_GAA(x1, x2)  =  x2

predcB_in_ga(x1)  =  predcB_in_ga

predcB_out_ga(x1, x2)  =  predcB_out_ga

U23_ga(x1, x2)  =  x2


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   predcB_in_ga=1
   PG_IN_GAA=2
   predcB_out_ga=3

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))


----------------------------------------

(108)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))

The set Q consists of the following terms:

   predcB_in_ga(x0)
   U23_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(109) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(110)
YES

----------------------------------------

(111)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PREDA_IN_GA(s(X1), s(X2)) -> PREDA_IN_GA(X1, X2)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

PREDA_IN_GA(x1, x2)  =  PREDA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(112) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(113)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PREDA_IN_GA(s(X1), s(X2)) -> PREDA_IN_GA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

PREDA_IN_GA(x1, x2)  =  PREDA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(114) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(115)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PREDA_IN_GA(s(X1)) -> PREDA_IN_GA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(116) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PREDA_IN_GA(s(X1)) -> PREDA_IN_GA(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(117)
YES

----------------------------------------

(118)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   HALFD_IN_GA(s(s(X1)), s(X2)) -> U5_GA(X1, X2, predcC_in_ga(X1, X3))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U7_GA(X1, X2, predcB_in_ga(X3, X4))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4, X2)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

HALFD_IN_GA(x1, x2)  =  HALFD_IN_GA(x1)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U7_GA(x1, x2, x3)  =  U7_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(119) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(120)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   HALFD_IN_GA(s(s(X1)), s(X2)) -> U5_GA(X1, X2, predcC_in_ga(X1, X3))
   U5_GA(X1, X2, predcC_out_ga(X1, X3)) -> U7_GA(X1, X2, predcB_in_ga(X3, X4))
   U7_GA(X1, X2, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4, X2)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

HALFD_IN_GA(x1, x2)  =  HALFD_IN_GA(x1)

U5_GA(x1, x2, x3)  =  U5_GA(x1, x3)

U7_GA(x1, x2, x3)  =  U7_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(121) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(122)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, predcC_in_ga(X1))
   U5_GA(X1, predcC_out_ga(X1, X3)) -> U7_GA(X1, predcB_in_ga(X3))
   U7_GA(X1, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4)

The TRS R consists of the following rules:

   predcC_in_ga(X1) -> U24_ga(X1, predcA_in_ga(X1))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   predcA_in_ga(x0)
   U22_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(123) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, predcC_in_ga(X1)) at position [1] we obtained the following new rules [LPAR04]:

   (HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1))),HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1))))


----------------------------------------

(124)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_GA(X1, predcC_out_ga(X1, X3)) -> U7_GA(X1, predcB_in_ga(X3))
   U7_GA(X1, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4)
   HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1)))

The TRS R consists of the following rules:

   predcC_in_ga(X1) -> U24_ga(X1, predcA_in_ga(X1))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   predcA_in_ga(x0)
   U22_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(125) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(126)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_GA(X1, predcC_out_ga(X1, X3)) -> U7_GA(X1, predcB_in_ga(X3))
   U7_GA(X1, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4)
   HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1)))

The TRS R consists of the following rules:

   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   predcA_in_ga(x0)
   U22_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(127) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   predcC_in_ga(x0)


----------------------------------------

(128)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_GA(X1, predcC_out_ga(X1, X3)) -> U7_GA(X1, predcB_in_ga(X3))
   U7_GA(X1, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4)
   HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1)))

The TRS R consists of the following rules:

   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))

The set Q consists of the following terms:

   predcB_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   predcA_in_ga(x0)
   U22_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(129) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   U5_GA(X1, predcC_out_ga(X1, X3)) -> U7_GA(X1, predcB_in_ga(X3))
   HALFD_IN_GA(s(s(X1))) -> U5_GA(X1, U24_ga(X1, predcA_in_ga(X1)))

Strictly oriented rules of the TRS R:

   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(HALFD_IN_GA(x_1)) = 2*x_1
   POL(U22_ga(x_1, x_2)) = 2 + x_2
   POL(U23_ga(x_1, x_2)) = 2 + x_2
   POL(U24_ga(x_1, x_2)) = 2 + 2*x_2
   POL(U5_GA(x_1, x_2)) = 2 + x_2
   POL(U7_GA(x_1, x_2)) = 2*x_2
   POL(predcA_in_ga(x_1)) = 1 + x_1
   POL(predcA_out_ga(x_1, x_2)) = 1 + x_2
   POL(predcB_in_ga(x_1)) = x_1
   POL(predcB_out_ga(x_1, x_2)) = x_2
   POL(predcC_out_ga(x_1, x_2)) = 2*x_2
   POL(s(x_1)) = 2 + x_1


----------------------------------------

(130)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U7_GA(X1, predcB_out_ga(X3, X4)) -> HALFD_IN_GA(X4)

The TRS R consists of the following rules:

   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))

The set Q consists of the following terms:

   predcB_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   predcA_in_ga(x0)
   U22_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(131) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(132)
TRUE

----------------------------------------

(133)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1, X2))
   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2, X3))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3, X4))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4, X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   predcB_in_gg(0, 0) -> predcB_out_gg(0, 0)
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   predcB_in_gg(s(s(X1)), s(X2)) -> U23_gg(X1, X2, predcB_in_gg(s(X1), X2))
   U23_gg(X1, X2, predcB_out_gg(s(X1), X2)) -> predcB_out_gg(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

U23_gg(x1, x2, x3)  =  U23_gg(x1, x2, x3)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

FE_IN_G(x1)  =  FE_IN_G(x1)

U13_G(x1, x2)  =  U13_G(x1, x2)

U15_G(x1, x2)  =  U15_G(x1, x2)

U17_G(x1, x2)  =  U17_G(x1, x2)

U19_G(x1, x2)  =  U19_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(134) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(135)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1, X2))
   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2, X3))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3, X4))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4, X5))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)

The TRS R consists of the following rules:

   predcC_in_ga(X1, s(X2)) -> U24_ga(X1, X2, predcA_in_ga(X1, X2))
   predcB_in_ga(0, 0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0), 0) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1)), s(X2)) -> U23_ga(X1, X2, predcB_in_ga(s(X1), X2))
   halfcD_in_ga(0, 0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1)), s(X2)) -> U25_ga(X1, X2, predcC_in_ga(X1, X3))
   doublecF_in_ga(X1, s(s(X2))) -> U36_ga(X1, X2, qcG_in_gaa(X1, X3, X2))
   U24_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, X2, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   U25_ga(X1, X2, predcC_out_ga(X1, X3)) -> U26_ga(X1, X2, predcB_in_ga(X3, X4))
   U36_ga(X1, X2, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))
   predcA_in_ga(0, 0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1), s(X2)) -> U22_ga(X1, X2, predcA_in_ga(X1, X2))
   U26_ga(X1, X2, predcB_out_ga(X3, X4)) -> U27_ga(X1, X2, halfcD_in_ga(X4, X2))
   qcG_in_gaa(X1, 0, 0) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   qcG_in_gaa(X1, s(X2), s(s(X3))) -> U34_gaa(X1, X2, X3, predcB_in_ga(s(X1), s(X2)))
   U22_ga(X1, X2, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U27_ga(X1, X2, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   U34_gaa(X1, X2, X3, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, X3, qcG_in_gaa(X2, X4, X3))
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   U35_gaa(X1, X2, X3, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

predcC_in_ga(x1, x2)  =  predcC_in_ga(x1)

U24_ga(x1, x2, x3)  =  U24_ga(x1, x3)

predcA_in_ga(x1, x2)  =  predcA_in_ga(x1)

0  =  0

predcA_out_ga(x1, x2)  =  predcA_out_ga(x1, x2)

U22_ga(x1, x2, x3)  =  U22_ga(x1, x3)

predcC_out_ga(x1, x2)  =  predcC_out_ga(x1, x2)

predcB_in_ga(x1, x2)  =  predcB_in_ga(x1)

predcB_out_ga(x1, x2)  =  predcB_out_ga(x1, x2)

U23_ga(x1, x2, x3)  =  U23_ga(x1, x3)

halfcD_in_ga(x1, x2)  =  halfcD_in_ga(x1)

halfcD_out_ga(x1, x2)  =  halfcD_out_ga(x1, x2)

U25_ga(x1, x2, x3)  =  U25_ga(x1, x3)

U26_ga(x1, x2, x3)  =  U26_ga(x1, x3)

U27_ga(x1, x2, x3)  =  U27_ga(x1, x3)

doublecF_in_ga(x1, x2)  =  doublecF_in_ga(x1)

U36_ga(x1, x2, x3)  =  U36_ga(x1, x3)

qcG_in_gaa(x1, x2, x3)  =  qcG_in_gaa(x1)

U33_gaa(x1, x2)  =  U33_gaa(x1, x2)

predcB_in_gg(x1, x2)  =  predcB_in_gg(x1, x2)

predcB_out_gg(x1, x2)  =  predcB_out_gg(x1, x2)

qcG_out_gaa(x1, x2, x3)  =  qcG_out_gaa(x1, x2, x3)

U34_gaa(x1, x2, x3, x4)  =  U34_gaa(x1, x4)

U35_gaa(x1, x2, x3, x4)  =  U35_gaa(x1, x2, x4)

doublecF_out_ga(x1, x2)  =  doublecF_out_ga(x1, x2)

FE_IN_G(x1)  =  FE_IN_G(x1)

U13_G(x1, x2)  =  U13_G(x1, x2)

U15_G(x1, x2)  =  U15_G(x1, x2)

U17_G(x1, x2)  =  U17_G(x1, x2)

U19_G(x1, x2)  =  U19_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(136) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(137)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1))
   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)

The TRS R consists of the following rules:

   predcC_in_ga(X1) -> U24_ga(X1, predcA_in_ga(X1))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   halfcD_in_ga(0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1))) -> U25_ga(X1, predcC_in_ga(X1))
   doublecF_in_ga(X1) -> U36_ga(X1, qcG_in_gaa(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   U25_ga(X1, predcC_out_ga(X1, X3)) -> U26_ga(X1, predcB_in_ga(X3))
   U36_ga(X1, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))
   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U26_ga(X1, predcB_out_ga(X3, X4)) -> U27_ga(X1, halfcD_in_ga(X4))
   qcG_in_gaa(X1) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   qcG_in_gaa(X1) -> U34_gaa(X1, predcB_in_ga(s(X1)))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U27_ga(X1, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   U34_gaa(X1, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, qcG_in_gaa(X2))
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   U35_gaa(X1, X2, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   halfcD_in_ga(x0)
   doublecF_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   U25_ga(x0, x1)
   U36_ga(x0, x1)
   predcA_in_ga(x0)
   U26_ga(x0, x1)
   qcG_in_gaa(x0)
   U22_ga(x0, x1)
   U27_ga(x0, x1)
   U33_gaa(x0, x1)
   U34_gaa(x0, x1)
   predcB_in_gg(x0, x1)
   U35_gaa(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(138) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule FE_IN_G(s(s(X1))) -> U13_G(X1, predcC_in_ga(X1)) at position [1] we obtained the following new rules [LPAR04]:

   (FE_IN_G(s(s(X1))) -> U13_G(X1, U24_ga(X1, predcA_in_ga(X1))),FE_IN_G(s(s(X1))) -> U13_G(X1, U24_ga(X1, predcA_in_ga(X1))))


----------------------------------------

(139)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)
   FE_IN_G(s(s(X1))) -> U13_G(X1, U24_ga(X1, predcA_in_ga(X1)))

The TRS R consists of the following rules:

   predcC_in_ga(X1) -> U24_ga(X1, predcA_in_ga(X1))
   predcB_in_ga(0) -> predcB_out_ga(0, 0)
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   halfcD_in_ga(0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1))) -> U25_ga(X1, predcC_in_ga(X1))
   doublecF_in_ga(X1) -> U36_ga(X1, qcG_in_gaa(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   U25_ga(X1, predcC_out_ga(X1, X3)) -> U26_ga(X1, predcB_in_ga(X3))
   U36_ga(X1, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))
   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U26_ga(X1, predcB_out_ga(X3, X4)) -> U27_ga(X1, halfcD_in_ga(X4))
   qcG_in_gaa(X1) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   qcG_in_gaa(X1) -> U34_gaa(X1, predcB_in_ga(s(X1)))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U27_ga(X1, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   U34_gaa(X1, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, qcG_in_gaa(X2))
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   U35_gaa(X1, X2, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   halfcD_in_ga(x0)
   doublecF_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   U25_ga(x0, x1)
   U36_ga(x0, x1)
   predcA_in_ga(x0)
   U26_ga(x0, x1)
   qcG_in_gaa(x0)
   U22_ga(x0, x1)
   U27_ga(x0, x1)
   U33_gaa(x0, x1)
   U34_gaa(x0, x1)
   predcB_in_gg(x0, x1)
   U35_gaa(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(140) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   predcB_in_ga(0) -> predcB_out_ga(0, 0)

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(FE_IN_G(x_1)) = 0
   POL(U13_G(x_1, x_2)) = 2*x_2
   POL(U15_G(x_1, x_2)) = 2*x_2
   POL(U17_G(x_1, x_2)) = 2*x_2
   POL(U19_G(x_1, x_2)) = x_2
   POL(U22_ga(x_1, x_2)) = 0
   POL(U23_ga(x_1, x_2)) = 2*x_2
   POL(U24_ga(x_1, x_2)) = 0
   POL(U25_ga(x_1, x_2)) = x_2
   POL(U26_ga(x_1, x_2)) = x_2
   POL(U27_ga(x_1, x_2)) = x_2
   POL(U33_gaa(x_1, x_2)) = 0
   POL(U34_gaa(x_1, x_2)) = 2*x_2
   POL(U35_gaa(x_1, x_2, x_3)) = x_3
   POL(U36_ga(x_1, x_2)) = x_2
   POL(doublecF_in_ga(x_1)) = 0
   POL(doublecF_out_ga(x_1, x_2)) = 0
   POL(halfcD_in_ga(x_1)) = 0
   POL(halfcD_out_ga(x_1, x_2)) = 0
   POL(predcA_in_ga(x_1)) = 0
   POL(predcA_out_ga(x_1, x_2)) = 0
   POL(predcB_in_ga(x_1)) = x_1
   POL(predcB_in_gg(x_1, x_2)) = 0
   POL(predcB_out_ga(x_1, x_2)) = 0
   POL(predcB_out_gg(x_1, x_2)) = 0
   POL(predcC_in_ga(x_1)) = 0
   POL(predcC_out_ga(x_1, x_2)) = x_2
   POL(qcG_in_gaa(x_1)) = 0
   POL(qcG_out_gaa(x_1, x_2, x_3)) = 0
   POL(s(x_1)) = 0


----------------------------------------

(141)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U13_G(X1, predcC_out_ga(X1, X2)) -> U15_G(X1, predcB_in_ga(X2))
   U15_G(X1, predcB_out_ga(X2, X3)) -> U17_G(X1, halfcD_in_ga(X3))
   U17_G(X1, halfcD_out_ga(X3, X4)) -> U19_G(X1, doublecF_in_ga(X4))
   U19_G(X1, doublecF_out_ga(X4, X5)) -> FE_IN_G(X5)
   FE_IN_G(s(s(X1))) -> U13_G(X1, U24_ga(X1, predcA_in_ga(X1)))

The TRS R consists of the following rules:

   predcC_in_ga(X1) -> U24_ga(X1, predcA_in_ga(X1))
   predcB_in_ga(s(0)) -> predcB_out_ga(s(0), 0)
   predcB_in_ga(s(s(X1))) -> U23_ga(X1, predcB_in_ga(s(X1)))
   halfcD_in_ga(0) -> halfcD_out_ga(0, 0)
   halfcD_in_ga(s(s(X1))) -> U25_ga(X1, predcC_in_ga(X1))
   doublecF_in_ga(X1) -> U36_ga(X1, qcG_in_gaa(X1))
   U24_ga(X1, predcA_out_ga(X1, X2)) -> predcC_out_ga(X1, s(X2))
   U23_ga(X1, predcB_out_ga(s(X1), X2)) -> predcB_out_ga(s(s(X1)), s(X2))
   U25_ga(X1, predcC_out_ga(X1, X3)) -> U26_ga(X1, predcB_in_ga(X3))
   U36_ga(X1, qcG_out_gaa(X1, X3, X2)) -> doublecF_out_ga(X1, s(s(X2)))
   predcA_in_ga(0) -> predcA_out_ga(0, 0)
   predcA_in_ga(s(X1)) -> U22_ga(X1, predcA_in_ga(X1))
   U26_ga(X1, predcB_out_ga(X3, X4)) -> U27_ga(X1, halfcD_in_ga(X4))
   qcG_in_gaa(X1) -> U33_gaa(X1, predcB_in_gg(s(X1), 0))
   qcG_in_gaa(X1) -> U34_gaa(X1, predcB_in_ga(s(X1)))
   U22_ga(X1, predcA_out_ga(X1, X2)) -> predcA_out_ga(s(X1), s(X2))
   U27_ga(X1, halfcD_out_ga(X4, X2)) -> halfcD_out_ga(s(s(X1)), s(X2))
   U33_gaa(X1, predcB_out_gg(s(X1), 0)) -> qcG_out_gaa(X1, 0, 0)
   U34_gaa(X1, predcB_out_ga(s(X1), s(X2))) -> U35_gaa(X1, X2, qcG_in_gaa(X2))
   predcB_in_gg(s(0), 0) -> predcB_out_gg(s(0), 0)
   U35_gaa(X1, X2, qcG_out_gaa(X2, X4, X3)) -> qcG_out_gaa(X1, s(X2), s(s(X3)))

The set Q consists of the following terms:

   predcC_in_ga(x0)
   predcB_in_ga(x0)
   halfcD_in_ga(x0)
   doublecF_in_ga(x0)
   U24_ga(x0, x1)
   U23_ga(x0, x1)
   U25_ga(x0, x1)
   U36_ga(x0, x1)
   predcA_in_ga(x0)
   U26_ga(x0, x1)
   qcG_in_gaa(x0)
   U22_ga(x0, x1)
   U27_ga(x0, x1)
   U33_gaa(x0, x1)
   U34_gaa(x0, x1)
   predcB_in_gg(x0, x1)
   U35_gaa(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(142) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(pred (0) (0))",
                null
            ],
            [
                "(pred (s (0)) (0))",
                null
            ],
            [
                "(pred (s (s X)) (s Y))",
                "(pred (s X) Y)"
            ],
            [
                "(double (0) (0))",
                null
            ],
            [
                "(double (s X) (s (s Y)))",
                "(',' (pred (s X) Z) (double Z Y))"
            ],
            [
                "(half (0) (0))",
                null
            ],
            [
                "(half (s (s X)) (s U))",
                "(',' (pred (s (s X)) Y) (',' (pred Y Z) (half Z U)))"
            ],
            [
                "(f (s X))",
                "(',' (half (s X) Y) (',' (double Y Z) (f Z)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "44": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s (s T8)) X18) (',' (pred X18 X19) (half X19 X20)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": [
                        "X20",
                        "X18",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "45": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "46": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s (s T8)) X18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred T9 X19) (half X19 X20))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [
                        "X20",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "430": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "399": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "432": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "433": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "434": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "314": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "315": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "319": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "51": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(pred (s (s T8)) X18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (half (s T4) X6) (',' (double X6 X7) (f X7)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half (s T4) X6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (double T5 X7) (f X7))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "320": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "321": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T15) X38)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T15"],
                    "free": ["X38"],
                    "exprvars": []
                }
            },
            "401": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": 7,
                    "scope": 1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "403": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "404": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "405": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "407": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "376": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "377": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "410": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s (s T22)) X58) (',' (pred X58 X59) (half X59 X60)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [
                        "X60",
                        "X58",
                        "X59"
                    ],
                    "exprvars": []
                }
            },
            "378": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "411": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "379": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "457": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T23"],
                    "free": [],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(double T5 X7)"
                    },
                    {
                        "clause": 4,
                        "scope": 7,
                        "term": "(double T5 X7)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [{
                    "clause": 3,
                    "scope": 7,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "77": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "37": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(half (s T4) X6)"
                    },
                    {
                        "clause": 6,
                        "scope": 2,
                        "term": "(half (s T4) X6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "380": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "460": {
                "goal": [{
                    "clause": 4,
                    "scope": 7,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "461": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "462": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "463": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "464": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s T26) X70) (double X70 X71))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": [
                        "X71",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "421": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T19) X47)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X47"],
                    "exprvars": []
                }
            },
            "465": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "422": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T26) X70)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X70"],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double T27 X71)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T27"],
                    "free": ["X71"],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "427": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(half T16 X20)"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(half T16 X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "428": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "40": {
                "goal": [{
                    "clause": 6,
                    "scope": 2,
                    "term": "(half (s T4) X6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 10,
                "label": "EVAL with clause\nf(s(X5)) :- ','(half(s(X5), X6), ','(double(X6, X7), f(X7))).\nand substitutionX5 -> T4,\nT1 -> s(T4)"
            },
            {
                "from": 6,
                "to": 12,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 10,
                "to": 17,
                "label": "SPLIT 1"
            },
            {
                "from": 10,
                "to": 18,
                "label": "SPLIT 2\nnew knowledge:\nT4 is ground\nT5 is ground\nreplacements:X6 -> T5"
            },
            {
                "from": 17,
                "to": 37,
                "label": "CASE"
            },
            {
                "from": 18,
                "to": 456,
                "label": "SPLIT 1"
            },
            {
                "from": 18,
                "to": 457,
                "label": "SPLIT 2\nnew knowledge:\nT5 is ground\nT23 is ground\nreplacements:X7 -> T23"
            },
            {
                "from": 37,
                "to": 40,
                "label": "BACKTRACK\nfor clause: half(0, 0)because of non-unification"
            },
            {
                "from": 40,
                "to": 44,
                "label": "EVAL with clause\nhalf(s(s(X16)), s(X17)) :- ','(pred(s(s(X16)), X18), ','(pred(X18, X19), half(X19, X17))).\nand substitutionX16 -> T8,\nT4 -> s(T8),\nX17 -> X20,\nX6 -> s(X20)"
            },
            {
                "from": 40,
                "to": 45,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 44,
                "to": 46,
                "label": "SPLIT 1"
            },
            {
                "from": 44,
                "to": 47,
                "label": "SPLIT 2\nnew knowledge:\nT8 is ground\nT9 is ground\nreplacements:X18 -> T9"
            },
            {
                "from": 46,
                "to": 49,
                "label": "CASE"
            },
            {
                "from": 47,
                "to": 376,
                "label": "SPLIT 1"
            },
            {
                "from": 47,
                "to": 377,
                "label": "SPLIT 2\nnew knowledge:\nT9 is ground\nT16 is ground\nreplacements:X19 -> T16"
            },
            {
                "from": 49,
                "to": 50,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 50,
                "to": 51,
                "label": "BACKTRACK\nfor clause: pred(s(0), 0)because of non-unification"
            },
            {
                "from": 51,
                "to": 64,
                "label": "ONLY EVAL with clause\npred(s(s(X27)), s(X28)) :- pred(s(X27), X28).\nand substitutionT8 -> T12,\nX27 -> T12,\nX28 -> X29,\nX18 -> s(X29)"
            },
            {
                "from": 64,
                "to": 77,
                "label": "CASE"
            },
            {
                "from": 77,
                "to": 81,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 81,
                "to": 314,
                "label": "PARALLEL"
            },
            {
                "from": 81,
                "to": 315,
                "label": "PARALLEL"
            },
            {
                "from": 314,
                "to": 319,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT12 -> 0,\nX29 -> 0"
            },
            {
                "from": 314,
                "to": 320,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 315,
                "to": 323,
                "label": "EVAL with clause\npred(s(s(X36)), s(X37)) :- pred(s(X36), X37).\nand substitutionX36 -> T15,\nT12 -> s(T15),\nX37 -> X38,\nX29 -> s(X38)"
            },
            {
                "from": 315,
                "to": 325,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 319,
                "to": 321,
                "label": "SUCCESS"
            },
            {
                "from": 323,
                "to": 64,
                "label": "INSTANCE with matching:\nT12 -> T15\nX29 -> X38"
            },
            {
                "from": 376,
                "to": 378,
                "label": "CASE"
            },
            {
                "from": 377,
                "to": 427,
                "label": "CASE"
            },
            {
                "from": 378,
                "to": 379,
                "label": "PARALLEL"
            },
            {
                "from": 378,
                "to": 380,
                "label": "PARALLEL"
            },
            {
                "from": 379,
                "to": 399,
                "label": "EVAL with clause\npred(0, 0).\nand substitutionT9 -> 0,\nX19 -> 0"
            },
            {
                "from": 379,
                "to": 401,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 380,
                "to": 404,
                "label": "PARALLEL"
            },
            {
                "from": 380,
                "to": 405,
                "label": "PARALLEL"
            },
            {
                "from": 399,
                "to": 403,
                "label": "SUCCESS"
            },
            {
                "from": 404,
                "to": 407,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT9 -> s(0),\nX19 -> 0"
            },
            {
                "from": 404,
                "to": 410,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 405,
                "to": 421,
                "label": "EVAL with clause\npred(s(s(X45)), s(X46)) :- pred(s(X45), X46).\nand substitutionX45 -> T19,\nT9 -> s(s(T19)),\nX46 -> X47,\nX19 -> s(X47)"
            },
            {
                "from": 405,
                "to": 422,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 407,
                "to": 411,
                "label": "SUCCESS"
            },
            {
                "from": 421,
                "to": 376,
                "label": "INSTANCE with matching:\nT9 -> s(T19)\nX19 -> X47"
            },
            {
                "from": 427,
                "to": 428,
                "label": "PARALLEL"
            },
            {
                "from": 427,
                "to": 430,
                "label": "PARALLEL"
            },
            {
                "from": 428,
                "to": 432,
                "label": "EVAL with clause\nhalf(0, 0).\nand substitutionT16 -> 0,\nX20 -> 0"
            },
            {
                "from": 428,
                "to": 433,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 430,
                "to": 454,
                "label": "EVAL with clause\nhalf(s(s(X56)), s(X57)) :- ','(pred(s(s(X56)), X58), ','(pred(X58, X59), half(X59, X57))).\nand substitutionX56 -> T22,\nT16 -> s(s(T22)),\nX57 -> X60,\nX20 -> s(X60)"
            },
            {
                "from": 430,
                "to": 455,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 432,
                "to": 434,
                "label": "SUCCESS"
            },
            {
                "from": 454,
                "to": 44,
                "label": "INSTANCE with matching:\nT8 -> T22\nX18 -> X58\nX19 -> X59\nX20 -> X60"
            },
            {
                "from": 456,
                "to": 458,
                "label": "CASE"
            },
            {
                "from": 457,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T23"
            },
            {
                "from": 458,
                "to": 459,
                "label": "PARALLEL"
            },
            {
                "from": 458,
                "to": 460,
                "label": "PARALLEL"
            },
            {
                "from": 459,
                "to": 461,
                "label": "EVAL with clause\ndouble(0, 0).\nand substitutionT5 -> 0,\nX7 -> 0"
            },
            {
                "from": 459,
                "to": 462,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 460,
                "to": 464,
                "label": "EVAL with clause\ndouble(s(X68), s(s(X69))) :- ','(pred(s(X68), X70), double(X70, X69)).\nand substitutionX68 -> T26,\nT5 -> s(T26),\nX69 -> X71,\nX7 -> s(s(X71))"
            },
            {
                "from": 460,
                "to": 465,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 461,
                "to": 463,
                "label": "SUCCESS"
            },
            {
                "from": 464,
                "to": 466,
                "label": "SPLIT 1"
            },
            {
                "from": 464,
                "to": 467,
                "label": "SPLIT 2\nnew knowledge:\nT26 is ground\nT27 is ground\nreplacements:X70 -> T27"
            },
            {
                "from": 466,
                "to": 376,
                "label": "INSTANCE with matching:\nT9 -> s(T26)\nX19 -> X70"
            },
            {
                "from": 467,
                "to": 456,
                "label": "INSTANCE with matching:\nT5 -> T27\nX7 -> X71"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(143)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

Q is empty.

----------------------------------------

(144) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(145)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)


----------------------------------------

(146) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(147)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(s(T4)) -> U1^1(f10_in(T4), s(T4))
   F3_IN(s(T4)) -> F10_IN(T4)
   F64_IN(s(T15)) -> U2^1(f64_in(T15), s(T15))
   F64_IN(s(T15)) -> F64_IN(T15)
   F376_IN(s(s(T19))) -> U3^1(f376_in(s(T19)), s(s(T19)))
   F376_IN(s(s(T19))) -> F376_IN(s(T19))
   F456_IN(s(T26)) -> U4^1(f464_in(T26), s(T26))
   F456_IN(s(T26)) -> F464_IN(T26)
   F17_IN(s(T8)) -> U5^1(f44_in(T8), s(T8))
   F17_IN(s(T8)) -> F44_IN(T8)
   F46_IN(T12) -> U6^1(f64_in(T12), T12)
   F46_IN(T12) -> F64_IN(T12)
   F377_IN(s(s(T22))) -> U7^1(f44_in(T22), s(s(T22)))
   F377_IN(s(s(T22))) -> F44_IN(T22)
   F10_IN(T4) -> U8^1(f17_in(T4), T4)
   F10_IN(T4) -> F17_IN(T4)
   U8^1(f17_out1(T5), T4) -> U9^1(f18_in(T5), T4, T5)
   U8^1(f17_out1(T5), T4) -> F18_IN(T5)
   F18_IN(T5) -> U10^1(f456_in(T5), T5)
   F18_IN(T5) -> F456_IN(T5)
   U10^1(f456_out1(T23), T5) -> U11^1(f3_in(T23), T5, T23)
   U10^1(f456_out1(T23), T5) -> F3_IN(T23)
   F44_IN(T8) -> U12^1(f46_in(T8), T8)
   F44_IN(T8) -> F46_IN(T8)
   U12^1(f46_out1(T9), T8) -> U13^1(f47_in(T9), T8, T9)
   U12^1(f46_out1(T9), T8) -> F47_IN(T9)
   F47_IN(T9) -> U14^1(f376_in(T9), T9)
   F47_IN(T9) -> F376_IN(T9)
   U14^1(f376_out1(T16), T9) -> U15^1(f377_in(T16), T9, T16)
   U14^1(f376_out1(T16), T9) -> F377_IN(T16)
   F464_IN(T26) -> U16^1(f376_in(s(T26)), T26)
   F464_IN(T26) -> F376_IN(s(T26))
   U16^1(f376_out1(T27), T26) -> U17^1(f456_in(T27), T26, T27)
   U16^1(f376_out1(T27), T26) -> F456_IN(T27)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(148) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 19 less nodes.
----------------------------------------

(149)
Complex Obligation (AND)

----------------------------------------

(150)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F376_IN(s(s(T19))) -> F376_IN(s(T19))

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(151) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(152)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F376_IN(s(s(T19))) -> F376_IN(s(T19))

R is empty.
The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(153) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)


----------------------------------------

(154)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F376_IN(s(s(T19))) -> F376_IN(s(T19))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(155) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F376_IN(s(s(T19))) -> F376_IN(s(T19))
The graph contains the following edges 1 > 1


----------------------------------------

(156)
YES

----------------------------------------

(157)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F464_IN(T26) -> U16^1(f376_in(s(T26)), T26)
   U16^1(f376_out1(T27), T26) -> F456_IN(T27)
   F456_IN(s(T26)) -> F464_IN(T26)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(158) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(159)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F464_IN(T26) -> U16^1(f376_in(s(T26)), T26)
   U16^1(f376_out1(T27), T26) -> F456_IN(T27)
   F456_IN(s(T26)) -> F464_IN(T26)

The TRS R consists of the following rules:

   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(160) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)


----------------------------------------

(161)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F464_IN(T26) -> U16^1(f376_in(s(T26)), T26)
   U16^1(f376_out1(T27), T26) -> F456_IN(T27)
   F456_IN(s(T26)) -> F464_IN(T26)

The TRS R consists of the following rules:

   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))

The set Q consists of the following terms:

   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(162) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F464_IN(T26) -> U16^1(f376_in(s(T26)), T26)
   F456_IN(s(T26)) -> F464_IN(T26)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U16^1_2(x_1, x_2) ) = max{0, x_1 - 2}
POL( f376_in_1(x_1) ) = max{0, x_1 - 2}
POL( s_1(x_1) ) = 2x_1 + 2
POL( 0 ) = 2
POL( f376_out1_1(x_1) ) = x_1 + 2
POL( U3_2(x_1, x_2) ) = 2x_1
POL( F464_IN_1(x_1) ) = 2x_1 + 1
POL( F456_IN_1(x_1) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))


----------------------------------------

(163)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U16^1(f376_out1(T27), T26) -> F456_IN(T27)

The TRS R consists of the following rules:

   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))

The set Q consists of the following terms:

   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(164) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(165)
TRUE

----------------------------------------

(166)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F64_IN(s(T15)) -> F64_IN(T15)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(167) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(168)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F64_IN(s(T15)) -> F64_IN(T15)

R is empty.
The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(169) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)


----------------------------------------

(170)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F64_IN(s(T15)) -> F64_IN(T15)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(171) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F64_IN(s(T15)) -> F64_IN(T15)
The graph contains the following edges 1 > 1


----------------------------------------

(172)
YES

----------------------------------------

(173)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F44_IN(T8) -> U12^1(f46_in(T8), T8)
   U12^1(f46_out1(T9), T8) -> F47_IN(T9)
   F47_IN(T9) -> U14^1(f376_in(T9), T9)
   U14^1(f376_out1(T16), T9) -> F377_IN(T16)
   F377_IN(s(s(T22))) -> F44_IN(T22)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(174) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(175)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F44_IN(T8) -> U12^1(f46_in(T8), T8)
   U12^1(f46_out1(T9), T8) -> F47_IN(T9)
   F47_IN(T9) -> U14^1(f376_in(T9), T9)
   U14^1(f376_out1(T16), T9) -> F377_IN(T16)
   F377_IN(s(s(T22))) -> F44_IN(T22)

The TRS R consists of the following rules:

   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f46_in(T12) -> U6(f64_in(T12), T12)
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(176) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)


----------------------------------------

(177)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F44_IN(T8) -> U12^1(f46_in(T8), T8)
   U12^1(f46_out1(T9), T8) -> F47_IN(T9)
   F47_IN(T9) -> U14^1(f376_in(T9), T9)
   U14^1(f376_out1(T16), T9) -> F377_IN(T16)
   F377_IN(s(s(T22))) -> F44_IN(T22)

The TRS R consists of the following rules:

   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f46_in(T12) -> U6(f64_in(T12), T12)
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))

The set Q consists of the following terms:

   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f46_in(x0)
   U6(f64_out1(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(178) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F377_IN(s(s(T22))) -> F44_IN(T22)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U12^1_2(x_1, x_2) ) = 2x_1
POL( f46_in_1(x_1) ) = x_1 + 1
POL( U6_2(x_1, x_2) ) = x_1 + 1
POL( f64_in_1(x_1) ) = x_1
POL( U14^1_2(x_1, x_2) ) = 2x_1
POL( f376_in_1(x_1) ) = x_1
POL( 0 ) = 0
POL( f376_out1_1(x_1) ) = x_1
POL( s_1(x_1) ) = x_1 + 1
POL( U3_2(x_1, x_2) ) = x_1 + 1
POL( f64_out1_1(x_1) ) = x_1
POL( U2_2(x_1, x_2) ) = x_1 + 1
POL( f46_out1_1(x_1) ) = x_1
POL( F44_IN_1(x_1) ) = 2x_1 + 2
POL( F47_IN_1(x_1) ) = 2x_1
POL( F377_IN_1(x_1) ) = 2x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f46_in(T12) -> U6(f64_in(T12), T12)
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))


----------------------------------------

(179)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F44_IN(T8) -> U12^1(f46_in(T8), T8)
   U12^1(f46_out1(T9), T8) -> F47_IN(T9)
   F47_IN(T9) -> U14^1(f376_in(T9), T9)
   U14^1(f376_out1(T16), T9) -> F377_IN(T16)

The TRS R consists of the following rules:

   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f46_in(T12) -> U6(f64_in(T12), T12)
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))

The set Q consists of the following terms:

   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f46_in(x0)
   U6(f64_out1(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(180) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 4 less nodes.
----------------------------------------

(181)
TRUE

----------------------------------------

(182)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(s(T4)) -> F10_IN(T4)
   F10_IN(T4) -> U8^1(f17_in(T4), T4)
   U8^1(f17_out1(T5), T4) -> F18_IN(T5)
   F18_IN(T5) -> U10^1(f456_in(T5), T5)
   U10^1(f456_out1(T23), T5) -> F3_IN(T23)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

The set Q consists of the following terms:

   f3_in(s(x0))
   U1(f10_out1(x0, x1), s(x2))
   f64_in(0)
   f64_in(s(x0))
   U2(f64_out1(x0), s(x1))
   f376_in(0)
   f376_in(s(0))
   f376_in(s(s(x0)))
   U3(f376_out1(x0), s(s(x1)))
   f456_in(0)
   f456_in(s(x0))
   U4(f464_out1(x0, x1), s(x2))
   f17_in(s(x0))
   U5(f44_out1(x0, x1, x2), s(x3))
   f46_in(x0)
   U6(f64_out1(x0), x1)
   f377_in(0)
   f377_in(s(s(x0)))
   U7(f44_out1(x0, x1, x2), s(s(x3)))
   f10_in(x0)
   U8(f17_out1(x0), x1)
   U9(f18_out1(x0), x1, x2)
   f18_in(x0)
   U10(f456_out1(x0), x1)
   U11(f3_out1, x0, x1)
   f44_in(x0)
   U12(f46_out1(x0), x1)
   U13(f47_out1(x0, x1), x2, x3)
   f47_in(x0)
   U14(f376_out1(x0), x1)
   U15(f377_out1(x0), x1, x2)
   f464_in(x0)
   U16(f376_out1(x0), x1)
   U17(f456_out1(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(183) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [FROCOS05] to decrease Q to the empty set.
----------------------------------------

(184)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(s(T4)) -> F10_IN(T4)
   F10_IN(T4) -> U8^1(f17_in(T4), T4)
   U8^1(f17_out1(T5), T4) -> F18_IN(T5)
   F18_IN(T5) -> U10^1(f456_in(T5), T5)
   U10^1(f456_out1(T23), T5) -> F3_IN(T23)

The TRS R consists of the following rules:

   f3_in(s(T4)) -> U1(f10_in(T4), s(T4))
   U1(f10_out1(X6, X7), s(T4)) -> f3_out1
   f64_in(0) -> f64_out1(0)
   f64_in(s(T15)) -> U2(f64_in(T15), s(T15))
   U2(f64_out1(X38), s(T15)) -> f64_out1(s(X38))
   f376_in(0) -> f376_out1(0)
   f376_in(s(0)) -> f376_out1(0)
   f376_in(s(s(T19))) -> U3(f376_in(s(T19)), s(s(T19)))
   U3(f376_out1(X47), s(s(T19))) -> f376_out1(s(X47))
   f456_in(0) -> f456_out1(0)
   f456_in(s(T26)) -> U4(f464_in(T26), s(T26))
   U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71)))
   f17_in(s(T8)) -> U5(f44_in(T8), s(T8))
   U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20))
   f46_in(T12) -> U6(f64_in(T12), T12)
   U6(f64_out1(X29), T12) -> f46_out1(s(X29))
   f377_in(0) -> f377_out1(0)
   f377_in(s(s(T22))) -> U7(f44_in(T22), s(s(T22)))
   U7(f44_out1(X58, X59, X60), s(s(T22))) -> f377_out1(s(X60))
   f10_in(T4) -> U8(f17_in(T4), T4)
   U8(f17_out1(T5), T4) -> U9(f18_in(T5), T4, T5)
   U9(f18_out1(X7), T4, T5) -> f10_out1(T5, X7)
   f18_in(T5) -> U10(f456_in(T5), T5)
   U10(f456_out1(T23), T5) -> U11(f3_in(T23), T5, T23)
   U11(f3_out1, T5, T23) -> f18_out1(T23)
   f44_in(T8) -> U12(f46_in(T8), T8)
   U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)
   U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)
   f47_in(T9) -> U14(f376_in(T9), T9)
   U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)
   U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)
   f464_in(T26) -> U16(f376_in(s(T26)), T26)
   U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)
   U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(185) NonLoopProof (COMPLETE)
By Theorem 8 [NONLOOP] we deduce infiniteness of the QDP.
We apply the theorem with m = 1, b = 0, 
?' = [ ], and ?' = [x0 / s(0)] on the rule
U10^1(f456_out1(s(s(0))), s(0))[ ]^n[ ] -> U10^1(f456_out1(s(s(0))), s(0))[ ]^n[x0 / s(0)]
This rule is correct for the QDP as the following derivation shows:

U10^1(f456_out1(s(s(0))), s(0))[ ]^n[ ] -> U10^1(f456_out1(s(s(0))), s(0))[ ]^n[x0 / s(0)]
    by Equivalency by Simplifying Mu with mu1: [x0 / s(0)] mu2: [ ]
    intermediate steps: Instantiate mu
    U10^1(f456_out1(s(s(0))), x0)[ ]^n[ ] -> U10^1(f456_out1(s(s(0))), s(0))[ ]^n[ ]
        by Rewrite t with the rewrite sequence <Pos,Rule>: [([0],f456_in(s(T26)) -> U4(f464_in(T26), s(T26))), ([0,0],f464_in(T26) -> U16(f376_in(s(T26)), T26)), ([0,0,0],f376_in(s(0)) -> f376_out1(0)), ([0,0],U16(f376_out1(T27), T26) -> U17(f456_in(T27), T26, T27)), ([0,0,0],f456_in(0) -> f456_out1(0)), ([0,0],U17(f456_out1(X71), T26, T27) -> f464_out1(T27, X71)), ([0],U4(f464_out1(X70, X71), s(T26)) -> f456_out1(s(s(X71))))]
        U10^1(f456_out1(s(s(0))), x0)[ ]^n[ ] -> U10^1(f456_in(s(0)), s(0))[ ]^n[ ]
            by Narrowing at position: []
            U10^1(f456_out1(s(s(0))), x0)[ ]^n[ ] -> F18_IN(s(0))[ ]^n[ ]
                by Narrowing at position: []
                U10^1(f456_out1(s(s(0))), x0)[ ]^n[ ] -> U8^1(f17_out1(s(0)), s(0))[ ]^n[ ]
                    by Rewrite t with the rewrite sequence <Pos,Rule>: [([0,0,0],U6(f64_out1(X29), T12) -> f46_out1(s(X29))), ([0,0],U12(f46_out1(T9), T8) -> U13(f47_in(T9), T8, T9)), ([0,0,0],f47_in(T9) -> U14(f376_in(T9), T9)), ([0,0,0,0],f376_in(s(0)) -> f376_out1(0)), ([0,0,0],U14(f376_out1(T16), T9) -> U15(f377_in(T16), T9, T16)), ([0,0,0,0],f377_in(0) -> f377_out1(0)), ([0,0,0],U15(f377_out1(X20), T9, T16) -> f47_out1(T16, X20)), ([0,0],U13(f47_out1(X19, X20), T8, T9) -> f44_out1(T9, X19, X20)), ([0],U5(f44_out1(X18, X19, X20), s(T8)) -> f17_out1(s(X20)))]
                    U10^1(f456_out1(s(s(0))), x0)[ ]^n[ ] -> U8^1(U5(U12(U6(f64_out1(0), 0), 0), s(0)), s(0))[ ]^n[ ]
                        by Narrowing at position: [0,0,0,0]
                        intermediate steps: Instantiation - Instantiation
                        U10^1(f456_out1(s(s(y0))), x0)[ ]^n[ ] -> U8^1(U5(U12(U6(f64_in(y0), y0), y0), s(y0)), s(y0))[ ]^n[ ]
                            by Rewrite t with the rewrite sequence <Pos,Rule>: [([0,0],f44_in(T8) -> U12(f46_in(T8), T8)), ([0,0,0],f46_in(T12) -> U6(f64_in(T12), T12))]
                            U10^1(f456_out1(s(s(y0))), x0)[ ]^n[ ] -> U8^1(U5(f44_in(y0), s(y0)), s(y0))[ ]^n[ ]
                                by Narrowing at position: []
                                intermediate steps: Instantiation - Instantiation
                                U10^1(f456_out1(T23), T5)[ ]^n[ ] -> F3_IN(T23)[ ]^n[ ]
                                    by Rule from TRS P

                                F3_IN(s(s(y0)))[ ]^n[ ] -> U8^1(U5(f44_in(y0), s(y0)), s(y0))[ ]^n[ ]
                                    by Narrowing at position: [0]
                                    intermediate steps: Instantiation
                                    F3_IN(s(x0))[ ]^n[ ] -> U8^1(f17_in(x0), x0)[ ]^n[ ]
                                        by Narrowing at position: []
                                        intermediate steps: Instantiation
                                        F3_IN(s(T4))[ ]^n[ ] -> F10_IN(T4)[ ]^n[ ]
                                            by Rule from TRS P

                                        intermediate steps: Instantiation - Instantiation
                                        F10_IN(T4)[ ]^n[ ] -> U8^1(f17_in(T4), T4)[ ]^n[ ]
                                            by Rule from TRS P

                                    intermediate steps: Instantiation
                                    f17_in(s(T8))[ ]^n[ ] -> U5(f44_in(T8), s(T8))[ ]^n[ ]
                                        by Rule from TRS R

                        f64_in(0)[ ]^n[ ] -> f64_out1(0)[ ]^n[ ]
                            by Rule from TRS R

                intermediate steps: Instantiation - Instantiation - Instantiation - Instantiation
                U8^1(f17_out1(T5), T4)[ ]^n[ ] -> F18_IN(T5)[ ]^n[ ]
                    by Rule from TRS P

            intermediate steps: Instantiation - Instantiation
            F18_IN(T5)[ ]^n[ ] -> U10^1(f456_in(T5), T5)[ ]^n[ ]
                by Rule from TRS P
----------------------------------------

(186)
NO

----------------------------------------

(187) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(pred (0) (0))",
                null
            ],
            [
                "(pred (s (0)) (0))",
                null
            ],
            [
                "(pred (s (s X)) (s Y))",
                "(pred (s X) Y)"
            ],
            [
                "(double (0) (0))",
                null
            ],
            [
                "(double (s X) (s (s Y)))",
                "(',' (pred (s X) Z) (double Z Y))"
            ],
            [
                "(half (0) (0))",
                null
            ],
            [
                "(half (s (s X)) (s U))",
                "(',' (pred (s (s X)) Y) (',' (pred Y Z) (half Z U)))"
            ],
            [
                "(f (s X))",
                "(',' (half (s X) Y) (',' (double Y Z) (f Z)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "192": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "150": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred T9 X19) (half X19 X20))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [
                        "X20",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "151": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "152": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(pred (s (s T8)) X18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "153": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(pred (s (s T8)) X18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "431": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double T27 X71)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T27"],
                    "free": ["X71"],
                    "exprvars": []
                }
            },
            "115": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s (s T8)) X18) (',' (pred X18 X19) (half X19 X20)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": [
                        "X20",
                        "X18",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "118": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (half (s T4) X6) (',' (double X6 X7) (f X7)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half (s T4) X6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [{
                    "clause": 7,
                    "scope": 1,
                    "term": "(f T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "400": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "368": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(half T16 X20)"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(half T16 X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "369": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "402": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(f T23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T23"],
                    "free": [],
                    "exprvars": []
                }
            },
            "328": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "329": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "406": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(double T5 X7)"
                    },
                    {
                        "clause": 4,
                        "scope": 7,
                        "term": "(double T5 X7)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "62": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (double T5 X7) (f X7))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "408": {
                "goal": [{
                    "clause": 3,
                    "scope": 7,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "63": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(half (s T4) X6)"
                    },
                    {
                        "clause": 6,
                        "scope": 2,
                        "term": "(half (s T4) X6)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "409": {
                "goal": [{
                    "clause": 4,
                    "scope": 7,
                    "term": "(double T5 X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "66": {
                "goal": [{
                    "clause": 6,
                    "scope": 2,
                    "term": "(half (s T4) X6)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T4"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "370": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "371": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "174": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T12) X29)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "372": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "373": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "330": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "374": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s (s T22)) X58) (',' (pred X58 X59) (half X59 X60)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [
                        "X60",
                        "X58",
                        "X59"
                    ],
                    "exprvars": []
                }
            },
            "331": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "375": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "332": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "333": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T15) X38)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T15"],
                    "free": ["X38"],
                    "exprvars": []
                }
            },
            "334": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "335": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "412": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "336": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(half T16 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T16"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "413": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "337": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "414": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "338": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "339": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(pred T9 X19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "183": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(pred (s T12) X29)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "340": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "341": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "342": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "343": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "344": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(pred T9 X19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "345": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "346": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "149": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s (s T8)) X18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T8"],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "347": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "348": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T19) X47)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X47"],
                    "exprvars": []
                }
            },
            "425": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pred (s T26) X70) (double X70 X71))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": [
                        "X71",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "349": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "426": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "429": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(pred (s T26) X70)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X70"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 13,
                "label": "EVAL with clause\nf(s(X5)) :- ','(half(s(X5), X6), ','(double(X6, X7), f(X7))).\nand substitutionX5 -> T4,\nT1 -> s(T4)"
            },
            {
                "from": 4,
                "to": 14,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 59,
                "label": "SPLIT 1"
            },
            {
                "from": 13,
                "to": 62,
                "label": "SPLIT 2\nnew knowledge:\nT4 is ground\nT5 is ground\nreplacements:X6 -> T5"
            },
            {
                "from": 59,
                "to": 63,
                "label": "CASE"
            },
            {
                "from": 62,
                "to": 400,
                "label": "SPLIT 1"
            },
            {
                "from": 62,
                "to": 402,
                "label": "SPLIT 2\nnew knowledge:\nT5 is ground\nT23 is ground\nreplacements:X7 -> T23"
            },
            {
                "from": 63,
                "to": 66,
                "label": "BACKTRACK\nfor clause: half(0, 0)because of non-unification"
            },
            {
                "from": 66,
                "to": 115,
                "label": "EVAL with clause\nhalf(s(s(X16)), s(X17)) :- ','(pred(s(s(X16)), X18), ','(pred(X18, X19), half(X19, X17))).\nand substitutionX16 -> T8,\nT4 -> s(T8),\nX17 -> X20,\nX6 -> s(X20)"
            },
            {
                "from": 66,
                "to": 118,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 115,
                "to": 149,
                "label": "SPLIT 1"
            },
            {
                "from": 115,
                "to": 150,
                "label": "SPLIT 2\nnew knowledge:\nT8 is ground\nT9 is ground\nreplacements:X18 -> T9"
            },
            {
                "from": 149,
                "to": 151,
                "label": "CASE"
            },
            {
                "from": 150,
                "to": 335,
                "label": "SPLIT 1"
            },
            {
                "from": 150,
                "to": 336,
                "label": "SPLIT 2\nnew knowledge:\nT9 is ground\nT16 is ground\nreplacements:X19 -> T16"
            },
            {
                "from": 151,
                "to": 152,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 152,
                "to": 153,
                "label": "BACKTRACK\nfor clause: pred(s(0), 0)because of non-unification"
            },
            {
                "from": 153,
                "to": 174,
                "label": "ONLY EVAL with clause\npred(s(s(X27)), s(X28)) :- pred(s(X27), X28).\nand substitutionT8 -> T12,\nX27 -> T12,\nX28 -> X29,\nX18 -> s(X29)"
            },
            {
                "from": 174,
                "to": 183,
                "label": "CASE"
            },
            {
                "from": 183,
                "to": 192,
                "label": "BACKTRACK\nfor clause: pred(0, 0)because of non-unification"
            },
            {
                "from": 192,
                "to": 328,
                "label": "PARALLEL"
            },
            {
                "from": 192,
                "to": 329,
                "label": "PARALLEL"
            },
            {
                "from": 328,
                "to": 330,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT12 -> 0,\nX29 -> 0"
            },
            {
                "from": 328,
                "to": 331,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 329,
                "to": 333,
                "label": "EVAL with clause\npred(s(s(X36)), s(X37)) :- pred(s(X36), X37).\nand substitutionX36 -> T15,\nT12 -> s(T15),\nX37 -> X38,\nX29 -> s(X38)"
            },
            {
                "from": 329,
                "to": 334,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 330,
                "to": 332,
                "label": "SUCCESS"
            },
            {
                "from": 333,
                "to": 174,
                "label": "INSTANCE with matching:\nT12 -> T15\nX29 -> X38"
            },
            {
                "from": 335,
                "to": 337,
                "label": "CASE"
            },
            {
                "from": 336,
                "to": 368,
                "label": "CASE"
            },
            {
                "from": 337,
                "to": 338,
                "label": "PARALLEL"
            },
            {
                "from": 337,
                "to": 339,
                "label": "PARALLEL"
            },
            {
                "from": 338,
                "to": 340,
                "label": "EVAL with clause\npred(0, 0).\nand substitutionT9 -> 0,\nX19 -> 0"
            },
            {
                "from": 338,
                "to": 341,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 339,
                "to": 343,
                "label": "PARALLEL"
            },
            {
                "from": 339,
                "to": 344,
                "label": "PARALLEL"
            },
            {
                "from": 340,
                "to": 342,
                "label": "SUCCESS"
            },
            {
                "from": 343,
                "to": 345,
                "label": "EVAL with clause\npred(s(0), 0).\nand substitutionT9 -> s(0),\nX19 -> 0"
            },
            {
                "from": 343,
                "to": 346,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 344,
                "to": 348,
                "label": "EVAL with clause\npred(s(s(X45)), s(X46)) :- pred(s(X45), X46).\nand substitutionX45 -> T19,\nT9 -> s(s(T19)),\nX46 -> X47,\nX19 -> s(X47)"
            },
            {
                "from": 344,
                "to": 349,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 345,
                "to": 347,
                "label": "SUCCESS"
            },
            {
                "from": 348,
                "to": 335,
                "label": "INSTANCE with matching:\nT9 -> s(T19)\nX19 -> X47"
            },
            {
                "from": 368,
                "to": 369,
                "label": "PARALLEL"
            },
            {
                "from": 368,
                "to": 370,
                "label": "PARALLEL"
            },
            {
                "from": 369,
                "to": 371,
                "label": "EVAL with clause\nhalf(0, 0).\nand substitutionT16 -> 0,\nX20 -> 0"
            },
            {
                "from": 369,
                "to": 372,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 370,
                "to": 374,
                "label": "EVAL with clause\nhalf(s(s(X56)), s(X57)) :- ','(pred(s(s(X56)), X58), ','(pred(X58, X59), half(X59, X57))).\nand substitutionX56 -> T22,\nT16 -> s(s(T22)),\nX57 -> X60,\nX20 -> s(X60)"
            },
            {
                "from": 370,
                "to": 375,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 371,
                "to": 373,
                "label": "SUCCESS"
            },
            {
                "from": 374,
                "to": 115,
                "label": "INSTANCE with matching:\nT8 -> T22\nX18 -> X58\nX19 -> X59\nX20 -> X60"
            },
            {
                "from": 400,
                "to": 406,
                "label": "CASE"
            },
            {
                "from": 402,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T23"
            },
            {
                "from": 406,
                "to": 408,
                "label": "PARALLEL"
            },
            {
                "from": 406,
                "to": 409,
                "label": "PARALLEL"
            },
            {
                "from": 408,
                "to": 412,
                "label": "EVAL with clause\ndouble(0, 0).\nand substitutionT5 -> 0,\nX7 -> 0"
            },
            {
                "from": 408,
                "to": 413,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 409,
                "to": 425,
                "label": "EVAL with clause\ndouble(s(X68), s(s(X69))) :- ','(pred(s(X68), X70), double(X70, X69)).\nand substitutionX68 -> T26,\nT5 -> s(T26),\nX69 -> X71,\nX7 -> s(s(X71))"
            },
            {
                "from": 409,
                "to": 426,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 412,
                "to": 414,
                "label": "SUCCESS"
            },
            {
                "from": 425,
                "to": 429,
                "label": "SPLIT 1"
            },
            {
                "from": 425,
                "to": 431,
                "label": "SPLIT 2\nnew knowledge:\nT26 is ground\nT27 is ground\nreplacements:X70 -> T27"
            },
            {
                "from": 429,
                "to": 335,
                "label": "INSTANCE with matching:\nT9 -> s(T26)\nX19 -> X70"
            },
            {
                "from": 431,
                "to": 400,
                "label": "INSTANCE with matching:\nT5 -> T27\nX7 -> X71"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(188)
Complex Obligation (AND)

----------------------------------------

(189)
Obligation:
Rules:
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x)) -> f348_out(x) :|: TRUE
f337_in(T9) -> f338_in(T9) :|: TRUE
f338_out(x1) -> f337_out(x1) :|: TRUE
f339_out(x2) -> f337_out(x2) :|: TRUE
f337_in(x3) -> f339_in(x3) :|: TRUE
f349_out -> f344_out(x4) :|: TRUE
f344_in(x5) -> f349_in :|: TRUE
f348_out(x6) -> f344_out(s(s(x6))) :|: TRUE
f344_in(s(s(x7))) -> f348_in(x7) :|: TRUE
f337_out(x8) -> f335_out(x8) :|: TRUE
f335_in(x9) -> f337_in(x9) :|: TRUE
f339_in(x10) -> f343_in(x10) :|: TRUE
f343_out(x11) -> f339_out(x11) :|: TRUE
f339_in(x12) -> f344_in(x12) :|: TRUE
f344_out(x13) -> f339_out(x13) :|: TRUE
f4_out(T1) -> f1_out(T1) :|: TRUE
f1_in(x14) -> f4_in(x14) :|: TRUE
f13_out(T4) -> f4_out(s(T4)) :|: TRUE
f4_in(s(x15)) -> f13_in(x15) :|: TRUE
f4_in(x16) -> f14_in :|: TRUE
f14_out -> f4_out(x17) :|: TRUE
f59_out(x18) -> f62_in(x19) :|: TRUE
f62_out(x20) -> f13_out(x21) :|: TRUE
f13_in(x22) -> f59_in(x22) :|: TRUE
f59_in(x23) -> f63_in(x23) :|: TRUE
f63_out(x24) -> f59_out(x24) :|: TRUE
f66_out(x25) -> f63_out(x25) :|: TRUE
f63_in(x26) -> f66_in(x26) :|: TRUE
f66_in(s(T8)) -> f115_in(T8) :|: TRUE
f66_in(x27) -> f118_in :|: TRUE
f115_out(x28) -> f66_out(s(x28)) :|: TRUE
f118_out -> f66_out(x29) :|: TRUE
f149_out(x30) -> f150_in(x31) :|: TRUE
f115_in(x32) -> f149_in(x32) :|: TRUE
f150_out(x33) -> f115_out(x34) :|: TRUE
f336_out(x35) -> f150_out(x36) :|: TRUE
f335_out(x37) -> f336_in(x38) :|: TRUE
f150_in(x39) -> f335_in(x39) :|: TRUE
f400_out(T5) -> f402_in(T23) :|: TRUE
f62_in(x40) -> f400_in(x40) :|: TRUE
f402_out(x41) -> f62_out(x42) :|: TRUE
f400_in(x43) -> f406_in(x43) :|: TRUE
f406_out(x44) -> f400_out(x44) :|: TRUE
f406_in(x45) -> f409_in(x45) :|: TRUE
f408_out(x46) -> f406_out(x46) :|: TRUE
f409_out(x47) -> f406_out(x47) :|: TRUE
f406_in(x48) -> f408_in(x48) :|: TRUE
f409_in(s(T26)) -> f425_in(T26) :|: TRUE
f409_in(x49) -> f426_in :|: TRUE
f426_out -> f409_out(x50) :|: TRUE
f425_out(x51) -> f409_out(s(x51)) :|: TRUE
f425_in(x52) -> f429_in(x52) :|: TRUE
f431_out(x53) -> f425_out(x54) :|: TRUE
f429_out(x55) -> f431_in(x56) :|: TRUE
f335_out(s(x57)) -> f429_out(x57) :|: TRUE
f429_in(x58) -> f335_in(s(x58)) :|: TRUE
Start term: f1_in(T1)

----------------------------------------

(190) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(191)
TRUE

----------------------------------------

(192)
Obligation:
Rules:
f400_out(T27) -> f431_out(T27) :|: TRUE
f431_in(x) -> f400_in(x) :|: TRUE
f335_out(s(T26)) -> f429_out(T26) :|: TRUE
f429_in(x1) -> f335_in(s(x1)) :|: TRUE
f409_in(s(x2)) -> f425_in(x2) :|: TRUE
f409_in(T5) -> f426_in :|: TRUE
f426_out -> f409_out(x3) :|: TRUE
f425_out(x4) -> f409_out(s(x4)) :|: TRUE
f345_in -> f345_out :|: TRUE
f345_out -> f343_out(s(0)) :|: TRUE
f343_in(s(0)) -> f345_in :|: TRUE
f343_in(T9) -> f346_in :|: TRUE
f346_out -> f343_out(x5) :|: TRUE
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x6)) -> f348_out(x6) :|: TRUE
f340_in -> f340_out :|: TRUE
f400_in(x7) -> f406_in(x7) :|: TRUE
f406_out(x8) -> f400_out(x8) :|: TRUE
f337_in(x9) -> f338_in(x9) :|: TRUE
f338_out(x10) -> f337_out(x10) :|: TRUE
f339_out(x11) -> f337_out(x11) :|: TRUE
f337_in(x12) -> f339_in(x12) :|: TRUE
f406_in(x13) -> f409_in(x13) :|: TRUE
f408_out(x14) -> f406_out(x14) :|: TRUE
f409_out(x15) -> f406_out(x15) :|: TRUE
f406_in(x16) -> f408_in(x16) :|: TRUE
f425_in(x17) -> f429_in(x17) :|: TRUE
f431_out(x18) -> f425_out(x19) :|: TRUE
f429_out(x20) -> f431_in(x21) :|: TRUE
f340_out -> f338_out(0) :|: TRUE
f338_in(0) -> f340_in :|: TRUE
f338_in(x22) -> f341_in :|: TRUE
f341_out -> f338_out(x23) :|: TRUE
f337_out(x24) -> f335_out(x24) :|: TRUE
f335_in(x25) -> f337_in(x25) :|: TRUE
f349_out -> f344_out(x26) :|: TRUE
f344_in(x27) -> f349_in :|: TRUE
f348_out(x28) -> f344_out(s(s(x28))) :|: TRUE
f344_in(s(s(x29))) -> f348_in(x29) :|: TRUE
f339_in(x30) -> f343_in(x30) :|: TRUE
f343_out(x31) -> f339_out(x31) :|: TRUE
f339_in(x32) -> f344_in(x32) :|: TRUE
f344_out(x33) -> f339_out(x33) :|: TRUE
f4_out(T1) -> f1_out(T1) :|: TRUE
f1_in(x34) -> f4_in(x34) :|: TRUE
f13_out(T4) -> f4_out(s(T4)) :|: TRUE
f4_in(s(x35)) -> f13_in(x35) :|: TRUE
f4_in(x36) -> f14_in :|: TRUE
f14_out -> f4_out(x37) :|: TRUE
f59_out(x38) -> f62_in(x39) :|: TRUE
f62_out(x40) -> f13_out(x41) :|: TRUE
f13_in(x42) -> f59_in(x42) :|: TRUE
f400_out(x43) -> f402_in(x44) :|: TRUE
f62_in(x45) -> f400_in(x45) :|: TRUE
f402_out(x46) -> f62_out(x47) :|: TRUE
Start term: f1_in(T1)

----------------------------------------

(193) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(194)
TRUE

----------------------------------------

(195)
Obligation:
Rules:
f174_in(T12) -> f183_in(T12) :|: TRUE
f183_out(x) -> f174_out(x) :|: TRUE
f329_out(x1) -> f192_out(x1) :|: TRUE
f192_in(x2) -> f328_in(x2) :|: TRUE
f328_out(x3) -> f192_out(x3) :|: TRUE
f192_in(x4) -> f329_in(x4) :|: TRUE
f183_in(x5) -> f192_in(x5) :|: TRUE
f192_out(x6) -> f183_out(x6) :|: TRUE
f329_in(x7) -> f334_in :|: TRUE
f333_out(T15) -> f329_out(s(T15)) :|: TRUE
f334_out -> f329_out(x8) :|: TRUE
f329_in(s(x9)) -> f333_in(x9) :|: TRUE
f174_out(x10) -> f333_out(x10) :|: TRUE
f333_in(x11) -> f174_in(x11) :|: TRUE
f4_out(T1) -> f1_out(T1) :|: TRUE
f1_in(x12) -> f4_in(x12) :|: TRUE
f13_out(T4) -> f4_out(s(T4)) :|: TRUE
f4_in(s(x13)) -> f13_in(x13) :|: TRUE
f4_in(x14) -> f14_in :|: TRUE
f14_out -> f4_out(x15) :|: TRUE
f59_out(x16) -> f62_in(x17) :|: TRUE
f62_out(x18) -> f13_out(x19) :|: TRUE
f13_in(x20) -> f59_in(x20) :|: TRUE
f59_in(x21) -> f63_in(x21) :|: TRUE
f63_out(x22) -> f59_out(x22) :|: TRUE
f66_out(x23) -> f63_out(x23) :|: TRUE
f63_in(x24) -> f66_in(x24) :|: TRUE
f66_in(s(T8)) -> f115_in(T8) :|: TRUE
f66_in(x25) -> f118_in :|: TRUE
f115_out(x26) -> f66_out(s(x26)) :|: TRUE
f118_out -> f66_out(x27) :|: TRUE
f149_out(x28) -> f150_in(x29) :|: TRUE
f115_in(x30) -> f149_in(x30) :|: TRUE
f150_out(x31) -> f115_out(x32) :|: TRUE
f151_out(x33) -> f149_out(x33) :|: TRUE
f149_in(x34) -> f151_in(x34) :|: TRUE
f152_out(x35) -> f151_out(x35) :|: TRUE
f151_in(x36) -> f152_in(x36) :|: TRUE
f152_in(x37) -> f153_in(x37) :|: TRUE
f153_out(x38) -> f152_out(x38) :|: TRUE
f153_in(x39) -> f174_in(x39) :|: TRUE
f174_out(x40) -> f153_out(x40) :|: TRUE
Start term: f1_in(T1)

----------------------------------------

(196) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f174_in(T12) -> f183_in(T12) :|: TRUE
f192_in(x4) -> f329_in(x4) :|: TRUE
f183_in(x5) -> f192_in(x5) :|: TRUE
f329_in(s(x9)) -> f333_in(x9) :|: TRUE
f333_in(x11) -> f174_in(x11) :|: TRUE


----------------------------------------

(197)
Obligation:
Rules:
f174_in(T12) -> f183_in(T12) :|: TRUE
f192_in(x4) -> f329_in(x4) :|: TRUE
f183_in(x5) -> f192_in(x5) :|: TRUE
f329_in(s(x9)) -> f333_in(x9) :|: TRUE
f333_in(x11) -> f174_in(x11) :|: TRUE

----------------------------------------

(198) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(199)
Obligation:
Rules:
f174_in(s(x9:0)) -> f174_in(x9:0) :|: TRUE

----------------------------------------

(200) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(201)
Obligation:
Rules:
f174_in(s(x9:0)) -> f174_in(x9:0) :|: TRUE

----------------------------------------

(202) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f174_in(s(x9:0)) -> f174_in(x9:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(203)
Obligation:

Termination digraph:
Nodes:
(1) f174_in(s(x9:0)) -> f174_in(x9:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(204) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f174_in(VARIABLE)
s(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(205)
Obligation:
Rules:
f174_in(s(x9:0)) -> f174_in(x9:0)

----------------------------------------

(206) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(207)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f174_in(s(x9:0)) -> f174_in(x9:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(208) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f174_in(s(x9:0)) -> f174_in(x9:0)
The graph contains the following edges 1 > 1


----------------------------------------

(209)
YES

----------------------------------------

(210)
Obligation:
Rules:
f152_in(T8) -> f153_in(T8) :|: TRUE
f153_out(x) -> f152_out(x) :|: TRUE
f374_in(T22) -> f115_in(T22) :|: TRUE
f115_out(x1) -> f374_out(x1) :|: TRUE
f149_out(x2) -> f150_in(x3) :|: TRUE
f115_in(x4) -> f149_in(x4) :|: TRUE
f150_out(x5) -> f115_out(x6) :|: TRUE
f345_in -> f345_out :|: TRUE
f340_in -> f340_out :|: TRUE
f337_in(T9) -> f338_in(T9) :|: TRUE
f338_out(x7) -> f337_out(x7) :|: TRUE
f339_out(x8) -> f337_out(x8) :|: TRUE
f337_in(x9) -> f339_in(x9) :|: TRUE
f151_out(x10) -> f149_out(x10) :|: TRUE
f149_in(x11) -> f151_in(x11) :|: TRUE
f329_in(T12) -> f334_in :|: TRUE
f333_out(T15) -> f329_out(s(T15)) :|: TRUE
f334_out -> f329_out(x12) :|: TRUE
f329_in(s(x13)) -> f333_in(x13) :|: TRUE
f340_out -> f338_out(0) :|: TRUE
f338_in(0) -> f340_in :|: TRUE
f338_in(x14) -> f341_in :|: TRUE
f341_out -> f338_out(x15) :|: TRUE
f174_in(x16) -> f183_in(x16) :|: TRUE
f183_out(x17) -> f174_out(x17) :|: TRUE
f152_out(x18) -> f151_out(x18) :|: TRUE
f151_in(x19) -> f152_in(x19) :|: TRUE
f183_in(x20) -> f192_in(x20) :|: TRUE
f192_out(x21) -> f183_out(x21) :|: TRUE
f336_in(T16) -> f368_in(T16) :|: TRUE
f368_out(x22) -> f336_out(x22) :|: TRUE
f174_out(x23) -> f333_out(x23) :|: TRUE
f333_in(x24) -> f174_in(x24) :|: TRUE
f330_in -> f330_out :|: TRUE
f345_out -> f343_out(s(0)) :|: TRUE
f343_in(s(0)) -> f345_in :|: TRUE
f343_in(x25) -> f346_in :|: TRUE
f346_out -> f343_out(x26) :|: TRUE
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x27)) -> f348_out(x27) :|: TRUE
f329_out(x28) -> f192_out(x28) :|: TRUE
f192_in(x29) -> f328_in(x29) :|: TRUE
f328_out(x30) -> f192_out(x30) :|: TRUE
f192_in(x31) -> f329_in(x31) :|: TRUE
f336_out(x32) -> f150_out(x33) :|: TRUE
f335_out(x34) -> f336_in(x35) :|: TRUE
f150_in(x36) -> f335_in(x36) :|: TRUE
f368_in(x37) -> f370_in(x37) :|: TRUE
f369_out(x38) -> f368_out(x38) :|: TRUE
f370_out(x39) -> f368_out(x39) :|: TRUE
f368_in(x40) -> f369_in(x40) :|: TRUE
f374_out(x41) -> f370_out(s(s(x41))) :|: TRUE
f370_in(s(s(x42))) -> f374_in(x42) :|: TRUE
f370_in(x43) -> f375_in :|: TRUE
f375_out -> f370_out(x44) :|: TRUE
f153_in(x45) -> f174_in(x45) :|: TRUE
f174_out(x46) -> f153_out(x46) :|: TRUE
f337_out(x47) -> f335_out(x47) :|: TRUE
f335_in(x48) -> f337_in(x48) :|: TRUE
f349_out -> f344_out(x49) :|: TRUE
f344_in(x50) -> f349_in :|: TRUE
f348_out(x51) -> f344_out(s(s(x51))) :|: TRUE
f344_in(s(s(x52))) -> f348_in(x52) :|: TRUE
f330_out -> f328_out(0) :|: TRUE
f331_out -> f328_out(x53) :|: TRUE
f328_in(0) -> f330_in :|: TRUE
f328_in(x54) -> f331_in :|: TRUE
f339_in(x55) -> f343_in(x55) :|: TRUE
f343_out(x56) -> f339_out(x56) :|: TRUE
f339_in(x57) -> f344_in(x57) :|: TRUE
f344_out(x58) -> f339_out(x58) :|: TRUE
f4_out(T1) -> f1_out(T1) :|: TRUE
f1_in(x59) -> f4_in(x59) :|: TRUE
f13_out(T4) -> f4_out(s(T4)) :|: TRUE
f4_in(s(x60)) -> f13_in(x60) :|: TRUE
f4_in(x61) -> f14_in :|: TRUE
f14_out -> f4_out(x62) :|: TRUE
f59_out(x63) -> f62_in(x64) :|: TRUE
f62_out(x65) -> f13_out(x66) :|: TRUE
f13_in(x67) -> f59_in(x67) :|: TRUE
f59_in(x68) -> f63_in(x68) :|: TRUE
f63_out(x69) -> f59_out(x69) :|: TRUE
f66_out(x70) -> f63_out(x70) :|: TRUE
f63_in(x71) -> f66_in(x71) :|: TRUE
f66_in(s(x72)) -> f115_in(x72) :|: TRUE
f66_in(x73) -> f118_in :|: TRUE
f115_out(x74) -> f66_out(s(x74)) :|: TRUE
f118_out -> f66_out(x75) :|: TRUE
Start term: f1_in(T1)

----------------------------------------

(211) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f152_in(T8) -> f153_in(T8) :|: TRUE
f153_out(x) -> f152_out(x) :|: TRUE
f374_in(T22) -> f115_in(T22) :|: TRUE
f149_out(x2) -> f150_in(x3) :|: TRUE
f115_in(x4) -> f149_in(x4) :|: TRUE
f345_in -> f345_out :|: TRUE
f340_in -> f340_out :|: TRUE
f337_in(T9) -> f338_in(T9) :|: TRUE
f338_out(x7) -> f337_out(x7) :|: TRUE
f339_out(x8) -> f337_out(x8) :|: TRUE
f337_in(x9) -> f339_in(x9) :|: TRUE
f151_out(x10) -> f149_out(x10) :|: TRUE
f149_in(x11) -> f151_in(x11) :|: TRUE
f333_out(T15) -> f329_out(s(T15)) :|: TRUE
f329_in(s(x13)) -> f333_in(x13) :|: TRUE
f340_out -> f338_out(0) :|: TRUE
f338_in(0) -> f340_in :|: TRUE
f174_in(x16) -> f183_in(x16) :|: TRUE
f183_out(x17) -> f174_out(x17) :|: TRUE
f152_out(x18) -> f151_out(x18) :|: TRUE
f151_in(x19) -> f152_in(x19) :|: TRUE
f183_in(x20) -> f192_in(x20) :|: TRUE
f192_out(x21) -> f183_out(x21) :|: TRUE
f336_in(T16) -> f368_in(T16) :|: TRUE
f174_out(x23) -> f333_out(x23) :|: TRUE
f333_in(x24) -> f174_in(x24) :|: TRUE
f330_in -> f330_out :|: TRUE
f345_out -> f343_out(s(0)) :|: TRUE
f343_in(s(0)) -> f345_in :|: TRUE
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x27)) -> f348_out(x27) :|: TRUE
f329_out(x28) -> f192_out(x28) :|: TRUE
f192_in(x29) -> f328_in(x29) :|: TRUE
f328_out(x30) -> f192_out(x30) :|: TRUE
f192_in(x31) -> f329_in(x31) :|: TRUE
f335_out(x34) -> f336_in(x35) :|: TRUE
f150_in(x36) -> f335_in(x36) :|: TRUE
f368_in(x37) -> f370_in(x37) :|: TRUE
f370_in(s(s(x42))) -> f374_in(x42) :|: TRUE
f153_in(x45) -> f174_in(x45) :|: TRUE
f174_out(x46) -> f153_out(x46) :|: TRUE
f337_out(x47) -> f335_out(x47) :|: TRUE
f335_in(x48) -> f337_in(x48) :|: TRUE
f348_out(x51) -> f344_out(s(s(x51))) :|: TRUE
f344_in(s(s(x52))) -> f348_in(x52) :|: TRUE
f330_out -> f328_out(0) :|: TRUE
f328_in(0) -> f330_in :|: TRUE
f339_in(x55) -> f343_in(x55) :|: TRUE
f343_out(x56) -> f339_out(x56) :|: TRUE
f339_in(x57) -> f344_in(x57) :|: TRUE
f344_out(x58) -> f339_out(x58) :|: TRUE


----------------------------------------

(212)
Obligation:
Rules:
f152_in(T8) -> f153_in(T8) :|: TRUE
f153_out(x) -> f152_out(x) :|: TRUE
f374_in(T22) -> f115_in(T22) :|: TRUE
f149_out(x2) -> f150_in(x3) :|: TRUE
f115_in(x4) -> f149_in(x4) :|: TRUE
f345_in -> f345_out :|: TRUE
f340_in -> f340_out :|: TRUE
f337_in(T9) -> f338_in(T9) :|: TRUE
f338_out(x7) -> f337_out(x7) :|: TRUE
f339_out(x8) -> f337_out(x8) :|: TRUE
f337_in(x9) -> f339_in(x9) :|: TRUE
f151_out(x10) -> f149_out(x10) :|: TRUE
f149_in(x11) -> f151_in(x11) :|: TRUE
f333_out(T15) -> f329_out(s(T15)) :|: TRUE
f329_in(s(x13)) -> f333_in(x13) :|: TRUE
f340_out -> f338_out(0) :|: TRUE
f338_in(0) -> f340_in :|: TRUE
f174_in(x16) -> f183_in(x16) :|: TRUE
f183_out(x17) -> f174_out(x17) :|: TRUE
f152_out(x18) -> f151_out(x18) :|: TRUE
f151_in(x19) -> f152_in(x19) :|: TRUE
f183_in(x20) -> f192_in(x20) :|: TRUE
f192_out(x21) -> f183_out(x21) :|: TRUE
f336_in(T16) -> f368_in(T16) :|: TRUE
f174_out(x23) -> f333_out(x23) :|: TRUE
f333_in(x24) -> f174_in(x24) :|: TRUE
f330_in -> f330_out :|: TRUE
f345_out -> f343_out(s(0)) :|: TRUE
f343_in(s(0)) -> f345_in :|: TRUE
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x27)) -> f348_out(x27) :|: TRUE
f329_out(x28) -> f192_out(x28) :|: TRUE
f192_in(x29) -> f328_in(x29) :|: TRUE
f328_out(x30) -> f192_out(x30) :|: TRUE
f192_in(x31) -> f329_in(x31) :|: TRUE
f335_out(x34) -> f336_in(x35) :|: TRUE
f150_in(x36) -> f335_in(x36) :|: TRUE
f368_in(x37) -> f370_in(x37) :|: TRUE
f370_in(s(s(x42))) -> f374_in(x42) :|: TRUE
f153_in(x45) -> f174_in(x45) :|: TRUE
f174_out(x46) -> f153_out(x46) :|: TRUE
f337_out(x47) -> f335_out(x47) :|: TRUE
f335_in(x48) -> f337_in(x48) :|: TRUE
f348_out(x51) -> f344_out(s(s(x51))) :|: TRUE
f344_in(s(s(x52))) -> f348_in(x52) :|: TRUE
f330_out -> f328_out(0) :|: TRUE
f328_in(0) -> f330_in :|: TRUE
f339_in(x55) -> f343_in(x55) :|: TRUE
f343_out(x56) -> f339_out(x56) :|: TRUE
f339_in(x57) -> f344_in(x57) :|: TRUE
f344_out(x58) -> f339_out(x58) :|: TRUE

----------------------------------------

(213) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(214)
Obligation:
Rules:
f335_out(x34:0) -> f174_in(x42:0) :|: TRUE
f192_out(x21:0) -> f337_in(x3:0) :|: TRUE
f337_in(cons_0) -> f335_out(0) :|: TRUE && cons_0 = 0
f174_in(x) -> f192_out(0) :|: TRUE && x = 0
f337_in(s(s(x52:0))) -> f337_in(s(x52:0)) :|: TRUE
f174_in(s(x13:0)) -> f174_in(x13:0) :|: TRUE
f337_in(s(x1)) -> f335_out(s(0)) :|: TRUE && x1 = 0
f335_out(s(x27:0)) -> f335_out(s(s(x27:0))) :|: TRUE
f192_out(x2) -> f192_out(s(x2)) :|: TRUE

----------------------------------------

(215) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(216)
Obligation:
Rules:
f335_out(x34:0) -> f174_in(x42:0) :|: TRUE
f192_out(x21:0) -> f337_in(x3:0) :|: TRUE
f337_in(cons_0) -> f335_out(0) :|: TRUE && cons_0 = 0
f174_in(x) -> f192_out(0) :|: TRUE && x = 0
f337_in(s(s(x52:0))) -> f337_in(s(x52:0)) :|: TRUE
f174_in(s(x13:0)) -> f174_in(x13:0) :|: TRUE
f337_in(s(x1)) -> f335_out(s(0)) :|: TRUE && x1 = 0
f335_out(s(x27:0)) -> f335_out(s(s(x27:0))) :|: TRUE
f192_out(x2) -> f192_out(s(x2)) :|: TRUE

----------------------------------------

(217) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f335_out(x34:0) -> f174_in(x42:0) :|: TRUE
(2) f192_out(x21:0) -> f337_in(x3:0) :|: TRUE
(3) f337_in(cons_0) -> f335_out(0) :|: TRUE && cons_0 = 0
(4) f174_in(x) -> f192_out(0) :|: TRUE && x = 0
(5) f337_in(s(s(x52:0))) -> f337_in(s(x52:0)) :|: TRUE
(6) f174_in(s(x13:0)) -> f174_in(x13:0) :|: TRUE
(7) f337_in(s(x1)) -> f335_out(s(0)) :|: TRUE && x1 = 0
(8) f335_out(s(x27:0)) -> f335_out(s(s(x27:0))) :|: TRUE
(9) f192_out(x2) -> f192_out(s(x2)) :|: TRUE

Arcs:
(1) -> (4), (6)
(2) -> (3), (5), (7)
(3) -> (1)
(4) -> (2), (9)
(5) -> (5), (7)
(6) -> (4), (6)
(7) -> (1), (8)
(8) -> (1), (8)
(9) -> (2), (9)

This digraph is fully evaluated!
----------------------------------------

(218)
Obligation:

Termination digraph:
Nodes:
(1) f335_out(x34:0) -> f174_in(x42:0) :|: TRUE
(2) f335_out(s(x27:0)) -> f335_out(s(s(x27:0))) :|: TRUE
(3) f337_in(s(x1)) -> f335_out(s(0)) :|: TRUE && x1 = 0
(4) f337_in(s(s(x52:0))) -> f337_in(s(x52:0)) :|: TRUE
(5) f337_in(cons_0) -> f335_out(0) :|: TRUE && cons_0 = 0
(6) f192_out(x21:0) -> f337_in(x3:0) :|: TRUE
(7) f192_out(x2) -> f192_out(s(x2)) :|: TRUE
(8) f174_in(x) -> f192_out(0) :|: TRUE && x = 0
(9) f174_in(s(x13:0)) -> f174_in(x13:0) :|: TRUE

Arcs:
(1) -> (8), (9)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (3), (4)
(5) -> (1)
(6) -> (3), (4), (5)
(7) -> (6), (7)
(8) -> (6), (7)
(9) -> (8), (9)

This digraph is fully evaluated!

----------------------------------------

(219) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(220)
Obligation:
Rules:
f335_out(s(x27:0:0)) -> f335_out(s(s(x27:0:0))) :|: TRUE
f337_in(s(cons_0)) -> f335_out(s(0)) :|: TRUE && cons_0 = 0
f192_out(x2:0) -> f192_out(s(x2:0)) :|: TRUE
f335_out(x34:0:0) -> f174_in(x42:0:0) :|: TRUE
f337_in(x) -> f335_out(0) :|: TRUE && x = 0
f174_in(s(x13:0:0)) -> f174_in(x13:0:0) :|: TRUE
f337_in(s(s(x52:0:0))) -> f337_in(s(x52:0:0)) :|: TRUE
f192_out(x21:0:0) -> f337_in(x3:0:0) :|: TRUE
f174_in(x1) -> f192_out(0) :|: TRUE && x1 = 0

----------------------------------------

(221) IRSwTToIntTRSProof (SOUND)
Applied path-length measure to transform intTRS with terms to intTRS.
----------------------------------------

(222)
Obligation:
Rules:
f335_out(s(x)) -> f335_out(s(s(x))) :|: TRUE
f337_in(s(cons_0)) -> f335_out(s(0)) :|: TRUE && cons_0 = 0
f192_out(x2) -> f192_out(s(x2)) :|: TRUE
f335_out(x3) -> f174_in(x4) :|: TRUE
f337_in(x1) -> f335_out(0) :|: TRUE && x1 = 0
f174_in(s(x6)) -> f174_in(x6) :|: TRUE
f337_in(s(s(x7))) -> f337_in(s(x7)) :|: TRUE
f192_out(x8) -> f337_in(x9) :|: TRUE
f174_in(x5) -> f192_out(0) :|: TRUE && x5 = 0

----------------------------------------

(223) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(224)
Obligation:
Rules:
f335_out(s(x:0)) -> f335_out(s(s(x:0))) :|: TRUE
f337_in(s(cons_0)) -> f335_out(s(0)) :|: TRUE && cons_0 = 0
f192_out(x2:0) -> f192_out(s(x2:0)) :|: TRUE
f335_out(x3:0) -> f174_in(x4:0) :|: TRUE
f337_in(x) -> f335_out(0) :|: TRUE && x = 0
f174_in(s(x6:0)) -> f174_in(x6:0) :|: TRUE
f337_in(s(s(x7:0))) -> f337_in(s(x7:0)) :|: TRUE
f192_out(x8:0) -> f337_in(x9:0) :|: TRUE
f174_in(x1) -> f192_out(0) :|: TRUE && x1 = 0

----------------------------------------

(225)
Obligation:
Rules:
f13_out(T4) -> f4_out(s(T4)) :|: TRUE
f4_in(s(x)) -> f13_in(x) :|: TRUE
f4_in(T1) -> f14_in :|: TRUE
f14_out -> f4_out(x1) :|: TRUE
f152_in(T8) -> f153_in(T8) :|: TRUE
f153_out(x2) -> f152_out(x2) :|: TRUE
f409_in(s(T26)) -> f425_in(T26) :|: TRUE
f409_in(T5) -> f426_in :|: TRUE
f426_out -> f409_out(x3) :|: TRUE
f425_out(x4) -> f409_out(s(x4)) :|: TRUE
f400_in(x5) -> f406_in(x5) :|: TRUE
f406_out(x6) -> f400_out(x6) :|: TRUE
f337_in(T9) -> f338_in(T9) :|: TRUE
f338_out(x7) -> f337_out(x7) :|: TRUE
f339_out(x8) -> f337_out(x8) :|: TRUE
f337_in(x9) -> f339_in(x9) :|: TRUE
f329_in(T12) -> f334_in :|: TRUE
f333_out(T15) -> f329_out(s(T15)) :|: TRUE
f334_out -> f329_out(x10) :|: TRUE
f329_in(s(x11)) -> f333_in(x11) :|: TRUE
f413_out -> f408_out(x12) :|: TRUE
f412_out -> f408_out(0) :|: TRUE
f408_in(0) -> f412_in :|: TRUE
f408_in(x13) -> f413_in :|: TRUE
f59_in(x14) -> f63_in(x14) :|: TRUE
f63_out(x15) -> f59_out(x15) :|: TRUE
f340_out -> f338_out(0) :|: TRUE
f338_in(0) -> f340_in :|: TRUE
f338_in(x16) -> f341_in :|: TRUE
f341_out -> f338_out(x17) :|: TRUE
f59_out(x18) -> f62_in(x19) :|: TRUE
f62_out(x20) -> f13_out(x21) :|: TRUE
f13_in(x22) -> f59_in(x22) :|: TRUE
f174_in(x23) -> f183_in(x23) :|: TRUE
f183_out(x24) -> f174_out(x24) :|: TRUE
f152_out(x25) -> f151_out(x25) :|: TRUE
f151_in(x26) -> f152_in(x26) :|: TRUE
f330_in -> f330_out :|: TRUE
f335_out(s(x27)) -> f429_out(x27) :|: TRUE
f429_in(x28) -> f335_in(s(x28)) :|: TRUE
f345_out -> f343_out(s(0)) :|: TRUE
f343_in(s(0)) -> f345_in :|: TRUE
f343_in(x29) -> f346_in :|: TRUE
f346_out -> f343_out(x30) :|: TRUE
f153_in(x31) -> f174_in(x31) :|: TRUE
f174_out(x32) -> f153_out(x32) :|: TRUE
f400_out(x33) -> f402_in(x34) :|: TRUE
f62_in(x35) -> f400_in(x35) :|: TRUE
f402_out(x36) -> f62_out(x37) :|: TRUE
f402_in(T23) -> f1_in(T23) :|: TRUE
f1_out(x38) -> f402_out(x38) :|: TRUE
f330_out -> f328_out(0) :|: TRUE
f331_out -> f328_out(x39) :|: TRUE
f328_in(0) -> f330_in :|: TRUE
f328_in(x40) -> f331_in :|: TRUE
f4_out(x41) -> f1_out(x41) :|: TRUE
f1_in(x42) -> f4_in(x42) :|: TRUE
f149_out(x43) -> f150_in(x44) :|: TRUE
f115_in(x45) -> f149_in(x45) :|: TRUE
f150_out(x46) -> f115_out(x47) :|: TRUE
f374_in(T22) -> f115_in(T22) :|: TRUE
f115_out(x48) -> f374_out(x48) :|: TRUE
f345_in -> f345_out :|: TRUE
f340_in -> f340_out :|: TRUE
f371_in -> f371_out :|: TRUE
f151_out(x49) -> f149_out(x49) :|: TRUE
f149_in(x50) -> f151_in(x50) :|: TRUE
f369_in(0) -> f371_in :|: TRUE
f369_in(T16) -> f372_in :|: TRUE
f372_out -> f369_out(x51) :|: TRUE
f371_out -> f369_out(0) :|: TRUE
f183_in(x52) -> f192_in(x52) :|: TRUE
f192_out(x53) -> f183_out(x53) :|: TRUE
f66_in(s(x54)) -> f115_in(x54) :|: TRUE
f66_in(x55) -> f118_in :|: TRUE
f115_out(x56) -> f66_out(s(x56)) :|: TRUE
f118_out -> f66_out(x57) :|: TRUE
f336_in(x58) -> f368_in(x58) :|: TRUE
f368_out(x59) -> f336_out(x59) :|: TRUE
f174_out(x60) -> f333_out(x60) :|: TRUE
f333_in(x61) -> f174_in(x61) :|: TRUE
f400_out(T27) -> f431_out(T27) :|: TRUE
f431_in(x62) -> f400_in(x62) :|: TRUE
f66_out(x63) -> f63_out(x63) :|: TRUE
f63_in(x64) -> f66_in(x64) :|: TRUE
f348_in(T19) -> f335_in(s(T19)) :|: TRUE
f335_out(s(x65)) -> f348_out(x65) :|: TRUE
f329_out(x66) -> f192_out(x66) :|: TRUE
f192_in(x67) -> f328_in(x67) :|: TRUE
f328_out(x68) -> f192_out(x68) :|: TRUE
f192_in(x69) -> f329_in(x69) :|: TRUE
f406_in(x70) -> f409_in(x70) :|: TRUE
f408_out(x71) -> f406_out(x71) :|: TRUE
f409_out(x72) -> f406_out(x72) :|: TRUE
f406_in(x73) -> f408_in(x73) :|: TRUE
f412_in -> f412_out :|: TRUE
f425_in(x74) -> f429_in(x74) :|: TRUE
f431_out(x75) -> f425_out(x76) :|: TRUE
f429_out(x77) -> f431_in(x78) :|: TRUE
f336_out(x79) -> f150_out(x80) :|: TRUE
f335_out(x81) -> f336_in(x82) :|: TRUE
f150_in(x83) -> f335_in(x83) :|: TRUE
f368_in(x84) -> f370_in(x84) :|: TRUE
f369_out(x85) -> f368_out(x85) :|: TRUE
f370_out(x86) -> f368_out(x86) :|: TRUE
f368_in(x87) -> f369_in(x87) :|: TRUE
f374_out(x88) -> f370_out(s(s(x88))) :|: TRUE
f370_in(s(s(x89))) -> f374_in(x89) :|: TRUE
f370_in(x90) -> f375_in :|: TRUE
f375_out -> f370_out(x91) :|: TRUE
f337_out(x92) -> f335_out(x92) :|: TRUE
f335_in(x93) -> f337_in(x93) :|: TRUE
f349_out -> f344_out(x94) :|: TRUE
f344_in(x95) -> f349_in :|: TRUE
f348_out(x96) -> f344_out(s(s(x96))) :|: TRUE
f344_in(s(s(x97))) -> f348_in(x97) :|: TRUE
f339_in(x98) -> f343_in(x98) :|: TRUE
f343_out(x99) -> f339_out(x99) :|: TRUE
f339_in(x100) -> f344_in(x100) :|: TRUE
f344_out(x101) -> f339_out(x101) :|: TRUE
Start term: f1_in(T1)
