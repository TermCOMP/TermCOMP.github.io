YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/y1RDk.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

p(a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TPisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Clauses:

p(.(A, [])) :- l(.(A, [])).
r(1).
l([]).
l(.(H, T)) :- ','(r(H), l(T)).


Query: p(a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 50,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p (. A ([])))",
                "(l (. A ([])))"
            ],
            [
                "(r (1))",
                null
            ],
            [
                "(l ([]))",
                null
            ],
            [
                "(l (. H T))",
                "(',' (r H) (l T))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "55": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "99": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(l (. T4 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(l (. T4 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(l (. T4 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (r T9) (l ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "100": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "80": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(',' (r T9) (l ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "95": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(l ([]))"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(l ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "96": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(l ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "97": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(l ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "54": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(l (. T4 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "98": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 50,
                "to": 53,
                "label": "CASE"
            },
            {
                "from": 53,
                "to": 54,
                "label": "EVAL with clause\np(.(X2, [])) :- l(.(X2, [])).\nand substitutionX2 -> T4,\nT1 -> .(T4, []),\nT3 -> T4"
            },
            {
                "from": 53,
                "to": 55,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 54,
                "to": 56,
                "label": "CASE"
            },
            {
                "from": 56,
                "to": 57,
                "label": "BACKTRACK\nfor clause: l([])because of non-unification"
            },
            {
                "from": 57,
                "to": 58,
                "label": "ONLY EVAL with clause\nl(.(X7, X8)) :- ','(r(X7), l(X8)).\nand substitutionT4 -> T9,\nX7 -> T9,\nX8 -> [],\nT8 -> T9"
            },
            {
                "from": 58,
                "to": 61,
                "label": "CASE"
            },
            {
                "from": 61,
                "to": 75,
                "label": "EVAL with clause\nr(1).\nand substitutionT9 -> 1"
            },
            {
                "from": 61,
                "to": 80,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 75,
                "to": 95,
                "label": "CASE"
            },
            {
                "from": 95,
                "to": 96,
                "label": "PARALLEL"
            },
            {
                "from": 95,
                "to": 97,
                "label": "PARALLEL"
            },
            {
                "from": 96,
                "to": 98,
                "label": "ONLY EVAL with clause\nl([]).\nand substitution"
            },
            {
                "from": 97,
                "to": 100,
                "label": "BACKTRACK\nfor clause: l(.(H, T)) :- ','(r(H), l(T))because of non-unification"
            },
            {
                "from": 98,
                "to": 99,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:


Clauses:


Afs:


----------------------------------------

(3) TPisEmptyProof (EQUIVALENT)
There are no more dependency triples. Hence, the dependency triple problem trivially terminates.
----------------------------------------

(4)
YES
