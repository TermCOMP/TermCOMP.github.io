MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/fi98L.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

slowsort(a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [EQUIVALENT, 2 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [EQUIVALENT, 0 ms]
            (18) QDP
            (19) MRRProof [EQUIVALENT, 27 ms]
            (20) QDP
            (21) DependencyGraphProof [EQUIVALENT, 0 ms]
            (22) TRUE
        (23) PiDP
            (24) UsableRulesProof [EQUIVALENT, 0 ms]
            (25) PiDP
            (26) PiDPToQDPProof [SOUND, 0 ms]
            (27) QDP
            (28) NonTerminationLoopProof [COMPLETE, 0 ms]
            (29) NO
        (30) PiDP
            (31) UsableRulesProof [EQUIVALENT, 0 ms]
            (32) PiDP
            (33) PiDPToQDPProof [SOUND, 0 ms]
            (34) QDP
            (35) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (36) YES
(37) PrologToPiTRSProof [SOUND, 0 ms]
(38) PiTRS
    (39) DependencyPairsProof [EQUIVALENT, 0 ms]
    (40) PiDP
    (41) DependencyGraphProof [EQUIVALENT, 0 ms]
    (42) AND
        (43) PiDP
            (44) UsableRulesProof [EQUIVALENT, 0 ms]
            (45) PiDP
            (46) PiDPToQDPProof [EQUIVALENT, 2 ms]
            (47) QDP
            (48) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (49) YES
        (50) PiDP
            (51) UsableRulesProof [EQUIVALENT, 0 ms]
            (52) PiDP
            (53) PiDPToQDPProof [SOUND, 0 ms]
            (54) QDP
            (55) UsableRulesReductionPairsProof [EQUIVALENT, 15 ms]
            (56) QDP
            (57) DependencyGraphProof [EQUIVALENT, 0 ms]
            (58) TRUE
        (59) PiDP
            (60) UsableRulesProof [EQUIVALENT, 0 ms]
            (61) PiDP
            (62) PiDPToQDPProof [SOUND, 0 ms]
            (63) QDP
            (64) NonTerminationLoopProof [COMPLETE, 0 ms]
            (65) NO
        (66) PiDP
            (67) UsableRulesProof [EQUIVALENT, 0 ms]
            (68) PiDP
            (69) PiDPToQDPProof [SOUND, 0 ms]
            (70) QDP
            (71) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (72) YES
(73) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(74) TRIPLES
    (75) TriplesToPiDPProof [SOUND, 0 ms]
    (76) PiDP
    (77) DependencyGraphProof [EQUIVALENT, 0 ms]
    (78) AND
        (79) PiDP
            (80) UsableRulesProof [EQUIVALENT, 0 ms]
            (81) PiDP
            (82) PiDPToQDPProof [EQUIVALENT, 2 ms]
            (83) QDP
            (84) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (85) YES
        (86) PiDP
            (87) UsableRulesProof [EQUIVALENT, 0 ms]
            (88) PiDP
            (89) PiDPToQDPProof [SOUND, 0 ms]
            (90) QDP
            (91) NonTerminationLoopProof [COMPLETE, 0 ms]
            (92) NO
        (93) PiDP
            (94) UsableRulesProof [EQUIVALENT, 0 ms]
            (95) PiDP
            (96) PiDPToQDPProof [SOUND, 0 ms]
            (97) QDP
            (98) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (99) YES
(100) PrologToTRSTransformerProof [SOUND, 0 ms]
(101) QTRS
    (102) DependencyPairsProof [EQUIVALENT, 0 ms]
    (103) QDP
    (104) DependencyGraphProof [EQUIVALENT, 0 ms]
    (105) AND
        (106) QDP
            (107) MNOCProof [EQUIVALENT, 0 ms]
            (108) QDP
            (109) UsableRulesProof [EQUIVALENT, 0 ms]
            (110) QDP
            (111) QReductionProof [EQUIVALENT, 0 ms]
            (112) QDP
            (113) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (114) YES
        (115) QDP
            (116) MNOCProof [EQUIVALENT, 0 ms]
            (117) QDP
            (118) UsableRulesProof [EQUIVALENT, 0 ms]
            (119) QDP
            (120) QReductionProof [EQUIVALENT, 0 ms]
            (121) QDP
            (122) QDPOrderProof [EQUIVALENT, 0 ms]
            (123) QDP
            (124) DependencyGraphProof [EQUIVALENT, 0 ms]
            (125) TRUE
        (126) QDP
            (127) MNOCProof [EQUIVALENT, 0 ms]
            (128) QDP
            (129) UsableRulesProof [EQUIVALENT, 0 ms]
            (130) QDP
            (131) QReductionProof [EQUIVALENT, 0 ms]
            (132) QDP
            (133) NonTerminationLoopProof [COMPLETE, 0 ms]
            (134) NO
        (135) QDP
            (136) MNOCProof [EQUIVALENT, 0 ms]
            (137) QDP
            (138) UsableRulesProof [EQUIVALENT, 0 ms]
            (139) QDP
            (140) QReductionProof [EQUIVALENT, 0 ms]
            (141) QDP
            (142) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (143) YES
(144) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(145) AND
    (146) IRSwT
        (147) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (148) TRUE
    (149) IRSwT
        (150) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (151) IRSwT
        (152) IntTRSCompressionProof [EQUIVALENT, 8 ms]
        (153) IRSwT
        (154) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (155) IRSwT
        (156) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (157) IRSwT
        (158) FilterProof [EQUIVALENT, 0 ms]
        (159) IntTRS
        (160) IntTRSPeriodicNontermProof [COMPLETE, 2 ms]
        (161) NO
    (162) IRSwT
        (163) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (164) TRUE
    (165) IRSwT
        (166) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (167) IRSwT
        (168) IntTRSCompressionProof [EQUIVALENT, 6 ms]
        (169) IRSwT
        (170) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (171) IRSwT
        (172) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (173) IRSwT
        (174) FilterProof [EQUIVALENT, 0 ms]
        (175) IntTRS


----------------------------------------

(0)
Obligation:
Clauses:

slowsort(X, Y) :- ','(perm(X, Y), sorted(Y)).
sorted([]).
sorted(.(X, [])).
sorted(.(X, .(Y, Z))) :- ','(le(X, Y), sorted(.(Y, Z))).
perm([], []).
perm(.(X, .(Y, [])), .(U, .(V, []))) :- ','(delete(U, .(X, Y), Z), perm(Z, V)).
delete(X, .(X, Y), Y).
delete(X, .(Y, Z), W) :- delete(X, Z, W).
le(s(X), s(Y)) :- le(X, Y).
le(0, s(X)).
le(0, 0).


Query: slowsort(a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

slowsort_in_2: (f,b)

perm_in_2: (f,b)

delete_in_3: (b,f,f)

sorted_in_1: (b)

le_in_2: (b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORT_IN_AG(X, Y) -> U1_AG(X, Y, perm_in_ag(X, Y))
   SLOWSORT_IN_AG(X, Y) -> PERM_IN_AG(X, Y)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> DELETE_IN_GAA(U, .(X, Y), Z)
   DELETE_IN_GAA(X, .(Y, Z), W) -> U7_GAA(X, Y, Z, W, delete_in_gaa(X, Z, W))
   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_AG(X, Y, U, V, perm_in_ag(Z, V))
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   U1_AG(X, Y, perm_out_ag(X, Y)) -> U2_AG(X, Y, sorted_in_g(Y))
   U1_AG(X, Y, perm_out_ag(X, Y)) -> SORTED_IN_G(Y)
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))
   SORTED_IN_G(.(X, .(Y, Z))) -> LE_IN_GG(X, Y)
   LE_IN_GG(s(X), s(Y)) -> U8_GG(X, Y, le_in_gg(X, Y))
   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> U4_G(X, Y, Z, sorted_in_g(.(Y, Z)))
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

SLOWSORT_IN_AG(x1, x2)  =  SLOWSORT_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)

U7_GAA(x1, x2, x3, x4, x5)  =  U7_GAA(x1, x5)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x3, x4, x5)

U2_AG(x1, x2, x3)  =  U2_AG(x2, x3)

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x1, x2, x3, x4)

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)

U8_GG(x1, x2, x3)  =  U8_GG(x1, x2, x3)

U4_G(x1, x2, x3, x4)  =  U4_G(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORT_IN_AG(X, Y) -> U1_AG(X, Y, perm_in_ag(X, Y))
   SLOWSORT_IN_AG(X, Y) -> PERM_IN_AG(X, Y)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> DELETE_IN_GAA(U, .(X, Y), Z)
   DELETE_IN_GAA(X, .(Y, Z), W) -> U7_GAA(X, Y, Z, W, delete_in_gaa(X, Z, W))
   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_AG(X, Y, U, V, perm_in_ag(Z, V))
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   U1_AG(X, Y, perm_out_ag(X, Y)) -> U2_AG(X, Y, sorted_in_g(Y))
   U1_AG(X, Y, perm_out_ag(X, Y)) -> SORTED_IN_G(Y)
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))
   SORTED_IN_G(.(X, .(Y, Z))) -> LE_IN_GG(X, Y)
   LE_IN_GG(s(X), s(Y)) -> U8_GG(X, Y, le_in_gg(X, Y))
   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> U4_G(X, Y, Z, sorted_in_g(.(Y, Z)))
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

SLOWSORT_IN_AG(x1, x2)  =  SLOWSORT_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)

U7_GAA(x1, x2, x3, x4, x5)  =  U7_GAA(x1, x5)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x3, x4, x5)

U2_AG(x1, x2, x3)  =  U2_AG(x2, x3)

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x1, x2, x3, x4)

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)

U8_GG(x1, x2, x3)  =  U8_GG(x1, x2, x3)

U4_G(x1, x2, x3, x4)  =  U4_G(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 10 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))

Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))

The set Q consists of the following terms:

   le_in_gg(x0, x1)
   U8_gg(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

Strictly oriented rules of the TRS R:

   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)

Used ordering: Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = 2*x_1 + x_2
   POL(0) = 2
   POL(SORTED_IN_G(x_1)) = 2 + 2*x_1
   POL(U3_G(x_1, x_2, x_3, x_4)) = 1 + x_1 + 2*x_2 + 2*x_3 + x_4
   POL(U8_gg(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(le_in_gg(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(le_out_gg(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(s(x_1)) = 2*x_1


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))

The TRS R consists of the following rules:

   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))

The set Q consists of the following terms:

   le_in_gg(x0, x1)
   U8_gg(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(22)
TRUE

----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(25)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(26) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X) -> DELETE_IN_GAA(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(28) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = DELETE_IN_GAA(X) evaluates to  t =DELETE_IN_GAA(X)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from DELETE_IN_GAA(X) to DELETE_IN_GAA(X).




----------------------------------------

(29)
NO

----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x3, x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x3, x4, x5)

U2_ag(x1, x2, x3)  =  U2_ag(x2, x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g(x1)

U3_g(x1, x2, x3, x4)  =  U3_g(x1, x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x1, x2, x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg(x1, x2)

U4_g(x1, x2, x3, x4)  =  U4_g(x1, x2, x3, x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag(x2)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(32)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))

The TRS R consists of the following rules:

   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x1, x2)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa(x1)

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x1, x5)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(33) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AG(U, V, delete_out_gaa(U)) -> PERM_IN_AG(V)
   PERM_IN_AG(.(U, .(V, []))) -> U5_AG(U, V, delete_in_gaa(U))

The TRS R consists of the following rules:

   delete_in_gaa(X) -> delete_out_gaa(X)
   delete_in_gaa(X) -> U7_gaa(X, delete_in_gaa(X))
   U7_gaa(X, delete_out_gaa(X)) -> delete_out_gaa(X)

The set Q consists of the following terms:

   delete_in_gaa(x0)
   U7_gaa(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(35) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PERM_IN_AG(.(U, .(V, []))) -> U5_AG(U, V, delete_in_gaa(U))
The graph contains the following edges 1 > 1, 1 > 2


*U5_AG(U, V, delete_out_gaa(U)) -> PERM_IN_AG(V)
The graph contains the following edges 2 >= 1


----------------------------------------

(36)
YES

----------------------------------------

(37) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

slowsort_in_2: (f,b)

perm_in_2: (f,b)

delete_in_3: (b,f,f)

sorted_in_1: (b)

le_in_2: (b,b)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(38)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag



----------------------------------------

(39) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORT_IN_AG(X, Y) -> U1_AG(X, Y, perm_in_ag(X, Y))
   SLOWSORT_IN_AG(X, Y) -> PERM_IN_AG(X, Y)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> DELETE_IN_GAA(U, .(X, Y), Z)
   DELETE_IN_GAA(X, .(Y, Z), W) -> U7_GAA(X, Y, Z, W, delete_in_gaa(X, Z, W))
   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_AG(X, Y, U, V, perm_in_ag(Z, V))
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   U1_AG(X, Y, perm_out_ag(X, Y)) -> U2_AG(X, Y, sorted_in_g(Y))
   U1_AG(X, Y, perm_out_ag(X, Y)) -> SORTED_IN_G(Y)
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))
   SORTED_IN_G(.(X, .(Y, Z))) -> LE_IN_GG(X, Y)
   LE_IN_GG(s(X), s(Y)) -> U8_GG(X, Y, le_in_gg(X, Y))
   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> U4_G(X, Y, Z, sorted_in_g(.(Y, Z)))
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

SLOWSORT_IN_AG(x1, x2)  =  SLOWSORT_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)

U7_GAA(x1, x2, x3, x4, x5)  =  U7_GAA(x5)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x5)

U2_AG(x1, x2, x3)  =  U2_AG(x3)

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x2, x3, x4)

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)

U8_GG(x1, x2, x3)  =  U8_GG(x3)

U4_G(x1, x2, x3, x4)  =  U4_G(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(40)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORT_IN_AG(X, Y) -> U1_AG(X, Y, perm_in_ag(X, Y))
   SLOWSORT_IN_AG(X, Y) -> PERM_IN_AG(X, Y)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> DELETE_IN_GAA(U, .(X, Y), Z)
   DELETE_IN_GAA(X, .(Y, Z), W) -> U7_GAA(X, Y, Z, W, delete_in_gaa(X, Z, W))
   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_AG(X, Y, U, V, perm_in_ag(Z, V))
   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   U1_AG(X, Y, perm_out_ag(X, Y)) -> U2_AG(X, Y, sorted_in_g(Y))
   U1_AG(X, Y, perm_out_ag(X, Y)) -> SORTED_IN_G(Y)
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))
   SORTED_IN_G(.(X, .(Y, Z))) -> LE_IN_GG(X, Y)
   LE_IN_GG(s(X), s(Y)) -> U8_GG(X, Y, le_in_gg(X, Y))
   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> U4_G(X, Y, Z, sorted_in_g(.(Y, Z)))
   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

SLOWSORT_IN_AG(x1, x2)  =  SLOWSORT_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)

U7_GAA(x1, x2, x3, x4, x5)  =  U7_GAA(x5)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x5)

U2_AG(x1, x2, x3)  =  U2_AG(x3)

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x2, x3, x4)

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)

U8_GG(x1, x2, x3)  =  U8_GG(x3)

U4_G(x1, x2, x3, x4)  =  U4_G(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(41) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 10 less nodes.
----------------------------------------

(42)
Complex Obligation (AND)

----------------------------------------

(43)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

LE_IN_GG(x1, x2)  =  LE_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(44) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(45)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(46) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(47)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(48) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LE_IN_GG(s(X), s(Y)) -> LE_IN_GG(X, Y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(51) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(52)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_G(X, Y, Z, le_out_gg(X, Y)) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(X, Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

SORTED_IN_G(x1)  =  SORTED_IN_G(x1)

U3_G(x1, x2, x3, x4)  =  U3_G(x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(53) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_G(Y, Z, le_out_gg) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   le_in_gg(s(X), s(Y)) -> U8_gg(le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg
   le_in_gg(0, 0) -> le_out_gg
   U8_gg(le_out_gg) -> le_out_gg

The set Q consists of the following terms:

   le_in_gg(x0, x1)
   U8_gg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(55) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   le_in_gg(s(X), s(Y)) -> U8_gg(le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg
   le_in_gg(0, 0) -> le_out_gg
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + 2*x_2
   POL(0) = 0
   POL(SORTED_IN_G(x_1)) = x_1
   POL(U3_G(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(U8_gg(x_1)) = 2*x_1
   POL(le_in_gg(x_1, x_2)) = x_1 + x_2
   POL(le_out_gg) = 0
   POL(s(x_1)) = 2 + 2*x_1


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_G(Y, Z, le_out_gg) -> SORTED_IN_G(.(Y, Z))
   SORTED_IN_G(.(X, .(Y, Z))) -> U3_G(Y, Z, le_in_gg(X, Y))

The TRS R consists of the following rules:

   U8_gg(le_out_gg) -> le_out_gg

The set Q consists of the following terms:

   le_in_gg(x0, x1)
   U8_gg(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(57) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(58)
TRUE

----------------------------------------

(59)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(60) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(61)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X, .(Y, Z), W) -> DELETE_IN_GAA(X, Z, W)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

DELETE_IN_GAA(x1, x2, x3)  =  DELETE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(62) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(63)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DELETE_IN_GAA(X) -> DELETE_IN_GAA(X)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(64) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = DELETE_IN_GAA(X) evaluates to  t =DELETE_IN_GAA(X)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from DELETE_IN_GAA(X) to DELETE_IN_GAA(X).




----------------------------------------

(65)
NO

----------------------------------------

(66)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))

The TRS R consists of the following rules:

   slowsort_in_ag(X, Y) -> U1_ag(X, Y, perm_in_ag(X, Y))
   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(.(X, .(Y, [])), .(U, .(V, []))) -> U5_ag(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))
   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)
   U5_ag(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> U6_ag(X, Y, U, V, perm_in_ag(Z, V))
   U6_ag(X, Y, U, V, perm_out_ag(Z, V)) -> perm_out_ag(.(X, .(Y, [])), .(U, .(V, [])))
   U1_ag(X, Y, perm_out_ag(X, Y)) -> U2_ag(X, Y, sorted_in_g(Y))
   sorted_in_g([]) -> sorted_out_g([])
   sorted_in_g(.(X, [])) -> sorted_out_g(.(X, []))
   sorted_in_g(.(X, .(Y, Z))) -> U3_g(X, Y, Z, le_in_gg(X, Y))
   le_in_gg(s(X), s(Y)) -> U8_gg(X, Y, le_in_gg(X, Y))
   le_in_gg(0, s(X)) -> le_out_gg(0, s(X))
   le_in_gg(0, 0) -> le_out_gg(0, 0)
   U8_gg(X, Y, le_out_gg(X, Y)) -> le_out_gg(s(X), s(Y))
   U3_g(X, Y, Z, le_out_gg(X, Y)) -> U4_g(X, Y, Z, sorted_in_g(.(Y, Z)))
   U4_g(X, Y, Z, sorted_out_g(.(Y, Z))) -> sorted_out_g(.(X, .(Y, Z)))
   U2_ag(X, Y, sorted_out_g(Y)) -> slowsort_out_ag(X, Y)

The argument filtering Pi contains the following mapping:
slowsort_in_ag(x1, x2)  =  slowsort_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x1, x2)

U5_ag(x1, x2, x3, x4, x5)  =  U5_ag(x4, x5)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

U6_ag(x1, x2, x3, x4, x5)  =  U6_ag(x5)

U2_ag(x1, x2, x3)  =  U2_ag(x3)

sorted_in_g(x1)  =  sorted_in_g(x1)

sorted_out_g(x1)  =  sorted_out_g

U3_g(x1, x2, x3, x4)  =  U3_g(x2, x3, x4)

le_in_gg(x1, x2)  =  le_in_gg(x1, x2)

s(x1)  =  s(x1)

U8_gg(x1, x2, x3)  =  U8_gg(x3)

0  =  0

le_out_gg(x1, x2)  =  le_out_gg

U4_g(x1, x2, x3, x4)  =  U4_g(x4)

slowsort_out_ag(x1, x2)  =  slowsort_out_ag

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(67) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(68)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U5_AG(X, Y, U, V, delete_out_gaa(U, .(X, Y), Z)) -> PERM_IN_AG(Z, V)
   PERM_IN_AG(.(X, .(Y, [])), .(U, .(V, []))) -> U5_AG(X, Y, U, V, delete_in_gaa(U, .(X, Y), Z))

The TRS R consists of the following rules:

   delete_in_gaa(X, .(X, Y), Y) -> delete_out_gaa(X, .(X, Y), Y)
   delete_in_gaa(X, .(Y, Z), W) -> U7_gaa(X, Y, Z, W, delete_in_gaa(X, Z, W))
   U7_gaa(X, Y, Z, W, delete_out_gaa(X, Z, W)) -> delete_out_gaa(X, .(Y, Z), W)

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x1, x2)

delete_in_gaa(x1, x2, x3)  =  delete_in_gaa(x1)

delete_out_gaa(x1, x2, x3)  =  delete_out_gaa

U7_gaa(x1, x2, x3, x4, x5)  =  U7_gaa(x5)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(69) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(70)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AG(V, delete_out_gaa) -> PERM_IN_AG(V)
   PERM_IN_AG(.(U, .(V, []))) -> U5_AG(V, delete_in_gaa(U))

The TRS R consists of the following rules:

   delete_in_gaa(X) -> delete_out_gaa
   delete_in_gaa(X) -> U7_gaa(delete_in_gaa(X))
   U7_gaa(delete_out_gaa) -> delete_out_gaa

The set Q consists of the following terms:

   delete_in_gaa(x0)
   U7_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(71) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PERM_IN_AG(.(U, .(V, []))) -> U5_AG(V, delete_in_gaa(U))
The graph contains the following edges 1 > 1


*U5_AG(V, delete_out_gaa) -> PERM_IN_AG(V)
The graph contains the following edges 1 >= 1


----------------------------------------

(72)
YES

----------------------------------------

(73) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(slowsort X Y)",
                "(',' (perm X Y) (sorted Y))"
            ],
            [
                "(sorted ([]))",
                null
            ],
            [
                "(sorted (. X ([])))",
                null
            ],
            [
                "(sorted (. X (. Y Z)))",
                "(',' (le X Y) (sorted (. Y Z)))"
            ],
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm (. X (. Y ([]))) (. U (. V ([]))))",
                "(',' (delete U (. X Y) Z) (perm Z V))"
            ],
            [
                "(delete X (. X Y) Y)",
                null
            ],
            [
                "(delete X (. Y Z) W)",
                "(delete X Z W)"
            ],
            [
                "(le (s X) (s Y))",
                "(le X Y)"
            ],
            [
                "(le (0) (s X))",
                null
            ],
            [
                "(le (0) (0))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "190": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T18 (. T20 T21) X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "191": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (perm T26 T19) (sorted (. T18 (. T19 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "194": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(delete T18 (. T20 T21) X22)"
                    },
                    {
                        "clause": 7,
                        "scope": 4,
                        "term": "(delete T18 (. T20 T21) X22)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "195": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(delete T18 (. T20 T21) X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "196": {
                "goal": [{
                    "clause": 7,
                    "scope": 4,
                    "term": "(delete T18 (. T20 T21) X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T18"],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "197": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "198": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "199": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "511": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T114 T115)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "359": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(sorted (. T18 (. T19 ([]))))"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(sorted (. T18 (. T19 ([]))))"
                    },
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(sorted (. T18 (. T19 ([]))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "513": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "514": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "517": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "519": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted (. T115 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T115"],
                    "free": [],
                    "exprvars": []
                }
            },
            "360": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(sorted (. T18 (. T19 ([]))))"
                    },
                    {
                        "clause": 3,
                        "scope": 7,
                        "term": "(sorted (. T18 (. T19 ([]))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 8,
                        "term": "(le T114 T115)"
                    },
                    {
                        "clause": 9,
                        "scope": 8,
                        "term": "(le T114 T115)"
                    },
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(le T114 T115)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "361": {
                "goal": [{
                    "clause": 3,
                    "scope": 7,
                    "term": "(sorted (. T18 (. T19 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [{
                    "clause": 8,
                    "scope": 8,
                    "term": "(le T114 T115)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 8,
                        "term": "(le T114 T115)"
                    },
                    {
                        "clause": 10,
                        "scope": 8,
                        "term": "(le T114 T115)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "200": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T52 T55 X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "201": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(delete T52 T55 X59)"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(delete T52 T55 X59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "169": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (perm T7 T6) (sorted T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "202": {
                "goal": [{
                    "clause": 6,
                    "scope": 5,
                    "term": "(delete T52 T55 X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "488": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T128 T129)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T128",
                        "T129"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "521": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "203": {
                "goal": [{
                    "clause": 7,
                    "scope": 5,
                    "term": "(delete T52 T55 X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T52"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "204": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "205": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "206": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "208": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T76 T79 X88)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X88"],
                    "exprvars": []
                }
            },
            "209": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "528": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 9,
                        "term": "(sorted (. T115 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 9,
                        "term": "(sorted (. T115 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(sorted (. T115 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T115"],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "171": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (perm T7 T6) (sorted T6))"
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (perm T7 T6) (sorted T6))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "490": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "172": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(',' (perm T7 T6) (sorted T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "173": {
                "goal": [{
                    "clause": 5,
                    "scope": 2,
                    "term": "(',' (perm T7 T6) (sorted T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [],
                    "exprvars": []
                }
            },
            "174": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "175": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "176": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(sorted ([]))"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(sorted ([]))"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(sorted ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "177": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(sorted ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "178": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(sorted ([]))"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(sorted ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "179": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "531": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 9,
                        "term": "(sorted (. T115 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(sorted (. T115 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T115"],
                    "free": [],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (le T114 T115) (sorted (. T115 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "537": {
                "goal": [{
                    "clause": 2,
                    "scope": 9,
                    "term": "(sorted (. T115 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T115"],
                    "free": [],
                    "exprvars": []
                }
            },
            "538": {
                "goal": [{
                    "clause": 3,
                    "scope": 9,
                    "term": "(sorted (. T115 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T115"],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "181": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(sorted ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "182": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "185": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (delete T18 (. T20 T21) X22) (perm X22 T19)) (sorted (. T18 (. T19 ([])))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": ["X22"],
                    "exprvars": []
                }
            },
            "186": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "220": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T26 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "221": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted (. T18 (. T19 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T18",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "222": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 6,
                        "term": "(perm T26 T19)"
                    },
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(perm T26 T19)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "541": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "223": {
                "goal": [{
                    "clause": 4,
                    "scope": 6,
                    "term": "(perm T26 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "542": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "224": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(perm T26 T19)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": [],
                    "exprvars": []
                }
            },
            "543": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "225": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [{
                    "clause": 9,
                    "scope": 8,
                    "term": "(le T114 T115)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "226": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "303": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (delete T94 (. T96 T97) X106) (perm X106 T95))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T94",
                        "T95"
                    ],
                    "free": ["X106"],
                    "exprvars": []
                }
            },
            "227": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "304": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "502": {
                "goal": [{
                    "clause": 10,
                    "scope": 8,
                    "term": "(le T114 T115)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T114",
                        "T115"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "305": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T94 (. T96 T97) X106)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X106"],
                    "exprvars": []
                }
            },
            "306": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T102 T95)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T95"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 26,
                "label": "CASE"
            },
            {
                "from": 26,
                "to": 169,
                "label": "ONLY EVAL with clause\nslowsort(X3, X4) :- ','(perm(X3, X4), sorted(X4)).\nand substitutionT1 -> T7,\nX3 -> T7,\nT2 -> T6,\nX4 -> T6,\nT5 -> T7"
            },
            {
                "from": 169,
                "to": 171,
                "label": "CASE"
            },
            {
                "from": 171,
                "to": 172,
                "label": "PARALLEL"
            },
            {
                "from": 171,
                "to": 173,
                "label": "PARALLEL"
            },
            {
                "from": 172,
                "to": 174,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT7 -> [],\nT6 -> []"
            },
            {
                "from": 172,
                "to": 175,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 173,
                "to": 185,
                "label": "EVAL with clause\nperm(.(X18, .(X19, [])), .(X20, .(X21, []))) :- ','(delete(X20, .(X18, X19), X22), perm(X22, X21)).\nand substitutionX18 -> T20,\nX19 -> T21,\nT7 -> .(T20, .(T21, [])),\nX20 -> T18,\nX21 -> T19,\nT6 -> .(T18, .(T19, [])),\nT16 -> T20,\nT17 -> T21"
            },
            {
                "from": 173,
                "to": 186,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 174,
                "to": 176,
                "label": "CASE"
            },
            {
                "from": 176,
                "to": 177,
                "label": "PARALLEL"
            },
            {
                "from": 176,
                "to": 178,
                "label": "PARALLEL"
            },
            {
                "from": 177,
                "to": 179,
                "label": "ONLY EVAL with clause\nsorted([]).\nand substitution"
            },
            {
                "from": 178,
                "to": 181,
                "label": "BACKTRACK\nfor clause: sorted(.(X, []))because of non-unification"
            },
            {
                "from": 179,
                "to": 180,
                "label": "SUCCESS"
            },
            {
                "from": 181,
                "to": 182,
                "label": "BACKTRACK\nfor clause: sorted(.(X, .(Y, Z))) :- ','(le(X, Y), sorted(.(Y, Z)))because of non-unification"
            },
            {
                "from": 185,
                "to": 190,
                "label": "SPLIT 1"
            },
            {
                "from": 185,
                "to": 191,
                "label": "SPLIT 2\nnew knowledge:\nT18 is ground\nreplacements:X22 -> T26"
            },
            {
                "from": 190,
                "to": 194,
                "label": "CASE"
            },
            {
                "from": 191,
                "to": 220,
                "label": "SPLIT 1"
            },
            {
                "from": 191,
                "to": 221,
                "label": "SPLIT 2\nnew knowledge:\nT19 is ground"
            },
            {
                "from": 194,
                "to": 195,
                "label": "PARALLEL"
            },
            {
                "from": 194,
                "to": 196,
                "label": "PARALLEL"
            },
            {
                "from": 195,
                "to": 197,
                "label": "EVAL with clause\ndelete(X39, .(X39, X40), X40).\nand substitutionT18 -> T39,\nX39 -> T39,\nT20 -> T39,\nT21 -> T40,\nX40 -> T40,\nX22 -> T40"
            },
            {
                "from": 195,
                "to": 198,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 196,
                "to": 200,
                "label": "ONLY EVAL with clause\ndelete(X55, .(X56, X57), X58) :- delete(X55, X57, X58).\nand substitutionT18 -> T52,\nX55 -> T52,\nT20 -> T53,\nX56 -> T53,\nT21 -> T55,\nX57 -> T55,\nX22 -> X59,\nX58 -> X59,\nT54 -> T55"
            },
            {
                "from": 197,
                "to": 199,
                "label": "SUCCESS"
            },
            {
                "from": 200,
                "to": 201,
                "label": "CASE"
            },
            {
                "from": 201,
                "to": 202,
                "label": "PARALLEL"
            },
            {
                "from": 201,
                "to": 203,
                "label": "PARALLEL"
            },
            {
                "from": 202,
                "to": 204,
                "label": "EVAL with clause\ndelete(X72, .(X72, X73), X73).\nand substitutionT52 -> T68,\nX72 -> T68,\nX73 -> T69,\nT55 -> .(T68, T69),\nX59 -> T69"
            },
            {
                "from": 202,
                "to": 205,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 203,
                "to": 208,
                "label": "EVAL with clause\ndelete(X84, .(X85, X86), X87) :- delete(X84, X86, X87).\nand substitutionT52 -> T76,\nX84 -> T76,\nX85 -> T77,\nX86 -> T79,\nT55 -> .(T77, T79),\nX59 -> X88,\nX87 -> X88,\nT78 -> T79"
            },
            {
                "from": 203,
                "to": 209,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 204,
                "to": 206,
                "label": "SUCCESS"
            },
            {
                "from": 208,
                "to": 200,
                "label": "INSTANCE with matching:\nT52 -> T76\nT55 -> T79\nX59 -> X88"
            },
            {
                "from": 220,
                "to": 222,
                "label": "CASE"
            },
            {
                "from": 221,
                "to": 359,
                "label": "CASE"
            },
            {
                "from": 222,
                "to": 223,
                "label": "PARALLEL"
            },
            {
                "from": 222,
                "to": 224,
                "label": "PARALLEL"
            },
            {
                "from": 223,
                "to": 225,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT26 -> [],\nT19 -> []"
            },
            {
                "from": 223,
                "to": 226,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 224,
                "to": 303,
                "label": "EVAL with clause\nperm(.(X102, .(X103, [])), .(X104, .(X105, []))) :- ','(delete(X104, .(X102, X103), X106), perm(X106, X105)).\nand substitutionX102 -> T96,\nX103 -> T97,\nT26 -> .(T96, .(T97, [])),\nX104 -> T94,\nX105 -> T95,\nT19 -> .(T94, .(T95, [])),\nT92 -> T96,\nT93 -> T97"
            },
            {
                "from": 224,
                "to": 304,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 225,
                "to": 227,
                "label": "SUCCESS"
            },
            {
                "from": 303,
                "to": 305,
                "label": "SPLIT 1"
            },
            {
                "from": 303,
                "to": 306,
                "label": "SPLIT 2\nnew knowledge:\nT94 is ground\nreplacements:X106 -> T102"
            },
            {
                "from": 305,
                "to": 190,
                "label": "INSTANCE with matching:\nT18 -> T94\nT20 -> T96\nT21 -> T97\nX22 -> X106"
            },
            {
                "from": 306,
                "to": 220,
                "label": "INSTANCE with matching:\nT26 -> T102\nT19 -> T95"
            },
            {
                "from": 359,
                "to": 360,
                "label": "BACKTRACK\nfor clause: sorted([])because of non-unification"
            },
            {
                "from": 360,
                "to": 361,
                "label": "BACKTRACK\nfor clause: sorted(.(X, []))because of non-unification"
            },
            {
                "from": 361,
                "to": 416,
                "label": "ONLY EVAL with clause\nsorted(.(X124, .(X125, X126))) :- ','(le(X124, X125), sorted(.(X125, X126))).\nand substitutionT18 -> T114,\nX124 -> T114,\nT19 -> T115,\nX125 -> T115,\nX126 -> []"
            },
            {
                "from": 416,
                "to": 479,
                "label": "SPLIT 1"
            },
            {
                "from": 416,
                "to": 480,
                "label": "SPLIT 2\nnew knowledge:\nT114 is ground\nT115 is ground"
            },
            {
                "from": 479,
                "to": 481,
                "label": "CASE"
            },
            {
                "from": 480,
                "to": 528,
                "label": "CASE"
            },
            {
                "from": 481,
                "to": 482,
                "label": "PARALLEL"
            },
            {
                "from": 481,
                "to": 483,
                "label": "PARALLEL"
            },
            {
                "from": 482,
                "to": 488,
                "label": "EVAL with clause\nle(s(X139), s(X140)) :- le(X139, X140).\nand substitutionX139 -> T128,\nT114 -> s(T128),\nX140 -> T129,\nT115 -> s(T129)"
            },
            {
                "from": 482,
                "to": 490,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 483,
                "to": 500,
                "label": "PARALLEL"
            },
            {
                "from": 483,
                "to": 502,
                "label": "PARALLEL"
            },
            {
                "from": 488,
                "to": 479,
                "label": "INSTANCE with matching:\nT114 -> T128\nT115 -> T129"
            },
            {
                "from": 500,
                "to": 511,
                "label": "EVAL with clause\nle(0, s(X147)).\nand substitutionT114 -> 0,\nX147 -> T136,\nT115 -> s(T136)"
            },
            {
                "from": 500,
                "to": 513,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 502,
                "to": 517,
                "label": "EVAL with clause\nle(0, 0).\nand substitutionT114 -> 0,\nT115 -> 0"
            },
            {
                "from": 502,
                "to": 519,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 511,
                "to": 514,
                "label": "SUCCESS"
            },
            {
                "from": 517,
                "to": 521,
                "label": "SUCCESS"
            },
            {
                "from": 528,
                "to": 531,
                "label": "BACKTRACK\nfor clause: sorted([])because of non-unification"
            },
            {
                "from": 531,
                "to": 537,
                "label": "PARALLEL"
            },
            {
                "from": 531,
                "to": 538,
                "label": "PARALLEL"
            },
            {
                "from": 537,
                "to": 541,
                "label": "ONLY EVAL with clause\nsorted(.(X152, [])).\nand substitutionT115 -> T141,\nX152 -> T141"
            },
            {
                "from": 538,
                "to": 543,
                "label": "BACKTRACK\nfor clause: sorted(.(X, .(Y, Z))) :- ','(le(X, Y), sorted(.(Y, Z)))because of non-unification"
            },
            {
                "from": 541,
                "to": 542,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(74)
Obligation:
Triples:

deleteA(X1, .(X2, X3), X4) :- deleteA(X1, X3, X4).
deleteB(X1, X2, X3, X4) :- deleteA(X1, X3, X4).
permC(.(X1, .(X2, [])), .(X3, .(X4, []))) :- deleteB(X3, X1, X2, X5).
permC(.(X1, .(X2, [])), .(X3, .(X4, []))) :- ','(deletecB(X3, X1, X2, X5), permC(X5, X4)).
leD(s(X1), s(X2)) :- leD(X1, X2).
slowsortE(.(X1, .(X2, [])), .(X3, .(X4, []))) :- deleteB(X3, X1, X2, X5).
slowsortE(.(X1, .(X2, [])), .(X3, .(X4, []))) :- ','(deletecB(X3, X1, X2, X5), permC(X5, X4)).
slowsortE(.(X1, .(X2, [])), .(X3, .(X4, []))) :- ','(deletecB(X3, X1, X2, X5), ','(permcC(X5, X4), leD(X3, X4))).

Clauses:

deletecA(X1, .(X1, X2), X2).
deletecA(X1, .(X2, X3), X4) :- deletecA(X1, X3, X4).
deletecB(X1, X1, X2, X2).
deletecB(X1, X2, X3, X4) :- deletecA(X1, X3, X4).
permcC([], []).
permcC(.(X1, .(X2, [])), .(X3, .(X4, []))) :- ','(deletecB(X3, X1, X2, X5), permcC(X5, X4)).
lecD(s(X1), s(X2)) :- lecD(X1, X2).
lecD(0, s(X1)).
lecD(0, 0).

Afs:

slowsortE(x1, x2)  =  slowsortE(x2)


----------------------------------------

(75) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

slowsortE_in_2: (f,b)

deleteB_in_4: (b,f,f,f)

deleteA_in_3: (b,f,f)

deletecB_in_4: (b,f,f,f)

deletecA_in_3: (b,f,f)

permC_in_2: (f,b)

permcC_in_2: (f,b)

leD_in_2: (b,b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U7_AG(X1, X2, X3, X4, deleteB_in_gaaa(X3, X1, X2, X5))
   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> DELETEB_IN_GAAA(X3, X1, X2, X5)
   DELETEB_IN_GAAA(X1, X2, X3, X4) -> U2_GAAA(X1, X2, X3, X4, deleteA_in_gaa(X1, X3, X4))
   DELETEB_IN_GAAA(X1, X2, X3, X4) -> DELETEA_IN_GAA(X1, X3, X4)
   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> U1_GAA(X1, X2, X3, X4, deleteA_in_gaa(X1, X3, X4))
   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> DELETEA_IN_GAA(X1, X3, X4)
   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U8_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U9_AG(X1, X2, X3, X4, permC_in_ag(X5, X4))
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U3_AG(X1, X2, X3, X4, deleteB_in_gaaa(X3, X1, X2, X5))
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> DELETEB_IN_GAAA(X3, X1, X2, X5)
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U4_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U5_AG(X1, X2, X3, X4, permC_in_ag(X5, X4))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U10_AG(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U10_AG(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> U11_AG(X1, X2, X3, X4, leD_in_gg(X3, X4))
   U10_AG(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> LED_IN_GG(X3, X4)
   LED_IN_GG(s(X1), s(X2)) -> U6_GG(X1, X2, leD_in_gg(X1, X2))
   LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   permcC_in_ag([], []) -> permcC_out_ag([], [])
   permcC_in_ag(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U15_ag(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U15_ag(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U16_ag(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U16_ag(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> permcC_out_ag(.(X1, .(X2, [])), .(X3, .(X4, [])))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deleteB_in_gaaa(x1, x2, x3, x4)  =  deleteB_in_gaaa(x1)

deleteA_in_gaa(x1, x2, x3)  =  deleteA_in_gaa(x1)

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

permC_in_ag(x1, x2)  =  permC_in_ag(x2)

permcC_in_ag(x1, x2)  =  permcC_in_ag(x2)

permcC_out_ag(x1, x2)  =  permcC_out_ag(x2)

U15_ag(x1, x2, x3, x4, x5)  =  U15_ag(x3, x4, x5)

U16_ag(x1, x2, x3, x4, x5)  =  U16_ag(x3, x4, x5)

leD_in_gg(x1, x2)  =  leD_in_gg(x1, x2)

s(x1)  =  s(x1)

SLOWSORTE_IN_AG(x1, x2)  =  SLOWSORTE_IN_AG(x2)

U7_AG(x1, x2, x3, x4, x5)  =  U7_AG(x3, x4, x5)

DELETEB_IN_GAAA(x1, x2, x3, x4)  =  DELETEB_IN_GAAA(x1)

U2_GAAA(x1, x2, x3, x4, x5)  =  U2_GAAA(x1, x5)

DELETEA_IN_GAA(x1, x2, x3)  =  DELETEA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x5)

U8_AG(x1, x2, x3, x4, x5)  =  U8_AG(x3, x4, x5)

U9_AG(x1, x2, x3, x4, x5)  =  U9_AG(x3, x4, x5)

PERMC_IN_AG(x1, x2)  =  PERMC_IN_AG(x2)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x3, x4, x5)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x3, x4, x5)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)

U10_AG(x1, x2, x3, x4, x5)  =  U10_AG(x3, x4, x5)

U11_AG(x1, x2, x3, x4, x5)  =  U11_AG(x3, x4, x5)

LED_IN_GG(x1, x2)  =  LED_IN_GG(x1, x2)

U6_GG(x1, x2, x3)  =  U6_GG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(76)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U7_AG(X1, X2, X3, X4, deleteB_in_gaaa(X3, X1, X2, X5))
   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> DELETEB_IN_GAAA(X3, X1, X2, X5)
   DELETEB_IN_GAAA(X1, X2, X3, X4) -> U2_GAAA(X1, X2, X3, X4, deleteA_in_gaa(X1, X3, X4))
   DELETEB_IN_GAAA(X1, X2, X3, X4) -> DELETEA_IN_GAA(X1, X3, X4)
   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> U1_GAA(X1, X2, X3, X4, deleteA_in_gaa(X1, X3, X4))
   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> DELETEA_IN_GAA(X1, X3, X4)
   SLOWSORTE_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U8_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U9_AG(X1, X2, X3, X4, permC_in_ag(X5, X4))
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U3_AG(X1, X2, X3, X4, deleteB_in_gaaa(X3, X1, X2, X5))
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> DELETEB_IN_GAAA(X3, X1, X2, X5)
   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U4_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U5_AG(X1, X2, X3, X4, permC_in_ag(X5, X4))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)
   U8_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U10_AG(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U10_AG(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> U11_AG(X1, X2, X3, X4, leD_in_gg(X3, X4))
   U10_AG(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> LED_IN_GG(X3, X4)
   LED_IN_GG(s(X1), s(X2)) -> U6_GG(X1, X2, leD_in_gg(X1, X2))
   LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   permcC_in_ag([], []) -> permcC_out_ag([], [])
   permcC_in_ag(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U15_ag(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U15_ag(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U16_ag(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U16_ag(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> permcC_out_ag(.(X1, .(X2, [])), .(X3, .(X4, [])))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deleteB_in_gaaa(x1, x2, x3, x4)  =  deleteB_in_gaaa(x1)

deleteA_in_gaa(x1, x2, x3)  =  deleteA_in_gaa(x1)

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

permC_in_ag(x1, x2)  =  permC_in_ag(x2)

permcC_in_ag(x1, x2)  =  permcC_in_ag(x2)

permcC_out_ag(x1, x2)  =  permcC_out_ag(x2)

U15_ag(x1, x2, x3, x4, x5)  =  U15_ag(x3, x4, x5)

U16_ag(x1, x2, x3, x4, x5)  =  U16_ag(x3, x4, x5)

leD_in_gg(x1, x2)  =  leD_in_gg(x1, x2)

s(x1)  =  s(x1)

SLOWSORTE_IN_AG(x1, x2)  =  SLOWSORTE_IN_AG(x2)

U7_AG(x1, x2, x3, x4, x5)  =  U7_AG(x3, x4, x5)

DELETEB_IN_GAAA(x1, x2, x3, x4)  =  DELETEB_IN_GAAA(x1)

U2_GAAA(x1, x2, x3, x4, x5)  =  U2_GAAA(x1, x5)

DELETEA_IN_GAA(x1, x2, x3)  =  DELETEA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x5)

U8_AG(x1, x2, x3, x4, x5)  =  U8_AG(x3, x4, x5)

U9_AG(x1, x2, x3, x4, x5)  =  U9_AG(x3, x4, x5)

PERMC_IN_AG(x1, x2)  =  PERMC_IN_AG(x2)

U3_AG(x1, x2, x3, x4, x5)  =  U3_AG(x3, x4, x5)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x3, x4, x5)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x3, x4, x5)

U10_AG(x1, x2, x3, x4, x5)  =  U10_AG(x3, x4, x5)

U11_AG(x1, x2, x3, x4, x5)  =  U11_AG(x3, x4, x5)

LED_IN_GG(x1, x2)  =  LED_IN_GG(x1, x2)

U6_GG(x1, x2, x3)  =  U6_GG(x1, x2, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(77) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 15 less nodes.
----------------------------------------

(78)
Complex Obligation (AND)

----------------------------------------

(79)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   permcC_in_ag([], []) -> permcC_out_ag([], [])
   permcC_in_ag(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U15_ag(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U15_ag(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U16_ag(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U16_ag(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> permcC_out_ag(.(X1, .(X2, [])), .(X3, .(X4, [])))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

permcC_in_ag(x1, x2)  =  permcC_in_ag(x2)

permcC_out_ag(x1, x2)  =  permcC_out_ag(x2)

U15_ag(x1, x2, x3, x4, x5)  =  U15_ag(x3, x4, x5)

U16_ag(x1, x2, x3, x4, x5)  =  U16_ag(x3, x4, x5)

s(x1)  =  s(x1)

LED_IN_GG(x1, x2)  =  LED_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(80) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(81)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(82) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(83)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(84) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LED_IN_GG(s(X1), s(X2)) -> LED_IN_GG(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(85)
YES

----------------------------------------

(86)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> DELETEA_IN_GAA(X1, X3, X4)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   permcC_in_ag([], []) -> permcC_out_ag([], [])
   permcC_in_ag(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U15_ag(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U15_ag(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U16_ag(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U16_ag(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> permcC_out_ag(.(X1, .(X2, [])), .(X3, .(X4, [])))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

permcC_in_ag(x1, x2)  =  permcC_in_ag(x2)

permcC_out_ag(x1, x2)  =  permcC_out_ag(x2)

U15_ag(x1, x2, x3, x4, x5)  =  U15_ag(x3, x4, x5)

U16_ag(x1, x2, x3, x4, x5)  =  U16_ag(x3, x4, x5)

DELETEA_IN_GAA(x1, x2, x3)  =  DELETEA_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(87) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(88)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DELETEA_IN_GAA(X1, .(X2, X3), X4) -> DELETEA_IN_GAA(X1, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

DELETEA_IN_GAA(x1, x2, x3)  =  DELETEA_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(89) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(90)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DELETEA_IN_GAA(X1) -> DELETEA_IN_GAA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(91) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = DELETEA_IN_GAA(X1) evaluates to  t =DELETEA_IN_GAA(X1)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from DELETEA_IN_GAA(X1) to DELETEA_IN_GAA(X1).




----------------------------------------

(92)
NO

----------------------------------------

(93)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U4_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   permcC_in_ag([], []) -> permcC_out_ag([], [])
   permcC_in_ag(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U15_ag(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U15_ag(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> U16_ag(X1, X2, X3, X4, permcC_in_ag(X5, X4))
   U16_ag(X1, X2, X3, X4, permcC_out_ag(X5, X4)) -> permcC_out_ag(.(X1, .(X2, [])), .(X3, .(X4, [])))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

permcC_in_ag(x1, x2)  =  permcC_in_ag(x2)

permcC_out_ag(x1, x2)  =  permcC_out_ag(x2)

U15_ag(x1, x2, x3, x4, x5)  =  U15_ag(x3, x4, x5)

U16_ag(x1, x2, x3, x4, x5)  =  U16_ag(x3, x4, x5)

PERMC_IN_AG(x1, x2)  =  PERMC_IN_AG(x2)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(94) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(95)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PERMC_IN_AG(.(X1, .(X2, [])), .(X3, .(X4, []))) -> U4_AG(X1, X2, X3, X4, deletecB_in_gaaa(X3, X1, X2, X5))
   U4_AG(X1, X2, X3, X4, deletecB_out_gaaa(X3, X1, X2, X5)) -> PERMC_IN_AG(X5, X4)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1, X1, X2, X2) -> deletecB_out_gaaa(X1, X1, X2, X2)
   deletecB_in_gaaa(X1, X2, X3, X4) -> U14_gaaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U14_gaaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecB_out_gaaa(X1, X2, X3, X4)
   deletecA_in_gaa(X1, .(X1, X2), X2) -> deletecA_out_gaa(X1, .(X1, X2), X2)
   deletecA_in_gaa(X1, .(X2, X3), X4) -> U13_gaa(X1, X2, X3, X4, deletecA_in_gaa(X1, X3, X4))
   U13_gaa(X1, X2, X3, X4, deletecA_out_gaa(X1, X3, X4)) -> deletecA_out_gaa(X1, .(X2, X3), X4)

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

[]  =  []

deletecB_in_gaaa(x1, x2, x3, x4)  =  deletecB_in_gaaa(x1)

deletecB_out_gaaa(x1, x2, x3, x4)  =  deletecB_out_gaaa(x1)

U14_gaaa(x1, x2, x3, x4, x5)  =  U14_gaaa(x1, x5)

deletecA_in_gaa(x1, x2, x3)  =  deletecA_in_gaa(x1)

deletecA_out_gaa(x1, x2, x3)  =  deletecA_out_gaa(x1)

U13_gaa(x1, x2, x3, x4, x5)  =  U13_gaa(x1, x5)

PERMC_IN_AG(x1, x2)  =  PERMC_IN_AG(x2)

U4_AG(x1, x2, x3, x4, x5)  =  U4_AG(x3, x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(96) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(97)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PERMC_IN_AG(.(X3, .(X4, []))) -> U4_AG(X3, X4, deletecB_in_gaaa(X3))
   U4_AG(X3, X4, deletecB_out_gaaa(X3)) -> PERMC_IN_AG(X4)

The TRS R consists of the following rules:

   deletecB_in_gaaa(X1) -> deletecB_out_gaaa(X1)
   deletecB_in_gaaa(X1) -> U14_gaaa(X1, deletecA_in_gaa(X1))
   U14_gaaa(X1, deletecA_out_gaa(X1)) -> deletecB_out_gaaa(X1)
   deletecA_in_gaa(X1) -> deletecA_out_gaa(X1)
   deletecA_in_gaa(X1) -> U13_gaa(X1, deletecA_in_gaa(X1))
   U13_gaa(X1, deletecA_out_gaa(X1)) -> deletecA_out_gaa(X1)

The set Q consists of the following terms:

   deletecB_in_gaaa(x0)
   U14_gaaa(x0, x1)
   deletecA_in_gaa(x0)
   U13_gaa(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(98) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U4_AG(X3, X4, deletecB_out_gaaa(X3)) -> PERMC_IN_AG(X4)
The graph contains the following edges 2 >= 1


*PERMC_IN_AG(.(X3, .(X4, []))) -> U4_AG(X3, X4, deletecB_in_gaaa(X3))
The graph contains the following edges 1 > 1, 1 > 2


----------------------------------------

(99)
YES

----------------------------------------

(100) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(slowsort X Y)",
                "(',' (perm X Y) (sorted Y))"
            ],
            [
                "(sorted ([]))",
                null
            ],
            [
                "(sorted (. X ([])))",
                null
            ],
            [
                "(sorted (. X (. Y Z)))",
                "(',' (le X Y) (sorted (. Y Z)))"
            ],
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm (. X (. Y ([]))) (. U (. V ([]))))",
                "(',' (delete U (. X Y) Z) (perm Z V))"
            ],
            [
                "(delete X (. X Y) Y)",
                null
            ],
            [
                "(delete X (. Y Z) W)",
                "(delete X Z W)"
            ],
            [
                "(le (s X) (s Y))",
                "(le X Y)"
            ],
            [
                "(le (0) (s X))",
                null
            ],
            [
                "(le (0) (0))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "350": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "153": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (perm T10 T9) (sorted T9))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "230": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "351": {
                "goal": [{
                    "clause": 9,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "231": {
                "goal": [{
                    "clause": 7,
                    "scope": 4,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "352": {
                "goal": [{
                    "clause": 10,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "155": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "232": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "353": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "156": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "233": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "310": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "354": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "157": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(perm T10 T9)"
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(perm T10 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "234": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "311": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(sorted T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "355": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "235": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T79 T82 X86)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": ["X86"],
                    "exprvars": []
                }
            },
            "356": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "236": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "357": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "314": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "358": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "315": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "316": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "319": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "160": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "161": {
                "goal": [{
                    "clause": 5,
                    "scope": 2,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "165": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "320": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (le T98 T99) (sorted (. T99 T100)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99",
                        "T100"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "207": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "328": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "329": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted (. T99 T100))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T99",
                        "T100"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "210": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (delete T21 (. T23 T24) X20) (perm X20 T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "211": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "212": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "213": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T29 T22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "214": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 3,
                        "term": "(delete T21 (. T23 T24) X20)"
                    },
                    {
                        "clause": 7,
                        "scope": 3,
                        "term": "(delete T21 (. T23 T24) X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "215": {
                "goal": [{
                    "clause": 6,
                    "scope": 3,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "216": {
                "goal": [{
                    "clause": 7,
                    "scope": 3,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "217": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "218": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "219": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "346": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 9,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 10,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "347": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "348": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 10,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "228": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "349": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T113 T114)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T113",
                        "T114"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "229": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(delete T55 T58 X57)"
                    },
                    {
                        "clause": 7,
                        "scope": 4,
                        "term": "(delete T55 T58 X57)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "309": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(sorted T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 3,
                "label": "CASE"
            },
            {
                "from": 3,
                "to": 153,
                "label": "ONLY EVAL with clause\nslowsort(X5, X6) :- ','(perm(X5, X6), sorted(X6)).\nand substitutionT1 -> T10,\nX5 -> T10,\nT2 -> T9,\nX6 -> T9,\nT8 -> T10"
            },
            {
                "from": 153,
                "to": 155,
                "label": "SPLIT 1"
            },
            {
                "from": 153,
                "to": 156,
                "label": "SPLIT 2\nnew knowledge:\nT9 is ground"
            },
            {
                "from": 155,
                "to": 157,
                "label": "CASE"
            },
            {
                "from": 156,
                "to": 309,
                "label": "CASE"
            },
            {
                "from": 157,
                "to": 160,
                "label": "PARALLEL"
            },
            {
                "from": 157,
                "to": 161,
                "label": "PARALLEL"
            },
            {
                "from": 160,
                "to": 165,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT10 -> [],\nT9 -> []"
            },
            {
                "from": 160,
                "to": 166,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 161,
                "to": 210,
                "label": "EVAL with clause\nperm(.(X16, .(X17, [])), .(X18, .(X19, []))) :- ','(delete(X18, .(X16, X17), X20), perm(X20, X19)).\nand substitutionX16 -> T23,\nX17 -> T24,\nT10 -> .(T23, .(T24, [])),\nX18 -> T21,\nX19 -> T22,\nT9 -> .(T21, .(T22, [])),\nT19 -> T23,\nT20 -> T24"
            },
            {
                "from": 161,
                "to": 211,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 165,
                "to": 207,
                "label": "SUCCESS"
            },
            {
                "from": 210,
                "to": 212,
                "label": "SPLIT 1"
            },
            {
                "from": 210,
                "to": 213,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nreplacements:X20 -> T29"
            },
            {
                "from": 212,
                "to": 214,
                "label": "CASE"
            },
            {
                "from": 213,
                "to": 155,
                "label": "INSTANCE with matching:\nT10 -> T29\nT9 -> T22"
            },
            {
                "from": 214,
                "to": 215,
                "label": "PARALLEL"
            },
            {
                "from": 214,
                "to": 216,
                "label": "PARALLEL"
            },
            {
                "from": 215,
                "to": 217,
                "label": "EVAL with clause\ndelete(X37, .(X37, X38), X38).\nand substitutionT21 -> T42,\nX37 -> T42,\nT23 -> T42,\nT24 -> T43,\nX38 -> T43,\nX20 -> T43"
            },
            {
                "from": 215,
                "to": 218,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 216,
                "to": 228,
                "label": "ONLY EVAL with clause\ndelete(X53, .(X54, X55), X56) :- delete(X53, X55, X56).\nand substitutionT21 -> T55,\nX53 -> T55,\nT23 -> T56,\nX54 -> T56,\nT24 -> T58,\nX55 -> T58,\nX20 -> X57,\nX56 -> X57,\nT57 -> T58"
            },
            {
                "from": 217,
                "to": 219,
                "label": "SUCCESS"
            },
            {
                "from": 228,
                "to": 229,
                "label": "CASE"
            },
            {
                "from": 229,
                "to": 230,
                "label": "PARALLEL"
            },
            {
                "from": 229,
                "to": 231,
                "label": "PARALLEL"
            },
            {
                "from": 230,
                "to": 232,
                "label": "EVAL with clause\ndelete(X70, .(X70, X71), X71).\nand substitutionT55 -> T71,\nX70 -> T71,\nX71 -> T72,\nT58 -> .(T71, T72),\nX57 -> T72"
            },
            {
                "from": 230,
                "to": 233,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 231,
                "to": 235,
                "label": "EVAL with clause\ndelete(X82, .(X83, X84), X85) :- delete(X82, X84, X85).\nand substitutionT55 -> T79,\nX82 -> T79,\nX83 -> T80,\nX84 -> T82,\nT58 -> .(T80, T82),\nX57 -> X86,\nX85 -> X86,\nT81 -> T82"
            },
            {
                "from": 231,
                "to": 236,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 232,
                "to": 234,
                "label": "SUCCESS"
            },
            {
                "from": 235,
                "to": 228,
                "label": "INSTANCE with matching:\nT55 -> T79\nT58 -> T82\nX57 -> X86"
            },
            {
                "from": 309,
                "to": 310,
                "label": "PARALLEL"
            },
            {
                "from": 309,
                "to": 311,
                "label": "PARALLEL"
            },
            {
                "from": 310,
                "to": 314,
                "label": "EVAL with clause\nsorted([]).\nand substitutionT9 -> []"
            },
            {
                "from": 310,
                "to": 315,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 311,
                "to": 319,
                "label": "PARALLEL"
            },
            {
                "from": 311,
                "to": 320,
                "label": "PARALLEL"
            },
            {
                "from": 314,
                "to": 316,
                "label": "SUCCESS"
            },
            {
                "from": 319,
                "to": 323,
                "label": "EVAL with clause\nsorted(.(X95, [])).\nand substitutionX95 -> T91,\nT9 -> .(T91, [])"
            },
            {
                "from": 319,
                "to": 324,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 320,
                "to": 326,
                "label": "EVAL with clause\nsorted(.(X102, .(X103, X104))) :- ','(le(X102, X103), sorted(.(X103, X104))).\nand substitutionX102 -> T98,\nX103 -> T99,\nX104 -> T100,\nT9 -> .(T98, .(T99, T100))"
            },
            {
                "from": 320,
                "to": 327,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 323,
                "to": 325,
                "label": "SUCCESS"
            },
            {
                "from": 326,
                "to": 328,
                "label": "SPLIT 1"
            },
            {
                "from": 326,
                "to": 329,
                "label": "SPLIT 2\nnew knowledge:\nT98 is ground\nT99 is ground"
            },
            {
                "from": 328,
                "to": 346,
                "label": "CASE"
            },
            {
                "from": 329,
                "to": 156,
                "label": "INSTANCE with matching:\nT9 -> .(T99, T100)"
            },
            {
                "from": 346,
                "to": 347,
                "label": "PARALLEL"
            },
            {
                "from": 346,
                "to": 348,
                "label": "PARALLEL"
            },
            {
                "from": 347,
                "to": 349,
                "label": "EVAL with clause\nle(s(X117), s(X118)) :- le(X117, X118).\nand substitutionX117 -> T113,\nT98 -> s(T113),\nX118 -> T114,\nT99 -> s(T114)"
            },
            {
                "from": 347,
                "to": 350,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 348,
                "to": 351,
                "label": "PARALLEL"
            },
            {
                "from": 348,
                "to": 352,
                "label": "PARALLEL"
            },
            {
                "from": 349,
                "to": 328,
                "label": "INSTANCE with matching:\nT98 -> T113\nT99 -> T114"
            },
            {
                "from": 351,
                "to": 353,
                "label": "EVAL with clause\nle(0, s(X125)).\nand substitutionT98 -> 0,\nX125 -> T121,\nT99 -> s(T121)"
            },
            {
                "from": 351,
                "to": 354,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 352,
                "to": 356,
                "label": "EVAL with clause\nle(0, 0).\nand substitutionT98 -> 0,\nT99 -> 0"
            },
            {
                "from": 352,
                "to": 357,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 353,
                "to": 355,
                "label": "SUCCESS"
            },
            {
                "from": 356,
                "to": 358,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(101)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.

----------------------------------------

(102) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(103)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F2_IN(T9) -> U1^1(f153_in(T9), T9)
   F2_IN(T9) -> F153_IN(T9)
   F155_IN(.(T21, .(T22, []))) -> U2^1(f210_in(T21, T22), .(T21, .(T22, [])))
   F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
   F228_IN(T79) -> U3^1(f228_in(T79), T79)
   F228_IN(T79) -> F228_IN(T79)
   F156_IN(.(T98, .(T99, T100))) -> U4^1(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F328_IN(s(T113), s(T114)) -> U5^1(f328_in(T113, T114), s(T113), s(T114))
   F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)
   F212_IN(T55) -> U6^1(f228_in(T55), T55)
   F212_IN(T55) -> F228_IN(T55)
   F153_IN(T9) -> U7^1(f155_in(T9), T9)
   F153_IN(T9) -> F155_IN(T9)
   U7^1(f155_out1, T9) -> U8^1(f156_in(T9), T9)
   U7^1(f155_out1, T9) -> F156_IN(T9)
   F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
   F210_IN(T21, T22) -> F212_IN(T21)
   U9^1(f212_out1, T21, T22) -> U10^1(f155_in(T22), T21, T22)
   U9^1(f212_out1, T21, T22) -> F155_IN(T22)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)
   F326_IN(T98, T99, T100) -> F328_IN(T98, T99)
   U11^1(f328_out1, T98, T99, T100) -> U12^1(f156_in(.(T99, T100)), T98, T99, T100)
   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(104) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 16 less nodes.
----------------------------------------

(105)
Complex Obligation (AND)

----------------------------------------

(106)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(107) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(108)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(109) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(110)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)

R is empty.
The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(111) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)


----------------------------------------

(112)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(113) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F328_IN(s(T113), s(T114)) -> F328_IN(T113, T114)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(114)
YES

----------------------------------------

(115)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)
   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(116) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(117)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)
   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(118) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(119)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)
   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))

The TRS R consists of the following rules:

   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   U5(f328_out1, s(T113), s(T114)) -> f328_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(120) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)


----------------------------------------

(121)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)
   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))

The TRS R consists of the following rules:

   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   U5(f328_out1, s(T113), s(T114)) -> f328_out1

The set Q consists of the following terms:

   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(122) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U11^1(f328_out1, T98, T99, T100) -> F156_IN(.(T99, T100))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U11^1_4(x_1, ..., x_4) ) = 2x_1 + 2x_3 + 2x_4 + 2
POL( f328_in_2(x_1, x_2) ) = x_1
POL( s_1(x_1) ) = 2x_1
POL( U5_3(x_1, ..., x_3) ) = max{0, 2x_1 - 2}
POL( 0 ) = 2
POL( f328_out1 ) = 2
POL( F156_IN_1(x_1) ) = x_1 + 2
POL( ._2(x_1, x_2) ) = 2x_1 + 2x_2
POL( F326_IN_3(x_1, ..., x_3) ) = 2x_1 + 2x_2 + 2x_3 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   U5(f328_out1, s(T113), s(T114)) -> f328_out1


----------------------------------------

(123)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F156_IN(.(T98, .(T99, T100))) -> F326_IN(T98, T99, T100)
   F326_IN(T98, T99, T100) -> U11^1(f328_in(T98, T99), T98, T99, T100)

The TRS R consists of the following rules:

   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   U5(f328_out1, s(T113), s(T114)) -> f328_out1

The set Q consists of the following terms:

   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(124) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(125)
TRUE

----------------------------------------

(126)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F228_IN(T79) -> F228_IN(T79)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(127) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(128)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F228_IN(T79) -> F228_IN(T79)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(129) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(130)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F228_IN(T79) -> F228_IN(T79)

R is empty.
The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(131) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)


----------------------------------------

(132)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F228_IN(T79) -> F228_IN(T79)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(133) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F228_IN(T79) evaluates to  t =F228_IN(T79)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F228_IN(T79) to F228_IN(T79).




----------------------------------------

(134)
NO

----------------------------------------

(135)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
   F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
   U9^1(f212_out1, T21, T22) -> F155_IN(T22)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(136) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(137)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
   F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
   U9^1(f212_out1, T21, T22) -> F155_IN(T22)

The TRS R consists of the following rules:

   f2_in(T9) -> U1(f153_in(T9), T9)
   U1(f153_out1, T9) -> f2_out1
   f155_in([]) -> f155_out1
   f155_in(.(T21, .(T22, []))) -> U2(f210_in(T21, T22), .(T21, .(T22, [])))
   U2(f210_out1, .(T21, .(T22, []))) -> f155_out1
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U3(f228_out1, T79) -> f228_out1
   f156_in([]) -> f156_out1
   f156_in(.(T91, [])) -> f156_out1
   f156_in(.(T98, .(T99, T100))) -> U4(f326_in(T98, T99, T100), .(T98, .(T99, T100)))
   U4(f326_out1, .(T98, .(T99, T100))) -> f156_out1
   f328_in(s(T113), s(T114)) -> U5(f328_in(T113, T114), s(T113), s(T114))
   U5(f328_out1, s(T113), s(T114)) -> f328_out1
   f328_in(0, s(T121)) -> f328_out1
   f328_in(0, 0) -> f328_out1
   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   U6(f228_out1, T55) -> f212_out1
   f153_in(T9) -> U7(f155_in(T9), T9)
   U7(f155_out1, T9) -> U8(f156_in(T9), T9)
   U8(f156_out1, T9) -> f153_out1
   f210_in(T21, T22) -> U9(f212_in(T21), T21, T22)
   U9(f212_out1, T21, T22) -> U10(f155_in(T22), T21, T22)
   U10(f155_out1, T21, T22) -> f210_out1
   f326_in(T98, T99, T100) -> U11(f328_in(T98, T99), T98, T99, T100)
   U11(f328_out1, T98, T99, T100) -> U12(f156_in(.(T99, T100)), T98, T99, T100)
   U12(f156_out1, T98, T99, T100) -> f326_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(138) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(139)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
   F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
   U9^1(f212_out1, T21, T22) -> F155_IN(T22)

The TRS R consists of the following rules:

   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U6(f228_out1, T55) -> f212_out1
   U3(f228_out1, T79) -> f228_out1

The set Q consists of the following terms:

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f228_in(x0)
   U3(f228_out1, x0)
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f212_in(x0)
   U6(f228_out1, x0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(140) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f2_in(x0)
   U1(f153_out1, x0)
   f155_in([])
   f155_in(.(x0, .(x1, [])))
   U2(f210_out1, .(x0, .(x1, [])))
   f156_in([])
   f156_in(.(x0, []))
   f156_in(.(x0, .(x1, x2)))
   U4(f326_out1, .(x0, .(x1, x2)))
   f328_in(s(x0), s(x1))
   U5(f328_out1, s(x0), s(x1))
   f328_in(0, s(x0))
   f328_in(0, 0)
   f153_in(x0)
   U7(f155_out1, x0)
   U8(f156_out1, x0)
   f210_in(x0, x1)
   U9(f212_out1, x0, x1)
   U10(f155_out1, x0, x1)
   f326_in(x0, x1, x2)
   U11(f328_out1, x0, x1, x2)
   U12(f156_out1, x0, x1, x2)


----------------------------------------

(141)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
   F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
   U9^1(f212_out1, T21, T22) -> F155_IN(T22)

The TRS R consists of the following rules:

   f212_in(T42) -> f212_out1
   f212_in(T55) -> U6(f228_in(T55), T55)
   f228_in(T71) -> f228_out1
   f228_in(T79) -> U3(f228_in(T79), T79)
   U6(f228_out1, T55) -> f212_out1
   U3(f228_out1, T79) -> f228_out1

The set Q consists of the following terms:

   f228_in(x0)
   U3(f228_out1, x0)
   f212_in(x0)
   U6(f228_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(142) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F210_IN(T21, T22) -> U9^1(f212_in(T21), T21, T22)
The graph contains the following edges 1 >= 2, 2 >= 3


*U9^1(f212_out1, T21, T22) -> F155_IN(T22)
The graph contains the following edges 3 >= 1


*F155_IN(.(T21, .(T22, []))) -> F210_IN(T21, T22)
The graph contains the following edges 1 > 1, 1 > 2


----------------------------------------

(143)
YES

----------------------------------------

(144) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 4,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(slowsort X Y)",
                "(',' (perm X Y) (sorted Y))"
            ],
            [
                "(sorted ([]))",
                null
            ],
            [
                "(sorted (. X ([])))",
                null
            ],
            [
                "(sorted (. X (. Y Z)))",
                "(',' (le X Y) (sorted (. Y Z)))"
            ],
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm (. X (. Y ([]))) (. U (. V ([]))))",
                "(',' (delete U (. X Y) Z) (perm Z V))"
            ],
            [
                "(delete X (. X Y) Y)",
                null
            ],
            [
                "(delete X (. Y Z) W)",
                "(delete X Z W)"
            ],
            [
                "(le (s X) (s Y))",
                "(le X Y)"
            ],
            [
                "(le (0) (s X))",
                null
            ],
            [
                "(le (0) (0))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "192": {
                "goal": [{
                    "clause": 6,
                    "scope": 3,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "193": {
                "goal": [{
                    "clause": 7,
                    "scope": 3,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "270": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "271": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "272": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "273": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "154": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (perm T10 T9) (sorted T9))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "275": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (le T98 T99) (sorted (. T99 T100)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99",
                        "T100"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "276": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "277": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "278": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted (. T99 T100))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T99",
                        "T100"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "158": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "312": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "159": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "313": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "237": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "238": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "239": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "317": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "318": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "162": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(perm T10 T9)"
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(perm T10 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "163": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "240": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "164": {
                "goal": [{
                    "clause": 5,
                    "scope": 2,
                    "term": "(perm T10 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "241": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(delete T55 T58 X57)"
                    },
                    {
                        "clause": 7,
                        "scope": 4,
                        "term": "(delete T55 T58 X57)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "242": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "243": {
                "goal": [{
                    "clause": 7,
                    "scope": 4,
                    "term": "(delete T55 T58 X57)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T55"],
                    "free": ["X57"],
                    "exprvars": []
                }
            },
            "167": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "321": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "168": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "322": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(slowsort T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "170": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "298": {
                "goal": [
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 9,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 10,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "299": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "258": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "259": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "183": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (delete T21 (. T23 T24) X20) (perm X20 T22))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "260": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "184": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "261": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T79 T82 X86)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": ["X86"],
                    "exprvars": []
                }
            },
            "262": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "263": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(sorted T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "187": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(delete T21 (. T23 T24) X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "264": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "188": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T29 T22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "265": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(sorted T9)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(sorted T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "189": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 3,
                        "term": "(delete T21 (. T23 T24) X20)"
                    },
                    {
                        "clause": 7,
                        "scope": 3,
                        "term": "(delete T21 (. T23 T24) X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "267": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "300": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    },
                    {
                        "clause": 10,
                        "scope": 6,
                        "term": "(le T98 T99)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "268": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "301": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(le T113 T114)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T113",
                        "T114"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "269": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(sorted T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "302": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "307": {
                "goal": [{
                    "clause": 9,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "308": {
                "goal": [{
                    "clause": 10,
                    "scope": 6,
                    "term": "(le T98 T99)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T98",
                        "T99"
                    ],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 4,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 154,
                "label": "ONLY EVAL with clause\nslowsort(X5, X6) :- ','(perm(X5, X6), sorted(X6)).\nand substitutionT1 -> T10,\nX5 -> T10,\nT2 -> T9,\nX6 -> T9,\nT8 -> T10"
            },
            {
                "from": 154,
                "to": 158,
                "label": "SPLIT 1"
            },
            {
                "from": 154,
                "to": 159,
                "label": "SPLIT 2\nnew knowledge:\nT9 is ground"
            },
            {
                "from": 158,
                "to": 162,
                "label": "CASE"
            },
            {
                "from": 159,
                "to": 263,
                "label": "CASE"
            },
            {
                "from": 162,
                "to": 163,
                "label": "PARALLEL"
            },
            {
                "from": 162,
                "to": 164,
                "label": "PARALLEL"
            },
            {
                "from": 163,
                "to": 167,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT10 -> [],\nT9 -> []"
            },
            {
                "from": 163,
                "to": 168,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 164,
                "to": 183,
                "label": "EVAL with clause\nperm(.(X16, .(X17, [])), .(X18, .(X19, []))) :- ','(delete(X18, .(X16, X17), X20), perm(X20, X19)).\nand substitutionX16 -> T23,\nX17 -> T24,\nT10 -> .(T23, .(T24, [])),\nX18 -> T21,\nX19 -> T22,\nT9 -> .(T21, .(T22, [])),\nT19 -> T23,\nT20 -> T24"
            },
            {
                "from": 164,
                "to": 184,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 167,
                "to": 170,
                "label": "SUCCESS"
            },
            {
                "from": 183,
                "to": 187,
                "label": "SPLIT 1"
            },
            {
                "from": 183,
                "to": 188,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nreplacements:X20 -> T29"
            },
            {
                "from": 187,
                "to": 189,
                "label": "CASE"
            },
            {
                "from": 188,
                "to": 158,
                "label": "INSTANCE with matching:\nT10 -> T29\nT9 -> T22"
            },
            {
                "from": 189,
                "to": 192,
                "label": "PARALLEL"
            },
            {
                "from": 189,
                "to": 193,
                "label": "PARALLEL"
            },
            {
                "from": 192,
                "to": 237,
                "label": "EVAL with clause\ndelete(X37, .(X37, X38), X38).\nand substitutionT21 -> T42,\nX37 -> T42,\nT23 -> T42,\nT24 -> T43,\nX38 -> T43,\nX20 -> T43"
            },
            {
                "from": 192,
                "to": 238,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 193,
                "to": 240,
                "label": "ONLY EVAL with clause\ndelete(X53, .(X54, X55), X56) :- delete(X53, X55, X56).\nand substitutionT21 -> T55,\nX53 -> T55,\nT23 -> T56,\nX54 -> T56,\nT24 -> T58,\nX55 -> T58,\nX20 -> X57,\nX56 -> X57,\nT57 -> T58"
            },
            {
                "from": 237,
                "to": 239,
                "label": "SUCCESS"
            },
            {
                "from": 240,
                "to": 241,
                "label": "CASE"
            },
            {
                "from": 241,
                "to": 242,
                "label": "PARALLEL"
            },
            {
                "from": 241,
                "to": 243,
                "label": "PARALLEL"
            },
            {
                "from": 242,
                "to": 258,
                "label": "EVAL with clause\ndelete(X70, .(X70, X71), X71).\nand substitutionT55 -> T71,\nX70 -> T71,\nX71 -> T72,\nT58 -> .(T71, T72),\nX57 -> T72"
            },
            {
                "from": 242,
                "to": 259,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 243,
                "to": 261,
                "label": "EVAL with clause\ndelete(X82, .(X83, X84), X85) :- delete(X82, X84, X85).\nand substitutionT55 -> T79,\nX82 -> T79,\nX83 -> T80,\nX84 -> T82,\nT58 -> .(T80, T82),\nX57 -> X86,\nX85 -> X86,\nT81 -> T82"
            },
            {
                "from": 243,
                "to": 262,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 258,
                "to": 260,
                "label": "SUCCESS"
            },
            {
                "from": 261,
                "to": 240,
                "label": "INSTANCE with matching:\nT55 -> T79\nT58 -> T82\nX57 -> X86"
            },
            {
                "from": 263,
                "to": 264,
                "label": "PARALLEL"
            },
            {
                "from": 263,
                "to": 265,
                "label": "PARALLEL"
            },
            {
                "from": 264,
                "to": 266,
                "label": "EVAL with clause\nsorted([]).\nand substitutionT9 -> []"
            },
            {
                "from": 264,
                "to": 267,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 265,
                "to": 269,
                "label": "PARALLEL"
            },
            {
                "from": 265,
                "to": 270,
                "label": "PARALLEL"
            },
            {
                "from": 266,
                "to": 268,
                "label": "SUCCESS"
            },
            {
                "from": 269,
                "to": 271,
                "label": "EVAL with clause\nsorted(.(X95, [])).\nand substitutionX95 -> T91,\nT9 -> .(T91, [])"
            },
            {
                "from": 269,
                "to": 272,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 270,
                "to": 275,
                "label": "EVAL with clause\nsorted(.(X102, .(X103, X104))) :- ','(le(X102, X103), sorted(.(X103, X104))).\nand substitutionX102 -> T98,\nX103 -> T99,\nX104 -> T100,\nT9 -> .(T98, .(T99, T100))"
            },
            {
                "from": 270,
                "to": 276,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 271,
                "to": 273,
                "label": "SUCCESS"
            },
            {
                "from": 275,
                "to": 277,
                "label": "SPLIT 1"
            },
            {
                "from": 275,
                "to": 278,
                "label": "SPLIT 2\nnew knowledge:\nT98 is ground\nT99 is ground"
            },
            {
                "from": 277,
                "to": 298,
                "label": "CASE"
            },
            {
                "from": 278,
                "to": 159,
                "label": "INSTANCE with matching:\nT9 -> .(T99, T100)"
            },
            {
                "from": 298,
                "to": 299,
                "label": "PARALLEL"
            },
            {
                "from": 298,
                "to": 300,
                "label": "PARALLEL"
            },
            {
                "from": 299,
                "to": 301,
                "label": "EVAL with clause\nle(s(X117), s(X118)) :- le(X117, X118).\nand substitutionX117 -> T113,\nT98 -> s(T113),\nX118 -> T114,\nT99 -> s(T114)"
            },
            {
                "from": 299,
                "to": 302,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 300,
                "to": 307,
                "label": "PARALLEL"
            },
            {
                "from": 300,
                "to": 308,
                "label": "PARALLEL"
            },
            {
                "from": 301,
                "to": 277,
                "label": "INSTANCE with matching:\nT98 -> T113\nT99 -> T114"
            },
            {
                "from": 307,
                "to": 312,
                "label": "EVAL with clause\nle(0, s(X125)).\nand substitutionT98 -> 0,\nX125 -> T121,\nT99 -> s(T121)"
            },
            {
                "from": 307,
                "to": 313,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 308,
                "to": 318,
                "label": "EVAL with clause\nle(0, 0).\nand substitutionT98 -> 0,\nT99 -> 0"
            },
            {
                "from": 308,
                "to": 321,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 312,
                "to": 317,
                "label": "SUCCESS"
            },
            {
                "from": 318,
                "to": 322,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(145)
Complex Obligation (AND)

----------------------------------------

(146)
Obligation:
Rules:
f301_in(T113, T114) -> f277_in(T113, T114) :|: TRUE
f277_out(x, x1) -> f301_out(x, x1) :|: TRUE
f299_in(T98, T99) -> f302_in :|: TRUE
f299_in(s(x2), s(x3)) -> f301_in(x2, x3) :|: TRUE
f302_out -> f299_out(x4, x5) :|: TRUE
f301_out(x6, x7) -> f299_out(s(x6), s(x7)) :|: TRUE
f277_in(x8, x9) -> f298_in(x8, x9) :|: TRUE
f298_out(x10, x11) -> f277_out(x10, x11) :|: TRUE
f298_in(x12, x13) -> f299_in(x12, x13) :|: TRUE
f298_in(x14, x15) -> f300_in(x14, x15) :|: TRUE
f299_out(x16, x17) -> f298_out(x16, x17) :|: TRUE
f300_out(x18, x19) -> f298_out(x18, x19) :|: TRUE
f5_out(T2) -> f4_out(T2) :|: TRUE
f4_in(x20) -> f5_in(x20) :|: TRUE
f5_in(T9) -> f154_in(T9) :|: TRUE
f154_out(x21) -> f5_out(x21) :|: TRUE
f154_in(x22) -> f158_in(x22) :|: TRUE
f159_out(x23) -> f154_out(x23) :|: TRUE
f158_out(x24) -> f159_in(x24) :|: TRUE
f263_out(x25) -> f159_out(x25) :|: TRUE
f159_in(x26) -> f263_in(x26) :|: TRUE
f264_out(x27) -> f263_out(x27) :|: TRUE
f263_in(x28) -> f265_in(x28) :|: TRUE
f263_in(x29) -> f264_in(x29) :|: TRUE
f265_out(x30) -> f263_out(x30) :|: TRUE
f265_in(x31) -> f270_in(x31) :|: TRUE
f265_in(x32) -> f269_in(x32) :|: TRUE
f269_out(x33) -> f265_out(x33) :|: TRUE
f270_out(x34) -> f265_out(x34) :|: TRUE
f276_out -> f270_out(x35) :|: TRUE
f275_out(x36, x37, x38) -> f270_out(.(x36, .(x37, x38))) :|: TRUE
f270_in(.(x39, .(x40, x41))) -> f275_in(x39, x40, x41) :|: TRUE
f270_in(x42) -> f276_in :|: TRUE
f278_out(x43, x44) -> f275_out(x45, x43, x44) :|: TRUE
f275_in(x46, x47, x48) -> f277_in(x46, x47) :|: TRUE
f277_out(x49, x50) -> f278_in(x50, x51) :|: TRUE
Start term: f4_in(T2)

----------------------------------------

(147) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(148)
TRUE

----------------------------------------

(149)
Obligation:
Rules:
f243_in(T79) -> f261_in(T79) :|: TRUE
f261_out(x) -> f243_out(x) :|: TRUE
f262_out -> f243_out(T55) :|: TRUE
f243_in(x1) -> f262_in :|: TRUE
f240_in(x2) -> f241_in(x2) :|: TRUE
f241_out(x3) -> f240_out(x3) :|: TRUE
f240_out(x4) -> f261_out(x4) :|: TRUE
f261_in(x5) -> f240_in(x5) :|: TRUE
f241_in(x6) -> f242_in(x6) :|: TRUE
f243_out(x7) -> f241_out(x7) :|: TRUE
f241_in(x8) -> f243_in(x8) :|: TRUE
f242_out(x9) -> f241_out(x9) :|: TRUE
f5_out(T2) -> f4_out(T2) :|: TRUE
f4_in(x10) -> f5_in(x10) :|: TRUE
f5_in(T9) -> f154_in(T9) :|: TRUE
f154_out(x11) -> f5_out(x11) :|: TRUE
f154_in(x12) -> f158_in(x12) :|: TRUE
f159_out(x13) -> f154_out(x13) :|: TRUE
f158_out(x14) -> f159_in(x14) :|: TRUE
f162_out(x15) -> f158_out(x15) :|: TRUE
f158_in(x16) -> f162_in(x16) :|: TRUE
f164_out(x17) -> f162_out(x17) :|: TRUE
f162_in(x18) -> f163_in(x18) :|: TRUE
f163_out(x19) -> f162_out(x19) :|: TRUE
f162_in(x20) -> f164_in(x20) :|: TRUE
f183_out(T21, T22) -> f164_out(.(T21, .(T22, []))) :|: TRUE
f164_in(x21) -> f184_in :|: TRUE
f184_out -> f164_out(x22) :|: TRUE
f164_in(.(x23, .(x24, []))) -> f183_in(x23, x24) :|: TRUE
f183_in(x25, x26) -> f187_in(x25) :|: TRUE
f188_out(x27) -> f183_out(x28, x27) :|: TRUE
f187_out(x29) -> f188_in(x30) :|: TRUE
f187_in(x31) -> f189_in(x31) :|: TRUE
f189_out(x32) -> f187_out(x32) :|: TRUE
f189_in(x33) -> f193_in(x33) :|: TRUE
f189_in(x34) -> f192_in(x34) :|: TRUE
f192_out(x35) -> f189_out(x35) :|: TRUE
f193_out(x36) -> f189_out(x36) :|: TRUE
f193_in(x37) -> f240_in(x37) :|: TRUE
f240_out(x38) -> f193_out(x38) :|: TRUE
Start term: f4_in(T2)

----------------------------------------

(150) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f243_in(T79) -> f261_in(T79) :|: TRUE
f240_in(x2) -> f241_in(x2) :|: TRUE
f261_in(x5) -> f240_in(x5) :|: TRUE
f241_in(x8) -> f243_in(x8) :|: TRUE


----------------------------------------

(151)
Obligation:
Rules:
f243_in(T79) -> f261_in(T79) :|: TRUE
f240_in(x2) -> f241_in(x2) :|: TRUE
f261_in(x5) -> f240_in(x5) :|: TRUE
f241_in(x8) -> f243_in(x8) :|: TRUE

----------------------------------------

(152) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(153)
Obligation:
Rules:
f243_in(T79:0) -> f243_in(T79:0) :|: TRUE

----------------------------------------

(154) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(155)
Obligation:
Rules:
f243_in(T79:0) -> f243_in(T79:0) :|: TRUE

----------------------------------------

(156) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f243_in(T79:0) -> f243_in(T79:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(157)
Obligation:

Termination digraph:
Nodes:
(1) f243_in(T79:0) -> f243_in(T79:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(158) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f243_in(VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(159)
Obligation:
Rules:
f243_in(T79:0) -> f243_in(T79:0) :|: TRUE

----------------------------------------

(160) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, T79:0) -> f(1, T79:0) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1, -8)
----------------------------------------

(161)
NO

----------------------------------------

(162)
Obligation:
Rules:
f301_in(T113, T114) -> f277_in(T113, T114) :|: TRUE
f277_out(x, x1) -> f301_out(x, x1) :|: TRUE
f299_in(T98, T99) -> f302_in :|: TRUE
f299_in(s(x2), s(x3)) -> f301_in(x2, x3) :|: TRUE
f302_out -> f299_out(x4, x5) :|: TRUE
f301_out(x6, x7) -> f299_out(s(x6), s(x7)) :|: TRUE
f308_out(x8, x9) -> f300_out(x8, x9) :|: TRUE
f300_in(x10, x11) -> f307_in(x10, x11) :|: TRUE
f300_in(x12, x13) -> f308_in(x12, x13) :|: TRUE
f307_out(x14, x15) -> f300_out(x14, x15) :|: TRUE
f312_in -> f312_out :|: TRUE
f278_in(x16, x17) -> f159_in(.(x16, x17)) :|: TRUE
f159_out(.(x18, x19)) -> f278_out(x18, x19) :|: TRUE
f264_out(T9) -> f263_out(T9) :|: TRUE
f263_in(x20) -> f265_in(x20) :|: TRUE
f263_in(x21) -> f264_in(x21) :|: TRUE
f265_out(x22) -> f263_out(x22) :|: TRUE
f318_in -> f318_out :|: TRUE
f298_in(x23, x24) -> f299_in(x23, x24) :|: TRUE
f298_in(x25, x26) -> f300_in(x25, x26) :|: TRUE
f299_out(x27, x28) -> f298_out(x27, x28) :|: TRUE
f300_out(x29, x30) -> f298_out(x29, x30) :|: TRUE
f318_out -> f308_out(0, 0) :|: TRUE
f308_in(x31, x32) -> f321_in :|: TRUE
f308_in(0, 0) -> f318_in :|: TRUE
f321_out -> f308_out(x33, x34) :|: TRUE
f263_out(x35) -> f159_out(x35) :|: TRUE
f159_in(x36) -> f263_in(x36) :|: TRUE
f277_in(x37, x38) -> f298_in(x37, x38) :|: TRUE
f298_out(x39, x40) -> f277_out(x39, x40) :|: TRUE
f313_out -> f307_out(x41, x42) :|: TRUE
f312_out -> f307_out(0, s(T121)) :|: TRUE
f307_in(x43, x44) -> f313_in :|: TRUE
f307_in(0, s(x45)) -> f312_in :|: TRUE
f265_in(x46) -> f270_in(x46) :|: TRUE
f265_in(x47) -> f269_in(x47) :|: TRUE
f269_out(x48) -> f265_out(x48) :|: TRUE
f270_out(x49) -> f265_out(x49) :|: TRUE
f278_out(x50, x51) -> f275_out(x52, x50, x51) :|: TRUE
f275_in(x53, x54, x55) -> f277_in(x53, x54) :|: TRUE
f277_out(x56, x57) -> f278_in(x57, x58) :|: TRUE
f276_out -> f270_out(x59) :|: TRUE
f275_out(x60, x61, x62) -> f270_out(.(x60, .(x61, x62))) :|: TRUE
f270_in(.(x63, .(x64, x65))) -> f275_in(x63, x64, x65) :|: TRUE
f270_in(x66) -> f276_in :|: TRUE
f5_out(T2) -> f4_out(T2) :|: TRUE
f4_in(x67) -> f5_in(x67) :|: TRUE
f5_in(x68) -> f154_in(x68) :|: TRUE
f154_out(x69) -> f5_out(x69) :|: TRUE
f154_in(x70) -> f158_in(x70) :|: TRUE
f159_out(x71) -> f154_out(x71) :|: TRUE
f158_out(x72) -> f159_in(x72) :|: TRUE
Start term: f4_in(T2)

----------------------------------------

(163) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(164)
TRUE

----------------------------------------

(165)
Obligation:
Rules:
f183_in(T21, T22) -> f187_in(T21) :|: TRUE
f188_out(x) -> f183_out(x1, x) :|: TRUE
f187_out(x2) -> f188_in(x3) :|: TRUE
f258_in -> f258_out :|: TRUE
f188_in(x4) -> f158_in(x4) :|: TRUE
f158_out(x5) -> f188_out(x5) :|: TRUE
f237_in -> f237_out :|: TRUE
f192_in(T42) -> f237_in :|: TRUE
f238_out -> f192_out(x6) :|: TRUE
f192_in(x7) -> f238_in :|: TRUE
f237_out -> f192_out(x8) :|: TRUE
f240_out(T79) -> f261_out(T79) :|: TRUE
f261_in(x9) -> f240_in(x9) :|: TRUE
f162_out(T9) -> f158_out(T9) :|: TRUE
f158_in(x10) -> f162_in(x10) :|: TRUE
f193_in(T55) -> f240_in(T55) :|: TRUE
f240_out(x11) -> f193_out(x11) :|: TRUE
f183_out(x12, x13) -> f164_out(.(x12, .(x13, []))) :|: TRUE
f164_in(x14) -> f184_in :|: TRUE
f184_out -> f164_out(x15) :|: TRUE
f164_in(.(x16, .(x17, []))) -> f183_in(x16, x17) :|: TRUE
f243_in(x18) -> f261_in(x18) :|: TRUE
f261_out(x19) -> f243_out(x19) :|: TRUE
f262_out -> f243_out(x20) :|: TRUE
f243_in(x21) -> f262_in :|: TRUE
f240_in(x22) -> f241_in(x22) :|: TRUE
f241_out(x23) -> f240_out(x23) :|: TRUE
f242_in(x24) -> f259_in :|: TRUE
f259_out -> f242_out(x25) :|: TRUE
f242_in(T71) -> f258_in :|: TRUE
f258_out -> f242_out(x26) :|: TRUE
f189_in(x27) -> f193_in(x27) :|: TRUE
f189_in(x28) -> f192_in(x28) :|: TRUE
f192_out(x29) -> f189_out(x29) :|: TRUE
f193_out(x30) -> f189_out(x30) :|: TRUE
f164_out(x31) -> f162_out(x31) :|: TRUE
f162_in(x32) -> f163_in(x32) :|: TRUE
f163_out(x33) -> f162_out(x33) :|: TRUE
f162_in(x34) -> f164_in(x34) :|: TRUE
f241_in(x35) -> f242_in(x35) :|: TRUE
f243_out(x36) -> f241_out(x36) :|: TRUE
f241_in(x37) -> f243_in(x37) :|: TRUE
f242_out(x38) -> f241_out(x38) :|: TRUE
f187_in(x39) -> f189_in(x39) :|: TRUE
f189_out(x40) -> f187_out(x40) :|: TRUE
f5_out(T2) -> f4_out(T2) :|: TRUE
f4_in(x41) -> f5_in(x41) :|: TRUE
f5_in(x42) -> f154_in(x42) :|: TRUE
f154_out(x43) -> f5_out(x43) :|: TRUE
f154_in(x44) -> f158_in(x44) :|: TRUE
f159_out(x45) -> f154_out(x45) :|: TRUE
f158_out(x46) -> f159_in(x46) :|: TRUE
Start term: f4_in(T2)

----------------------------------------

(166) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f183_in(T21, T22) -> f187_in(T21) :|: TRUE
f187_out(x2) -> f188_in(x3) :|: TRUE
f258_in -> f258_out :|: TRUE
f188_in(x4) -> f158_in(x4) :|: TRUE
f237_in -> f237_out :|: TRUE
f192_in(T42) -> f237_in :|: TRUE
f237_out -> f192_out(x8) :|: TRUE
f240_out(T79) -> f261_out(T79) :|: TRUE
f261_in(x9) -> f240_in(x9) :|: TRUE
f158_in(x10) -> f162_in(x10) :|: TRUE
f193_in(T55) -> f240_in(T55) :|: TRUE
f240_out(x11) -> f193_out(x11) :|: TRUE
f164_in(.(x16, .(x17, []))) -> f183_in(x16, x17) :|: TRUE
f243_in(x18) -> f261_in(x18) :|: TRUE
f261_out(x19) -> f243_out(x19) :|: TRUE
f240_in(x22) -> f241_in(x22) :|: TRUE
f241_out(x23) -> f240_out(x23) :|: TRUE
f242_in(T71) -> f258_in :|: TRUE
f258_out -> f242_out(x26) :|: TRUE
f189_in(x27) -> f193_in(x27) :|: TRUE
f189_in(x28) -> f192_in(x28) :|: TRUE
f192_out(x29) -> f189_out(x29) :|: TRUE
f193_out(x30) -> f189_out(x30) :|: TRUE
f162_in(x34) -> f164_in(x34) :|: TRUE
f241_in(x35) -> f242_in(x35) :|: TRUE
f243_out(x36) -> f241_out(x36) :|: TRUE
f241_in(x37) -> f243_in(x37) :|: TRUE
f242_out(x38) -> f241_out(x38) :|: TRUE
f187_in(x39) -> f189_in(x39) :|: TRUE
f189_out(x40) -> f187_out(x40) :|: TRUE


----------------------------------------

(167)
Obligation:
Rules:
f183_in(T21, T22) -> f187_in(T21) :|: TRUE
f187_out(x2) -> f188_in(x3) :|: TRUE
f258_in -> f258_out :|: TRUE
f188_in(x4) -> f158_in(x4) :|: TRUE
f237_in -> f237_out :|: TRUE
f192_in(T42) -> f237_in :|: TRUE
f237_out -> f192_out(x8) :|: TRUE
f240_out(T79) -> f261_out(T79) :|: TRUE
f261_in(x9) -> f240_in(x9) :|: TRUE
f158_in(x10) -> f162_in(x10) :|: TRUE
f193_in(T55) -> f240_in(T55) :|: TRUE
f240_out(x11) -> f193_out(x11) :|: TRUE
f164_in(.(x16, .(x17, []))) -> f183_in(x16, x17) :|: TRUE
f243_in(x18) -> f261_in(x18) :|: TRUE
f261_out(x19) -> f243_out(x19) :|: TRUE
f240_in(x22) -> f241_in(x22) :|: TRUE
f241_out(x23) -> f240_out(x23) :|: TRUE
f242_in(T71) -> f258_in :|: TRUE
f258_out -> f242_out(x26) :|: TRUE
f189_in(x27) -> f193_in(x27) :|: TRUE
f189_in(x28) -> f192_in(x28) :|: TRUE
f192_out(x29) -> f189_out(x29) :|: TRUE
f193_out(x30) -> f189_out(x30) :|: TRUE
f162_in(x34) -> f164_in(x34) :|: TRUE
f241_in(x35) -> f242_in(x35) :|: TRUE
f243_out(x36) -> f241_out(x36) :|: TRUE
f241_in(x37) -> f243_in(x37) :|: TRUE
f242_out(x38) -> f241_out(x38) :|: TRUE
f187_in(x39) -> f189_in(x39) :|: TRUE
f189_out(x40) -> f187_out(x40) :|: TRUE

----------------------------------------

(168) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(169)
Obligation:
Rules:
f187_out(x2:0) -> f241_in(x16:0) :|: TRUE
f241_in(x35:0) -> f241_out(x26:0) :|: TRUE
f241_out(x23:0) -> f241_out(x23:0) :|: TRUE
f187_out(x) -> f187_out(x1) :|: TRUE
f241_out(x2) -> f187_out(x2) :|: TRUE
f241_in(x37:0) -> f241_in(x37:0) :|: TRUE

----------------------------------------

(170) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(171)
Obligation:
Rules:
f187_out(x2:0) -> f241_in(x16:0) :|: TRUE
f241_in(x35:0) -> f241_out(x26:0) :|: TRUE
f241_out(x23:0) -> f241_out(x23:0) :|: TRUE
f187_out(x) -> f187_out(x1) :|: TRUE
f241_out(x2) -> f187_out(x2) :|: TRUE
f241_in(x37:0) -> f241_in(x37:0) :|: TRUE

----------------------------------------

(172) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f187_out(x2:0) -> f241_in(x16:0) :|: TRUE
(2) f241_in(x35:0) -> f241_out(x26:0) :|: TRUE
(3) f241_out(x23:0) -> f241_out(x23:0) :|: TRUE
(4) f187_out(x) -> f187_out(x1) :|: TRUE
(5) f241_out(x2) -> f187_out(x2) :|: TRUE
(6) f241_in(x37:0) -> f241_in(x37:0) :|: TRUE

Arcs:
(1) -> (2), (6)
(2) -> (3), (5)
(3) -> (3), (5)
(4) -> (1), (4)
(5) -> (1), (4)
(6) -> (2), (6)

This digraph is fully evaluated!
----------------------------------------

(173)
Obligation:

Termination digraph:
Nodes:
(1) f187_out(x2:0) -> f241_in(x16:0) :|: TRUE
(2) f187_out(x) -> f187_out(x1) :|: TRUE
(3) f241_out(x2) -> f187_out(x2) :|: TRUE
(4) f241_out(x23:0) -> f241_out(x23:0) :|: TRUE
(5) f241_in(x35:0) -> f241_out(x26:0) :|: TRUE
(6) f241_in(x37:0) -> f241_in(x37:0) :|: TRUE

Arcs:
(1) -> (5), (6)
(2) -> (1), (2)
(3) -> (1), (2)
(4) -> (3), (4)
(5) -> (3), (4)
(6) -> (5), (6)

This digraph is fully evaluated!

----------------------------------------

(174) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f187_out(VARIABLE)
f241_in(VARIABLE)
f241_out(VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(175)
Obligation:
Rules:
f187_out(x2:0) -> f241_in(x16:0) :|: TRUE
f187_out(x) -> f187_out(x1) :|: TRUE
f241_out(x2) -> f187_out(x2) :|: TRUE
f241_out(x23:0) -> f241_out(x23:0) :|: TRUE
f241_in(x35:0) -> f241_out(x26:0) :|: TRUE
f241_in(x37:0) -> f241_in(x37:0) :|: TRUE
