MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/AHMWh.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

ackermann(g,a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 25 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [SOUND, 5 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) QDPQMonotonicMRRProof [EQUIVALENT, 18 ms]
            (20) QDP
            (21) UsableRulesProof [EQUIVALENT, 0 ms]
            (22) QDP
            (23) QReductionProof [EQUIVALENT, 0 ms]
            (24) QDP
            (25) NonTerminationLoopProof [COMPLETE, 0 ms]
            (26) NO
        (27) PiDP
            (28) UsableRulesProof [EQUIVALENT, 0 ms]
            (29) PiDP
            (30) PiDPToQDPProof [SOUND, 0 ms]
            (31) QDP
            (32) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (33) YES
        (34) PiDP
            (35) UsableRulesProof [EQUIVALENT, 0 ms]
            (36) PiDP
            (37) PiDPToQDPProof [SOUND, 0 ms]
            (38) QDP
            (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (40) YES
(41) PrologToPiTRSProof [SOUND, 0 ms]
(42) PiTRS
    (43) DependencyPairsProof [EQUIVALENT, 21 ms]
    (44) PiDP
    (45) DependencyGraphProof [EQUIVALENT, 0 ms]
    (46) AND
        (47) PiDP
            (48) UsableRulesProof [EQUIVALENT, 0 ms]
            (49) PiDP
            (50) PiDPToQDPProof [SOUND, 11 ms]
            (51) QDP
            (52) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (53) YES
        (54) PiDP
            (55) UsableRulesProof [EQUIVALENT, 0 ms]
            (56) PiDP
            (57) PiDPToQDPProof [SOUND, 0 ms]
            (58) QDP
            (59) QDPOrderProof [EQUIVALENT, 27 ms]
            (60) QDP
            (61) DependencyGraphProof [EQUIVALENT, 0 ms]
            (62) QDP
            (63) UsableRulesProof [EQUIVALENT, 0 ms]
            (64) QDP
            (65) QReductionProof [EQUIVALENT, 0 ms]
            (66) QDP
            (67) NonTerminationLoopProof [COMPLETE, 0 ms]
            (68) NO
        (69) PiDP
            (70) UsableRulesProof [EQUIVALENT, 0 ms]
            (71) PiDP
            (72) PiDPToQDPProof [SOUND, 0 ms]
            (73) QDP
            (74) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (75) YES
        (76) PiDP
            (77) UsableRulesProof [EQUIVALENT, 0 ms]
            (78) PiDP
            (79) PiDPToQDPProof [SOUND, 0 ms]
            (80) QDP
            (81) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (82) YES
(83) PrologToDTProblemTransformerProof [SOUND, 56 ms]
(84) TRIPLES
    (85) TriplesToPiDPProof [SOUND, 46 ms]
    (86) PiDP
    (87) DependencyGraphProof [EQUIVALENT, 0 ms]
    (88) AND
        (89) PiDP
            (90) UsableRulesProof [EQUIVALENT, 0 ms]
            (91) PiDP
            (92) PiDPToQDPProof [SOUND, 0 ms]
            (93) QDP
            (94) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (95) YES
        (96) PiDP
            (97) UsableRulesProof [EQUIVALENT, 0 ms]
            (98) PiDP
            (99) PiDPToQDPProof [SOUND, 0 ms]
            (100) QDP
            (101) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (102) YES
        (103) PiDP
            (104) UsableRulesProof [EQUIVALENT, 0 ms]
            (105) PiDP
            (106) PiDPToQDPProof [SOUND, 0 ms]
            (107) QDP
            (108) NonTerminationLoopProof [COMPLETE, 0 ms]
            (109) NO
        (110) PiDP
            (111) UsableRulesProof [EQUIVALENT, 0 ms]
            (112) PiDP
            (113) PiDPToQDPProof [SOUND, 0 ms]
            (114) QDP
            (115) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (116) YES
(117) PrologToTRSTransformerProof [SOUND, 39 ms]
(118) QTRS
    (119) DependencyPairsProof [EQUIVALENT, 5 ms]
    (120) QDP
    (121) DependencyGraphProof [EQUIVALENT, 0 ms]
    (122) AND
        (123) QDP
            (124) QDPOrderProof [EQUIVALENT, 18 ms]
            (125) QDP
            (126) DependencyGraphProof [EQUIVALENT, 0 ms]
            (127) QDP
            (128) QDPOrderProof [EQUIVALENT, 13 ms]
            (129) QDP
            (130) DependencyGraphProof [EQUIVALENT, 0 ms]
            (131) QDP
            (132) UsableRulesProof [EQUIVALENT, 0 ms]
            (133) QDP
            (134) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (135) YES
        (136) QDP
            (137) QDPOrderProof [EQUIVALENT, 15 ms]
            (138) QDP
            (139) DependencyGraphProof [EQUIVALENT, 0 ms]
            (140) QDP
            (141) UsableRulesProof [EQUIVALENT, 0 ms]
            (142) QDP
            (143) NonTerminationLoopProof [COMPLETE, 0 ms]
            (144) NO
        (145) QDP
            (146) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (147) YES
        (148) QDP
            (149) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (150) YES
(151) PrologToIRSwTTransformerProof [SOUND, 89 ms]
(152) AND
    (153) IRSwT
        (154) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (155) IRSwT
        (156) IntTRSCompressionProof [EQUIVALENT, 10 ms]
        (157) IRSwT
        (158) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (159) IRSwT
        (160) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
        (161) IRSwT
        (162) TempFilterProof [SOUND, 1 ms]
        (163) IRSwT
        (164) IRSwTToQDPProof [SOUND, 0 ms]
        (165) QDP
        (166) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (167) YES
    (168) IRSwT
        (169) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (170) IRSwT
        (171) IntTRSCompressionProof [EQUIVALENT, 1 ms]
        (172) IRSwT
        (173) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (174) IRSwT
        (175) IRSwTTerminationDigraphProof [EQUIVALENT, 1 ms]
        (176) IRSwT
        (177) FilterProof [EQUIVALENT, 0 ms]
        (178) IntTRS
        (179) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
        (180) NO
    (181) IRSwT
        (182) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (183) IRSwT
        (184) IntTRSCompressionProof [EQUIVALENT, 20 ms]
        (185) IRSwT
        (186) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (187) IRSwT
    (188) IRSwT


----------------------------------------

(0)
Obligation:
Clauses:

ackermann(0, N, s(N)).
ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val).
ackermann(s(M), s(N), Val) :- ','(ackermann(s(M), N, Val1), ackermann(M, Val1, Val)).


Query: ackermann(g,a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

ackermann_in_3: (b,f,b) (b,b,b) (b,b,f) (b,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), 0, Val) -> U1_GAG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GAG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), 0, Val) -> U1_GGG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   ACKERMANN_IN_GGA(s(M), 0, Val) -> U1_GGA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGA(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGG(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   ACKERMANN_IN_GAA(s(M), 0, Val) -> U1_GAA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GAA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAA(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAG(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U1_GAG(x1, x2, x3)  =  U1_GAG(x1, x2, x3)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3)  =  U1_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x2, x3, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3)  =  U1_GGA(x1, x3)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x1, x2, x3, x4)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U1_GAA(x1, x2, x3)  =  U1_GAA(x1, x3)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x1, x4)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), 0, Val) -> U1_GAG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GAG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), 0, Val) -> U1_GGG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   ACKERMANN_IN_GGA(s(M), 0, Val) -> U1_GGA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGA(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGG(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   ACKERMANN_IN_GAA(s(M), 0, Val) -> U1_GAA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GAA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAA(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAG(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U1_GAG(x1, x2, x3)  =  U1_GAG(x1, x2, x3)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3)  =  U1_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x2, x3, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3)  =  U1_GGA(x1, x3)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x2, x4)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x1, x2, x3, x4)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U1_GAA(x1, x2, x3)  =  U1_GAA(x1, x3)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x1, x4)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 12 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0) -> ACKERMANN_IN_GGA(M, s(0))
   ACKERMANN_IN_GGA(s(M), s(N)) -> U2_GGA(M, N, ackermann_in_gga(s(M), N))
   U2_GGA(M, N, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1)
   ACKERMANN_IN_GGA(s(M), s(N)) -> ACKERMANN_IN_GGA(s(M), N)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0) -> U1_gga(M, ackermann_in_gga(M, s(0)))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, N, ackermann_in_gga(s(M), N))
   U1_gga(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, ackermann_in_gga(M, Val1))
   ackermann_in_gga(0, N) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The set Q consists of the following terms:

   ackermann_in_gga(x0, x1)
   U1_gga(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ACKERMANN_IN_GGA(s(M), s(N)) -> ACKERMANN_IN_GGA(s(M), N)
The graph contains the following edges 1 >= 1, 2 > 2


*ACKERMANN_IN_GGA(s(M), s(N)) -> U2_GGA(M, N, ackermann_in_gga(s(M), N))
The graph contains the following edges 1 > 1, 2 > 2


*U2_GGA(M, N, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1)
The graph contains the following edges 1 >= 1, 3 > 1, 3 > 2


*ACKERMANN_IN_GGA(s(M), 0) -> ACKERMANN_IN_GGA(M, s(0))
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> U2_GAA(M, ackermann_in_gaa(s(M)))
   U2_GAA(M, ackermann_out_gaa(s(M))) -> ACKERMANN_IN_GAA(M)
   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(M, ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M))
   U2_gaa(M, ackermann_out_gaa(s(M))) -> U3_gaa(M, ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, N, ackermann_in_gga(s(M), N))
   U3_gaa(M, ackermann_out_gaa(M)) -> ackermann_out_gaa(s(M))
   U2_gga(M, N, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa(0)
   ackermann_in_gga(s(M), 0) -> U1_gga(M, ackermann_in_gga(M, s(0)))
   U3_gga(M, N, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0, x1)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)
   U1_gga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   ACKERMANN_IN_GAA(s(M)) -> U2_GAA(M, ackermann_in_gaa(s(M)))
   U2_GAA(M, ackermann_out_gaa(s(M))) -> ACKERMANN_IN_GAA(M)


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(ACKERMANN_IN_GAA(x_1)) = 1 + x_1
   POL(U1_gaa(x_1, x_2)) = 2
   POL(U1_gga(x_1, x_2)) = 2
   POL(U2_GAA(x_1, x_2)) = 2 + x_1
   POL(U2_gaa(x_1, x_2)) = 2
   POL(U2_gga(x_1, x_2, x_3)) = 2 + 2*x_1
   POL(U3_gaa(x_1, x_2)) = 0
   POL(U3_gga(x_1, x_2, x_3)) = 2
   POL(ackermann_in_gaa(x_1)) = 2
   POL(ackermann_in_gga(x_1, x_2)) = 1 + x_1
   POL(ackermann_out_gaa(x_1)) = 0
   POL(ackermann_out_gga(x_1, x_2, x_3)) = 0
   POL(s(x_1)) = 2 + 2*x_1


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(M, ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M))
   U2_gaa(M, ackermann_out_gaa(s(M))) -> U3_gaa(M, ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, N, ackermann_in_gga(s(M), N))
   U3_gaa(M, ackermann_out_gaa(M)) -> ackermann_out_gaa(s(M))
   U2_gga(M, N, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa(0)
   ackermann_in_gga(s(M), 0) -> U1_gga(M, ackermann_in_gga(M, s(0)))
   U3_gga(M, N, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0, x1)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)
   U1_gga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

R is empty.
The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0, x1)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)
   U1_gga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(23) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   ackermann_in_gaa(x0)
   U1_gaa(x0, x1)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)
   U1_gga(x0, x1)


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(25) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = ACKERMANN_IN_GAA(s(M)) evaluates to  t =ACKERMANN_IN_GAA(s(M))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from ACKERMANN_IN_GAA(s(M)) to ACKERMANN_IN_GAA(s(M)).




----------------------------------------

(26)
NO

----------------------------------------

(27)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(28) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(29)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(30) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0) -> U1_gga(M, ackermann_in_gga(M, s(0)))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, N, ackermann_in_gga(s(M), N))
   U1_gga(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, ackermann_in_gga(M, Val1))
   ackermann_in_gga(0, N) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The set Q consists of the following terms:

   ackermann_in_gga(x0, x1)
   U1_gga(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(32) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N))
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
The graph contains the following edges 1 >= 1, 4 > 1, 4 > 2, 3 >= 3


*ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
The graph contains the following edges 1 > 1, 3 >= 3


----------------------------------------

(33)
YES

----------------------------------------

(34)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag(x1, x3)

U1_gag(x1, x2, x3)  =  U1_gag(x1, x2, x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg(x1, x2, x3)

U1_ggg(x1, x2, x3)  =  U1_ggg(x1, x2, x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x2, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x1, x2, x3, x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x1, x3, x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(36)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x1, x2, x3)

U1_gga(x1, x2, x3)  =  U1_gga(x1, x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x2, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x1, x2, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa(x1)

U1_gaa(x1, x2, x3)  =  U1_gaa(x1, x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x1, x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(37) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), Val) -> U2_GAG(M, Val, ackermann_in_gaa(s(M)))
   U2_GAG(M, Val, ackermann_out_gaa(s(M))) -> ACKERMANN_IN_GAG(M, Val)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(M, ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M))
   U2_gaa(M, ackermann_out_gaa(s(M))) -> U3_gaa(M, ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, N, ackermann_in_gga(s(M), N))
   U3_gaa(M, ackermann_out_gaa(M)) -> ackermann_out_gaa(s(M))
   U2_gga(M, N, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa(0)
   ackermann_in_gga(s(M), 0) -> U1_gga(M, ackermann_in_gga(M, s(0)))
   U3_gga(M, N, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0, x1)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0, x1)
   U2_gga(x0, x1, x2)
   U3_gga(x0, x1, x2)
   U1_gga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U2_GAG(M, Val, ackermann_out_gaa(s(M))) -> ACKERMANN_IN_GAG(M, Val)
The graph contains the following edges 1 >= 1, 3 > 1, 2 >= 2


*ACKERMANN_IN_GAG(s(M), Val) -> U2_GAG(M, Val, ackermann_in_gaa(s(M)))
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(40)
YES

----------------------------------------

(41) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

ackermann_in_3: (b,f,b) (b,b,b) (b,b,f) (b,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(42)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)



----------------------------------------

(43) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), 0, Val) -> U1_GAG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GAG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), 0, Val) -> U1_GGG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   ACKERMANN_IN_GGA(s(M), 0, Val) -> U1_GGA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGA(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGG(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   ACKERMANN_IN_GAA(s(M), 0, Val) -> U1_GAA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GAA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAA(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAG(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U1_GAG(x1, x2, x3)  =  U1_GAG(x3)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3)  =  U1_GGG(x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x3, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3)  =  U1_GGA(x3)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x4)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x4)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U1_GAA(x1, x2, x3)  =  U1_GAA(x3)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x4)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(44)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), 0, Val) -> U1_GAG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GAG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), 0, Val) -> U1_GGG(M, Val, ackermann_in_ggg(M, s(0), Val))
   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   ACKERMANN_IN_GGA(s(M), 0, Val) -> U1_GGA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGA(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_GGG(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAG(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   ACKERMANN_IN_GAA(s(M), 0, Val) -> U1_GAA(M, Val, ackermann_in_gga(M, s(0), Val))
   ACKERMANN_IN_GAA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAA(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_GAG(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U1_GAG(x1, x2, x3)  =  U1_GAG(x3)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U1_GGG(x1, x2, x3)  =  U1_GGG(x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x3, x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3)  =  U1_GGA(x3)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x4)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x4)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x4)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U1_GAA(x1, x2, x3)  =  U1_GAA(x3)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x4)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(45) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 12 less nodes.
----------------------------------------

(46)
Complex Obligation (AND)

----------------------------------------

(47)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(48) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(49)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0, Val) -> ACKERMANN_IN_GGA(M, s(0), Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> U2_GGA(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGA(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGA(M, Val1, Val)
   ACKERMANN_IN_GGA(s(M), s(N), Val) -> ACKERMANN_IN_GGA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

ACKERMANN_IN_GGA(x1, x2, x3)  =  ACKERMANN_IN_GGA(x1, x2)

U2_GGA(x1, x2, x3, x4)  =  U2_GGA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(50) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(51)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGA(s(M), 0) -> ACKERMANN_IN_GGA(M, s(0))
   ACKERMANN_IN_GGA(s(M), s(N)) -> U2_GGA(M, ackermann_in_gga(s(M), N))
   U2_GGA(M, ackermann_out_gga(Val1)) -> ACKERMANN_IN_GGA(M, Val1)
   ACKERMANN_IN_GGA(s(M), s(N)) -> ACKERMANN_IN_GGA(s(M), N)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gga(x0, x1)
   U1_gga(x0)
   U2_gga(x0, x1)
   U3_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(52) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ACKERMANN_IN_GGA(s(M), s(N)) -> ACKERMANN_IN_GGA(s(M), N)
The graph contains the following edges 1 >= 1, 2 > 2


*ACKERMANN_IN_GGA(s(M), s(N)) -> U2_GGA(M, ackermann_in_gga(s(M), N))
The graph contains the following edges 1 > 1


*U2_GGA(M, ackermann_out_gga(Val1)) -> ACKERMANN_IN_GGA(M, Val1)
The graph contains the following edges 1 >= 1, 2 > 2


*ACKERMANN_IN_GGA(s(M), 0) -> ACKERMANN_IN_GGA(M, s(0))
The graph contains the following edges 1 > 1


----------------------------------------

(53)
YES

----------------------------------------

(54)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(55) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(56)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M), s(N), Val) -> U2_GAA(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAA(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAA(M, Val1, Val)
   ACKERMANN_IN_GAA(s(M), s(N), Val) -> ACKERMANN_IN_GAA(s(M), N, Val1)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

ACKERMANN_IN_GAA(x1, x2, x3)  =  ACKERMANN_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4)  =  U2_GAA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(57) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> U2_GAA(M, ackermann_in_gaa(s(M)))
   U2_GAA(M, ackermann_out_gaa) -> ACKERMANN_IN_GAA(M)
   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(ackermann_out_gga(Val)) -> ackermann_out_gaa
   U2_gaa(M, ackermann_out_gaa) -> U3_gaa(ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U3_gaa(ackermann_out_gaa) -> ackermann_out_gaa
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa
   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(59) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U2_GAA(M, ackermann_out_gaa) -> ACKERMANN_IN_GAA(M)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U2_GAA_2(x_1, x_2) ) = 2x_1 + x_2 + 2
POL( ackermann_in_gaa_1(x_1) ) = x_1 + 2
POL( s_1(x_1) ) = 2x_1 + 2
POL( U1_gaa_1(x_1) ) = 2
POL( ackermann_in_gga_2(x_1, x_2) ) = 2x_2 + 2
POL( 0 ) = 2
POL( U2_gaa_2(x_1, x_2) ) = 2x_1 + 2
POL( ackermann_out_gaa ) = 1
POL( U3_gaa_1(x_1) ) = x_1
POL( ackermann_out_gga_1(x_1) ) = max{0, 2x_1 - 2}
POL( U2_gga_2(x_1, x_2) ) = max{0, x_1 - 2}
POL( U1_gga_1(x_1) ) = 1
POL( U3_gga_1(x_1) ) = max{0, -2}
POL( ACKERMANN_IN_GAA_1(x_1) ) = 2x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   ackermann_in_gaa(s(M)) -> U1_gaa(ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U2_gaa(M, ackermann_out_gaa) -> U3_gaa(ackermann_in_gaa(M))
   ackermann_in_gaa(0) -> ackermann_out_gaa
   U3_gaa(ackermann_out_gaa) -> ackermann_out_gaa
   U1_gaa(ackermann_out_gga(Val)) -> ackermann_out_gaa


----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> U2_GAA(M, ackermann_in_gaa(s(M)))
   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(ackermann_out_gga(Val)) -> ackermann_out_gaa
   U2_gaa(M, ackermann_out_gaa) -> U3_gaa(ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U3_gaa(ackermann_out_gaa) -> ackermann_out_gaa
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa
   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(61) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(ackermann_out_gga(Val)) -> ackermann_out_gaa
   U2_gaa(M, ackermann_out_gaa) -> U3_gaa(ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U3_gaa(ackermann_out_gaa) -> ackermann_out_gaa
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa
   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(63) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(64)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

R is empty.
The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(65) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)


----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAA(s(M)) -> ACKERMANN_IN_GAA(s(M))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(67) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = ACKERMANN_IN_GAA(s(M)) evaluates to  t =ACKERMANN_IN_GAA(s(M))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from ACKERMANN_IN_GAA(s(M)) to ACKERMANN_IN_GAA(s(M)).




----------------------------------------

(68)
NO

----------------------------------------

(69)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(70) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(71)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_GGG(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

ACKERMANN_IN_GGG(x1, x2, x3)  =  ACKERMANN_IN_GGG(x1, x2, x3)

U2_GGG(x1, x2, x3, x4)  =  U2_GGG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(72) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(73)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
   ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, Val, ackermann_in_gga(s(M), N))
   U2_GGG(M, Val, ackermann_out_gga(Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gga(x0, x1)
   U1_gga(x0)
   U2_gga(x0, x1)
   U3_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(74) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ACKERMANN_IN_GGG(s(M), s(N), Val) -> U2_GGG(M, Val, ackermann_in_gga(s(M), N))
The graph contains the following edges 1 > 1, 3 >= 2


*U2_GGG(M, Val, ackermann_out_gga(Val1)) -> ACKERMANN_IN_GGG(M, Val1, Val)
The graph contains the following edges 1 >= 1, 3 > 2, 2 >= 3


*ACKERMANN_IN_GGG(s(M), 0, Val) -> ACKERMANN_IN_GGG(M, s(0), Val)
The graph contains the following edges 1 > 1, 3 >= 3


----------------------------------------

(75)
YES

----------------------------------------

(76)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gag(0, N, s(N)) -> ackermann_out_gag(0, N, s(N))
   ackermann_in_gag(s(M), 0, Val) -> U1_gag(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(0, N, s(N)) -> ackermann_out_ggg(0, N, s(N))
   ackermann_in_ggg(s(M), 0, Val) -> U1_ggg(M, Val, ackermann_in_ggg(M, s(0), Val))
   ackermann_in_ggg(s(M), s(N), Val) -> U2_ggg(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)
   U2_ggg(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_ggg(M, N, Val, ackermann_in_ggg(M, Val1, Val))
   U3_ggg(M, N, Val, ackermann_out_ggg(M, Val1, Val)) -> ackermann_out_ggg(s(M), s(N), Val)
   U1_ggg(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_ggg(s(M), 0, Val)
   U1_gag(M, Val, ackermann_out_ggg(M, s(0), Val)) -> ackermann_out_gag(s(M), 0, Val)
   ackermann_in_gag(s(M), s(N), Val) -> U2_gag(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gag(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gag(M, N, Val, ackermann_in_gag(M, Val1, Val))
   U3_gag(M, N, Val, ackermann_out_gag(M, Val1, Val)) -> ackermann_out_gag(s(M), s(N), Val)

The argument filtering Pi contains the following mapping:
ackermann_in_gag(x1, x2, x3)  =  ackermann_in_gag(x1, x3)

0  =  0

s(x1)  =  s(x1)

ackermann_out_gag(x1, x2, x3)  =  ackermann_out_gag

U1_gag(x1, x2, x3)  =  U1_gag(x3)

ackermann_in_ggg(x1, x2, x3)  =  ackermann_in_ggg(x1, x2, x3)

ackermann_out_ggg(x1, x2, x3)  =  ackermann_out_ggg

U1_ggg(x1, x2, x3)  =  U1_ggg(x3)

U2_ggg(x1, x2, x3, x4)  =  U2_ggg(x1, x3, x4)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

U3_ggg(x1, x2, x3, x4)  =  U3_ggg(x4)

U2_gag(x1, x2, x3, x4)  =  U2_gag(x1, x3, x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

U3_gag(x1, x2, x3, x4)  =  U3_gag(x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(77) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(78)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), s(N), Val) -> U2_GAG(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U2_GAG(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> ACKERMANN_IN_GAG(M, Val1, Val)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M), 0, Val) -> U1_gaa(M, Val, ackermann_in_gga(M, s(0), Val))
   ackermann_in_gaa(s(M), s(N), Val) -> U2_gaa(M, N, Val, ackermann_in_gaa(s(M), N, Val1))
   U1_gaa(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gaa(s(M), 0, Val)
   U2_gaa(M, N, Val, ackermann_out_gaa(s(M), N, Val1)) -> U3_gaa(M, N, Val, ackermann_in_gaa(M, Val1, Val))
   ackermann_in_gga(0, N, s(N)) -> ackermann_out_gga(0, N, s(N))
   ackermann_in_gga(s(M), s(N), Val) -> U2_gga(M, N, Val, ackermann_in_gga(s(M), N, Val1))
   U3_gaa(M, N, Val, ackermann_out_gaa(M, Val1, Val)) -> ackermann_out_gaa(s(M), s(N), Val)
   U2_gga(M, N, Val, ackermann_out_gga(s(M), N, Val1)) -> U3_gga(M, N, Val, ackermann_in_gga(M, Val1, Val))
   ackermann_in_gaa(0, N, s(N)) -> ackermann_out_gaa(0, N, s(N))
   ackermann_in_gga(s(M), 0, Val) -> U1_gga(M, Val, ackermann_in_gga(M, s(0), Val))
   U3_gga(M, N, Val, ackermann_out_gga(M, Val1, Val)) -> ackermann_out_gga(s(M), s(N), Val)
   U1_gga(M, Val, ackermann_out_gga(M, s(0), Val)) -> ackermann_out_gga(s(M), 0, Val)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

ackermann_in_gga(x1, x2, x3)  =  ackermann_in_gga(x1, x2)

ackermann_out_gga(x1, x2, x3)  =  ackermann_out_gga(x3)

U1_gga(x1, x2, x3)  =  U1_gga(x3)

U2_gga(x1, x2, x3, x4)  =  U2_gga(x1, x4)

U3_gga(x1, x2, x3, x4)  =  U3_gga(x4)

ackermann_in_gaa(x1, x2, x3)  =  ackermann_in_gaa(x1)

ackermann_out_gaa(x1, x2, x3)  =  ackermann_out_gaa

U1_gaa(x1, x2, x3)  =  U1_gaa(x3)

U2_gaa(x1, x2, x3, x4)  =  U2_gaa(x1, x4)

U3_gaa(x1, x2, x3, x4)  =  U3_gaa(x4)

ACKERMANN_IN_GAG(x1, x2, x3)  =  ACKERMANN_IN_GAG(x1, x3)

U2_GAG(x1, x2, x3, x4)  =  U2_GAG(x1, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(79) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(80)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANN_IN_GAG(s(M), Val) -> U2_GAG(M, Val, ackermann_in_gaa(s(M)))
   U2_GAG(M, Val, ackermann_out_gaa) -> ACKERMANN_IN_GAG(M, Val)

The TRS R consists of the following rules:

   ackermann_in_gaa(s(M)) -> U1_gaa(ackermann_in_gga(M, s(0)))
   ackermann_in_gaa(s(M)) -> U2_gaa(M, ackermann_in_gaa(s(M)))
   U1_gaa(ackermann_out_gga(Val)) -> ackermann_out_gaa
   U2_gaa(M, ackermann_out_gaa) -> U3_gaa(ackermann_in_gaa(M))
   ackermann_in_gga(0, N) -> ackermann_out_gga(s(N))
   ackermann_in_gga(s(M), s(N)) -> U2_gga(M, ackermann_in_gga(s(M), N))
   U3_gaa(ackermann_out_gaa) -> ackermann_out_gaa
   U2_gga(M, ackermann_out_gga(Val1)) -> U3_gga(ackermann_in_gga(M, Val1))
   ackermann_in_gaa(0) -> ackermann_out_gaa
   ackermann_in_gga(s(M), 0) -> U1_gga(ackermann_in_gga(M, s(0)))
   U3_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)
   U1_gga(ackermann_out_gga(Val)) -> ackermann_out_gga(Val)

The set Q consists of the following terms:

   ackermann_in_gaa(x0)
   U1_gaa(x0)
   U2_gaa(x0, x1)
   ackermann_in_gga(x0, x1)
   U3_gaa(x0)
   U2_gga(x0, x1)
   U3_gga(x0)
   U1_gga(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(81) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U2_GAG(M, Val, ackermann_out_gaa) -> ACKERMANN_IN_GAG(M, Val)
The graph contains the following edges 1 >= 1, 2 >= 2


*ACKERMANN_IN_GAG(s(M), Val) -> U2_GAG(M, Val, ackermann_in_gaa(s(M)))
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(82)
YES

----------------------------------------

(83) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 158,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ackermann (0) N (s N))",
                null
            ],
            [
                "(ackermann (s M) (0) Val)",
                "(ackermann M (s (0)) Val)"
            ],
            [
                "(ackermann (s M) (s N) Val)",
                "(',' (ackermann (s M) N Val1) (ackermann M Val1 Val))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "198": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ackermann T1 T2 T3)",
                        "(ackermann (0) X2 (s X2))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": ["X2"],
                    "exprvars": []
                }
            },
            "233": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(ackermann T8 (s (0)) T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "234": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (s T8) T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T112 (s (0)) X252)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T112) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T112"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X252"
                    ],
                    "exprvars": []
                }
            },
            "478": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T112 T113 T106)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T112) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T112",
                        "T113"
                    ],
                    "free": [
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "241": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "242": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (ackermann (s T120) T122 X271) (ackermann T120 X271 X272)) (ackermann T120 X272 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T120) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T120"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X272",
                        "X271"
                    ],
                    "exprvars": []
                }
            },
            "244": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "486": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "487": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T120) T122 X271)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T120) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T120"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X271"
                    ],
                    "exprvars": []
                }
            },
            "488": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann T120 T123 X272) (ackermann T120 X272 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T120) T124 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T120"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X272"
                    ],
                    "exprvars": []
                }
            },
            "247": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (s T8) T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "489": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T120 T123 X272)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T120) T124 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T120"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X272"
                    ],
                    "exprvars": []
                }
            },
            "249": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(ackermann T8 (s (0)) T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "405": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T62) T65 X147) (ackermann T62 X147 T64))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T62",
                        "T64"
                    ],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "406": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "407": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T62) T65 X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T62"],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "408": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T62 T66 T64)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T62",
                        "T64"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "409": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 6,
                        "term": "(ackermann (s T62) T65 X147)"
                    },
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann (s T62) T65 X147)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann (s T62) T65 X147)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T62"],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "490": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T120 T127 T106)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T120) T128 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T120"
                    ],
                    "free": [
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "250": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (s T8) T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "251": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T19) (0) X36) (ackermann T19 X36 T20))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20"
                    ],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "252": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "373": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "374": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "375": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "376": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ackermann T30 T31 X83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            },
            "377": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ackermann T30 T31 X83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            },
            "410": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann (s T62) T65 X147)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann (s T62) T65 X147)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T62"],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "378": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T43 (s (0)) X109)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T43"],
                    "free": ["X109"],
                    "exprvars": []
                }
            },
            "411": {
                "goal": [{
                    "clause": 1,
                    "scope": 6,
                    "term": "(ackermann (s T62) T65 X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T62"],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "379": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "412": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(ackermann (s T62) T65 X147)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T62"],
                    "free": ["X147"],
                    "exprvars": []
                }
            },
            "415": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T71 (s (0)) X167)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T71"],
                    "free": ["X167"],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "380": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T48) T49 X124) (ackermann T48 X124 X125))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T48",
                        "T49"
                    ],
                    "free": [
                        "X125",
                        "X124"
                    ],
                    "exprvars": []
                }
            },
            "381": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "261": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T19) (0) X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "382": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T48) T49 X124)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T48",
                        "T49"
                    ],
                    "free": ["X124"],
                    "exprvars": []
                }
            },
            "262": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T19 T21 T20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T19",
                        "T20",
                        "T21"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "383": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T48 T50 X125)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T48",
                        "T50"
                    ],
                    "free": ["X125"],
                    "exprvars": []
                }
            },
            "384": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "385": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ackermann (s T8) T2 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "420": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T76) T78 X182) (ackermann T76 X182 X183))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": [
                        "X183",
                        "X182"
                    ],
                    "exprvars": []
                }
            },
            "421": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "425": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T76) T78 X182)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X182"],
                    "exprvars": []
                }
            },
            "426": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T76 T79 X183)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "429": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(ackermann T76 T79 X183)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann T76 T79 X183)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann T76 T79 X183)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "431": {
                "goal": [{
                    "clause": 0,
                    "scope": 7,
                    "term": "(ackermann T76 T79 X183)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "158": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "279": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(ackermann (s T19) (0) X36)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T19) (0) X36)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T19) (0) X36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "433": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann T76 T79 X183)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann T76 T79 X183)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "434": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "435": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "436": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "437": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(ackermann T76 T79 X183)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "438": {
                "goal": [{
                    "clause": 2,
                    "scope": 7,
                    "term": "(ackermann T76 T79 X183)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T76"],
                    "free": ["X183"],
                    "exprvars": []
                }
            },
            "439": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T91 (s (0)) X209)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T91"],
                    "free": ["X209"],
                    "exprvars": []
                }
            },
            "161": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "440": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann (0) T2 (s T5))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (0) T2 (s T5))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "441": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T96) T98 X224) (ackermann T96 X224 X225))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T96"],
                    "free": [
                        "X225",
                        "X224"
                    ],
                    "exprvars": []
                }
            },
            "200": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann (0) T2 (s T5))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (0) T2 (s T5))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "202": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ackermann (0) T2 (s T5))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": [],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T26 (s (0)) X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X60"],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(ackermann T26 (s (0)) X60)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T26 (s (0)) X60)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T26 (s (0)) X60)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X60"],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [{
                    "clause": 0,
                    "scope": 4,
                    "term": "(ackermann T26 (s (0)) X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X60"],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T26 (s (0)) X60)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T26 (s (0)) X60)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X60"],
                    "exprvars": []
                }
            },
            "448": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T104) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T106"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X236"
                    ],
                    "exprvars": []
                }
            },
            "328": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "208": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "329": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "293": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T19) (0) X36)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T19) (0) X36)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "295": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(ackermann (s T19) (0) X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "296": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(ackermann (s T19) (0) X36)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X36"],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "331": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "332": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(ackermann T26 (s (0)) X60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T26"],
                    "free": ["X60"],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T104) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T106"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X236"
                    ],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T104) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T106"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X236"
                    ],
                    "exprvars": []
                }
            },
            "218": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (s T8) T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "339": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T30) (0) X82) (ackermann T30 X82 X83))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X83",
                        "X82"
                    ],
                    "exprvars": []
                }
            },
            "460": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T104) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T106"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X236"
                    ],
                    "exprvars": []
                }
            },
            "340": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "461": {
                "goal": [{
                    "clause": 2,
                    "scope": 8,
                    "term": "(',' (ackermann (s T104) T107 X236) (ackermann T104 X236 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T104) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T104",
                        "T106"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X236"
                    ],
                    "exprvars": []
                }
            },
            "341": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T30) (0) X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "342": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T30 T31 X83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann T112 (s (0)) X252) (ackermann T112 X252 T106))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(ackermann (s T112) T2 T106)",
                        "(ackermann (s X10) (0) X11)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T106",
                        "T112"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X252"
                    ],
                    "exprvars": []
                }
            },
            "225": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(ackermann T1 T2 T3)",
                            "(ackermann (0) X2 (s X2))"
                        ],
                        [
                            "(ackermann T1 T2 T3)",
                            "(ackermann (s X10) (0) X11)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [
                        "X2",
                        "X10",
                        "X11"
                    ],
                    "exprvars": []
                }
            },
            "346": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ackermann T30 T31 X83)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T30 T31 X83)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T30 T31 X83)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            },
            "347": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(ackermann T30 T31 X83)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            },
            "468": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "227": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T8 (s (0)) T9)"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann (s T8) T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "348": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T30 T31 X83)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T30 T31 X83)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T30",
                        "T31"
                    ],
                    "free": ["X83"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 158,
                "to": 161,
                "label": "CASE"
            },
            {
                "from": 161,
                "to": 166,
                "label": "EVAL with clause\nackermann(0, X2, s(X2)).\nand substitutionT1 -> 0,\nT2 -> T5,\nX2 -> T5,\nT3 -> s(T5)"
            },
            {
                "from": 161,
                "to": 198,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 166,
                "to": 200,
                "label": "SUCCESS"
            },
            {
                "from": 198,
                "to": 218,
                "label": "EVAL with clause\nackermann(s(X10), 0, X11) :- ackermann(X10, s(0), X11).\nand substitutionX10 -> T8,\nT1 -> s(T8),\nT2 -> 0,\nT3 -> T9,\nX11 -> T9"
            },
            {
                "from": 198,
                "to": 225,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 200,
                "to": 202,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 202,
                "to": 208,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), s(N), Val) :- ','(ackermann(s(M), N, Val1), ackermann(M, Val1, Val))because of non-unification"
            },
            {
                "from": 218,
                "to": 227,
                "label": "CASE"
            },
            {
                "from": 225,
                "to": 448,
                "label": "EVAL with clause\nackermann(s(X233), s(X234), X235) :- ','(ackermann(s(X233), X234, X236), ackermann(X233, X236, X235)).\nand substitutionX233 -> T104,\nT1 -> s(T104),\nX234 -> T107,\nT2 -> s(T107),\nT3 -> T106,\nX235 -> T106,\nT105 -> T107"
            },
            {
                "from": 225,
                "to": 451,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 227,
                "to": 233,
                "label": "PARALLEL"
            },
            {
                "from": 227,
                "to": 234,
                "label": "PARALLEL"
            },
            {
                "from": 233,
                "to": 241,
                "label": "EVAL with clause\nackermann(0, X16, s(X16)).\nand substitutionT8 -> 0,\nX16 -> s(0),\nT9 -> s(s(0))"
            },
            {
                "from": 233,
                "to": 242,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 234,
                "to": 247,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 241,
                "to": 244,
                "label": "SUCCESS"
            },
            {
                "from": 247,
                "to": 249,
                "label": "PARALLEL"
            },
            {
                "from": 247,
                "to": 250,
                "label": "PARALLEL"
            },
            {
                "from": 249,
                "to": 251,
                "label": "EVAL with clause\nackermann(s(X33), s(X34), X35) :- ','(ackermann(s(X33), X34, X36), ackermann(X33, X36, X35)).\nand substitutionX33 -> T19,\nT8 -> s(T19),\nX34 -> 0,\nT9 -> T20,\nX35 -> T20"
            },
            {
                "from": 249,
                "to": 252,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 250,
                "to": 385,
                "label": "FAILURE"
            },
            {
                "from": 251,
                "to": 261,
                "label": "SPLIT 1"
            },
            {
                "from": 251,
                "to": 262,
                "label": "SPLIT 2\nnew knowledge:\nT19 is ground\nT21 is ground\nreplacements:X36 -> T21"
            },
            {
                "from": 261,
                "to": 279,
                "label": "CASE"
            },
            {
                "from": 262,
                "to": 158,
                "label": "INSTANCE with matching:\nT1 -> T19\nT2 -> T21\nT3 -> T20"
            },
            {
                "from": 279,
                "to": 293,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 293,
                "to": 295,
                "label": "PARALLEL"
            },
            {
                "from": 293,
                "to": 296,
                "label": "PARALLEL"
            },
            {
                "from": 295,
                "to": 323,
                "label": "ONLY EVAL with clause\nackermann(s(X58), 0, X59) :- ackermann(X58, s(0), X59).\nand substitutionT19 -> T26,\nX58 -> T26,\nX36 -> X60,\nX59 -> X60"
            },
            {
                "from": 296,
                "to": 384,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), s(N), Val) :- ','(ackermann(s(M), N, Val1), ackermann(M, Val1, Val))because of non-unification"
            },
            {
                "from": 323,
                "to": 324,
                "label": "CASE"
            },
            {
                "from": 324,
                "to": 326,
                "label": "PARALLEL"
            },
            {
                "from": 324,
                "to": 327,
                "label": "PARALLEL"
            },
            {
                "from": 326,
                "to": 328,
                "label": "EVAL with clause\nackermann(0, X67, s(X67)).\nand substitutionT26 -> 0,\nX67 -> s(0),\nX60 -> s(s(0))"
            },
            {
                "from": 326,
                "to": 329,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 327,
                "to": 332,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 328,
                "to": 331,
                "label": "SUCCESS"
            },
            {
                "from": 332,
                "to": 339,
                "label": "EVAL with clause\nackermann(s(X79), s(X80), X81) :- ','(ackermann(s(X79), X80, X82), ackermann(X79, X82, X81)).\nand substitutionX79 -> T30,\nT26 -> s(T30),\nX80 -> 0,\nX60 -> X83,\nX81 -> X83"
            },
            {
                "from": 332,
                "to": 340,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 339,
                "to": 341,
                "label": "SPLIT 1"
            },
            {
                "from": 339,
                "to": 342,
                "label": "SPLIT 2\nnew knowledge:\nT30 is ground\nT31 is ground\nreplacements:X82 -> T31"
            },
            {
                "from": 341,
                "to": 261,
                "label": "INSTANCE with matching:\nT19 -> T30\nX36 -> X82"
            },
            {
                "from": 342,
                "to": 346,
                "label": "CASE"
            },
            {
                "from": 346,
                "to": 347,
                "label": "PARALLEL"
            },
            {
                "from": 346,
                "to": 348,
                "label": "PARALLEL"
            },
            {
                "from": 347,
                "to": 373,
                "label": "EVAL with clause\nackermann(0, X94, s(X94)).\nand substitutionT30 -> 0,\nT31 -> T38,\nX94 -> T38,\nX83 -> s(T38)"
            },
            {
                "from": 347,
                "to": 374,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 348,
                "to": 376,
                "label": "PARALLEL"
            },
            {
                "from": 348,
                "to": 377,
                "label": "PARALLEL"
            },
            {
                "from": 373,
                "to": 375,
                "label": "SUCCESS"
            },
            {
                "from": 376,
                "to": 378,
                "label": "EVAL with clause\nackermann(s(X107), 0, X108) :- ackermann(X107, s(0), X108).\nand substitutionX107 -> T43,\nT30 -> s(T43),\nT31 -> 0,\nX83 -> X109,\nX108 -> X109"
            },
            {
                "from": 376,
                "to": 379,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 377,
                "to": 380,
                "label": "EVAL with clause\nackermann(s(X121), s(X122), X123) :- ','(ackermann(s(X121), X122, X124), ackermann(X121, X124, X123)).\nand substitutionX121 -> T48,\nT30 -> s(T48),\nX122 -> T49,\nT31 -> s(T49),\nX83 -> X125,\nX123 -> X125"
            },
            {
                "from": 377,
                "to": 381,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 378,
                "to": 323,
                "label": "INSTANCE with matching:\nT26 -> T43\nX60 -> X109"
            },
            {
                "from": 380,
                "to": 382,
                "label": "SPLIT 1"
            },
            {
                "from": 380,
                "to": 383,
                "label": "SPLIT 2\nnew knowledge:\nT48 is ground\nT49 is ground\nT50 is ground\nreplacements:X124 -> T50"
            },
            {
                "from": 382,
                "to": 342,
                "label": "INSTANCE with matching:\nT30 -> s(T48)\nT31 -> T49\nX83 -> X124"
            },
            {
                "from": 383,
                "to": 342,
                "label": "INSTANCE with matching:\nT30 -> T48\nT31 -> T50\nX83 -> X125"
            },
            {
                "from": 385,
                "to": 405,
                "label": "EVAL with clause\nackermann(s(X144), s(X145), X146) :- ','(ackermann(s(X144), X145, X147), ackermann(X144, X147, X146)).\nand substitutionT8 -> T62,\nX144 -> T62,\nX145 -> T65,\nT2 -> s(T65),\nT9 -> T64,\nX146 -> T64,\nT63 -> T65"
            },
            {
                "from": 385,
                "to": 406,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 405,
                "to": 407,
                "label": "SPLIT 1"
            },
            {
                "from": 405,
                "to": 408,
                "label": "SPLIT 2\nnew knowledge:\nT62 is ground\nreplacements:X147 -> T66"
            },
            {
                "from": 407,
                "to": 409,
                "label": "CASE"
            },
            {
                "from": 408,
                "to": 158,
                "label": "INSTANCE with matching:\nT1 -> T62\nT2 -> T66\nT3 -> T64"
            },
            {
                "from": 409,
                "to": 410,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 410,
                "to": 411,
                "label": "PARALLEL"
            },
            {
                "from": 410,
                "to": 412,
                "label": "PARALLEL"
            },
            {
                "from": 411,
                "to": 415,
                "label": "EVAL with clause\nackermann(s(X165), 0, X166) :- ackermann(X165, s(0), X166).\nand substitutionT62 -> T71,\nX165 -> T71,\nT65 -> 0,\nX147 -> X167,\nX166 -> X167"
            },
            {
                "from": 411,
                "to": 416,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 412,
                "to": 420,
                "label": "EVAL with clause\nackermann(s(X179), s(X180), X181) :- ','(ackermann(s(X179), X180, X182), ackermann(X179, X182, X181)).\nand substitutionT62 -> T76,\nX179 -> T76,\nX180 -> T78,\nT65 -> s(T78),\nX147 -> X183,\nX181 -> X183,\nT77 -> T78"
            },
            {
                "from": 412,
                "to": 421,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 415,
                "to": 323,
                "label": "INSTANCE with matching:\nT26 -> T71\nX60 -> X167"
            },
            {
                "from": 420,
                "to": 425,
                "label": "SPLIT 1"
            },
            {
                "from": 420,
                "to": 426,
                "label": "SPLIT 2\nnew knowledge:\nT76 is ground\nreplacements:X182 -> T79"
            },
            {
                "from": 425,
                "to": 407,
                "label": "INSTANCE with matching:\nT62 -> T76\nT65 -> T78\nX147 -> X182"
            },
            {
                "from": 426,
                "to": 429,
                "label": "CASE"
            },
            {
                "from": 429,
                "to": 431,
                "label": "PARALLEL"
            },
            {
                "from": 429,
                "to": 433,
                "label": "PARALLEL"
            },
            {
                "from": 431,
                "to": 434,
                "label": "EVAL with clause\nackermann(0, X194, s(X194)).\nand substitutionT76 -> 0,\nT79 -> T86,\nX194 -> T86,\nX183 -> s(T86)"
            },
            {
                "from": 431,
                "to": 435,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 433,
                "to": 437,
                "label": "PARALLEL"
            },
            {
                "from": 433,
                "to": 438,
                "label": "PARALLEL"
            },
            {
                "from": 434,
                "to": 436,
                "label": "SUCCESS"
            },
            {
                "from": 437,
                "to": 439,
                "label": "EVAL with clause\nackermann(s(X207), 0, X208) :- ackermann(X207, s(0), X208).\nand substitutionX207 -> T91,\nT76 -> s(T91),\nT79 -> 0,\nX183 -> X209,\nX208 -> X209"
            },
            {
                "from": 437,
                "to": 440,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 438,
                "to": 441,
                "label": "EVAL with clause\nackermann(s(X221), s(X222), X223) :- ','(ackermann(s(X221), X222, X224), ackermann(X221, X224, X223)).\nand substitutionX221 -> T96,\nT76 -> s(T96),\nX222 -> T98,\nT79 -> s(T98),\nX183 -> X225,\nX223 -> X225,\nT97 -> T98"
            },
            {
                "from": 438,
                "to": 442,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 439,
                "to": 323,
                "label": "INSTANCE with matching:\nT26 -> T91\nX60 -> X209"
            },
            {
                "from": 441,
                "to": 420,
                "label": "INSTANCE with matching:\nT76 -> T96\nT78 -> T98\nX182 -> X224\nX183 -> X225"
            },
            {
                "from": 448,
                "to": 453,
                "label": "CASE"
            },
            {
                "from": 453,
                "to": 456,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 456,
                "to": 460,
                "label": "PARALLEL"
            },
            {
                "from": 456,
                "to": 461,
                "label": "PARALLEL"
            },
            {
                "from": 460,
                "to": 466,
                "label": "EVAL with clause\nackermann(s(X250), 0, X251) :- ackermann(X250, s(0), X251).\nand substitutionT104 -> T112,\nX250 -> T112,\nT107 -> 0,\nX236 -> X252,\nX251 -> X252"
            },
            {
                "from": 460,
                "to": 468,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 461,
                "to": 485,
                "label": "EVAL with clause\nackermann(s(X268), s(X269), X270) :- ','(ackermann(s(X268), X269, X271), ackermann(X268, X271, X270)).\nand substitutionT104 -> T120,\nX268 -> T120,\nX269 -> T122,\nT107 -> s(T122),\nX236 -> X272,\nX270 -> X272,\nT121 -> T122"
            },
            {
                "from": 461,
                "to": 486,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 466,
                "to": 477,
                "label": "SPLIT 1"
            },
            {
                "from": 466,
                "to": 478,
                "label": "SPLIT 2\nnew knowledge:\nT112 is ground\nT113 is ground\nreplacements:X252 -> T113"
            },
            {
                "from": 477,
                "to": 323,
                "label": "INSTANCE with matching:\nT26 -> T112\nX60 -> X252"
            },
            {
                "from": 478,
                "to": 158,
                "label": "INSTANCE with matching:\nT1 -> T112\nT2 -> T113\nT3 -> T106"
            },
            {
                "from": 485,
                "to": 487,
                "label": "SPLIT 1"
            },
            {
                "from": 485,
                "to": 488,
                "label": "SPLIT 2\nnew knowledge:\nT120 is ground\nreplacements:X271 -> T123,\nT2 -> T124"
            },
            {
                "from": 487,
                "to": 407,
                "label": "INSTANCE with matching:\nT62 -> T120\nT65 -> T122\nX147 -> X271"
            },
            {
                "from": 488,
                "to": 489,
                "label": "SPLIT 1"
            },
            {
                "from": 488,
                "to": 490,
                "label": "SPLIT 2\nnew knowledge:\nT120 is ground\nreplacements:X272 -> T127,\nT124 -> T128"
            },
            {
                "from": 489,
                "to": 426,
                "label": "INSTANCE with matching:\nT76 -> T120\nT79 -> T123\nX183 -> X272"
            },
            {
                "from": 490,
                "to": 158,
                "label": "INSTANCE with matching:\nT1 -> T120\nT2 -> T127\nT3 -> T106"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(84)
Obligation:
Triples:

ackermannB(X1, X2) :- ackermannD(X1, X2).
ackermannD(s(X1), X2) :- ackermannB(X1, X3).
ackermannD(s(X1), X2) :- ','(ackermanncB(X1, X3), ackermannF(X1, X3, X2)).
ackermannF(s(X1), 0, X2) :- ackermannD(X1, X2).
ackermannF(s(X1), s(X2), X3) :- ackermannF(s(X1), X2, X4).
ackermannF(s(X1), s(X2), X3) :- ','(ackermanncF(s(X1), X2, X4), ackermannF(X1, X4, X3)).
ackermannC(X1, 0, X2) :- ackermannD(X1, X2).
ackermannC(X1, s(X2), X3) :- pG(X1, X2, X4, X3).
pG(X1, X2, X3, X4) :- ackermannC(X1, X2, X3).
pG(X1, X2, X3, X4) :- ','(ackermanncC(X1, X2, X3), ackermannE(X1, X3, X4)).
ackermannE(s(X1), 0, X2) :- ackermannD(X1, X2).
ackermannE(s(X1), s(X2), X3) :- pG(X1, X2, X4, X3).
ackermannA(s(s(X1)), 0, X2) :- ackermannB(X1, X3).
ackermannA(s(s(X1)), 0, X2) :- ','(ackermanncB(X1, X3), ackermannA(X1, X3, X2)).
ackermannA(s(X1), s(X2), X3) :- ackermannC(X1, X2, X4).
ackermannA(s(X1), s(X2), X3) :- ','(ackermanncC(X1, X2, X4), ackermannA(X1, X4, X3)).
ackermannA(s(X1), s(0), X2) :- ackermannD(X1, X3).
ackermannA(s(X1), s(0), X2) :- ','(ackermanncD(X1, X3), ackermannA(X1, X3, X2)).
ackermannA(s(X1), s(s(X2)), X3) :- ackermannC(X1, X2, X4).
ackermannA(s(X1), s(s(X2)), X3) :- ','(ackermanncC(X1, X2, X4), ackermannE(X1, X4, X5)).
ackermannA(s(X1), s(s(X2)), X3) :- ','(ackermanncC(X1, X2, X4), ','(ackermanncE(X1, X4, X5), ackermannA(X1, X5, X3))).

Clauses:

ackermanncA(0, X1, s(X1)).
ackermanncA(s(0), 0, s(s(0))).
ackermanncA(s(s(X1)), 0, X2) :- ','(ackermanncB(X1, X3), ackermanncA(X1, X3, X2)).
ackermanncA(s(X1), s(X2), X3) :- ','(ackermanncC(X1, X2, X4), ackermanncA(X1, X4, X3)).
ackermanncA(s(X1), s(0), X2) :- ','(ackermanncD(X1, X3), ackermanncA(X1, X3, X2)).
ackermanncA(s(X1), s(s(X2)), X3) :- ','(ackermanncC(X1, X2, X4), ','(ackermanncE(X1, X4, X5), ackermanncA(X1, X5, X3))).
ackermanncB(X1, X2) :- ackermanncD(X1, X2).
ackermanncD(0, s(s(0))).
ackermanncD(s(X1), X2) :- ','(ackermanncB(X1, X3), ackermanncF(X1, X3, X2)).
ackermanncF(0, X1, s(X1)).
ackermanncF(s(X1), 0, X2) :- ackermanncD(X1, X2).
ackermanncF(s(X1), s(X2), X3) :- ','(ackermanncF(s(X1), X2, X4), ackermanncF(X1, X4, X3)).
ackermanncC(X1, 0, X2) :- ackermanncD(X1, X2).
ackermanncC(X1, s(X2), X3) :- qcG(X1, X2, X4, X3).
qcG(X1, X2, X3, X4) :- ','(ackermanncC(X1, X2, X3), ackermanncE(X1, X3, X4)).
ackermanncE(0, X1, s(X1)).
ackermanncE(s(X1), 0, X2) :- ackermanncD(X1, X2).
ackermanncE(s(X1), s(X2), X3) :- qcG(X1, X2, X4, X3).

Afs:

ackermannA(x1, x2, x3)  =  ackermannA(x1, x3)


----------------------------------------

(85) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

ackermannA_in_3: (b,f,b) (b,b,b)

ackermannB_in_2: (b,f)

ackermannD_in_2: (b,f)

ackermanncB_in_2: (b,f)

ackermanncD_in_2: (b,f)

ackermanncF_in_3: (b,b,f)

ackermannF_in_3: (b,b,f)

ackermannC_in_3: (b,b,f) (b,f,f)

pG_in_4: (b,b,f,f) (b,f,f,f)

ackermanncC_in_3: (b,b,f) (b,f,f)

qcG_in_4: (b,b,f,f) (b,f,f,f)

ackermanncE_in_3: (b,b,f)

ackermannE_in_3: (b,b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> U16_GAG(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANNB_IN_GA(X1, X2) -> U1_GA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNB_IN_GA(X1, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANND_IN_GA(s(X1), X2) -> U2_GA(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANND_IN_GA(s(X1), X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANND_IN_GA(s(X1), X2) -> U3_GA(X1, X2, ackermanncB_in_ga(X1, X3))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> U4_GA(X1, X2, ackermannF_in_gga(X1, X3, X2))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3, X2)
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> U5_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U6_GGA(X1, X2, X3, ackermannF_in_gga(s(X1), X2, X4))
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> ACKERMANNF_IN_GGA(s(X1), X2, X4)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U7_GGA(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U8_GGA(X1, X2, X3, ackermannF_in_gga(X1, X4, X3))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4, X3)
   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> U17_GAG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GAG(X1, X2, ackermanncB_out_ga(X1, X3)) -> U18_GAG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U17_GAG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U16_GGG(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> U18_GGG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U19_GGG(X1, X2, X3, ackermannC_in_gga(X1, X2, X4))
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> ACKERMANNC_IN_GGA(X1, X2, X4)
   ACKERMANNC_IN_GGA(X1, 0, X2) -> U9_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNC_IN_GGA(X1, 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> U10_GGA(X1, X2, X3, pG_in_ggaa(X1, X2, X4, X3))
   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U11_GGAA(X1, X2, X3, X4, ackermannC_in_gga(X1, X2, X3))
   PG_IN_GGAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GGA(X1, X2, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U12_GGAA(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U13_GGAA(X1, X2, X3, X4, ackermannE_in_gga(X1, X3, X4))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNE_IN_GGA(s(X1), 0, X2) -> U14_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNE_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> U15_GGA(X1, X2, X3, pG_in_ggaa(X1, X2, X4, X3))
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U21_GGG(X1, X2, X3, ackermannA_in_ggg(X1, X4, X3))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U22_GGG(X1, X2, ackermannD_in_ga(X1, X3))
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> ACKERMANND_IN_GA(X1, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> U24_GGG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U25_GGG(X1, X2, X3, ackermannC_in_gga(X1, X2, X4))
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> ACKERMANNC_IN_GGA(X1, X2, X4)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U27_GGG(X1, X2, X3, ackermannE_in_gga(X1, X4, X5))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNE_IN_GGA(X1, X4, X5)
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> U29_GGG(X1, X2, X3, ackermannA_in_ggg(X1, X5, X3))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> U19_GAG(X1, X2, X3, ackermannC_in_gaa(X1, X2, X4))
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> ACKERMANNC_IN_GAA(X1, X2, X4)
   ACKERMANNC_IN_GAA(X1, 0, X2) -> U9_GAA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNC_IN_GAA(X1, 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> U10_GAA(X1, X2, X3, pG_in_gaaa(X1, X2, X4, X3))
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> PG_IN_GAAA(X1, X2, X4, X3)
   PG_IN_GAAA(X1, X2, X3, X4) -> U11_GAAA(X1, X2, X3, X4, ackermannC_in_gaa(X1, X2, X3))
   PG_IN_GAAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GAA(X1, X2, X3)
   PG_IN_GAAA(X1, X2, X3, X4) -> U12_GAAA(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U12_GAAA(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U13_GAAA(X1, X2, X3, X4, ackermannE_in_gga(X1, X3, X4))
   U12_GAAA(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> U20_GAG(X1, X2, X3, ackermanncC_in_gaa(X1, X2, X4))
   U20_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U21_GAG(X1, X2, X3, ackermannA_in_ggg(X1, X4, X3))
   U20_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> U22_GAG(X1, X2, ackermannD_in_ga(X1, X3))
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> ACKERMANND_IN_GA(X1, X3)
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> U23_GAG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GAG(X1, X2, ackermanncD_out_ga(X1, X3)) -> U24_GAG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U23_GAG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> U25_GAG(X1, X2, X3, ackermannC_in_gaa(X1, X2, X4))
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> ACKERMANNC_IN_GAA(X1, X2, X4)
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> U26_GAG(X1, X2, X3, ackermanncC_in_gaa(X1, X2, X4))
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U27_GAG(X1, X2, X3, ackermannE_in_gga(X1, X4, X5))
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> ACKERMANNE_IN_GGA(X1, X4, X5)
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U28_GAG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GAG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> U29_GAG(X1, X2, X3, ackermannA_in_ggg(X1, X5, X3))
   U28_GAG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermannB_in_ga(x1, x2)  =  ackermannB_in_ga(x1)

ackermannD_in_ga(x1, x2)  =  ackermannD_in_ga(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermannF_in_gga(x1, x2, x3)  =  ackermannF_in_gga(x1, x2)

ackermannA_in_ggg(x1, x2, x3)  =  ackermannA_in_ggg(x1, x2, x3)

ackermannC_in_gga(x1, x2, x3)  =  ackermannC_in_gga(x1, x2)

pG_in_ggaa(x1, x2, x3, x4)  =  pG_in_ggaa(x1, x2)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermannE_in_gga(x1, x2, x3)  =  ackermannE_in_gga(x1, x2)

ackermannC_in_gaa(x1, x2, x3)  =  ackermannC_in_gaa(x1)

pG_in_gaaa(x1, x2, x3, x4)  =  pG_in_gaaa(x1)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNA_IN_GAG(x1, x2, x3)  =  ACKERMANNA_IN_GAG(x1, x3)

U16_GAG(x1, x2, x3)  =  U16_GAG(x1, x2, x3)

ACKERMANNB_IN_GA(x1, x2)  =  ACKERMANNB_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

ACKERMANND_IN_GA(x1, x2)  =  ACKERMANND_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

ACKERMANNF_IN_GGA(x1, x2, x3)  =  ACKERMANNF_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3)  =  U5_GGA(x1, x3)

U6_GGA(x1, x2, x3, x4)  =  U6_GGA(x1, x2, x4)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)

U8_GGA(x1, x2, x3, x4)  =  U8_GGA(x1, x2, x4)

U17_GAG(x1, x2, x3)  =  U17_GAG(x1, x2, x3)

U18_GAG(x1, x2, x3)  =  U18_GAG(x1, x2, x3)

ACKERMANNA_IN_GGG(x1, x2, x3)  =  ACKERMANNA_IN_GGG(x1, x2, x3)

U16_GGG(x1, x2, x3)  =  U16_GGG(x1, x2, x3)

U17_GGG(x1, x2, x3)  =  U17_GGG(x1, x2, x3)

U18_GGG(x1, x2, x3)  =  U18_GGG(x1, x2, x3)

U19_GGG(x1, x2, x3, x4)  =  U19_GGG(x1, x2, x3, x4)

ACKERMANNC_IN_GGA(x1, x2, x3)  =  ACKERMANNC_IN_GGA(x1, x2)

U9_GGA(x1, x2, x3)  =  U9_GGA(x1, x3)

U10_GGA(x1, x2, x3, x4)  =  U10_GGA(x1, x2, x4)

PG_IN_GGAA(x1, x2, x3, x4)  =  PG_IN_GGAA(x1, x2)

U11_GGAA(x1, x2, x3, x4, x5)  =  U11_GGAA(x1, x2, x5)

U12_GGAA(x1, x2, x3, x4, x5)  =  U12_GGAA(x1, x2, x5)

U13_GGAA(x1, x2, x3, x4, x5)  =  U13_GGAA(x1, x2, x5)

ACKERMANNE_IN_GGA(x1, x2, x3)  =  ACKERMANNE_IN_GGA(x1, x2)

U14_GGA(x1, x2, x3)  =  U14_GGA(x1, x3)

U15_GGA(x1, x2, x3, x4)  =  U15_GGA(x1, x2, x4)

U20_GGG(x1, x2, x3, x4)  =  U20_GGG(x1, x2, x3, x4)

U21_GGG(x1, x2, x3, x4)  =  U21_GGG(x1, x2, x3, x4)

U22_GGG(x1, x2, x3)  =  U22_GGG(x1, x2, x3)

U23_GGG(x1, x2, x3)  =  U23_GGG(x1, x2, x3)

U24_GGG(x1, x2, x3)  =  U24_GGG(x1, x2, x3)

U25_GGG(x1, x2, x3, x4)  =  U25_GGG(x1, x2, x3, x4)

U26_GGG(x1, x2, x3, x4)  =  U26_GGG(x1, x2, x3, x4)

U27_GGG(x1, x2, x3, x4)  =  U27_GGG(x1, x2, x3, x4)

U28_GGG(x1, x2, x3, x4)  =  U28_GGG(x1, x2, x3, x4)

U29_GGG(x1, x2, x3, x4)  =  U29_GGG(x1, x2, x3, x4)

U19_GAG(x1, x2, x3, x4)  =  U19_GAG(x1, x3, x4)

ACKERMANNC_IN_GAA(x1, x2, x3)  =  ACKERMANNC_IN_GAA(x1)

U9_GAA(x1, x2, x3)  =  U9_GAA(x1, x3)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)

PG_IN_GAAA(x1, x2, x3, x4)  =  PG_IN_GAAA(x1)

U11_GAAA(x1, x2, x3, x4, x5)  =  U11_GAAA(x1, x5)

U12_GAAA(x1, x2, x3, x4, x5)  =  U12_GAAA(x1, x5)

U13_GAAA(x1, x2, x3, x4, x5)  =  U13_GAAA(x1, x2, x5)

U20_GAG(x1, x2, x3, x4)  =  U20_GAG(x1, x3, x4)

U21_GAG(x1, x2, x3, x4)  =  U21_GAG(x1, x2, x3, x4)

U22_GAG(x1, x2, x3)  =  U22_GAG(x1, x2, x3)

U23_GAG(x1, x2, x3)  =  U23_GAG(x1, x2, x3)

U24_GAG(x1, x2, x3)  =  U24_GAG(x1, x2, x3)

U25_GAG(x1, x2, x3, x4)  =  U25_GAG(x1, x3, x4)

U26_GAG(x1, x2, x3, x4)  =  U26_GAG(x1, x3, x4)

U27_GAG(x1, x2, x3, x4)  =  U27_GAG(x1, x2, x3, x4)

U28_GAG(x1, x2, x3, x4)  =  U28_GAG(x1, x2, x3, x4)

U29_GAG(x1, x2, x3, x4)  =  U29_GAG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(86)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> U16_GAG(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANNB_IN_GA(X1, X2) -> U1_GA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNB_IN_GA(X1, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANND_IN_GA(s(X1), X2) -> U2_GA(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANND_IN_GA(s(X1), X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANND_IN_GA(s(X1), X2) -> U3_GA(X1, X2, ackermanncB_in_ga(X1, X3))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> U4_GA(X1, X2, ackermannF_in_gga(X1, X3, X2))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3, X2)
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> U5_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U6_GGA(X1, X2, X3, ackermannF_in_gga(s(X1), X2, X4))
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> ACKERMANNF_IN_GGA(s(X1), X2, X4)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U7_GGA(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U8_GGA(X1, X2, X3, ackermannF_in_gga(X1, X4, X3))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4, X3)
   ACKERMANNA_IN_GAG(s(s(X1)), 0, X2) -> U17_GAG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GAG(X1, X2, ackermanncB_out_ga(X1, X3)) -> U18_GAG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U17_GAG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U16_GGG(X1, X2, ackermannB_in_ga(X1, X3))
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> U18_GGG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U19_GGG(X1, X2, X3, ackermannC_in_gga(X1, X2, X4))
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> ACKERMANNC_IN_GGA(X1, X2, X4)
   ACKERMANNC_IN_GGA(X1, 0, X2) -> U9_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNC_IN_GGA(X1, 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> U10_GGA(X1, X2, X3, pG_in_ggaa(X1, X2, X4, X3))
   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U11_GGAA(X1, X2, X3, X4, ackermannC_in_gga(X1, X2, X3))
   PG_IN_GGAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GGA(X1, X2, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U12_GGAA(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U13_GGAA(X1, X2, X3, X4, ackermannE_in_gga(X1, X3, X4))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNE_IN_GGA(s(X1), 0, X2) -> U14_GGA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNE_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> U15_GGA(X1, X2, X3, pG_in_ggaa(X1, X2, X4, X3))
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U21_GGG(X1, X2, X3, ackermannA_in_ggg(X1, X4, X3))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U22_GGG(X1, X2, ackermannD_in_ga(X1, X3))
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> ACKERMANND_IN_GA(X1, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> U24_GGG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U25_GGG(X1, X2, X3, ackermannC_in_gga(X1, X2, X4))
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> ACKERMANNC_IN_GGA(X1, X2, X4)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U27_GGG(X1, X2, X3, ackermannE_in_gga(X1, X4, X5))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNE_IN_GGA(X1, X4, X5)
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> U29_GGG(X1, X2, X3, ackermannA_in_ggg(X1, X5, X3))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> U19_GAG(X1, X2, X3, ackermannC_in_gaa(X1, X2, X4))
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> ACKERMANNC_IN_GAA(X1, X2, X4)
   ACKERMANNC_IN_GAA(X1, 0, X2) -> U9_GAA(X1, X2, ackermannD_in_ga(X1, X2))
   ACKERMANNC_IN_GAA(X1, 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> U10_GAA(X1, X2, X3, pG_in_gaaa(X1, X2, X4, X3))
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> PG_IN_GAAA(X1, X2, X4, X3)
   PG_IN_GAAA(X1, X2, X3, X4) -> U11_GAAA(X1, X2, X3, X4, ackermannC_in_gaa(X1, X2, X3))
   PG_IN_GAAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GAA(X1, X2, X3)
   PG_IN_GAAA(X1, X2, X3, X4) -> U12_GAAA(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U12_GAAA(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U13_GAAA(X1, X2, X3, X4, ackermannE_in_gga(X1, X3, X4))
   U12_GAAA(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNA_IN_GAG(s(X1), s(X2), X3) -> U20_GAG(X1, X2, X3, ackermanncC_in_gaa(X1, X2, X4))
   U20_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U21_GAG(X1, X2, X3, ackermannA_in_ggg(X1, X4, X3))
   U20_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> U22_GAG(X1, X2, ackermannD_in_ga(X1, X3))
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> ACKERMANND_IN_GA(X1, X3)
   ACKERMANNA_IN_GAG(s(X1), s(0), X2) -> U23_GAG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GAG(X1, X2, ackermanncD_out_ga(X1, X3)) -> U24_GAG(X1, X2, ackermannA_in_ggg(X1, X3, X2))
   U23_GAG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> U25_GAG(X1, X2, X3, ackermannC_in_gaa(X1, X2, X4))
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> ACKERMANNC_IN_GAA(X1, X2, X4)
   ACKERMANNA_IN_GAG(s(X1), s(s(X2)), X3) -> U26_GAG(X1, X2, X3, ackermanncC_in_gaa(X1, X2, X4))
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U27_GAG(X1, X2, X3, ackermannE_in_gga(X1, X4, X5))
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> ACKERMANNE_IN_GGA(X1, X4, X5)
   U26_GAG(X1, X2, X3, ackermanncC_out_gaa(X1, X2, X4)) -> U28_GAG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GAG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> U29_GAG(X1, X2, X3, ackermannA_in_ggg(X1, X5, X3))
   U28_GAG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermannB_in_ga(x1, x2)  =  ackermannB_in_ga(x1)

ackermannD_in_ga(x1, x2)  =  ackermannD_in_ga(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermannF_in_gga(x1, x2, x3)  =  ackermannF_in_gga(x1, x2)

ackermannA_in_ggg(x1, x2, x3)  =  ackermannA_in_ggg(x1, x2, x3)

ackermannC_in_gga(x1, x2, x3)  =  ackermannC_in_gga(x1, x2)

pG_in_ggaa(x1, x2, x3, x4)  =  pG_in_ggaa(x1, x2)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermannE_in_gga(x1, x2, x3)  =  ackermannE_in_gga(x1, x2)

ackermannC_in_gaa(x1, x2, x3)  =  ackermannC_in_gaa(x1)

pG_in_gaaa(x1, x2, x3, x4)  =  pG_in_gaaa(x1)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNA_IN_GAG(x1, x2, x3)  =  ACKERMANNA_IN_GAG(x1, x3)

U16_GAG(x1, x2, x3)  =  U16_GAG(x1, x2, x3)

ACKERMANNB_IN_GA(x1, x2)  =  ACKERMANNB_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

ACKERMANND_IN_GA(x1, x2)  =  ACKERMANND_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

U4_GA(x1, x2, x3)  =  U4_GA(x1, x3)

ACKERMANNF_IN_GGA(x1, x2, x3)  =  ACKERMANNF_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3)  =  U5_GGA(x1, x3)

U6_GGA(x1, x2, x3, x4)  =  U6_GGA(x1, x2, x4)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)

U8_GGA(x1, x2, x3, x4)  =  U8_GGA(x1, x2, x4)

U17_GAG(x1, x2, x3)  =  U17_GAG(x1, x2, x3)

U18_GAG(x1, x2, x3)  =  U18_GAG(x1, x2, x3)

ACKERMANNA_IN_GGG(x1, x2, x3)  =  ACKERMANNA_IN_GGG(x1, x2, x3)

U16_GGG(x1, x2, x3)  =  U16_GGG(x1, x2, x3)

U17_GGG(x1, x2, x3)  =  U17_GGG(x1, x2, x3)

U18_GGG(x1, x2, x3)  =  U18_GGG(x1, x2, x3)

U19_GGG(x1, x2, x3, x4)  =  U19_GGG(x1, x2, x3, x4)

ACKERMANNC_IN_GGA(x1, x2, x3)  =  ACKERMANNC_IN_GGA(x1, x2)

U9_GGA(x1, x2, x3)  =  U9_GGA(x1, x3)

U10_GGA(x1, x2, x3, x4)  =  U10_GGA(x1, x2, x4)

PG_IN_GGAA(x1, x2, x3, x4)  =  PG_IN_GGAA(x1, x2)

U11_GGAA(x1, x2, x3, x4, x5)  =  U11_GGAA(x1, x2, x5)

U12_GGAA(x1, x2, x3, x4, x5)  =  U12_GGAA(x1, x2, x5)

U13_GGAA(x1, x2, x3, x4, x5)  =  U13_GGAA(x1, x2, x5)

ACKERMANNE_IN_GGA(x1, x2, x3)  =  ACKERMANNE_IN_GGA(x1, x2)

U14_GGA(x1, x2, x3)  =  U14_GGA(x1, x3)

U15_GGA(x1, x2, x3, x4)  =  U15_GGA(x1, x2, x4)

U20_GGG(x1, x2, x3, x4)  =  U20_GGG(x1, x2, x3, x4)

U21_GGG(x1, x2, x3, x4)  =  U21_GGG(x1, x2, x3, x4)

U22_GGG(x1, x2, x3)  =  U22_GGG(x1, x2, x3)

U23_GGG(x1, x2, x3)  =  U23_GGG(x1, x2, x3)

U24_GGG(x1, x2, x3)  =  U24_GGG(x1, x2, x3)

U25_GGG(x1, x2, x3, x4)  =  U25_GGG(x1, x2, x3, x4)

U26_GGG(x1, x2, x3, x4)  =  U26_GGG(x1, x2, x3, x4)

U27_GGG(x1, x2, x3, x4)  =  U27_GGG(x1, x2, x3, x4)

U28_GGG(x1, x2, x3, x4)  =  U28_GGG(x1, x2, x3, x4)

U29_GGG(x1, x2, x3, x4)  =  U29_GGG(x1, x2, x3, x4)

U19_GAG(x1, x2, x3, x4)  =  U19_GAG(x1, x3, x4)

ACKERMANNC_IN_GAA(x1, x2, x3)  =  ACKERMANNC_IN_GAA(x1)

U9_GAA(x1, x2, x3)  =  U9_GAA(x1, x3)

U10_GAA(x1, x2, x3, x4)  =  U10_GAA(x1, x4)

PG_IN_GAAA(x1, x2, x3, x4)  =  PG_IN_GAAA(x1)

U11_GAAA(x1, x2, x3, x4, x5)  =  U11_GAAA(x1, x5)

U12_GAAA(x1, x2, x3, x4, x5)  =  U12_GAAA(x1, x5)

U13_GAAA(x1, x2, x3, x4, x5)  =  U13_GAAA(x1, x2, x5)

U20_GAG(x1, x2, x3, x4)  =  U20_GAG(x1, x3, x4)

U21_GAG(x1, x2, x3, x4)  =  U21_GAG(x1, x2, x3, x4)

U22_GAG(x1, x2, x3)  =  U22_GAG(x1, x2, x3)

U23_GAG(x1, x2, x3)  =  U23_GAG(x1, x2, x3)

U24_GAG(x1, x2, x3)  =  U24_GAG(x1, x2, x3)

U25_GAG(x1, x2, x3, x4)  =  U25_GAG(x1, x3, x4)

U26_GAG(x1, x2, x3, x4)  =  U26_GAG(x1, x3, x4)

U27_GAG(x1, x2, x3, x4)  =  U27_GAG(x1, x2, x3, x4)

U28_GAG(x1, x2, x3, x4)  =  U28_GAG(x1, x2, x3, x4)

U29_GAG(x1, x2, x3, x4)  =  U29_GAG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(87) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 58 less nodes.
----------------------------------------

(88)
Complex Obligation (AND)

----------------------------------------

(89)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNB_IN_GA(X1, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANND_IN_GA(s(X1), X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANND_IN_GA(s(X1), X2) -> U3_GA(X1, X2, ackermanncB_in_ga(X1, X3))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3, X2)
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> ACKERMANNF_IN_GGA(s(X1), X2, X4)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U7_GGA(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNB_IN_GA(x1, x2)  =  ACKERMANNB_IN_GA(x1)

ACKERMANND_IN_GA(x1, x2)  =  ACKERMANND_IN_GA(x1)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

ACKERMANNF_IN_GGA(x1, x2, x3)  =  ACKERMANNF_IN_GGA(x1, x2)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(90) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(91)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNB_IN_GA(X1, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANND_IN_GA(s(X1), X2) -> ACKERMANNB_IN_GA(X1, X3)
   ACKERMANND_IN_GA(s(X1), X2) -> U3_GA(X1, X2, ackermanncB_in_ga(X1, X3))
   U3_GA(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3, X2)
   ACKERMANNF_IN_GGA(s(X1), 0, X2) -> ACKERMANND_IN_GA(X1, X2)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> ACKERMANNF_IN_GGA(s(X1), X2, X4)
   ACKERMANNF_IN_GGA(s(X1), s(X2), X3) -> U7_GGA(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U7_GGA(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ACKERMANNB_IN_GA(x1, x2)  =  ACKERMANNB_IN_GA(x1)

ACKERMANND_IN_GA(x1, x2)  =  ACKERMANND_IN_GA(x1)

U3_GA(x1, x2, x3)  =  U3_GA(x1, x3)

ACKERMANNF_IN_GGA(x1, x2, x3)  =  ACKERMANNF_IN_GGA(x1, x2)

U7_GGA(x1, x2, x3, x4)  =  U7_GGA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(92) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(93)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANNB_IN_GA(X1) -> ACKERMANND_IN_GA(X1)
   ACKERMANND_IN_GA(s(X1)) -> ACKERMANNB_IN_GA(X1)
   ACKERMANND_IN_GA(s(X1)) -> U3_GA(X1, ackermanncB_in_ga(X1))
   U3_GA(X1, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3)
   ACKERMANNF_IN_GGA(s(X1), 0) -> ACKERMANND_IN_GA(X1)
   ACKERMANNF_IN_GGA(s(X1), s(X2)) -> ACKERMANNF_IN_GGA(s(X1), X2)
   ACKERMANNF_IN_GGA(s(X1), s(X2)) -> U7_GGA(X1, X2, ackermanncF_in_gga(s(X1), X2))
   U7_GGA(X1, X2, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1) -> U40_ga(X1, ackermanncD_in_ga(X1))
   ackermanncF_in_gga(s(X1), 0) -> U43_gga(X1, ackermanncD_in_ga(X1))
   ackermanncF_in_gga(s(X1), s(X2)) -> U44_gga(X1, X2, ackermanncF_in_gga(s(X1), X2))
   U40_ga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   U43_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, ackermanncF_in_gga(X1, X4))
   ackermanncD_in_ga(0) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1)) -> U41_ga(X1, ackermanncB_in_ga(X1))
   U45_gga(X1, X2, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U41_ga(X1, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, ackermanncF_in_gga(X1, X3))
   ackermanncF_in_gga(0, X1) -> ackermanncF_out_gga(0, X1, s(X1))
   U42_ga(X1, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)

The set Q consists of the following terms:

   ackermanncB_in_ga(x0)
   ackermanncF_in_gga(x0, x1)
   U40_ga(x0, x1)
   U43_gga(x0, x1)
   U44_gga(x0, x1, x2)
   ackermanncD_in_ga(x0)
   U45_gga(x0, x1, x2)
   U41_ga(x0, x1)
   U42_ga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(94) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ACKERMANND_IN_GA(s(X1)) -> ACKERMANNB_IN_GA(X1)
The graph contains the following edges 1 > 1


*ACKERMANND_IN_GA(s(X1)) -> U3_GA(X1, ackermanncB_in_ga(X1))
The graph contains the following edges 1 > 1


*ACKERMANNB_IN_GA(X1) -> ACKERMANND_IN_GA(X1)
The graph contains the following edges 1 >= 1


*ACKERMANNF_IN_GGA(s(X1), 0) -> ACKERMANND_IN_GA(X1)
The graph contains the following edges 1 > 1


*U3_GA(X1, ackermanncB_out_ga(X1, X3)) -> ACKERMANNF_IN_GGA(X1, X3)
The graph contains the following edges 1 >= 1, 2 > 1, 2 > 2


*U7_GGA(X1, X2, ackermanncF_out_gga(s(X1), X2, X4)) -> ACKERMANNF_IN_GGA(X1, X4)
The graph contains the following edges 1 >= 1, 3 > 1, 3 > 2


*ACKERMANNF_IN_GGA(s(X1), s(X2)) -> ACKERMANNF_IN_GGA(s(X1), X2)
The graph contains the following edges 1 >= 1, 2 > 2


*ACKERMANNF_IN_GGA(s(X1), s(X2)) -> U7_GGA(X1, X2, ackermanncF_in_gga(s(X1), X2))
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(95)
YES

----------------------------------------

(96)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GGA(X1, X2, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U12_GGAA(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNC_IN_GGA(x1, x2, x3)  =  ACKERMANNC_IN_GGA(x1, x2)

PG_IN_GGAA(x1, x2, x3, x4)  =  PG_IN_GGAA(x1, x2)

U12_GGAA(x1, x2, x3, x4, x5)  =  U12_GGAA(x1, x2, x5)

ACKERMANNE_IN_GGA(x1, x2, x3)  =  ACKERMANNE_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(97) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(98)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNC_IN_GGA(X1, s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GGA(X1, X2, X3)
   PG_IN_GGAA(X1, X2, X3, X4) -> U12_GGAA(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U12_GGAA(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3, X4)
   ACKERMANNE_IN_GGA(s(X1), s(X2), X3) -> PG_IN_GGAA(X1, X2, X4, X3)

The TRS R consists of the following rules:

   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ACKERMANNC_IN_GGA(x1, x2, x3)  =  ACKERMANNC_IN_GGA(x1, x2)

PG_IN_GGAA(x1, x2, x3, x4)  =  PG_IN_GGAA(x1, x2)

U12_GGAA(x1, x2, x3, x4, x5)  =  U12_GGAA(x1, x2, x5)

ACKERMANNE_IN_GGA(x1, x2, x3)  =  ACKERMANNE_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(99) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(100)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANNC_IN_GGA(X1, s(X2)) -> PG_IN_GGAA(X1, X2)
   PG_IN_GGAA(X1, X2) -> ACKERMANNC_IN_GGA(X1, X2)
   PG_IN_GGAA(X1, X2) -> U12_GGAA(X1, X2, ackermanncC_in_gga(X1, X2))
   U12_GGAA(X1, X2, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3)
   ACKERMANNE_IN_GGA(s(X1), s(X2)) -> PG_IN_GGAA(X1, X2)

The TRS R consists of the following rules:

   ackermanncC_in_gga(X1, 0) -> U46_gga(X1, ackermanncD_in_ga(X1))
   ackermanncC_in_gga(X1, s(X2)) -> U47_gga(X1, X2, qcG_in_ggaa(X1, X2))
   U46_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   U47_gga(X1, X2, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncD_in_ga(0) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1)) -> U41_ga(X1, ackermanncB_in_ga(X1))
   qcG_in_ggaa(X1, X2) -> U48_ggaa(X1, X2, ackermanncC_in_gga(X1, X2))
   U41_ga(X1, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, ackermanncF_in_gga(X1, X3))
   U48_ggaa(X1, X2, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, ackermanncE_in_gga(X1, X3))
   ackermanncB_in_ga(X1) -> U40_ga(X1, ackermanncD_in_ga(X1))
   U42_ga(X1, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U49_ggaa(X1, X2, X3, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U40_ga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncF_in_gga(0, X1) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0) -> U43_gga(X1, ackermanncD_in_ga(X1))
   ackermanncF_in_gga(s(X1), s(X2)) -> U44_gga(X1, X2, ackermanncF_in_gga(s(X1), X2))
   ackermanncE_in_gga(0, X1) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0) -> U50_gga(X1, ackermanncD_in_ga(X1))
   ackermanncE_in_gga(s(X1), s(X2)) -> U51_gga(X1, X2, qcG_in_ggaa(X1, X2))
   U43_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, ackermanncF_in_gga(X1, X4))
   U50_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   U51_gga(X1, X2, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U45_gga(X1, X2, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)

The set Q consists of the following terms:

   ackermanncC_in_gga(x0, x1)
   U46_gga(x0, x1)
   U47_gga(x0, x1, x2)
   ackermanncD_in_ga(x0)
   qcG_in_ggaa(x0, x1)
   U41_ga(x0, x1)
   U48_ggaa(x0, x1, x2)
   ackermanncB_in_ga(x0)
   U42_ga(x0, x1)
   U49_ggaa(x0, x1, x2, x3)
   U40_ga(x0, x1)
   ackermanncF_in_gga(x0, x1)
   ackermanncE_in_gga(x0, x1)
   U43_gga(x0, x1)
   U44_gga(x0, x1, x2)
   U50_gga(x0, x1)
   U51_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(101) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PG_IN_GGAA(X1, X2) -> ACKERMANNC_IN_GGA(X1, X2)
The graph contains the following edges 1 >= 1, 2 >= 2


*PG_IN_GGAA(X1, X2) -> U12_GGAA(X1, X2, ackermanncC_in_gga(X1, X2))
The graph contains the following edges 1 >= 1, 2 >= 2


*ACKERMANNC_IN_GGA(X1, s(X2)) -> PG_IN_GGAA(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*ACKERMANNE_IN_GGA(s(X1), s(X2)) -> PG_IN_GGAA(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


*U12_GGAA(X1, X2, ackermanncC_out_gga(X1, X2, X3)) -> ACKERMANNE_IN_GGA(X1, X3)
The graph contains the following edges 1 >= 1, 3 > 1, 3 > 2


----------------------------------------

(102)
YES

----------------------------------------

(103)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PG_IN_GAAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GAA(X1, X2, X3)
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> PG_IN_GAAA(X1, X2, X4, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNC_IN_GAA(x1, x2, x3)  =  ACKERMANNC_IN_GAA(x1)

PG_IN_GAAA(x1, x2, x3, x4)  =  PG_IN_GAAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(104) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(105)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PG_IN_GAAA(X1, X2, X3, X4) -> ACKERMANNC_IN_GAA(X1, X2, X3)
   ACKERMANNC_IN_GAA(X1, s(X2), X3) -> PG_IN_GAAA(X1, X2, X4, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ACKERMANNC_IN_GAA(x1, x2, x3)  =  ACKERMANNC_IN_GAA(x1)

PG_IN_GAAA(x1, x2, x3, x4)  =  PG_IN_GAAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(106) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PG_IN_GAAA(X1) -> ACKERMANNC_IN_GAA(X1)
   ACKERMANNC_IN_GAA(X1) -> PG_IN_GAAA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(108) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = ACKERMANNC_IN_GAA(X1') evaluates to  t =ACKERMANNC_IN_GAA(X1')

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

ACKERMANNC_IN_GAA(X1') -> PG_IN_GAAA(X1')
with rule ACKERMANNC_IN_GAA(X1'') -> PG_IN_GAAA(X1'') at position [] and matcher [X1'' / X1']

PG_IN_GAAA(X1') -> ACKERMANNC_IN_GAA(X1')
with rule PG_IN_GAAA(X1) -> ACKERMANNC_IN_GAA(X1)

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(109)
NO

----------------------------------------

(110)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   ackermanncC_in_gaa(X1, 0, X2) -> U46_gaa(X1, X2, ackermanncD_in_ga(X1, X2))
   U46_gaa(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gaa(X1, 0, X2)
   ackermanncC_in_gaa(X1, s(X2), X3) -> U47_gaa(X1, X2, X3, qcG_in_gaaa(X1, X2, X4, X3))
   qcG_in_gaaa(X1, X2, X3, X4) -> U48_gaaa(X1, X2, X3, X4, ackermanncC_in_gaa(X1, X2, X3))
   U48_gaaa(X1, X2, X3, X4, ackermanncC_out_gaa(X1, X2, X3)) -> U49_gaaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   U49_gaaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_gaaa(X1, X2, X3, X4)
   U47_gaa(X1, X2, X3, qcG_out_gaaa(X1, X2, X4, X3)) -> ackermanncC_out_gaa(X1, s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ackermanncC_in_gaa(x1, x2, x3)  =  ackermanncC_in_gaa(x1)

U46_gaa(x1, x2, x3)  =  U46_gaa(x1, x3)

ackermanncC_out_gaa(x1, x2, x3)  =  ackermanncC_out_gaa(x1, x2, x3)

U47_gaa(x1, x2, x3, x4)  =  U47_gaa(x1, x4)

qcG_in_gaaa(x1, x2, x3, x4)  =  qcG_in_gaaa(x1)

U48_gaaa(x1, x2, x3, x4, x5)  =  U48_gaaa(x1, x5)

U49_gaaa(x1, x2, x3, x4, x5)  =  U49_gaaa(x1, x2, x3, x5)

qcG_out_gaaa(x1, x2, x3, x4)  =  qcG_out_gaaa(x1, x2, x3, x4)

ACKERMANNA_IN_GGG(x1, x2, x3)  =  ACKERMANNA_IN_GGG(x1, x2, x3)

U17_GGG(x1, x2, x3)  =  U17_GGG(x1, x2, x3)

U20_GGG(x1, x2, x3, x4)  =  U20_GGG(x1, x2, x3, x4)

U23_GGG(x1, x2, x3)  =  U23_GGG(x1, x2, x3)

U26_GGG(x1, x2, x3, x4)  =  U26_GGG(x1, x2, x3, x4)

U28_GGG(x1, x2, x3, x4)  =  U28_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(111) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(112)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1, X3))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1, X3))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2, X4))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4, X5))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1, X2) -> U40_ga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncC_in_gga(X1, 0, X2) -> U46_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncC_in_gga(X1, s(X2), X3) -> U47_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   ackermanncD_in_ga(0, s(s(0))) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1), X2) -> U41_ga(X1, X2, ackermanncB_in_ga(X1, X3))
   ackermanncE_in_gga(0, X1, s(X1)) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0, X2) -> U50_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncE_in_gga(s(X1), s(X2), X3) -> U51_gga(X1, X2, X3, qcG_in_ggaa(X1, X2, X4, X3))
   U40_ga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   U46_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   U47_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   U41_ga(X1, X2, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, X2, ackermanncF_in_gga(X1, X3, X2))
   U50_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   U51_gga(X1, X2, X3, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   qcG_in_ggaa(X1, X2, X3, X4) -> U48_ggaa(X1, X2, X3, X4, ackermanncC_in_gga(X1, X2, X3))
   U42_ga(X1, X2, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U48_ggaa(X1, X2, X3, X4, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, X4, ackermanncE_in_gga(X1, X3, X4))
   ackermanncF_in_gga(0, X1, s(X1)) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0, X2) -> U43_gga(X1, X2, ackermanncD_in_ga(X1, X2))
   ackermanncF_in_gga(s(X1), s(X2), X3) -> U44_gga(X1, X2, X3, ackermanncF_in_gga(s(X1), X2, X4))
   U49_ggaa(X1, X2, X3, X4, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U43_gga(X1, X2, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, X3, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, X3, ackermanncF_in_gga(X1, X4, X3))
   U45_gga(X1, X2, X3, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

ackermanncB_in_ga(x1, x2)  =  ackermanncB_in_ga(x1)

U40_ga(x1, x2, x3)  =  U40_ga(x1, x3)

ackermanncD_in_ga(x1, x2)  =  ackermanncD_in_ga(x1)

0  =  0

ackermanncD_out_ga(x1, x2)  =  ackermanncD_out_ga(x1, x2)

U41_ga(x1, x2, x3)  =  U41_ga(x1, x3)

ackermanncB_out_ga(x1, x2)  =  ackermanncB_out_ga(x1, x2)

U42_ga(x1, x2, x3)  =  U42_ga(x1, x3)

ackermanncF_in_gga(x1, x2, x3)  =  ackermanncF_in_gga(x1, x2)

ackermanncF_out_gga(x1, x2, x3)  =  ackermanncF_out_gga(x1, x2, x3)

U43_gga(x1, x2, x3)  =  U43_gga(x1, x3)

U44_gga(x1, x2, x3, x4)  =  U44_gga(x1, x2, x4)

U45_gga(x1, x2, x3, x4)  =  U45_gga(x1, x2, x4)

ackermanncC_in_gga(x1, x2, x3)  =  ackermanncC_in_gga(x1, x2)

U46_gga(x1, x2, x3)  =  U46_gga(x1, x3)

ackermanncC_out_gga(x1, x2, x3)  =  ackermanncC_out_gga(x1, x2, x3)

U47_gga(x1, x2, x3, x4)  =  U47_gga(x1, x2, x4)

qcG_in_ggaa(x1, x2, x3, x4)  =  qcG_in_ggaa(x1, x2)

U48_ggaa(x1, x2, x3, x4, x5)  =  U48_ggaa(x1, x2, x5)

U49_ggaa(x1, x2, x3, x4, x5)  =  U49_ggaa(x1, x2, x3, x5)

ackermanncE_in_gga(x1, x2, x3)  =  ackermanncE_in_gga(x1, x2)

ackermanncE_out_gga(x1, x2, x3)  =  ackermanncE_out_gga(x1, x2, x3)

U50_gga(x1, x2, x3)  =  U50_gga(x1, x3)

U51_gga(x1, x2, x3, x4)  =  U51_gga(x1, x2, x4)

qcG_out_ggaa(x1, x2, x3, x4)  =  qcG_out_ggaa(x1, x2, x3, x4)

ACKERMANNA_IN_GGG(x1, x2, x3)  =  ACKERMANNA_IN_GGG(x1, x2, x3)

U17_GGG(x1, x2, x3)  =  U17_GGG(x1, x2, x3)

U20_GGG(x1, x2, x3, x4)  =  U20_GGG(x1, x2, x3, x4)

U23_GGG(x1, x2, x3)  =  U23_GGG(x1, x2, x3)

U26_GGG(x1, x2, x3, x4)  =  U26_GGG(x1, x2, x3, x4)

U28_GGG(x1, x2, x3, x4)  =  U28_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(113) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(114)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1))
   U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2))
   U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
   ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1))
   U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
   ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2))
   U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4))
   U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)

The TRS R consists of the following rules:

   ackermanncB_in_ga(X1) -> U40_ga(X1, ackermanncD_in_ga(X1))
   ackermanncC_in_gga(X1, 0) -> U46_gga(X1, ackermanncD_in_ga(X1))
   ackermanncC_in_gga(X1, s(X2)) -> U47_gga(X1, X2, qcG_in_ggaa(X1, X2))
   ackermanncD_in_ga(0) -> ackermanncD_out_ga(0, s(s(0)))
   ackermanncD_in_ga(s(X1)) -> U41_ga(X1, ackermanncB_in_ga(X1))
   ackermanncE_in_gga(0, X1) -> ackermanncE_out_gga(0, X1, s(X1))
   ackermanncE_in_gga(s(X1), 0) -> U50_gga(X1, ackermanncD_in_ga(X1))
   ackermanncE_in_gga(s(X1), s(X2)) -> U51_gga(X1, X2, qcG_in_ggaa(X1, X2))
   U40_ga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncB_out_ga(X1, X2)
   U46_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncC_out_gga(X1, 0, X2)
   U47_gga(X1, X2, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncC_out_gga(X1, s(X2), X3)
   U41_ga(X1, ackermanncB_out_ga(X1, X3)) -> U42_ga(X1, ackermanncF_in_gga(X1, X3))
   U50_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncE_out_gga(s(X1), 0, X2)
   U51_gga(X1, X2, qcG_out_ggaa(X1, X2, X4, X3)) -> ackermanncE_out_gga(s(X1), s(X2), X3)
   qcG_in_ggaa(X1, X2) -> U48_ggaa(X1, X2, ackermanncC_in_gga(X1, X2))
   U42_ga(X1, ackermanncF_out_gga(X1, X3, X2)) -> ackermanncD_out_ga(s(X1), X2)
   U48_ggaa(X1, X2, ackermanncC_out_gga(X1, X2, X3)) -> U49_ggaa(X1, X2, X3, ackermanncE_in_gga(X1, X3))
   ackermanncF_in_gga(0, X1) -> ackermanncF_out_gga(0, X1, s(X1))
   ackermanncF_in_gga(s(X1), 0) -> U43_gga(X1, ackermanncD_in_ga(X1))
   ackermanncF_in_gga(s(X1), s(X2)) -> U44_gga(X1, X2, ackermanncF_in_gga(s(X1), X2))
   U49_ggaa(X1, X2, X3, ackermanncE_out_gga(X1, X3, X4)) -> qcG_out_ggaa(X1, X2, X3, X4)
   U43_gga(X1, ackermanncD_out_ga(X1, X2)) -> ackermanncF_out_gga(s(X1), 0, X2)
   U44_gga(X1, X2, ackermanncF_out_gga(s(X1), X2, X4)) -> U45_gga(X1, X2, ackermanncF_in_gga(X1, X4))
   U45_gga(X1, X2, ackermanncF_out_gga(X1, X4, X3)) -> ackermanncF_out_gga(s(X1), s(X2), X3)

The set Q consists of the following terms:

   ackermanncB_in_ga(x0)
   ackermanncC_in_gga(x0, x1)
   ackermanncD_in_ga(x0)
   ackermanncE_in_gga(x0, x1)
   U40_ga(x0, x1)
   U46_gga(x0, x1)
   U47_gga(x0, x1, x2)
   U41_ga(x0, x1)
   U50_gga(x0, x1)
   U51_gga(x0, x1, x2)
   qcG_in_ggaa(x0, x1)
   U42_ga(x0, x1)
   U48_ggaa(x0, x1, x2)
   ackermanncF_in_gga(x0, x1)
   U49_ggaa(x0, x1, x2, x3)
   U43_gga(x0, x1)
   U44_gga(x0, x1, x2)
   U45_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(115) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U17_GGG(X1, X2, ackermanncB_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
The graph contains the following edges 1 >= 1, 3 > 1, 3 > 2, 2 >= 3


*ACKERMANNA_IN_GGG(s(s(X1)), 0, X2) -> U17_GGG(X1, X2, ackermanncB_in_ga(X1))
The graph contains the following edges 1 > 1, 3 >= 2


*U26_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> U28_GGG(X1, X2, X3, ackermanncE_in_gga(X1, X4))
The graph contains the following edges 1 >= 1, 4 > 1, 2 >= 2, 4 > 2, 3 >= 3


*U20_GGG(X1, X2, X3, ackermanncC_out_gga(X1, X2, X4)) -> ACKERMANNA_IN_GGG(X1, X4, X3)
The graph contains the following edges 1 >= 1, 4 > 1, 4 > 2, 3 >= 3


*ACKERMANNA_IN_GGG(s(X1), s(X2), X3) -> U20_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2))
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*U23_GGG(X1, X2, ackermanncD_out_ga(X1, X3)) -> ACKERMANNA_IN_GGG(X1, X3, X2)
The graph contains the following edges 1 >= 1, 3 > 1, 3 > 2, 2 >= 3


*U28_GGG(X1, X2, X3, ackermanncE_out_gga(X1, X4, X5)) -> ACKERMANNA_IN_GGG(X1, X5, X3)
The graph contains the following edges 1 >= 1, 4 > 1, 4 > 2, 3 >= 3


*ACKERMANNA_IN_GGG(s(X1), s(0), X2) -> U23_GGG(X1, X2, ackermanncD_in_ga(X1))
The graph contains the following edges 1 > 1, 3 >= 2


*ACKERMANNA_IN_GGG(s(X1), s(s(X2)), X3) -> U26_GGG(X1, X2, X3, ackermanncC_in_gga(X1, X2))
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


----------------------------------------

(116)
YES

----------------------------------------

(117) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ackermann (0) N (s N))",
                null
            ],
            [
                "(ackermann (s M) (0) Val)",
                "(ackermann M (s (0)) Val)"
            ],
            [
                "(ackermann (s M) (s N) Val)",
                "(',' (ackermann (s M) N Val1) (ackermann M Val1 Val))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "393": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T35) (0) X81) (ackermann T35 X81 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T35"],
                    "free": [
                        "X82",
                        "X81"
                    ],
                    "exprvars": []
                }
            },
            "394": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "472": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "110": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "473": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "430": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T48 (s (0)) X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T48"],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "474": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "475": {
                "goal": [{
                    "clause": 1,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "432": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "510": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "511": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T82) T83 X163)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T83"
                    ],
                    "free": ["X163"],
                    "exprvars": []
                }
            },
            "116": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T74 (s (0)) T75)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T74",
                        "T75"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "512": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T82 T85 T84)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T84",
                        "T85"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "117": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "513": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T94) T97 X180) (ackermann T94 X180 T96))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T94",
                        "T96"
                    ],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "514": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "515": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "516": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T94 T98 T96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T94",
                        "T96"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "517": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "518": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "519": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "281": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T24) (0) X35) (ackermann T24 X35 T25))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25"
                    ],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "282": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "286": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "287": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "520": {
                "goal": [{
                    "clause": 2,
                    "scope": 7,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "521": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T103 (s (0)) X200)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T103"],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "522": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "527": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T108) T110 X215) (ackermann T108 X215 X216))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": [
                        "X216",
                        "X215"
                    ],
                    "exprvars": []
                }
            },
            "528": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "529": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T108) T110 X215)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X215"],
                    "exprvars": []
                }
            },
            "291": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "294": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "297": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "330": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "298": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "452": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T53) T54 X123) (ackermann T53 X123 X124))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T54"
                    ],
                    "free": [
                        "X124",
                        "X123"
                    ],
                    "exprvars": []
                }
            },
            "134": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "530": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "256": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "333": {
                "goal": [{
                    "clause": 0,
                    "scope": 4,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "531": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "334": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "532": {
                "goal": [{
                    "clause": 0,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "137": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "335": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "533": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "259": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "336": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "413": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T35) (0) X81)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T35"],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "534": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "337": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "414": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T53) T54 X123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T54"
                    ],
                    "free": ["X123"],
                    "exprvars": []
                }
            },
            "535": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "338": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T53 T55 X124)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T55"
                    ],
                    "free": ["X124"],
                    "exprvars": []
                }
            },
            "536": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "537": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "417": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "538": {
                "goal": [{
                    "clause": 2,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "418": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "539": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T123 (s (0)) X242)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T123"],
                    "free": ["X242"],
                    "exprvars": []
                }
            },
            "419": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "260": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "263": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "264": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "462": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "265": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "540": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "541": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T128) T130 X257) (ackermann T128 X257 X258))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T128"],
                    "free": [
                        "X258",
                        "X257"
                    ],
                    "exprvars": []
                }
            },
            "465": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "542": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "268": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "422": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "104": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "423": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [{
                    "clause": 0,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "105": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "424": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "469": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "108": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "427": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "109": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "428": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "509": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T82) T83 X163) (ackermann T82 X163 T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T83",
                        "T84"
                    ],
                    "free": ["X163"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 104,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 105,
                "label": "PARALLEL"
            },
            {
                "from": 104,
                "to": 108,
                "label": "EVAL with clause\nackermann(0, X5, s(X5)).\nand substitutionT1 -> 0,\nT2 -> T8,\nX5 -> T8,\nT3 -> s(T8)"
            },
            {
                "from": 104,
                "to": 109,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 105,
                "to": 116,
                "label": "PARALLEL"
            },
            {
                "from": 105,
                "to": 117,
                "label": "PARALLEL"
            },
            {
                "from": 108,
                "to": 110,
                "label": "SUCCESS"
            },
            {
                "from": 116,
                "to": 134,
                "label": "EVAL with clause\nackermann(s(X14), 0, X15) :- ackermann(X14, s(0), X15).\nand substitutionX14 -> T17,\nT1 -> s(T17),\nT2 -> 0,\nT3 -> T18,\nX15 -> T18"
            },
            {
                "from": 116,
                "to": 137,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 117,
                "to": 513,
                "label": "EVAL with clause\nackermann(s(X177), s(X178), X179) :- ','(ackermann(s(X177), X178, X180), ackermann(X177, X180, X179)).\nand substitutionX177 -> T94,\nT1 -> s(T94),\nX178 -> T97,\nT2 -> s(T97),\nT3 -> T96,\nX179 -> T96,\nT95 -> T97"
            },
            {
                "from": 117,
                "to": 514,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 134,
                "to": 256,
                "label": "CASE"
            },
            {
                "from": 256,
                "to": 259,
                "label": "PARALLEL"
            },
            {
                "from": 256,
                "to": 260,
                "label": "PARALLEL"
            },
            {
                "from": 259,
                "to": 263,
                "label": "EVAL with clause\nackermann(0, X22, s(X22)).\nand substitutionT17 -> 0,\nX22 -> s(0),\nT18 -> s(s(0))"
            },
            {
                "from": 259,
                "to": 264,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 260,
                "to": 268,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 263,
                "to": 265,
                "label": "SUCCESS"
            },
            {
                "from": 268,
                "to": 281,
                "label": "EVAL with clause\nackermann(s(X32), s(X33), X34) :- ','(ackermann(s(X32), X33, X35), ackermann(X32, X35, X34)).\nand substitutionX32 -> T24,\nT17 -> s(T24),\nX33 -> 0,\nT18 -> T25,\nX34 -> T25"
            },
            {
                "from": 268,
                "to": 282,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 281,
                "to": 286,
                "label": "SPLIT 1"
            },
            {
                "from": 281,
                "to": 287,
                "label": "SPLIT 2\nnew knowledge:\nT24 is ground\nT26 is ground\nreplacements:X35 -> T26"
            },
            {
                "from": 286,
                "to": 291,
                "label": "CASE"
            },
            {
                "from": 287,
                "to": 465,
                "label": "CASE"
            },
            {
                "from": 291,
                "to": 294,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 294,
                "to": 297,
                "label": "PARALLEL"
            },
            {
                "from": 294,
                "to": 298,
                "label": "PARALLEL"
            },
            {
                "from": 297,
                "to": 325,
                "label": "ONLY EVAL with clause\nackermann(s(X57), 0, X58) :- ackermann(X57, s(0), X58).\nand substitutionT24 -> T31,\nX57 -> T31,\nX35 -> X59,\nX58 -> X59"
            },
            {
                "from": 298,
                "to": 462,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), s(N), Val) :- ','(ackermann(s(M), N, Val1), ackermann(M, Val1, Val))because of non-unification"
            },
            {
                "from": 325,
                "to": 330,
                "label": "CASE"
            },
            {
                "from": 330,
                "to": 333,
                "label": "PARALLEL"
            },
            {
                "from": 330,
                "to": 334,
                "label": "PARALLEL"
            },
            {
                "from": 333,
                "to": 335,
                "label": "EVAL with clause\nackermann(0, X66, s(X66)).\nand substitutionT31 -> 0,\nX66 -> s(0),\nX59 -> s(s(0))"
            },
            {
                "from": 333,
                "to": 336,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 334,
                "to": 338,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 335,
                "to": 337,
                "label": "SUCCESS"
            },
            {
                "from": 338,
                "to": 393,
                "label": "EVAL with clause\nackermann(s(X78), s(X79), X80) :- ','(ackermann(s(X78), X79, X81), ackermann(X78, X81, X80)).\nand substitutionX78 -> T35,\nT31 -> s(T35),\nX79 -> 0,\nX59 -> X82,\nX80 -> X82"
            },
            {
                "from": 338,
                "to": 394,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 393,
                "to": 413,
                "label": "SPLIT 1"
            },
            {
                "from": 393,
                "to": 414,
                "label": "SPLIT 2\nnew knowledge:\nT35 is ground\nT36 is ground\nreplacements:X81 -> T36"
            },
            {
                "from": 413,
                "to": 286,
                "label": "INSTANCE with matching:\nT24 -> T35\nX35 -> X81"
            },
            {
                "from": 414,
                "to": 417,
                "label": "CASE"
            },
            {
                "from": 417,
                "to": 418,
                "label": "PARALLEL"
            },
            {
                "from": 417,
                "to": 419,
                "label": "PARALLEL"
            },
            {
                "from": 418,
                "to": 422,
                "label": "EVAL with clause\nackermann(0, X93, s(X93)).\nand substitutionT35 -> 0,\nT36 -> T43,\nX93 -> T43,\nX82 -> s(T43)"
            },
            {
                "from": 418,
                "to": 423,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 419,
                "to": 427,
                "label": "PARALLEL"
            },
            {
                "from": 419,
                "to": 428,
                "label": "PARALLEL"
            },
            {
                "from": 422,
                "to": 424,
                "label": "SUCCESS"
            },
            {
                "from": 427,
                "to": 430,
                "label": "EVAL with clause\nackermann(s(X106), 0, X107) :- ackermann(X106, s(0), X107).\nand substitutionX106 -> T48,\nT35 -> s(T48),\nT36 -> 0,\nX82 -> X108,\nX107 -> X108"
            },
            {
                "from": 427,
                "to": 432,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 428,
                "to": 452,
                "label": "EVAL with clause\nackermann(s(X120), s(X121), X122) :- ','(ackermann(s(X120), X121, X123), ackermann(X120, X123, X122)).\nand substitutionX120 -> T53,\nT35 -> s(T53),\nX121 -> T54,\nT36 -> s(T54),\nX82 -> X124,\nX122 -> X124"
            },
            {
                "from": 428,
                "to": 454,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 430,
                "to": 325,
                "label": "INSTANCE with matching:\nT31 -> T48\nX59 -> X108"
            },
            {
                "from": 452,
                "to": 458,
                "label": "SPLIT 1"
            },
            {
                "from": 452,
                "to": 459,
                "label": "SPLIT 2\nnew knowledge:\nT53 is ground\nT54 is ground\nT55 is ground\nreplacements:X123 -> T55"
            },
            {
                "from": 458,
                "to": 414,
                "label": "INSTANCE with matching:\nT35 -> s(T53)\nT36 -> T54\nX82 -> X123"
            },
            {
                "from": 459,
                "to": 414,
                "label": "INSTANCE with matching:\nT35 -> T53\nT36 -> T55\nX82 -> X124"
            },
            {
                "from": 465,
                "to": 467,
                "label": "PARALLEL"
            },
            {
                "from": 465,
                "to": 469,
                "label": "PARALLEL"
            },
            {
                "from": 467,
                "to": 472,
                "label": "EVAL with clause\nackermann(0, X140, s(X140)).\nand substitutionT24 -> 0,\nT26 -> T65,\nX140 -> T65,\nT25 -> s(T65)"
            },
            {
                "from": 467,
                "to": 473,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 469,
                "to": 475,
                "label": "PARALLEL"
            },
            {
                "from": 469,
                "to": 476,
                "label": "PARALLEL"
            },
            {
                "from": 472,
                "to": 474,
                "label": "SUCCESS"
            },
            {
                "from": 475,
                "to": 479,
                "label": "EVAL with clause\nackermann(s(X149), 0, X150) :- ackermann(X149, s(0), X150).\nand substitutionX149 -> T74,\nT24 -> s(T74),\nT26 -> 0,\nT25 -> T75,\nX150 -> T75"
            },
            {
                "from": 475,
                "to": 480,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 476,
                "to": 509,
                "label": "EVAL with clause\nackermann(s(X160), s(X161), X162) :- ','(ackermann(s(X160), X161, X163), ackermann(X160, X163, X162)).\nand substitutionX160 -> T82,\nT24 -> s(T82),\nX161 -> T83,\nT26 -> s(T83),\nT25 -> T84,\nX162 -> T84"
            },
            {
                "from": 476,
                "to": 510,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 479,
                "to": 134,
                "label": "INSTANCE with matching:\nT17 -> T74\nT18 -> T75"
            },
            {
                "from": 509,
                "to": 511,
                "label": "SPLIT 1"
            },
            {
                "from": 509,
                "to": 512,
                "label": "SPLIT 2\nnew knowledge:\nT82 is ground\nT83 is ground\nT85 is ground\nreplacements:X163 -> T85"
            },
            {
                "from": 511,
                "to": 414,
                "label": "INSTANCE with matching:\nT35 -> s(T82)\nT36 -> T83\nX82 -> X163"
            },
            {
                "from": 512,
                "to": 287,
                "label": "INSTANCE with matching:\nT24 -> T82\nT26 -> T85\nT25 -> T84"
            },
            {
                "from": 513,
                "to": 515,
                "label": "SPLIT 1"
            },
            {
                "from": 513,
                "to": 516,
                "label": "SPLIT 2\nnew knowledge:\nT94 is ground\nreplacements:X180 -> T98"
            },
            {
                "from": 515,
                "to": 517,
                "label": "CASE"
            },
            {
                "from": 516,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T94\nT2 -> T98\nT3 -> T96"
            },
            {
                "from": 517,
                "to": 518,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 518,
                "to": 519,
                "label": "PARALLEL"
            },
            {
                "from": 518,
                "to": 520,
                "label": "PARALLEL"
            },
            {
                "from": 519,
                "to": 521,
                "label": "EVAL with clause\nackermann(s(X198), 0, X199) :- ackermann(X198, s(0), X199).\nand substitutionT94 -> T103,\nX198 -> T103,\nT97 -> 0,\nX180 -> X200,\nX199 -> X200"
            },
            {
                "from": 519,
                "to": 522,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 520,
                "to": 527,
                "label": "EVAL with clause\nackermann(s(X212), s(X213), X214) :- ','(ackermann(s(X212), X213, X215), ackermann(X212, X215, X214)).\nand substitutionT94 -> T108,\nX212 -> T108,\nX213 -> T110,\nT97 -> s(T110),\nX180 -> X216,\nX214 -> X216,\nT109 -> T110"
            },
            {
                "from": 520,
                "to": 528,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 521,
                "to": 325,
                "label": "INSTANCE with matching:\nT31 -> T103\nX59 -> X200"
            },
            {
                "from": 527,
                "to": 529,
                "label": "SPLIT 1"
            },
            {
                "from": 527,
                "to": 530,
                "label": "SPLIT 2\nnew knowledge:\nT108 is ground\nreplacements:X215 -> T111"
            },
            {
                "from": 529,
                "to": 515,
                "label": "INSTANCE with matching:\nT94 -> T108\nT97 -> T110\nX180 -> X215"
            },
            {
                "from": 530,
                "to": 531,
                "label": "CASE"
            },
            {
                "from": 531,
                "to": 532,
                "label": "PARALLEL"
            },
            {
                "from": 531,
                "to": 533,
                "label": "PARALLEL"
            },
            {
                "from": 532,
                "to": 534,
                "label": "EVAL with clause\nackermann(0, X227, s(X227)).\nand substitutionT108 -> 0,\nT111 -> T118,\nX227 -> T118,\nX216 -> s(T118)"
            },
            {
                "from": 532,
                "to": 535,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 533,
                "to": 537,
                "label": "PARALLEL"
            },
            {
                "from": 533,
                "to": 538,
                "label": "PARALLEL"
            },
            {
                "from": 534,
                "to": 536,
                "label": "SUCCESS"
            },
            {
                "from": 537,
                "to": 539,
                "label": "EVAL with clause\nackermann(s(X240), 0, X241) :- ackermann(X240, s(0), X241).\nand substitutionX240 -> T123,\nT108 -> s(T123),\nT111 -> 0,\nX216 -> X242,\nX241 -> X242"
            },
            {
                "from": 537,
                "to": 540,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 538,
                "to": 541,
                "label": "EVAL with clause\nackermann(s(X254), s(X255), X256) :- ','(ackermann(s(X254), X255, X257), ackermann(X254, X257, X256)).\nand substitutionX254 -> T128,\nT108 -> s(T128),\nX255 -> T130,\nT111 -> s(T130),\nX216 -> X258,\nX256 -> X258,\nT129 -> T130"
            },
            {
                "from": 538,
                "to": 542,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 539,
                "to": 325,
                "label": "INSTANCE with matching:\nT31 -> T123\nX59 -> X242"
            },
            {
                "from": 541,
                "to": 527,
                "label": "INSTANCE with matching:\nT108 -> T128\nT110 -> T130\nX215 -> X257\nX216 -> X258"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(118)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.

----------------------------------------

(119) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(120)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(s(T17), T18) -> U1^1(f134_in(T17, T18), s(T17), T18)
   F3_IN(s(T17), T18) -> F134_IN(T17, T18)
   F3_IN(s(T94), T96) -> U2^1(f513_in(T94, T96), s(T94), T96)
   F3_IN(s(T94), T96) -> F513_IN(T94, T96)
   F286_IN(T31) -> U3^1(f325_in(T31), T31)
   F286_IN(T31) -> F325_IN(T31)
   F325_IN(s(T35)) -> U4^1(f393_in(T35), s(T35))
   F325_IN(s(T35)) -> F393_IN(T35)
   F414_IN(s(T48), 0) -> U5^1(f325_in(T48), s(T48), 0)
   F414_IN(s(T48), 0) -> F325_IN(T48)
   F414_IN(s(T53), s(T54)) -> U6^1(f452_in(T53, T54), s(T53), s(T54))
   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
   F134_IN(s(T24), T25) -> U7^1(f281_in(T24, T25), s(T24), T25)
   F134_IN(s(T24), T25) -> F281_IN(T24, T25)
   F287_IN(s(T74), 0, T75) -> U8^1(f134_in(T74, T75), s(T74), 0, T75)
   F287_IN(s(T74), 0, T75) -> F134_IN(T74, T75)
   F287_IN(s(T82), s(T83), T84) -> U9^1(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   F287_IN(s(T82), s(T83), T84) -> F509_IN(T82, T83, T84)
   F515_IN(T103) -> U10^1(f325_in(T103), T103)
   F515_IN(T103) -> F325_IN(T103)
   F515_IN(T108) -> U11^1(f527_in(T108), T108)
   F515_IN(T108) -> F527_IN(T108)
   F530_IN(s(T123)) -> U12^1(f325_in(T123), s(T123))
   F530_IN(s(T123)) -> F325_IN(T123)
   F530_IN(s(T128)) -> U13^1(f527_in(T128), s(T128))
   F530_IN(s(T128)) -> F527_IN(T128)
   F281_IN(T24, T25) -> U14^1(f286_in(T24), T24, T25)
   F281_IN(T24, T25) -> F286_IN(T24)
   U14^1(f286_out1(T26), T24, T25) -> U15^1(f287_in(T24, T26, T25), T24, T25, T26)
   U14^1(f286_out1(T26), T24, T25) -> F287_IN(T24, T26, T25)
   F393_IN(T35) -> U16^1(f286_in(T35), T35)
   F393_IN(T35) -> F286_IN(T35)
   U16^1(f286_out1(T36), T35) -> U17^1(f414_in(T35, T36), T35, T36)
   U16^1(f286_out1(T36), T35) -> F414_IN(T35, T36)
   F452_IN(T53, T54) -> U18^1(f414_in(s(T53), T54), T53, T54)
   F452_IN(T53, T54) -> F414_IN(s(T53), T54)
   U18^1(f414_out1(T55), T53, T54) -> U19^1(f414_in(T53, T55), T53, T54, T55)
   U18^1(f414_out1(T55), T53, T54) -> F414_IN(T53, T55)
   F509_IN(T82, T83, T84) -> U20^1(f414_in(s(T82), T83), T82, T83, T84)
   F509_IN(T82, T83, T84) -> F414_IN(s(T82), T83)
   U20^1(f414_out1(T85), T82, T83, T84) -> U21^1(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U20^1(f414_out1(T85), T82, T83, T84) -> F287_IN(T82, T85, T84)
   F513_IN(T94, T96) -> U22^1(f515_in(T94), T94, T96)
   F513_IN(T94, T96) -> F515_IN(T94)
   U22^1(f515_out1, T94, T96) -> U23^1(f3_in(T94, T96), T94, T96)
   U22^1(f515_out1, T94, T96) -> F3_IN(T94, T96)
   F527_IN(T108) -> U24^1(f515_in(T108), T108)
   F527_IN(T108) -> F515_IN(T108)
   U24^1(f515_out1, T108) -> U25^1(f530_in(T108), T108)
   U24^1(f515_out1, T108) -> F530_IN(T108)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(121) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 25 less nodes.
----------------------------------------

(122)
Complex Obligation (AND)

----------------------------------------

(123)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F286_IN(T31) -> F325_IN(T31)
   F325_IN(s(T35)) -> F393_IN(T35)
   F393_IN(T35) -> U16^1(f286_in(T35), T35)
   U16^1(f286_out1(T36), T35) -> F414_IN(T35, T36)
   F414_IN(s(T48), 0) -> F325_IN(T48)
   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
   F452_IN(T53, T54) -> U18^1(f414_in(s(T53), T54), T53, T54)
   U18^1(f414_out1(T55), T53, T54) -> F414_IN(T53, T55)
   F452_IN(T53, T54) -> F414_IN(s(T53), T54)
   F393_IN(T35) -> F286_IN(T35)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(124) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F286_IN(T31) -> F325_IN(T31)
   F325_IN(s(T35)) -> F393_IN(T35)
   U16^1(f286_out1(T36), T35) -> F414_IN(T35, T36)
   F393_IN(T35) -> F286_IN(T35)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U16^1_2(x_1, x_2) ) = 2x_1 + x_2 + 2
POL( U18^1_3(x_1, ..., x_3) ) = x_2
POL( f286_in_1(x_1) ) = 0
POL( U3_2(x_1, x_2) ) = 0
POL( f325_in_1(x_1) ) = x_1
POL( f414_in_2(x_1, x_2) ) = max{0, x_1 + 2x_2 - 2}
POL( s_1(x_1) ) = 2x_1 + 2
POL( 0 ) = 2
POL( U5_3(x_1, ..., x_3) ) = 2x_1
POL( U6_3(x_1, ..., x_3) ) = 2
POL( f452_in_2(x_1, x_2) ) = 2x_1 + 2
POL( U4_2(x_1, x_2) ) = 2
POL( f393_in_1(x_1) ) = x_1 + 2
POL( f393_out1_2(x_1, x_2) ) = 0
POL( f325_out1_1(x_1) ) = 1
POL( U16_2(x_1, x_2) ) = 2
POL( f286_out1_1(x_1) ) = 0
POL( U17_3(x_1, ..., x_3) ) = 0
POL( U19_4(x_1, ..., x_4) ) = 0
POL( f414_out1_1(x_1) ) = 2
POL( f452_out1_2(x_1, x_2) ) = 0
POL( U18_3(x_1, ..., x_3) ) = 2x_2
POL( F286_IN_1(x_1) ) = 2x_1 + 1
POL( F325_IN_1(x_1) ) = 2x_1
POL( F393_IN_1(x_1) ) = 2x_1 + 2
POL( F414_IN_2(x_1, x_2) ) = max{0, x_1 - 2}
POL( F452_IN_2(x_1, x_2) ) = 2x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f286_in(T31) -> U3(f325_in(T31), T31)
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f393_in(T35) -> U16(f286_in(T35), T35)
   f325_in(0) -> f325_out1(s(s(0)))
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)


----------------------------------------

(125)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F393_IN(T35) -> U16^1(f286_in(T35), T35)
   F414_IN(s(T48), 0) -> F325_IN(T48)
   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
   F452_IN(T53, T54) -> U18^1(f414_in(s(T53), T54), T53, T54)
   U18^1(f414_out1(T55), T53, T54) -> F414_IN(T53, T55)
   F452_IN(T53, T54) -> F414_IN(s(T53), T54)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(126) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(127)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
   F452_IN(T53, T54) -> U18^1(f414_in(s(T53), T54), T53, T54)
   U18^1(f414_out1(T55), T53, T54) -> F414_IN(T53, T55)
   F452_IN(T53, T54) -> F414_IN(s(T53), T54)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(128) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U18^1(f414_out1(T55), T53, T54) -> F414_IN(T53, T55)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U18^1_3(x_1, ..., x_3) ) = x_2 + 1
POL( f414_in_2(x_1, x_2) ) = 0
POL( s_1(x_1) ) = x_1 + 1
POL( 0 ) = 1
POL( U5_3(x_1, ..., x_3) ) = max{0, 2x_3 - 2}
POL( f325_in_1(x_1) ) = 0
POL( U6_3(x_1, ..., x_3) ) = max{0, x_1 - 2}
POL( f452_in_2(x_1, x_2) ) = 0
POL( U4_2(x_1, x_2) ) = max{0, 2x_1 - 2}
POL( f393_in_1(x_1) ) = 0
POL( f393_out1_2(x_1, x_2) ) = 2x_1
POL( f325_out1_1(x_1) ) = max{0, x_1 - 1}
POL( U16_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( f286_in_1(x_1) ) = 0
POL( U3_2(x_1, x_2) ) = max{0, 2x_1 - 2}
POL( f286_out1_1(x_1) ) = 2x_1 + 2
POL( U17_3(x_1, ..., x_3) ) = max{0, 2x_1 - 2}
POL( U19_4(x_1, ..., x_4) ) = max{0, x_1 + 2x_4 - 2}
POL( f414_out1_1(x_1) ) = max{0, x_1 - 2}
POL( f452_out1_2(x_1, x_2) ) = x_1
POL( U18_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( F414_IN_2(x_1, x_2) ) = x_1
POL( F452_IN_2(x_1, x_2) ) = x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(129)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
   F452_IN(T53, T54) -> U18^1(f414_in(s(T53), T54), T53, T54)
   F452_IN(T53, T54) -> F414_IN(s(T53), T54)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(130) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(131)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F452_IN(T53, T54) -> F414_IN(s(T53), T54)
   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(132) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(133)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F452_IN(T53, T54) -> F414_IN(s(T53), T54)
   F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(134) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F414_IN(s(T53), s(T54)) -> F452_IN(T53, T54)
The graph contains the following edges 1 > 1, 2 > 2


*F452_IN(T53, T54) -> F414_IN(s(T53), T54)
The graph contains the following edges 2 >= 2


----------------------------------------

(135)
YES

----------------------------------------

(136)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F515_IN(T108) -> F527_IN(T108)
   F527_IN(T108) -> U24^1(f515_in(T108), T108)
   U24^1(f515_out1, T108) -> F530_IN(T108)
   F530_IN(s(T128)) -> F527_IN(T128)
   F527_IN(T108) -> F515_IN(T108)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(137) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   U24^1(f515_out1, T108) -> F530_IN(T108)
   F530_IN(s(T128)) -> F527_IN(T128)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( U24^1_2(x_1, x_2) ) = 2x_2 + 2
POL( f515_in_1(x_1) ) = 2
POL( U10_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( f325_in_1(x_1) ) = 2x_1
POL( U11_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( f527_in_1(x_1) ) = 0
POL( f527_out1 ) = 2
POL( f515_out1 ) = 2
POL( U24_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( U25_2(x_1, x_2) ) = max{0, 2x_1 - 2}
POL( f530_in_1(x_1) ) = 2
POL( 0 ) = 0
POL( f530_out1 ) = 1
POL( s_1(x_1) ) = x_1 + 2
POL( U12_2(x_1, x_2) ) = max{0, 2x_1 + 2x_2 - 2}
POL( U13_2(x_1, x_2) ) = max{0, 2x_1 - 2}
POL( f325_out1_1(x_1) ) = max{0, x_1 - 2}
POL( U4_2(x_1, x_2) ) = 2x_1 + 2
POL( f393_in_1(x_1) ) = 0
POL( f393_out1_2(x_1, x_2) ) = x_2
POL( U16_2(x_1, x_2) ) = 2x_2 + 2
POL( f286_in_1(x_1) ) = 2x_1 + 1
POL( U3_2(x_1, x_2) ) = max{0, 2x_1 - 2}
POL( f286_out1_1(x_1) ) = 2x_1 + 2
POL( U17_3(x_1, ..., x_3) ) = max{0, 2x_1 + 2x_3 - 2}
POL( f414_in_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( U19_4(x_1, ..., x_4) ) = max{0, 2x_1 - 2}
POL( f414_out1_1(x_1) ) = max{0, 2x_1 - 2}
POL( U5_3(x_1, ..., x_3) ) = 2x_3 + 2
POL( U6_3(x_1, ..., x_3) ) = 2x_1 + x_2 + 2
POL( f452_in_2(x_1, x_2) ) = x_1 + 2
POL( f452_out1_2(x_1, x_2) ) = 2x_1 + 1
POL( U18_3(x_1, ..., x_3) ) = 2
POL( F515_IN_1(x_1) ) = 2x_1 + 2
POL( F527_IN_1(x_1) ) = 2x_1 + 2
POL( F530_IN_1(x_1) ) = 2x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(138)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F515_IN(T108) -> F527_IN(T108)
   F527_IN(T108) -> U24^1(f515_in(T108), T108)
   F527_IN(T108) -> F515_IN(T108)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(139) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(140)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F527_IN(T108) -> F515_IN(T108)
   F515_IN(T108) -> F527_IN(T108)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(141) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(142)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F527_IN(T108) -> F515_IN(T108)
   F515_IN(T108) -> F527_IN(T108)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(143) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F515_IN(T108') evaluates to  t =F515_IN(T108')

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

F515_IN(T108') -> F527_IN(T108')
with rule F515_IN(T108'') -> F527_IN(T108'') at position [] and matcher [T108'' / T108']

F527_IN(T108') -> F515_IN(T108')
with rule F527_IN(T108) -> F515_IN(T108)

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(144)
NO

----------------------------------------

(145)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F281_IN(T24, T25) -> U14^1(f286_in(T24), T24, T25)
   U14^1(f286_out1(T26), T24, T25) -> F287_IN(T24, T26, T25)
   F287_IN(s(T74), 0, T75) -> F134_IN(T74, T75)
   F134_IN(s(T24), T25) -> F281_IN(T24, T25)
   F287_IN(s(T82), s(T83), T84) -> F509_IN(T82, T83, T84)
   F509_IN(T82, T83, T84) -> U20^1(f414_in(s(T82), T83), T82, T83, T84)
   U20^1(f414_out1(T85), T82, T83, T84) -> F287_IN(T82, T85, T84)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(146) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U14^1(f286_out1(T26), T24, T25) -> F287_IN(T24, T26, T25)
The graph contains the following edges 2 >= 1, 1 > 2, 3 >= 3


*F134_IN(s(T24), T25) -> F281_IN(T24, T25)
The graph contains the following edges 1 > 1, 2 >= 2


*F281_IN(T24, T25) -> U14^1(f286_in(T24), T24, T25)
The graph contains the following edges 1 >= 2, 2 >= 3


*U20^1(f414_out1(T85), T82, T83, T84) -> F287_IN(T82, T85, T84)
The graph contains the following edges 2 >= 1, 1 > 2, 4 >= 3


*F509_IN(T82, T83, T84) -> U20^1(f414_in(s(T82), T83), T82, T83, T84)
The graph contains the following edges 1 >= 2, 2 >= 3, 3 >= 4


*F287_IN(s(T74), 0, T75) -> F134_IN(T74, T75)
The graph contains the following edges 1 > 1, 3 >= 2


*F287_IN(s(T82), s(T83), T84) -> F509_IN(T82, T83, T84)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


----------------------------------------

(147)
YES

----------------------------------------

(148)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(s(T94), T96) -> F513_IN(T94, T96)
   F513_IN(T94, T96) -> U22^1(f515_in(T94), T94, T96)
   U22^1(f515_out1, T94, T96) -> F3_IN(T94, T96)

The TRS R consists of the following rules:

   f3_in(0, s(T8)) -> f3_out1
   f3_in(s(T17), T18) -> U1(f134_in(T17, T18), s(T17), T18)
   U1(f134_out1, s(T17), T18) -> f3_out1
   f3_in(s(T94), T96) -> U2(f513_in(T94, T96), s(T94), T96)
   U2(f513_out1, s(T94), T96) -> f3_out1
   f286_in(T31) -> U3(f325_in(T31), T31)
   U3(f325_out1(X59), T31) -> f286_out1(X59)
   f325_in(0) -> f325_out1(s(s(0)))
   f325_in(s(T35)) -> U4(f393_in(T35), s(T35))
   U4(f393_out1(X81, X82), s(T35)) -> f325_out1(X82)
   f414_in(0, T43) -> f414_out1(s(T43))
   f414_in(s(T48), 0) -> U5(f325_in(T48), s(T48), 0)
   U5(f325_out1(X108), s(T48), 0) -> f414_out1(X108)
   f414_in(s(T53), s(T54)) -> U6(f452_in(T53, T54), s(T53), s(T54))
   U6(f452_out1(X123, X124), s(T53), s(T54)) -> f414_out1(X124)
   f134_in(0, s(s(0))) -> f134_out1
   f134_in(s(T24), T25) -> U7(f281_in(T24, T25), s(T24), T25)
   U7(f281_out1(X35), s(T24), T25) -> f134_out1
   f287_in(0, T65, s(T65)) -> f287_out1
   f287_in(s(T74), 0, T75) -> U8(f134_in(T74, T75), s(T74), 0, T75)
   U8(f134_out1, s(T74), 0, T75) -> f287_out1
   f287_in(s(T82), s(T83), T84) -> U9(f509_in(T82, T83, T84), s(T82), s(T83), T84)
   U9(f509_out1(X163), s(T82), s(T83), T84) -> f287_out1
   f515_in(T103) -> U10(f325_in(T103), T103)
   U10(f325_out1(X200), T103) -> f515_out1
   f515_in(T108) -> U11(f527_in(T108), T108)
   U11(f527_out1, T108) -> f515_out1
   f530_in(0) -> f530_out1
   f530_in(s(T123)) -> U12(f325_in(T123), s(T123))
   U12(f325_out1(X242), s(T123)) -> f530_out1
   f530_in(s(T128)) -> U13(f527_in(T128), s(T128))
   U13(f527_out1, s(T128)) -> f530_out1
   f281_in(T24, T25) -> U14(f286_in(T24), T24, T25)
   U14(f286_out1(T26), T24, T25) -> U15(f287_in(T24, T26, T25), T24, T25, T26)
   U15(f287_out1, T24, T25, T26) -> f281_out1(T26)
   f393_in(T35) -> U16(f286_in(T35), T35)
   U16(f286_out1(T36), T35) -> U17(f414_in(T35, T36), T35, T36)
   U17(f414_out1(X82), T35, T36) -> f393_out1(T36, X82)
   f452_in(T53, T54) -> U18(f414_in(s(T53), T54), T53, T54)
   U18(f414_out1(T55), T53, T54) -> U19(f414_in(T53, T55), T53, T54, T55)
   U19(f414_out1(X124), T53, T54, T55) -> f452_out1(T55, X124)
   f509_in(T82, T83, T84) -> U20(f414_in(s(T82), T83), T82, T83, T84)
   U20(f414_out1(T85), T82, T83, T84) -> U21(f287_in(T82, T85, T84), T82, T83, T84, T85)
   U21(f287_out1, T82, T83, T84, T85) -> f509_out1(T85)
   f513_in(T94, T96) -> U22(f515_in(T94), T94, T96)
   U22(f515_out1, T94, T96) -> U23(f3_in(T94, T96), T94, T96)
   U23(f3_out1, T94, T96) -> f513_out1
   f527_in(T108) -> U24(f515_in(T108), T108)
   U24(f515_out1, T108) -> U25(f530_in(T108), T108)
   U25(f530_out1, T108) -> f527_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(149) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F513_IN(T94, T96) -> U22^1(f515_in(T94), T94, T96)
The graph contains the following edges 1 >= 2, 2 >= 3


*U22^1(f515_out1, T94, T96) -> F3_IN(T94, T96)
The graph contains the following edges 2 >= 1, 3 >= 2


*F3_IN(s(T94), T96) -> F513_IN(T94, T96)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(150)
YES

----------------------------------------

(151) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(ackermann (0) N (s N))",
                null
            ],
            [
                "(ackermann (s M) (0) Val)",
                "(ackermann M (s (0)) Val)"
            ],
            [
                "(ackermann (s M) (s N) Val)",
                "(',' (ackermann (s M) N Val1) (ackermann M Val1 Val))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "390": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "270": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "391": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "271": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T24) (0) X35) (ackermann T24 X35 T25))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25"
                    ],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "392": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "272": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "470": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T82) T83 X163)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T83"
                    ],
                    "free": ["X163"],
                    "exprvars": []
                }
            },
            "273": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "471": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T82 T85 T84)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T84",
                        "T85"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "274": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "395": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "275": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "396": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "276": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(ackermann (s T24) (0) X35)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "397": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T48 (s (0)) X108)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T48"],
                    "free": ["X108"],
                    "exprvars": []
                }
            },
            "277": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "398": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "278": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(ackermann (s T24) (0) X35)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": ["X35"],
                    "exprvars": []
                }
            },
            "399": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T53) T54 X123) (ackermann T53 X123 X124))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T54"
                    ],
                    "free": [
                        "X124",
                        "X123"
                    ],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "280": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "283": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T94) T97 X180) (ackermann T94 X180 T96))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T94",
                        "T96"
                    ],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "284": {
                "goal": [{
                    "clause": 0,
                    "scope": 4,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "285": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(ackermann T31 (s (0)) X59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T94 T98 T96)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T94",
                        "T96"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(ackermann T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "288": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "289": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [{
                    "clause": 0,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "400": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "401": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T53) T54 X123)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T54"
                    ],
                    "free": ["X123"],
                    "exprvars": []
                }
            },
            "445": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "402": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T53 T55 X124)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T53",
                        "T55"
                    ],
                    "free": ["X124"],
                    "exprvars": []
                }
            },
            "446": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "523": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T123 (s (0)) X242)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T123"],
                    "free": ["X242"],
                    "exprvars": []
                }
            },
            "403": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "447": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "524": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "404": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 1,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    },
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(ackermann T24 T26 T25)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "525": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T128) T130 X257) (ackermann T128 X257 X258))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T128"],
                    "free": [
                        "X258",
                        "X257"
                    ],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(ackermann T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "449": {
                "goal": [{
                    "clause": 1,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "526": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "21": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "22": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "23": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "290": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "292": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(ackermann T31 (s (0)) X59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X59"],
                    "exprvars": []
                }
            },
            "491": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "492": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    },
                    {
                        "clause": 2,
                        "scope": 7,
                        "term": "(ackermann (s T94) T97 X180)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "493": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "450": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(ackermann T24 T26 T25)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T24",
                        "T25",
                        "T26"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "494": {
                "goal": [{
                    "clause": 2,
                    "scope": 7,
                    "term": "(ackermann (s T94) T97 X180)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T94"],
                    "free": ["X180"],
                    "exprvars": []
                }
            },
            "253": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "495": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T103 (s (0)) X200)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T103"],
                    "free": ["X200"],
                    "exprvars": []
                }
            },
            "254": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "496": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "255": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "497": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T108) T110 X215) (ackermann T108 X215 X216))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": [
                        "X216",
                        "X215"
                    ],
                    "exprvars": []
                }
            },
            "498": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "257": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(ackermann T17 (s (0)) T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T74 (s (0)) T75)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T74",
                        "T75"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "499": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T108) T110 X215)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X215"],
                    "exprvars": []
                }
            },
            "258": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(ackermann T17 (s (0)) T18)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T17",
                        "T18"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "457": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "386": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "463": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T82) T83 X163) (ackermann T82 X163 T84))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T82",
                        "T83",
                        "T84"
                    ],
                    "free": ["X163"],
                    "exprvars": []
                }
            },
            "266": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "343": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (ackermann (s T35) (0) X81) (ackermann T35 X81 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T35"],
                    "free": [
                        "X82",
                        "X81"
                    ],
                    "exprvars": []
                }
            },
            "387": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "464": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "267": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "344": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "388": {
                "goal": [{
                    "clause": 0,
                    "scope": 5,
                    "term": "(ackermann T35 T36 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "345": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann (s T35) (0) X81)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T35"],
                    "free": ["X81"],
                    "exprvars": []
                }
            },
            "389": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(ackermann T35 T36 X82)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "269": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "501": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "502": {
                "goal": [{
                    "clause": 0,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "503": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    },
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(ackermann T108 T111 X216)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "504": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "505": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "506": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "507": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            },
            "508": {
                "goal": [{
                    "clause": 2,
                    "scope": 8,
                    "term": "(ackermann T108 T111 X216)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T108"],
                    "free": ["X216"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 9,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 10,
                "label": "PARALLEL"
            },
            {
                "from": 9,
                "to": 21,
                "label": "EVAL with clause\nackermann(0, X5, s(X5)).\nand substitutionT1 -> 0,\nT2 -> T8,\nX5 -> T8,\nT3 -> s(T8)"
            },
            {
                "from": 9,
                "to": 22,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 10,
                "to": 56,
                "label": "PARALLEL"
            },
            {
                "from": 10,
                "to": 57,
                "label": "PARALLEL"
            },
            {
                "from": 21,
                "to": 23,
                "label": "SUCCESS"
            },
            {
                "from": 56,
                "to": 253,
                "label": "EVAL with clause\nackermann(s(X14), 0, X15) :- ackermann(X14, s(0), X15).\nand substitutionX14 -> T17,\nT1 -> s(T17),\nT2 -> 0,\nT3 -> T18,\nX15 -> T18"
            },
            {
                "from": 56,
                "to": 254,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 57,
                "to": 481,
                "label": "EVAL with clause\nackermann(s(X177), s(X178), X179) :- ','(ackermann(s(X177), X178, X180), ackermann(X177, X180, X179)).\nand substitutionX177 -> T94,\nT1 -> s(T94),\nX178 -> T97,\nT2 -> s(T97),\nT3 -> T96,\nX179 -> T96,\nT95 -> T97"
            },
            {
                "from": 57,
                "to": 482,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 253,
                "to": 255,
                "label": "CASE"
            },
            {
                "from": 255,
                "to": 257,
                "label": "PARALLEL"
            },
            {
                "from": 255,
                "to": 258,
                "label": "PARALLEL"
            },
            {
                "from": 257,
                "to": 266,
                "label": "EVAL with clause\nackermann(0, X22, s(X22)).\nand substitutionT17 -> 0,\nX22 -> s(0),\nT18 -> s(s(0))"
            },
            {
                "from": 257,
                "to": 267,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 258,
                "to": 270,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 266,
                "to": 269,
                "label": "SUCCESS"
            },
            {
                "from": 270,
                "to": 271,
                "label": "EVAL with clause\nackermann(s(X32), s(X33), X34) :- ','(ackermann(s(X32), X33, X35), ackermann(X32, X35, X34)).\nand substitutionX32 -> T24,\nT17 -> s(T24),\nX33 -> 0,\nT18 -> T25,\nX34 -> T25"
            },
            {
                "from": 270,
                "to": 272,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 271,
                "to": 273,
                "label": "SPLIT 1"
            },
            {
                "from": 271,
                "to": 274,
                "label": "SPLIT 2\nnew knowledge:\nT24 is ground\nT26 is ground\nreplacements:X35 -> T26"
            },
            {
                "from": 273,
                "to": 275,
                "label": "CASE"
            },
            {
                "from": 274,
                "to": 404,
                "label": "CASE"
            },
            {
                "from": 275,
                "to": 276,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 276,
                "to": 277,
                "label": "PARALLEL"
            },
            {
                "from": 276,
                "to": 278,
                "label": "PARALLEL"
            },
            {
                "from": 277,
                "to": 280,
                "label": "ONLY EVAL with clause\nackermann(s(X57), 0, X58) :- ackermann(X57, s(0), X58).\nand substitutionT24 -> T31,\nX57 -> T31,\nX35 -> X59,\nX58 -> X59"
            },
            {
                "from": 278,
                "to": 403,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), s(N), Val) :- ','(ackermann(s(M), N, Val1), ackermann(M, Val1, Val))because of non-unification"
            },
            {
                "from": 280,
                "to": 283,
                "label": "CASE"
            },
            {
                "from": 283,
                "to": 284,
                "label": "PARALLEL"
            },
            {
                "from": 283,
                "to": 285,
                "label": "PARALLEL"
            },
            {
                "from": 284,
                "to": 288,
                "label": "EVAL with clause\nackermann(0, X66, s(X66)).\nand substitutionT31 -> 0,\nX66 -> s(0),\nX59 -> s(s(0))"
            },
            {
                "from": 284,
                "to": 289,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 285,
                "to": 292,
                "label": "BACKTRACK\nfor clause: ackermann(s(M), 0, Val) :- ackermann(M, s(0), Val)because of non-unification"
            },
            {
                "from": 288,
                "to": 290,
                "label": "SUCCESS"
            },
            {
                "from": 292,
                "to": 343,
                "label": "EVAL with clause\nackermann(s(X78), s(X79), X80) :- ','(ackermann(s(X78), X79, X81), ackermann(X78, X81, X80)).\nand substitutionX78 -> T35,\nT31 -> s(T35),\nX79 -> 0,\nX59 -> X82,\nX80 -> X82"
            },
            {
                "from": 292,
                "to": 344,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 343,
                "to": 345,
                "label": "SPLIT 1"
            },
            {
                "from": 343,
                "to": 386,
                "label": "SPLIT 2\nnew knowledge:\nT35 is ground\nT36 is ground\nreplacements:X81 -> T36"
            },
            {
                "from": 345,
                "to": 273,
                "label": "INSTANCE with matching:\nT24 -> T35\nX35 -> X81"
            },
            {
                "from": 386,
                "to": 387,
                "label": "CASE"
            },
            {
                "from": 387,
                "to": 388,
                "label": "PARALLEL"
            },
            {
                "from": 387,
                "to": 389,
                "label": "PARALLEL"
            },
            {
                "from": 388,
                "to": 390,
                "label": "EVAL with clause\nackermann(0, X93, s(X93)).\nand substitutionT35 -> 0,\nT36 -> T43,\nX93 -> T43,\nX82 -> s(T43)"
            },
            {
                "from": 388,
                "to": 391,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 389,
                "to": 395,
                "label": "PARALLEL"
            },
            {
                "from": 389,
                "to": 396,
                "label": "PARALLEL"
            },
            {
                "from": 390,
                "to": 392,
                "label": "SUCCESS"
            },
            {
                "from": 395,
                "to": 397,
                "label": "EVAL with clause\nackermann(s(X106), 0, X107) :- ackermann(X106, s(0), X107).\nand substitutionX106 -> T48,\nT35 -> s(T48),\nT36 -> 0,\nX82 -> X108,\nX107 -> X108"
            },
            {
                "from": 395,
                "to": 398,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 396,
                "to": 399,
                "label": "EVAL with clause\nackermann(s(X120), s(X121), X122) :- ','(ackermann(s(X120), X121, X123), ackermann(X120, X123, X122)).\nand substitutionX120 -> T53,\nT35 -> s(T53),\nX121 -> T54,\nT36 -> s(T54),\nX82 -> X124,\nX122 -> X124"
            },
            {
                "from": 396,
                "to": 400,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 397,
                "to": 280,
                "label": "INSTANCE with matching:\nT31 -> T48\nX59 -> X108"
            },
            {
                "from": 399,
                "to": 401,
                "label": "SPLIT 1"
            },
            {
                "from": 399,
                "to": 402,
                "label": "SPLIT 2\nnew knowledge:\nT53 is ground\nT54 is ground\nT55 is ground\nreplacements:X123 -> T55"
            },
            {
                "from": 401,
                "to": 386,
                "label": "INSTANCE with matching:\nT35 -> s(T53)\nT36 -> T54\nX82 -> X123"
            },
            {
                "from": 402,
                "to": 386,
                "label": "INSTANCE with matching:\nT35 -> T53\nT36 -> T55\nX82 -> X124"
            },
            {
                "from": 404,
                "to": 443,
                "label": "PARALLEL"
            },
            {
                "from": 404,
                "to": 444,
                "label": "PARALLEL"
            },
            {
                "from": 443,
                "to": 445,
                "label": "EVAL with clause\nackermann(0, X140, s(X140)).\nand substitutionT24 -> 0,\nT26 -> T65,\nX140 -> T65,\nT25 -> s(T65)"
            },
            {
                "from": 443,
                "to": 446,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 444,
                "to": 449,
                "label": "PARALLEL"
            },
            {
                "from": 444,
                "to": 450,
                "label": "PARALLEL"
            },
            {
                "from": 445,
                "to": 447,
                "label": "SUCCESS"
            },
            {
                "from": 449,
                "to": 455,
                "label": "EVAL with clause\nackermann(s(X149), 0, X150) :- ackermann(X149, s(0), X150).\nand substitutionX149 -> T74,\nT24 -> s(T74),\nT26 -> 0,\nT25 -> T75,\nX150 -> T75"
            },
            {
                "from": 449,
                "to": 457,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 450,
                "to": 463,
                "label": "EVAL with clause\nackermann(s(X160), s(X161), X162) :- ','(ackermann(s(X160), X161, X163), ackermann(X160, X163, X162)).\nand substitutionX160 -> T82,\nT24 -> s(T82),\nX161 -> T83,\nT26 -> s(T83),\nT25 -> T84,\nX162 -> T84"
            },
            {
                "from": 450,
                "to": 464,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 455,
                "to": 253,
                "label": "INSTANCE with matching:\nT17 -> T74\nT18 -> T75"
            },
            {
                "from": 463,
                "to": 470,
                "label": "SPLIT 1"
            },
            {
                "from": 463,
                "to": 471,
                "label": "SPLIT 2\nnew knowledge:\nT82 is ground\nT83 is ground\nT85 is ground\nreplacements:X163 -> T85"
            },
            {
                "from": 470,
                "to": 386,
                "label": "INSTANCE with matching:\nT35 -> s(T82)\nT36 -> T83\nX82 -> X163"
            },
            {
                "from": 471,
                "to": 274,
                "label": "INSTANCE with matching:\nT24 -> T82\nT26 -> T85\nT25 -> T84"
            },
            {
                "from": 481,
                "to": 483,
                "label": "SPLIT 1"
            },
            {
                "from": 481,
                "to": 484,
                "label": "SPLIT 2\nnew knowledge:\nT94 is ground\nreplacements:X180 -> T98"
            },
            {
                "from": 483,
                "to": 491,
                "label": "CASE"
            },
            {
                "from": 484,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T94\nT2 -> T98\nT3 -> T96"
            },
            {
                "from": 491,
                "to": 492,
                "label": "BACKTRACK\nfor clause: ackermann(0, N, s(N))because of non-unification"
            },
            {
                "from": 492,
                "to": 493,
                "label": "PARALLEL"
            },
            {
                "from": 492,
                "to": 494,
                "label": "PARALLEL"
            },
            {
                "from": 493,
                "to": 495,
                "label": "EVAL with clause\nackermann(s(X198), 0, X199) :- ackermann(X198, s(0), X199).\nand substitutionT94 -> T103,\nX198 -> T103,\nT97 -> 0,\nX180 -> X200,\nX199 -> X200"
            },
            {
                "from": 493,
                "to": 496,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 494,
                "to": 497,
                "label": "EVAL with clause\nackermann(s(X212), s(X213), X214) :- ','(ackermann(s(X212), X213, X215), ackermann(X212, X215, X214)).\nand substitutionT94 -> T108,\nX212 -> T108,\nX213 -> T110,\nT97 -> s(T110),\nX180 -> X216,\nX214 -> X216,\nT109 -> T110"
            },
            {
                "from": 494,
                "to": 498,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 495,
                "to": 280,
                "label": "INSTANCE with matching:\nT31 -> T103\nX59 -> X200"
            },
            {
                "from": 497,
                "to": 499,
                "label": "SPLIT 1"
            },
            {
                "from": 497,
                "to": 500,
                "label": "SPLIT 2\nnew knowledge:\nT108 is ground\nreplacements:X215 -> T111"
            },
            {
                "from": 499,
                "to": 483,
                "label": "INSTANCE with matching:\nT94 -> T108\nT97 -> T110\nX180 -> X215"
            },
            {
                "from": 500,
                "to": 501,
                "label": "CASE"
            },
            {
                "from": 501,
                "to": 502,
                "label": "PARALLEL"
            },
            {
                "from": 501,
                "to": 503,
                "label": "PARALLEL"
            },
            {
                "from": 502,
                "to": 504,
                "label": "EVAL with clause\nackermann(0, X227, s(X227)).\nand substitutionT108 -> 0,\nT111 -> T118,\nX227 -> T118,\nX216 -> s(T118)"
            },
            {
                "from": 502,
                "to": 505,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 503,
                "to": 507,
                "label": "PARALLEL"
            },
            {
                "from": 503,
                "to": 508,
                "label": "PARALLEL"
            },
            {
                "from": 504,
                "to": 506,
                "label": "SUCCESS"
            },
            {
                "from": 507,
                "to": 523,
                "label": "EVAL with clause\nackermann(s(X240), 0, X241) :- ackermann(X240, s(0), X241).\nand substitutionX240 -> T123,\nT108 -> s(T123),\nT111 -> 0,\nX216 -> X242,\nX241 -> X242"
            },
            {
                "from": 507,
                "to": 524,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 508,
                "to": 525,
                "label": "EVAL with clause\nackermann(s(X254), s(X255), X256) :- ','(ackermann(s(X254), X255, X257), ackermann(X254, X257, X256)).\nand substitutionX254 -> T128,\nT108 -> s(T128),\nX255 -> T130,\nT111 -> s(T130),\nX216 -> X258,\nX256 -> X258,\nT129 -> T130"
            },
            {
                "from": 508,
                "to": 526,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 523,
                "to": 280,
                "label": "INSTANCE with matching:\nT31 -> T123\nX59 -> X242"
            },
            {
                "from": 525,
                "to": 497,
                "label": "INSTANCE with matching:\nT108 -> T128\nT110 -> T130\nX215 -> X257\nX216 -> X258"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(152)
Complex Obligation (AND)

----------------------------------------

(153)
Obligation:
Rules:
f343_in(T35) -> f345_in(T35) :|: TRUE
f386_out(x, x1) -> f343_out(x) :|: TRUE
f345_out(x2) -> f386_in(x2, x3) :|: TRUE
f397_in(T48) -> f280_in(T48) :|: TRUE
f280_out(x4) -> f397_out(x4) :|: TRUE
f292_in(s(x5)) -> f343_in(x5) :|: TRUE
f292_in(T31) -> f344_in :|: TRUE
f344_out -> f292_out(x6) :|: TRUE
f343_out(x7) -> f292_out(s(x7)) :|: TRUE
f283_in(x8) -> f284_in(x8) :|: TRUE
f283_in(x9) -> f285_in(x9) :|: TRUE
f284_out(x10) -> f283_out(x10) :|: TRUE
f285_out(x11) -> f283_out(x11) :|: TRUE
f345_in(x12) -> f273_in(x12) :|: TRUE
f273_out(x13) -> f345_out(x13) :|: TRUE
f402_out(T53, T55) -> f399_out(T53, T54) :|: TRUE
f401_out(x14, x15) -> f402_in(x14, x16) :|: TRUE
f399_in(x17, x18) -> f401_in(x17, x18) :|: TRUE
f283_out(x19) -> f280_out(x19) :|: TRUE
f280_in(x20) -> f283_in(x20) :|: TRUE
f389_in(x21, x22) -> f395_in(x21, x22) :|: TRUE
f395_out(x23, x24) -> f389_out(x23, x24) :|: TRUE
f396_out(x25, x26) -> f389_out(x25, x26) :|: TRUE
f389_in(x27, x28) -> f396_in(x27, x28) :|: TRUE
f285_in(x29) -> f292_in(x29) :|: TRUE
f292_out(x30) -> f285_out(x30) :|: TRUE
f386_out(s(x31), x32) -> f401_out(x31, x32) :|: TRUE
f401_in(x33, x34) -> f386_in(s(x33), x34) :|: TRUE
f386_out(x35, x36) -> f402_out(x35, x36) :|: TRUE
f402_in(x37, x38) -> f386_in(x37, x38) :|: TRUE
f277_in(x39) -> f280_in(x39) :|: TRUE
f280_out(x40) -> f277_out(x40) :|: TRUE
f387_in(x41, x42) -> f388_in(x41, x42) :|: TRUE
f389_out(x43, x44) -> f387_out(x43, x44) :|: TRUE
f387_in(x45, x46) -> f389_in(x45, x46) :|: TRUE
f388_out(x47, x48) -> f387_out(x47, x48) :|: TRUE
f277_out(T24) -> f276_out(T24) :|: TRUE
f278_out(x49) -> f276_out(x49) :|: TRUE
f276_in(x50) -> f278_in(x50) :|: TRUE
f276_in(x51) -> f277_in(x51) :|: TRUE
f273_in(x52) -> f275_in(x52) :|: TRUE
f275_out(x53) -> f273_out(x53) :|: TRUE
f397_out(x54) -> f395_out(s(x54), 0) :|: TRUE
f395_in(x55, x56) -> f398_in :|: TRUE
f398_out -> f395_out(x57, x58) :|: TRUE
f395_in(s(x59), 0) -> f397_in(x59) :|: TRUE
f396_in(s(x60), s(x61)) -> f399_in(x60, x61) :|: TRUE
f400_out -> f396_out(x62, x63) :|: TRUE
f399_out(x64, x65) -> f396_out(s(x64), s(x65)) :|: TRUE
f396_in(x66, x67) -> f400_in :|: TRUE
f386_in(x68, x69) -> f387_in(x68, x69) :|: TRUE
f387_out(x70, x71) -> f386_out(x70, x71) :|: TRUE
f275_in(x72) -> f276_in(x72) :|: TRUE
f276_out(x73) -> f275_out(x73) :|: TRUE
f2_out(T1, T3) -> f1_out(T1, T3) :|: TRUE
f1_in(x74, x75) -> f2_in(x74, x75) :|: TRUE
f9_out(x76, x77) -> f2_out(x76, x77) :|: TRUE
f2_in(x78, x79) -> f10_in(x78, x79) :|: TRUE
f2_in(x80, x81) -> f9_in(x80, x81) :|: TRUE
f10_out(x82, x83) -> f2_out(x82, x83) :|: TRUE
f56_out(x84, x85) -> f10_out(x84, x85) :|: TRUE
f10_in(x86, x87) -> f57_in(x86, x87) :|: TRUE
f57_out(x88, x89) -> f10_out(x88, x89) :|: TRUE
f10_in(x90, x91) -> f56_in(x90, x91) :|: TRUE
f481_out(T94, T96) -> f57_out(s(T94), T96) :|: TRUE
f482_out -> f57_out(x92, x93) :|: TRUE
f57_in(s(x94), x95) -> f481_in(x94, x95) :|: TRUE
f57_in(x96, x97) -> f482_in :|: TRUE
f484_out(x98, x99) -> f481_out(x98, x99) :|: TRUE
f481_in(x100, x101) -> f483_in(x100) :|: TRUE
f483_out(x102) -> f484_in(x102, x103) :|: TRUE
f491_out(x104) -> f483_out(x104) :|: TRUE
f483_in(x105) -> f491_in(x105) :|: TRUE
f492_out(x106) -> f491_out(x106) :|: TRUE
f491_in(x107) -> f492_in(x107) :|: TRUE
f494_out(x108) -> f492_out(x108) :|: TRUE
f493_out(x109) -> f492_out(x109) :|: TRUE
f492_in(x110) -> f494_in(x110) :|: TRUE
f492_in(x111) -> f493_in(x111) :|: TRUE
f494_in(x112) -> f498_in :|: TRUE
f498_out -> f494_out(x113) :|: TRUE
f497_out(T108) -> f494_out(T108) :|: TRUE
f494_in(x114) -> f497_in(x114) :|: TRUE
f499_out(x115) -> f500_in(x115) :|: TRUE
f497_in(x116) -> f499_in(x116) :|: TRUE
f500_out(x117) -> f497_out(x117) :|: TRUE
f500_in(x118) -> f501_in(x118) :|: TRUE
f501_out(x119) -> f500_out(x119) :|: TRUE
f501_in(x120) -> f503_in(x120) :|: TRUE
f503_out(x121) -> f501_out(x121) :|: TRUE
f501_in(x122) -> f502_in(x122) :|: TRUE
f502_out(x123) -> f501_out(x123) :|: TRUE
f507_out(x124) -> f503_out(x124) :|: TRUE
f503_in(x125) -> f507_in(x125) :|: TRUE
f503_in(x126) -> f508_in(x126) :|: TRUE
f508_out(x127) -> f503_out(x127) :|: TRUE
f507_in(s(T123)) -> f523_in(T123) :|: TRUE
f524_out -> f507_out(x128) :|: TRUE
f523_out(x129) -> f507_out(s(x129)) :|: TRUE
f507_in(x130) -> f524_in :|: TRUE
f280_out(x131) -> f523_out(x131) :|: TRUE
f523_in(x132) -> f280_in(x132) :|: TRUE
f253_out(T17, T18) -> f56_out(s(T17), T18) :|: TRUE
f56_in(x133, x134) -> f254_in :|: TRUE
f254_out -> f56_out(x135, x136) :|: TRUE
f56_in(s(x137), x138) -> f253_in(x137, x138) :|: TRUE
f255_out(x139, x140) -> f253_out(x139, x140) :|: TRUE
f253_in(x141, x142) -> f255_in(x141, x142) :|: TRUE
f255_in(x143, x144) -> f258_in(x143, x144) :|: TRUE
f258_out(x145, x146) -> f255_out(x145, x146) :|: TRUE
f255_in(x147, x148) -> f257_in(x147, x148) :|: TRUE
f257_out(x149, x150) -> f255_out(x149, x150) :|: TRUE
f258_in(x151, x152) -> f270_in(x151, x152) :|: TRUE
f270_out(x153, x154) -> f258_out(x153, x154) :|: TRUE
f272_out -> f270_out(x155, x156) :|: TRUE
f271_out(x157, x158) -> f270_out(s(x157), x158) :|: TRUE
f270_in(s(x159), x160) -> f271_in(x159, x160) :|: TRUE
f270_in(x161, x162) -> f272_in :|: TRUE
f274_out(x163, x164, x165) -> f271_out(x163, x165) :|: TRUE
f273_out(x166) -> f274_in(x166, x167, x168) :|: TRUE
f271_in(x169, x170) -> f273_in(x169) :|: TRUE
f496_out -> f493_out(x171) :|: TRUE
f493_in(T103) -> f495_in(T103) :|: TRUE
f493_in(x172) -> f496_in :|: TRUE
f495_out(x173) -> f493_out(x173) :|: TRUE
f280_out(x174) -> f495_out(x174) :|: TRUE
f495_in(x175) -> f280_in(x175) :|: TRUE
f274_in(x176, x177, x178) -> f404_in(x176, x177, x178) :|: TRUE
f404_out(x179, x180, x181) -> f274_out(x179, x180, x181) :|: TRUE
f404_in(x182, x183, x184) -> f444_in(x182, x183, x184) :|: TRUE
f444_out(x185, x186, x187) -> f404_out(x185, x186, x187) :|: TRUE
f404_in(x188, x189, x190) -> f443_in(x188, x189, x190) :|: TRUE
f443_out(x191, x192, x193) -> f404_out(x191, x192, x193) :|: TRUE
f444_in(x194, x195, x196) -> f450_in(x194, x195, x196) :|: TRUE
f449_out(x197, x198, x199) -> f444_out(x197, x198, x199) :|: TRUE
f444_in(x200, x201, x202) -> f449_in(x200, x201, x202) :|: TRUE
f450_out(x203, x204, x205) -> f444_out(x203, x204, x205) :|: TRUE
f450_in(x206, x207, x208) -> f464_in :|: TRUE
f464_out -> f450_out(x209, x210, x211) :|: TRUE
f450_in(s(T82), s(T83), T84) -> f463_in(T82, T83, T84) :|: TRUE
f463_out(x212, x213, x214) -> f450_out(s(x212), s(x213), x214) :|: TRUE
f463_in(x215, x216, x217) -> f470_in(x215, x216) :|: TRUE
f470_out(x218, x219) -> f471_in(x218, x220, x221) :|: TRUE
f471_out(x222, x223, x224) -> f463_out(x222, x225, x224) :|: TRUE
f386_out(s(x226), x227) -> f470_out(x226, x227) :|: TRUE
f470_in(x228, x229) -> f386_in(s(x228), x229) :|: TRUE
Start term: f1_in(T1, T3)

----------------------------------------

(154) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f343_in(T35) -> f345_in(T35) :|: TRUE
f292_in(s(x5)) -> f343_in(x5) :|: TRUE
f283_in(x9) -> f285_in(x9) :|: TRUE
f345_in(x12) -> f273_in(x12) :|: TRUE
f280_in(x20) -> f283_in(x20) :|: TRUE
f285_in(x29) -> f292_in(x29) :|: TRUE
f277_in(x39) -> f280_in(x39) :|: TRUE
f276_in(x51) -> f277_in(x51) :|: TRUE
f273_in(x52) -> f275_in(x52) :|: TRUE
f275_in(x72) -> f276_in(x72) :|: TRUE


----------------------------------------

(155)
Obligation:
Rules:
f343_in(T35) -> f345_in(T35) :|: TRUE
f292_in(s(x5)) -> f343_in(x5) :|: TRUE
f283_in(x9) -> f285_in(x9) :|: TRUE
f345_in(x12) -> f273_in(x12) :|: TRUE
f280_in(x20) -> f283_in(x20) :|: TRUE
f285_in(x29) -> f292_in(x29) :|: TRUE
f277_in(x39) -> f280_in(x39) :|: TRUE
f276_in(x51) -> f277_in(x51) :|: TRUE
f273_in(x52) -> f275_in(x52) :|: TRUE
f275_in(x72) -> f276_in(x72) :|: TRUE

----------------------------------------

(156) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(157)
Obligation:
Rules:
f276_in(s(x5:0)) -> f276_in(x5:0) :|: TRUE

----------------------------------------

(158) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(159)
Obligation:
Rules:
f276_in(s(x5:0)) -> f276_in(x5:0) :|: TRUE

----------------------------------------

(160) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f276_in(s(x5:0)) -> f276_in(x5:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(161)
Obligation:

Termination digraph:
Nodes:
(1) f276_in(s(x5:0)) -> f276_in(x5:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(162) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f276_in(VARIABLE)
s(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(163)
Obligation:
Rules:
f276_in(s(x5:0)) -> f276_in(x5:0)

----------------------------------------

(164) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(165)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f276_in(s(x5:0)) -> f276_in(x5:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(166) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f276_in(s(x5:0)) -> f276_in(x5:0)
The graph contains the following edges 1 > 1


----------------------------------------

(167)
YES

----------------------------------------

(168)
Obligation:
Rules:
f494_out(T94) -> f492_out(T94) :|: TRUE
f493_out(x) -> f492_out(x) :|: TRUE
f492_in(x1) -> f494_in(x1) :|: TRUE
f492_in(x2) -> f493_in(x2) :|: TRUE
f492_out(x3) -> f491_out(x3) :|: TRUE
f491_in(x4) -> f492_in(x4) :|: TRUE
f500_in(T108) -> f501_in(T108) :|: TRUE
f501_out(x5) -> f500_out(x5) :|: TRUE
f491_out(x6) -> f483_out(x6) :|: TRUE
f483_in(x7) -> f491_in(x7) :|: TRUE
f501_in(x8) -> f503_in(x8) :|: TRUE
f503_out(x9) -> f501_out(x9) :|: TRUE
f501_in(x10) -> f502_in(x10) :|: TRUE
f502_out(x11) -> f501_out(x11) :|: TRUE
f499_out(x12) -> f500_in(x12) :|: TRUE
f497_in(x13) -> f499_in(x13) :|: TRUE
f500_out(x14) -> f497_out(x14) :|: TRUE
f497_out(T128) -> f525_out(T128) :|: TRUE
f525_in(x15) -> f497_in(x15) :|: TRUE
f494_in(x16) -> f498_in :|: TRUE
f498_out -> f494_out(x17) :|: TRUE
f497_out(x18) -> f494_out(x18) :|: TRUE
f494_in(x19) -> f497_in(x19) :|: TRUE
f508_in(x20) -> f526_in :|: TRUE
f508_in(s(x21)) -> f525_in(x21) :|: TRUE
f526_out -> f508_out(x22) :|: TRUE
f525_out(x23) -> f508_out(s(x23)) :|: TRUE
f499_in(x24) -> f483_in(x24) :|: TRUE
f483_out(x25) -> f499_out(x25) :|: TRUE
f507_out(x26) -> f503_out(x26) :|: TRUE
f503_in(x27) -> f507_in(x27) :|: TRUE
f503_in(x28) -> f508_in(x28) :|: TRUE
f508_out(x29) -> f503_out(x29) :|: TRUE
f2_out(T1, T3) -> f1_out(T1, T3) :|: TRUE
f1_in(x30, x31) -> f2_in(x30, x31) :|: TRUE
f9_out(x32, x33) -> f2_out(x32, x33) :|: TRUE
f2_in(x34, x35) -> f10_in(x34, x35) :|: TRUE
f2_in(x36, x37) -> f9_in(x36, x37) :|: TRUE
f10_out(x38, x39) -> f2_out(x38, x39) :|: TRUE
f56_out(x40, x41) -> f10_out(x40, x41) :|: TRUE
f10_in(x42, x43) -> f57_in(x42, x43) :|: TRUE
f57_out(x44, x45) -> f10_out(x44, x45) :|: TRUE
f10_in(x46, x47) -> f56_in(x46, x47) :|: TRUE
f481_out(x48, x49) -> f57_out(s(x48), x49) :|: TRUE
f482_out -> f57_out(x50, x51) :|: TRUE
f57_in(s(x52), x53) -> f481_in(x52, x53) :|: TRUE
f57_in(x54, x55) -> f482_in :|: TRUE
f484_out(x56, x57) -> f481_out(x56, x57) :|: TRUE
f481_in(x58, x59) -> f483_in(x58) :|: TRUE
f483_out(x60) -> f484_in(x60, x61) :|: TRUE
Start term: f1_in(T1, T3)

----------------------------------------

(169) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f492_in(x1) -> f494_in(x1) :|: TRUE
f491_in(x4) -> f492_in(x4) :|: TRUE
f483_in(x7) -> f491_in(x7) :|: TRUE
f497_in(x13) -> f499_in(x13) :|: TRUE
f494_in(x19) -> f497_in(x19) :|: TRUE
f499_in(x24) -> f483_in(x24) :|: TRUE


----------------------------------------

(170)
Obligation:
Rules:
f492_in(x1) -> f494_in(x1) :|: TRUE
f491_in(x4) -> f492_in(x4) :|: TRUE
f483_in(x7) -> f491_in(x7) :|: TRUE
f497_in(x13) -> f499_in(x13) :|: TRUE
f494_in(x19) -> f497_in(x19) :|: TRUE
f499_in(x24) -> f483_in(x24) :|: TRUE

----------------------------------------

(171) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(172)
Obligation:
Rules:
f483_in(x7:0) -> f483_in(x7:0) :|: TRUE

----------------------------------------

(173) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(174)
Obligation:
Rules:
f483_in(x7:0) -> f483_in(x7:0) :|: TRUE

----------------------------------------

(175) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f483_in(x7:0) -> f483_in(x7:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(176)
Obligation:

Termination digraph:
Nodes:
(1) f483_in(x7:0) -> f483_in(x7:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(177) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f483_in(VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(178)
Obligation:
Rules:
f483_in(x7:0) -> f483_in(x7:0) :|: TRUE

----------------------------------------

(179) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x7:0) -> f(1, x7:0) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1, -8)
----------------------------------------

(180)
NO

----------------------------------------

(181)
Obligation:
Rules:
f343_in(T35) -> f345_in(T35) :|: TRUE
f386_out(x, x1) -> f343_out(x) :|: TRUE
f345_out(x2) -> f386_in(x2, x3) :|: TRUE
f274_out(T24, T26, T25) -> f271_out(T24, T25) :|: TRUE
f273_out(x4) -> f274_in(x4, x5, x6) :|: TRUE
f271_in(x7, x8) -> f273_in(x7) :|: TRUE
f404_in(x9, x10, x11) -> f444_in(x9, x10, x11) :|: TRUE
f444_out(x12, x13, x14) -> f404_out(x12, x13, x14) :|: TRUE
f404_in(x15, x16, x17) -> f443_in(x15, x16, x17) :|: TRUE
f443_out(x18, x19, x20) -> f404_out(x18, x19, x20) :|: TRUE
f283_in(T31) -> f284_in(T31) :|: TRUE
f283_in(x21) -> f285_in(x21) :|: TRUE
f284_out(x22) -> f283_out(x22) :|: TRUE
f285_out(x23) -> f283_out(x23) :|: TRUE
f444_in(x24, x25, x26) -> f450_in(x24, x25, x26) :|: TRUE
f449_out(x27, x28, x29) -> f444_out(x27, x28, x29) :|: TRUE
f444_in(x30, x31, x32) -> f449_in(x30, x31, x32) :|: TRUE
f450_out(x33, x34, x35) -> f444_out(x33, x34, x35) :|: TRUE
f450_in(x36, x37, x38) -> f464_in :|: TRUE
f464_out -> f450_out(x39, x40, x41) :|: TRUE
f450_in(s(T82), s(T83), T84) -> f463_in(T82, T83, T84) :|: TRUE
f463_out(x42, x43, x44) -> f450_out(s(x42), s(x43), x44) :|: TRUE
f345_in(x45) -> f273_in(x45) :|: TRUE
f273_out(x46) -> f345_out(x46) :|: TRUE
f402_out(T53, T55) -> f399_out(T53, T54) :|: TRUE
f401_out(x47, x48) -> f402_in(x47, x49) :|: TRUE
f399_in(x50, x51) -> f401_in(x50, x51) :|: TRUE
f283_out(x52) -> f280_out(x52) :|: TRUE
f280_in(x53) -> f283_in(x53) :|: TRUE
f274_out(x54, x55, x56) -> f471_out(x54, x55, x56) :|: TRUE
f471_in(x57, x58, x59) -> f274_in(x57, x58, x59) :|: TRUE
f455_in(T74, T75) -> f253_in(T74, T75) :|: TRUE
f253_out(x60, x61) -> f455_out(x60, x61) :|: TRUE
f386_out(s(x62), x63) -> f401_out(x62, x63) :|: TRUE
f401_in(x64, x65) -> f386_in(s(x64), x65) :|: TRUE
f274_in(x66, x67, x68) -> f404_in(x66, x67, x68) :|: TRUE
f404_out(x69, x70, x71) -> f274_out(x69, x70, x71) :|: TRUE
f255_in(T17, T18) -> f258_in(T17, T18) :|: TRUE
f258_out(x72, x73) -> f255_out(x72, x73) :|: TRUE
f255_in(x74, x75) -> f257_in(x74, x75) :|: TRUE
f257_out(x76, x77) -> f255_out(x76, x77) :|: TRUE
f272_out -> f270_out(x78, x79) :|: TRUE
f271_out(x80, x81) -> f270_out(s(x80), x81) :|: TRUE
f270_in(s(x82), x83) -> f271_in(x82, x83) :|: TRUE
f270_in(x84, x85) -> f272_in :|: TRUE
f277_in(x86) -> f280_in(x86) :|: TRUE
f280_out(x87) -> f277_out(x87) :|: TRUE
f277_out(x88) -> f276_out(x88) :|: TRUE
f278_out(x89) -> f276_out(x89) :|: TRUE
f276_in(x90) -> f278_in(x90) :|: TRUE
f276_in(x91) -> f277_in(x91) :|: TRUE
f255_out(x92, x93) -> f253_out(x92, x93) :|: TRUE
f253_in(x94, x95) -> f255_in(x94, x95) :|: TRUE
f397_out(T48) -> f395_out(s(T48), 0) :|: TRUE
f395_in(x96, x97) -> f398_in :|: TRUE
f398_out -> f395_out(x98, x99) :|: TRUE
f395_in(s(x100), 0) -> f397_in(x100) :|: TRUE
f288_in -> f288_out :|: TRUE
f386_out(s(x101), x102) -> f470_out(x101, x102) :|: TRUE
f470_in(x103, x104) -> f386_in(s(x103), x104) :|: TRUE
f449_in(s(x105), 0, x106) -> f455_in(x105, x106) :|: TRUE
f455_out(x107, x108) -> f449_out(s(x107), 0, x108) :|: TRUE
f457_out -> f449_out(x109, x110, x111) :|: TRUE
f449_in(x112, x113, x114) -> f457_in :|: TRUE
f403_out -> f278_out(x115) :|: TRUE
f278_in(x116) -> f403_in :|: TRUE
f397_in(x117) -> f280_in(x117) :|: TRUE
f280_out(x118) -> f397_out(x118) :|: TRUE
f463_in(x119, x120, x121) -> f470_in(x119, x120) :|: TRUE
f470_out(x122, x123) -> f471_in(x122, x124, x125) :|: TRUE
f471_out(x126, x127, x128) -> f463_out(x126, x129, x128) :|: TRUE
f292_in(s(x130)) -> f343_in(x130) :|: TRUE
f292_in(x131) -> f344_in :|: TRUE
f344_out -> f292_out(x132) :|: TRUE
f343_out(x133) -> f292_out(s(x133)) :|: TRUE
f258_in(x134, x135) -> f270_in(x134, x135) :|: TRUE
f270_out(x136, x137) -> f258_out(x136, x137) :|: TRUE
f289_out -> f284_out(x138) :|: TRUE
f284_in(0) -> f288_in :|: TRUE
f288_out -> f284_out(0) :|: TRUE
f284_in(x139) -> f289_in :|: TRUE
f390_out -> f388_out(0, T43) :|: TRUE
f388_in(x140, x141) -> f391_in :|: TRUE
f388_in(0, x142) -> f390_in :|: TRUE
f391_out -> f388_out(x143, x144) :|: TRUE
f389_in(x145, x146) -> f395_in(x145, x146) :|: TRUE
f395_out(x147, x148) -> f389_out(x147, x148) :|: TRUE
f396_out(x149, x150) -> f389_out(x149, x150) :|: TRUE
f389_in(x151, x152) -> f396_in(x151, x152) :|: TRUE
f285_in(x153) -> f292_in(x153) :|: TRUE
f292_out(x154) -> f285_out(x154) :|: TRUE
f386_out(x155, x156) -> f402_out(x155, x156) :|: TRUE
f402_in(x157, x158) -> f386_in(x157, x158) :|: TRUE
f390_in -> f390_out :|: TRUE
f387_in(x159, x160) -> f388_in(x159, x160) :|: TRUE
f389_out(x161, x162) -> f387_out(x161, x162) :|: TRUE
f387_in(x163, x164) -> f389_in(x163, x164) :|: TRUE
f388_out(x165, x166) -> f387_out(x165, x166) :|: TRUE
f273_in(x167) -> f275_in(x167) :|: TRUE
f275_out(x168) -> f273_out(x168) :|: TRUE
f396_in(s(x169), s(x170)) -> f399_in(x169, x170) :|: TRUE
f400_out -> f396_out(x171, x172) :|: TRUE
f399_out(x173, x174) -> f396_out(s(x173), s(x174)) :|: TRUE
f396_in(x175, x176) -> f400_in :|: TRUE
f386_in(x177, x178) -> f387_in(x177, x178) :|: TRUE
f387_out(x179, x180) -> f386_out(x179, x180) :|: TRUE
f275_in(x181) -> f276_in(x181) :|: TRUE
f276_out(x182) -> f275_out(x182) :|: TRUE
f2_out(T1, T3) -> f1_out(T1, T3) :|: TRUE
f1_in(x183, x184) -> f2_in(x183, x184) :|: TRUE
f9_out(x185, x186) -> f2_out(x185, x186) :|: TRUE
f2_in(x187, x188) -> f10_in(x187, x188) :|: TRUE
f2_in(x189, x190) -> f9_in(x189, x190) :|: TRUE
f10_out(x191, x192) -> f2_out(x191, x192) :|: TRUE
f56_out(x193, x194) -> f10_out(x193, x194) :|: TRUE
f10_in(x195, x196) -> f57_in(x195, x196) :|: TRUE
f57_out(x197, x198) -> f10_out(x197, x198) :|: TRUE
f10_in(x199, x200) -> f56_in(x199, x200) :|: TRUE
f253_out(x201, x202) -> f56_out(s(x201), x202) :|: TRUE
f56_in(x203, x204) -> f254_in :|: TRUE
f254_out -> f56_out(x205, x206) :|: TRUE
f56_in(s(x207), x208) -> f253_in(x207, x208) :|: TRUE
Start term: f1_in(T1, T3)

----------------------------------------

(182) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f343_in(T35) -> f345_in(T35) :|: TRUE
f386_out(x, x1) -> f343_out(x) :|: TRUE
f345_out(x2) -> f386_in(x2, x3) :|: TRUE
f273_out(x4) -> f274_in(x4, x5, x6) :|: TRUE
f271_in(x7, x8) -> f273_in(x7) :|: TRUE
f404_in(x9, x10, x11) -> f444_in(x9, x10, x11) :|: TRUE
f283_in(T31) -> f284_in(T31) :|: TRUE
f283_in(x21) -> f285_in(x21) :|: TRUE
f284_out(x22) -> f283_out(x22) :|: TRUE
f285_out(x23) -> f283_out(x23) :|: TRUE
f444_in(x24, x25, x26) -> f450_in(x24, x25, x26) :|: TRUE
f444_in(x30, x31, x32) -> f449_in(x30, x31, x32) :|: TRUE
f450_in(s(T82), s(T83), T84) -> f463_in(T82, T83, T84) :|: TRUE
f345_in(x45) -> f273_in(x45) :|: TRUE
f273_out(x46) -> f345_out(x46) :|: TRUE
f402_out(T53, T55) -> f399_out(T53, T54) :|: TRUE
f401_out(x47, x48) -> f402_in(x47, x49) :|: TRUE
f399_in(x50, x51) -> f401_in(x50, x51) :|: TRUE
f283_out(x52) -> f280_out(x52) :|: TRUE
f280_in(x53) -> f283_in(x53) :|: TRUE
f471_in(x57, x58, x59) -> f274_in(x57, x58, x59) :|: TRUE
f455_in(T74, T75) -> f253_in(T74, T75) :|: TRUE
f386_out(s(x62), x63) -> f401_out(x62, x63) :|: TRUE
f401_in(x64, x65) -> f386_in(s(x64), x65) :|: TRUE
f274_in(x66, x67, x68) -> f404_in(x66, x67, x68) :|: TRUE
f255_in(T17, T18) -> f258_in(T17, T18) :|: TRUE
f270_in(s(x82), x83) -> f271_in(x82, x83) :|: TRUE
f277_in(x86) -> f280_in(x86) :|: TRUE
f280_out(x87) -> f277_out(x87) :|: TRUE
f277_out(x88) -> f276_out(x88) :|: TRUE
f276_in(x91) -> f277_in(x91) :|: TRUE
f253_in(x94, x95) -> f255_in(x94, x95) :|: TRUE
f397_out(T48) -> f395_out(s(T48), 0) :|: TRUE
f395_in(s(x100), 0) -> f397_in(x100) :|: TRUE
f288_in -> f288_out :|: TRUE
f386_out(s(x101), x102) -> f470_out(x101, x102) :|: TRUE
f470_in(x103, x104) -> f386_in(s(x103), x104) :|: TRUE
f449_in(s(x105), 0, x106) -> f455_in(x105, x106) :|: TRUE
f397_in(x117) -> f280_in(x117) :|: TRUE
f280_out(x118) -> f397_out(x118) :|: TRUE
f463_in(x119, x120, x121) -> f470_in(x119, x120) :|: TRUE
f470_out(x122, x123) -> f471_in(x122, x124, x125) :|: TRUE
f292_in(s(x130)) -> f343_in(x130) :|: TRUE
f343_out(x133) -> f292_out(s(x133)) :|: TRUE
f258_in(x134, x135) -> f270_in(x134, x135) :|: TRUE
f284_in(0) -> f288_in :|: TRUE
f288_out -> f284_out(0) :|: TRUE
f390_out -> f388_out(0, T43) :|: TRUE
f388_in(0, x142) -> f390_in :|: TRUE
f389_in(x145, x146) -> f395_in(x145, x146) :|: TRUE
f395_out(x147, x148) -> f389_out(x147, x148) :|: TRUE
f396_out(x149, x150) -> f389_out(x149, x150) :|: TRUE
f389_in(x151, x152) -> f396_in(x151, x152) :|: TRUE
f285_in(x153) -> f292_in(x153) :|: TRUE
f292_out(x154) -> f285_out(x154) :|: TRUE
f386_out(x155, x156) -> f402_out(x155, x156) :|: TRUE
f402_in(x157, x158) -> f386_in(x157, x158) :|: TRUE
f390_in -> f390_out :|: TRUE
f387_in(x159, x160) -> f388_in(x159, x160) :|: TRUE
f389_out(x161, x162) -> f387_out(x161, x162) :|: TRUE
f387_in(x163, x164) -> f389_in(x163, x164) :|: TRUE
f388_out(x165, x166) -> f387_out(x165, x166) :|: TRUE
f273_in(x167) -> f275_in(x167) :|: TRUE
f275_out(x168) -> f273_out(x168) :|: TRUE
f396_in(s(x169), s(x170)) -> f399_in(x169, x170) :|: TRUE
f399_out(x173, x174) -> f396_out(s(x173), s(x174)) :|: TRUE
f386_in(x177, x178) -> f387_in(x177, x178) :|: TRUE
f387_out(x179, x180) -> f386_out(x179, x180) :|: TRUE
f275_in(x181) -> f276_in(x181) :|: TRUE
f276_out(x182) -> f275_out(x182) :|: TRUE


----------------------------------------

(183)
Obligation:
Rules:
f343_in(T35) -> f345_in(T35) :|: TRUE
f386_out(x, x1) -> f343_out(x) :|: TRUE
f345_out(x2) -> f386_in(x2, x3) :|: TRUE
f273_out(x4) -> f274_in(x4, x5, x6) :|: TRUE
f271_in(x7, x8) -> f273_in(x7) :|: TRUE
f404_in(x9, x10, x11) -> f444_in(x9, x10, x11) :|: TRUE
f283_in(T31) -> f284_in(T31) :|: TRUE
f283_in(x21) -> f285_in(x21) :|: TRUE
f284_out(x22) -> f283_out(x22) :|: TRUE
f285_out(x23) -> f283_out(x23) :|: TRUE
f444_in(x24, x25, x26) -> f450_in(x24, x25, x26) :|: TRUE
f444_in(x30, x31, x32) -> f449_in(x30, x31, x32) :|: TRUE
f450_in(s(T82), s(T83), T84) -> f463_in(T82, T83, T84) :|: TRUE
f345_in(x45) -> f273_in(x45) :|: TRUE
f273_out(x46) -> f345_out(x46) :|: TRUE
f402_out(T53, T55) -> f399_out(T53, T54) :|: TRUE
f401_out(x47, x48) -> f402_in(x47, x49) :|: TRUE
f399_in(x50, x51) -> f401_in(x50, x51) :|: TRUE
f283_out(x52) -> f280_out(x52) :|: TRUE
f280_in(x53) -> f283_in(x53) :|: TRUE
f471_in(x57, x58, x59) -> f274_in(x57, x58, x59) :|: TRUE
f455_in(T74, T75) -> f253_in(T74, T75) :|: TRUE
f386_out(s(x62), x63) -> f401_out(x62, x63) :|: TRUE
f401_in(x64, x65) -> f386_in(s(x64), x65) :|: TRUE
f274_in(x66, x67, x68) -> f404_in(x66, x67, x68) :|: TRUE
f255_in(T17, T18) -> f258_in(T17, T18) :|: TRUE
f270_in(s(x82), x83) -> f271_in(x82, x83) :|: TRUE
f277_in(x86) -> f280_in(x86) :|: TRUE
f280_out(x87) -> f277_out(x87) :|: TRUE
f277_out(x88) -> f276_out(x88) :|: TRUE
f276_in(x91) -> f277_in(x91) :|: TRUE
f253_in(x94, x95) -> f255_in(x94, x95) :|: TRUE
f397_out(T48) -> f395_out(s(T48), 0) :|: TRUE
f395_in(s(x100), 0) -> f397_in(x100) :|: TRUE
f288_in -> f288_out :|: TRUE
f386_out(s(x101), x102) -> f470_out(x101, x102) :|: TRUE
f470_in(x103, x104) -> f386_in(s(x103), x104) :|: TRUE
f449_in(s(x105), 0, x106) -> f455_in(x105, x106) :|: TRUE
f397_in(x117) -> f280_in(x117) :|: TRUE
f280_out(x118) -> f397_out(x118) :|: TRUE
f463_in(x119, x120, x121) -> f470_in(x119, x120) :|: TRUE
f470_out(x122, x123) -> f471_in(x122, x124, x125) :|: TRUE
f292_in(s(x130)) -> f343_in(x130) :|: TRUE
f343_out(x133) -> f292_out(s(x133)) :|: TRUE
f258_in(x134, x135) -> f270_in(x134, x135) :|: TRUE
f284_in(0) -> f288_in :|: TRUE
f288_out -> f284_out(0) :|: TRUE
f390_out -> f388_out(0, T43) :|: TRUE
f388_in(0, x142) -> f390_in :|: TRUE
f389_in(x145, x146) -> f395_in(x145, x146) :|: TRUE
f395_out(x147, x148) -> f389_out(x147, x148) :|: TRUE
f396_out(x149, x150) -> f389_out(x149, x150) :|: TRUE
f389_in(x151, x152) -> f396_in(x151, x152) :|: TRUE
f285_in(x153) -> f292_in(x153) :|: TRUE
f292_out(x154) -> f285_out(x154) :|: TRUE
f386_out(x155, x156) -> f402_out(x155, x156) :|: TRUE
f402_in(x157, x158) -> f386_in(x157, x158) :|: TRUE
f390_in -> f390_out :|: TRUE
f387_in(x159, x160) -> f388_in(x159, x160) :|: TRUE
f389_out(x161, x162) -> f387_out(x161, x162) :|: TRUE
f387_in(x163, x164) -> f389_in(x163, x164) :|: TRUE
f388_out(x165, x166) -> f387_out(x165, x166) :|: TRUE
f273_in(x167) -> f275_in(x167) :|: TRUE
f275_out(x168) -> f273_out(x168) :|: TRUE
f396_in(s(x169), s(x170)) -> f399_in(x169, x170) :|: TRUE
f399_out(x173, x174) -> f396_out(s(x173), s(x174)) :|: TRUE
f386_in(x177, x178) -> f387_in(x177, x178) :|: TRUE
f387_out(x179, x180) -> f386_out(x179, x180) :|: TRUE
f275_in(x181) -> f276_in(x181) :|: TRUE
f276_out(x182) -> f275_out(x182) :|: TRUE

----------------------------------------

(184) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(185)
Obligation:
Rules:
f386_out(s(x62:0), x63:0) -> f387_in(x62:0, x49:0) :|: TRUE
f280_out(x87:0) -> f387_in(x87:0, x3:0) :|: TRUE
f387_in(cons_0, x160:0) -> f386_out(0, T43:0) :|: TRUE && cons_0 = 0
f387_in(s(x169:0), s(x170:0)) -> f387_in(s(x169:0), x170:0) :|: TRUE
f386_out(x155:0, x156:0) -> f386_out(s(x155:0), s(T54:0)) :|: TRUE
f280_in(s(x130:0)) -> f280_in(x130:0) :|: TRUE
f280_in(x) -> f280_out(0) :|: TRUE && x = 0
f280_out(x1) -> f404_in(x1, x2, x3) :|: TRUE
f386_out(s(x101:0), x102:0) -> f404_in(x101:0, x124:0, x125:0) :|: TRUE
f387_in(s(x4), x5) -> f280_in(x4) :|: TRUE && x5 = 0
f404_in(s(T82:0), s(T83:0), x11:0) -> f387_in(s(T82:0), T83:0) :|: TRUE
f404_in(s(s(x6)), x7, x8) -> f280_in(x6) :|: TRUE && x7 = 0
f386_out(x:0, x1:0) -> f280_out(s(x:0)) :|: TRUE
f280_out(x118:0) -> f386_out(s(x118:0), 0) :|: TRUE

----------------------------------------

(186) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(187)
Obligation:
Rules:
f386_out(s(x62:0), x63:0) -> f387_in(x62:0, x49:0) :|: TRUE
f280_out(x87:0) -> f387_in(x87:0, x3:0) :|: TRUE
f387_in(cons_0, x160:0) -> f386_out(0, T43:0) :|: TRUE && cons_0 = 0
f387_in(s(x169:0), s(x170:0)) -> f387_in(s(x169:0), x170:0) :|: TRUE
f386_out(x155:0, x156:0) -> f386_out(s(x155:0), s(T54:0)) :|: TRUE
f280_in(s(x130:0)) -> f280_in(x130:0) :|: TRUE
f280_in(x) -> f280_out(0) :|: TRUE && x = 0
f280_out(x1) -> f404_in(x1, x2, x3) :|: TRUE
f386_out(s(x101:0), x102:0) -> f404_in(x101:0, x124:0, x125:0) :|: TRUE
f387_in(s(x4), x5) -> f280_in(x4) :|: TRUE && x5 = 0
f404_in(s(T82:0), s(T83:0), x11:0) -> f387_in(s(T82:0), T83:0) :|: TRUE
f404_in(s(s(x6)), x7, x8) -> f280_in(x6) :|: TRUE && x7 = 0
f386_out(x:0, x1:0) -> f280_out(s(x:0)) :|: TRUE
f280_out(x118:0) -> f386_out(s(x118:0), 0) :|: TRUE

----------------------------------------

(188)
Obligation:
Rules:
f497_out(T128) -> f525_out(T128) :|: TRUE
f525_in(x) -> f497_in(x) :|: TRUE
f2_out(T1, T3) -> f1_out(T1, T3) :|: TRUE
f1_in(x1, x2) -> f2_in(x1, x2) :|: TRUE
f345_in(T35) -> f273_in(T35) :|: TRUE
f273_out(x3) -> f345_out(x3) :|: TRUE
f504_in -> f504_out :|: TRUE
f283_out(T31) -> f280_out(T31) :|: TRUE
f280_in(x4) -> f283_in(x4) :|: TRUE
f507_out(T108) -> f503_out(T108) :|: TRUE
f503_in(x5) -> f507_in(x5) :|: TRUE
f503_in(x6) -> f508_in(x6) :|: TRUE
f508_out(x7) -> f503_out(x7) :|: TRUE
f484_out(T94, T96) -> f481_out(T94, T96) :|: TRUE
f481_in(x8, x9) -> f483_in(x8) :|: TRUE
f483_out(x10) -> f484_in(x10, x11) :|: TRUE
f397_out(T48) -> f395_out(s(T48), 0) :|: TRUE
f395_in(x12, x13) -> f398_in :|: TRUE
f398_out -> f395_out(x14, x15) :|: TRUE
f395_in(s(x16), 0) -> f397_in(x16) :|: TRUE
f288_in -> f288_out :|: TRUE
f9_out(x17, x18) -> f2_out(x17, x18) :|: TRUE
f2_in(x19, x20) -> f10_in(x19, x20) :|: TRUE
f2_in(x21, x22) -> f9_in(x21, x22) :|: TRUE
f10_out(x23, x24) -> f2_out(x23, x24) :|: TRUE
f403_out -> f278_out(T24) :|: TRUE
f278_in(x25) -> f403_in :|: TRUE
f1_out(x26, x27) -> f484_out(x26, x27) :|: TRUE
f484_in(x28, x29) -> f1_in(x28, x29) :|: TRUE
f499_out(x30) -> f500_in(x30) :|: TRUE
f497_in(x31) -> f499_in(x31) :|: TRUE
f500_out(x32) -> f497_out(x32) :|: TRUE
f289_out -> f284_out(x33) :|: TRUE
f284_in(0) -> f288_in :|: TRUE
f288_out -> f284_out(0) :|: TRUE
f284_in(x34) -> f289_in :|: TRUE
f280_out(T103) -> f495_out(T103) :|: TRUE
f495_in(x35) -> f280_in(x35) :|: TRUE
f508_in(x36) -> f526_in :|: TRUE
f508_in(s(x37)) -> f525_in(x37) :|: TRUE
f526_out -> f508_out(x38) :|: TRUE
f525_out(x39) -> f508_out(s(x39)) :|: TRUE
f389_in(x40, x41) -> f395_in(x40, x41) :|: TRUE
f395_out(x42, x43) -> f389_out(x42, x43) :|: TRUE
f396_out(x44, x45) -> f389_out(x44, x45) :|: TRUE
f389_in(x46, x47) -> f396_in(x46, x47) :|: TRUE
f56_out(x48, x49) -> f10_out(x48, x49) :|: TRUE
f10_in(x50, x51) -> f57_in(x50, x51) :|: TRUE
f57_out(x52, x53) -> f10_out(x52, x53) :|: TRUE
f10_in(x54, x55) -> f56_in(x54, x55) :|: TRUE
f285_in(x56) -> f292_in(x56) :|: TRUE
f292_out(x57) -> f285_out(x57) :|: TRUE
f386_out(T53, T55) -> f402_out(T53, T55) :|: TRUE
f402_in(x58, x59) -> f386_in(x58, x59) :|: TRUE
f491_out(x60) -> f483_out(x60) :|: TRUE
f483_in(x61) -> f491_in(x61) :|: TRUE
f390_in -> f390_out :|: TRUE
f494_in(x62) -> f498_in :|: TRUE
f498_out -> f494_out(x63) :|: TRUE
f497_out(x64) -> f494_out(x64) :|: TRUE
f494_in(x65) -> f497_in(x65) :|: TRUE
f494_out(x66) -> f492_out(x66) :|: TRUE
f493_out(x67) -> f492_out(x67) :|: TRUE
f492_in(x68) -> f494_in(x68) :|: TRUE
f492_in(x69) -> f493_in(x69) :|: TRUE
f492_out(x70) -> f491_out(x70) :|: TRUE
f491_in(x71) -> f492_in(x71) :|: TRUE
f343_in(x72) -> f345_in(x72) :|: TRUE
f386_out(x73, x74) -> f343_out(x73) :|: TRUE
f345_out(x75) -> f386_in(x75, x76) :|: TRUE
f283_in(x77) -> f284_in(x77) :|: TRUE
f283_in(x78) -> f285_in(x78) :|: TRUE
f284_out(x79) -> f283_out(x79) :|: TRUE
f285_out(x80) -> f283_out(x80) :|: TRUE
f402_out(x81, x82) -> f399_out(x81, x83) :|: TRUE
f401_out(x84, x85) -> f402_in(x84, x86) :|: TRUE
f399_in(x87, x88) -> f401_in(x87, x88) :|: TRUE
f496_out -> f493_out(x89) :|: TRUE
f493_in(x90) -> f495_in(x90) :|: TRUE
f493_in(x91) -> f496_in :|: TRUE
f495_out(x92) -> f493_out(x92) :|: TRUE
f386_out(s(x93), x94) -> f401_out(x93, x94) :|: TRUE
f401_in(x95, x96) -> f386_in(s(x95), x96) :|: TRUE
f507_in(s(T123)) -> f523_in(T123) :|: TRUE
f524_out -> f507_out(x97) :|: TRUE
f523_out(x98) -> f507_out(s(x98)) :|: TRUE
f507_in(x99) -> f524_in :|: TRUE
f277_in(x100) -> f280_in(x100) :|: TRUE
f280_out(x101) -> f277_out(x101) :|: TRUE
f277_out(x102) -> f276_out(x102) :|: TRUE
f278_out(x103) -> f276_out(x103) :|: TRUE
f276_in(x104) -> f278_in(x104) :|: TRUE
f276_in(x105) -> f277_in(x105) :|: TRUE
f499_in(x106) -> f483_in(x106) :|: TRUE
f483_out(x107) -> f499_out(x107) :|: TRUE
f500_in(x108) -> f501_in(x108) :|: TRUE
f501_out(x109) -> f500_out(x109) :|: TRUE
f397_in(x110) -> f280_in(x110) :|: TRUE
f280_out(x111) -> f397_out(x111) :|: TRUE
f292_in(s(x112)) -> f343_in(x112) :|: TRUE
f292_in(x113) -> f344_in :|: TRUE
f344_out -> f292_out(x114) :|: TRUE
f343_out(x115) -> f292_out(s(x115)) :|: TRUE
f502_in(x116) -> f505_in :|: TRUE
f505_out -> f502_out(x117) :|: TRUE
f504_out -> f502_out(0) :|: TRUE
f502_in(0) -> f504_in :|: TRUE
f390_out -> f388_out(0, T43) :|: TRUE
f388_in(x118, x119) -> f391_in :|: TRUE
f388_in(0, x120) -> f390_in :|: TRUE
f391_out -> f388_out(x121, x122) :|: TRUE
f280_out(x123) -> f523_out(x123) :|: TRUE
f523_in(x124) -> f280_in(x124) :|: TRUE
f481_out(x125, x126) -> f57_out(s(x125), x126) :|: TRUE
f482_out -> f57_out(x127, x128) :|: TRUE
f57_in(s(x129), x130) -> f481_in(x129, x130) :|: TRUE
f57_in(x131, x132) -> f482_in :|: TRUE
f501_in(x133) -> f503_in(x133) :|: TRUE
f503_out(x134) -> f501_out(x134) :|: TRUE
f501_in(x135) -> f502_in(x135) :|: TRUE
f502_out(x136) -> f501_out(x136) :|: TRUE
f387_in(x137, x138) -> f388_in(x137, x138) :|: TRUE
f389_out(x139, x140) -> f387_out(x139, x140) :|: TRUE
f387_in(x141, x142) -> f389_in(x141, x142) :|: TRUE
f388_out(x143, x144) -> f387_out(x143, x144) :|: TRUE
f273_in(x145) -> f275_in(x145) :|: TRUE
f275_out(x146) -> f273_out(x146) :|: TRUE
f396_in(s(x147), s(x148)) -> f399_in(x147, x148) :|: TRUE
f400_out -> f396_out(x149, x150) :|: TRUE
f399_out(x151, x152) -> f396_out(s(x151), s(x152)) :|: TRUE
f396_in(x153, x154) -> f400_in :|: TRUE
f386_in(x155, x156) -> f387_in(x155, x156) :|: TRUE
f387_out(x157, x158) -> f386_out(x157, x158) :|: TRUE
f275_in(x159) -> f276_in(x159) :|: TRUE
f276_out(x160) -> f275_out(x160) :|: TRUE
Start term: f1_in(T1, T3)
