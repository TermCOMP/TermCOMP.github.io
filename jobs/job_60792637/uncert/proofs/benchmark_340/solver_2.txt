YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/9htS5.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

rem(g,a,g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 1 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) PiDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) PiDP
        (10) PiDPToQDPProof [SOUND, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) PiDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) PiDP
        (17) PiDPToQDPProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) PiDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) PiDP
        (24) PiDPToQDPProof [SOUND, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) PiDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) PiDP
        (31) PiDPToQDPProof [SOUND, 0 ms]
        (32) QDP
        (33) QDPQMonotonicMRRProof [EQUIVALENT, 2 ms]
        (34) QDP
        (35) PisEmptyProof [EQUIVALENT, 0 ms]
        (36) YES
    (37) PiDP
        (38) UsableRulesProof [EQUIVALENT, 0 ms]
        (39) PiDP
        (40) PiDPToQDPProof [SOUND, 0 ms]
        (41) QDP
        (42) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (43) YES


----------------------------------------

(0)
Obligation:
Clauses:

rem(X, Y, R) :- ','(notZero(Y), ','(sub(X, Y, Z), rem(Z, Y, R))).
rem(X, Y, X) :- ','(notZero(Y), geq(X, Y)).
sub(s(X), s(Y), Z) :- sub(X, Y, Z).
sub(X, 0, X).
notZero(s(X)).
geq(s(X), s(Y)) :- geq(X, Y).
geq(X, 0).


Query: rem(g,a,g)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 35,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(rem X Y R)",
                "(',' (notZero Y) (',' (sub X Y Z) (rem Z Y R)))"
            ],
            [
                "(rem X Y X)",
                "(',' (notZero Y) (geq X Y))"
            ],
            [
                "(sub (s X) (s Y) Z)",
                "(sub X Y Z)"
            ],
            [
                "(sub X (0) X)",
                null
            ],
            [
                "(notZero (s X))",
                null
            ],
            [
                "(geq (s X) (s Y))",
                "(geq X Y)"
            ],
            [
                "(geq X (0))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "170": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "470": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 7,
                        "term": "(geq T79 T81)"
                    },
                    {
                        "clause": 6,
                        "scope": 7,
                        "term": "(geq T79 T81)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": [],
                    "exprvars": []
                }
            },
            "450": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(',' (notZero T62) (geq T60 T62))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "530": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "311": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sub T7 (s T16) X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "531": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "532": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "313": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(rem T19 (s T20) T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T20",
                        "T19"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "533": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "534": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(geq T60 (s T68))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "439": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "35": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(rem T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "36": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(rem T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(rem T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T3"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "461": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(geq T60 (s T68))"
                    },
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(geq T60 (s T68))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "165": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (notZero T10) (',' (sub T7 T10 X7) (rem X7 T10 T9)))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(rem T7 T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "440": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "462": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(geq T60 (s T68))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (notZero T10) (',' (sub T7 T10 X7) (rem X7 T10 T9)))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(rem T7 T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "320": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(sub T7 (s T16) X7)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(sub T7 (s T16) X7)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "463": {
                "goal": [{
                    "clause": 6,
                    "scope": 6,
                    "term": "(geq T60 (s T68))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "167": {
                "goal": [{
                    "clause": 4,
                    "scope": 2,
                    "term": "(',' (notZero T10) (',' (sub T7 T10 X7) (rem X7 T10 T9)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "321": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(sub T7 (s T16) X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "168": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(rem T7 T2 T9)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "322": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(sub T7 (s T16) X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "169": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (sub T7 (s T16) X7) (rem X7 (s T16) T9))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": ["X7"],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sub T31 T33 X40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X40"],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(rem T7 T2 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T7",
                        "T9"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(geq T79 T81)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": [],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "467": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(sub T31 T33 X40)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(sub T31 T33 X40)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X40"],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(sub T31 T33 X40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X40"],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(sub T31 T33 X40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T31"],
                    "free": ["X40"],
                    "exprvars": []
                }
            },
            "328": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(sub T44 T46 X64)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T44"],
                    "free": ["X64"],
                    "exprvars": []
                }
            },
            "449": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (notZero T62) (geq T60 T62))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T60"],
                    "free": [],
                    "exprvars": []
                }
            },
            "329": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "527": {
                "goal": [{
                    "clause": 5,
                    "scope": 7,
                    "term": "(geq T79 T81)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": [],
                    "exprvars": []
                }
            },
            "528": {
                "goal": [{
                    "clause": 6,
                    "scope": 7,
                    "term": "(geq T79 T81)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T79"],
                    "free": [],
                    "exprvars": []
                }
            },
            "529": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(geq T92 T94)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T92"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 35,
                "to": 36,
                "label": "CASE"
            },
            {
                "from": 36,
                "to": 165,
                "label": "ONLY EVAL with clause\nrem(X4, X5, X6) :- ','(notZero(X5), ','(sub(X4, X5, X7), rem(X7, X5, X6))).\nand substitutionT1 -> T7,\nX4 -> T7,\nT2 -> T10,\nX5 -> T10,\nT3 -> T9,\nX6 -> T9,\nT8 -> T10"
            },
            {
                "from": 165,
                "to": 166,
                "label": "CASE"
            },
            {
                "from": 166,
                "to": 167,
                "label": "PARALLEL"
            },
            {
                "from": 166,
                "to": 168,
                "label": "PARALLEL"
            },
            {
                "from": 167,
                "to": 169,
                "label": "EVAL with clause\nnotZero(s(X12)).\nand substitutionX12 -> T16,\nT10 -> s(T16),\nT15 -> T16"
            },
            {
                "from": 167,
                "to": 170,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 168,
                "to": 444,
                "label": "FAILURE"
            },
            {
                "from": 169,
                "to": 311,
                "label": "SPLIT 1"
            },
            {
                "from": 169,
                "to": 313,
                "label": "SPLIT 2\nnew knowledge:\nT7 is ground\nT20 is ground\nT19 is ground\nreplacements:X7 -> T19,\nT16 -> T20"
            },
            {
                "from": 311,
                "to": 320,
                "label": "CASE"
            },
            {
                "from": 313,
                "to": 35,
                "label": "INSTANCE with matching:\nT1 -> T19\nT2 -> s(T20)\nT3 -> T9"
            },
            {
                "from": 320,
                "to": 321,
                "label": "PARALLEL"
            },
            {
                "from": 320,
                "to": 322,
                "label": "PARALLEL"
            },
            {
                "from": 321,
                "to": 323,
                "label": "EVAL with clause\nsub(s(X37), s(X38), X39) :- sub(X37, X38, X39).\nand substitutionX37 -> T31,\nT7 -> s(T31),\nT16 -> T33,\nX38 -> T33,\nX7 -> X40,\nX39 -> X40,\nT32 -> T33"
            },
            {
                "from": 321,
                "to": 324,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 322,
                "to": 443,
                "label": "BACKTRACK\nfor clause: sub(X, 0, X)because of non-unification"
            },
            {
                "from": 323,
                "to": 325,
                "label": "CASE"
            },
            {
                "from": 325,
                "to": 326,
                "label": "PARALLEL"
            },
            {
                "from": 325,
                "to": 327,
                "label": "PARALLEL"
            },
            {
                "from": 326,
                "to": 328,
                "label": "EVAL with clause\nsub(s(X61), s(X62), X63) :- sub(X61, X62, X63).\nand substitutionX61 -> T44,\nT31 -> s(T44),\nX62 -> T46,\nT33 -> s(T46),\nX40 -> X64,\nX63 -> X64,\nT45 -> T46"
            },
            {
                "from": 326,
                "to": 329,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 327,
                "to": 439,
                "label": "EVAL with clause\nsub(X71, 0, X71).\nand substitutionT31 -> T51,\nX71 -> T51,\nT33 -> 0,\nX40 -> T51"
            },
            {
                "from": 327,
                "to": 440,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 328,
                "to": 323,
                "label": "INSTANCE with matching:\nT31 -> T44\nT33 -> T46\nX40 -> X64"
            },
            {
                "from": 439,
                "to": 442,
                "label": "SUCCESS"
            },
            {
                "from": 444,
                "to": 449,
                "label": "EVAL with clause\nrem(X81, X82, X81) :- ','(notZero(X82), geq(X81, X82)).\nand substitutionT7 -> T60,\nX81 -> T60,\nT2 -> T62,\nX82 -> T62,\nT9 -> T60,\nT61 -> T62"
            },
            {
                "from": 444,
                "to": 450,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 449,
                "to": 453,
                "label": "CASE"
            },
            {
                "from": 453,
                "to": 458,
                "label": "EVAL with clause\nnotZero(s(X87)).\nand substitutionX87 -> T68,\nT62 -> s(T68),\nT67 -> T68"
            },
            {
                "from": 453,
                "to": 459,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 458,
                "to": 461,
                "label": "CASE"
            },
            {
                "from": 461,
                "to": 462,
                "label": "PARALLEL"
            },
            {
                "from": 461,
                "to": 463,
                "label": "PARALLEL"
            },
            {
                "from": 462,
                "to": 466,
                "label": "EVAL with clause\ngeq(s(X98), s(X99)) :- geq(X98, X99).\nand substitutionX98 -> T79,\nT60 -> s(T79),\nT68 -> T81,\nX99 -> T81,\nT80 -> T81"
            },
            {
                "from": 462,
                "to": 467,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 463,
                "to": 534,
                "label": "BACKTRACK\nfor clause: geq(X, 0)because of non-unification"
            },
            {
                "from": 466,
                "to": 470,
                "label": "CASE"
            },
            {
                "from": 470,
                "to": 527,
                "label": "PARALLEL"
            },
            {
                "from": 470,
                "to": 528,
                "label": "PARALLEL"
            },
            {
                "from": 527,
                "to": 529,
                "label": "EVAL with clause\ngeq(s(X110), s(X111)) :- geq(X110, X111).\nand substitutionX110 -> T92,\nT79 -> s(T92),\nX111 -> T94,\nT81 -> s(T94),\nT93 -> T94"
            },
            {
                "from": 527,
                "to": 530,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 528,
                "to": 531,
                "label": "EVAL with clause\ngeq(X116, 0).\nand substitutionT79 -> T99,\nX116 -> T99,\nT81 -> 0"
            },
            {
                "from": 528,
                "to": 532,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 529,
                "to": 466,
                "label": "INSTANCE with matching:\nT79 -> T92\nT81 -> T94"
            },
            {
                "from": 531,
                "to": 533,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

subD(s(X1), s(X2), X3) :- subD(X1, X2, X3).
geqC(s(X1), s(X2)) :- geqC(X1, X2).
remA(s(X1), s(X2), X3) :- subD(X1, X2, X4).
remA(X1, s(X2), X3) :- ','(subcB(X1, X2, X4), remA(X4, s(X2), X3)).
remA(s(X1), s(X2), s(X1)) :- geqC(X1, X2).

Clauses:

remcA(X1, s(X2), X3) :- ','(subcB(X1, X2, X4), remcA(X4, s(X2), X3)).
remcA(s(X1), s(X2), s(X1)) :- geqcC(X1, X2).
subcD(s(X1), s(X2), X3) :- subcD(X1, X2, X3).
subcD(X1, 0, X1).
geqcC(s(X1), s(X2)) :- geqcC(X1, X2).
geqcC(X1, 0).
subcB(s(X1), X2, X3) :- subcD(X1, X2, X3).

Afs:

remA(x1, x2, x3)  =  remA(x1, x3)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

remA_in_3: (b,f,b) (b,b,b)

subD_in_3: (b,f,f) (b,b,f)

subcB_in_3: (b,f,f) (b,b,f)

subcD_in_3: (b,f,f) (b,b,f)

geqC_in_2: (b,b) (b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   REMA_IN_GAG(s(X1), s(X2), X3) -> U3_GAG(X1, X2, X3, subD_in_gaa(X1, X2, X4))
   REMA_IN_GAG(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X4)
   SUBD_IN_GAA(s(X1), s(X2), X3) -> U1_GAA(X1, X2, X3, subD_in_gaa(X1, X2, X3))
   SUBD_IN_GAA(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X3)
   REMA_IN_GAG(X1, s(X2), X3) -> U4_GAG(X1, X2, X3, subcB_in_gaa(X1, X2, X4))
   U4_GAG(X1, X2, X3, subcB_out_gaa(X1, X2, X4)) -> U5_GAG(X1, X2, X3, remA_in_ggg(X4, s(X2), X3))
   U4_GAG(X1, X2, X3, subcB_out_gaa(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)
   REMA_IN_GGG(s(X1), s(X2), X3) -> U3_GGG(X1, X2, X3, subD_in_gga(X1, X2, X4))
   REMA_IN_GGG(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X4)
   SUBD_IN_GGA(s(X1), s(X2), X3) -> U1_GGA(X1, X2, X3, subD_in_gga(X1, X2, X3))
   SUBD_IN_GGA(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X3)
   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2, X4))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> U5_GGG(X1, X2, X3, remA_in_ggg(X4, s(X2), X3))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)
   REMA_IN_GGG(s(X1), s(X2), s(X1)) -> U6_GGG(X1, X2, geqC_in_gg(X1, X2))
   REMA_IN_GGG(s(X1), s(X2), s(X1)) -> GEQC_IN_GG(X1, X2)
   GEQC_IN_GG(s(X1), s(X2)) -> U2_GG(X1, X2, geqC_in_gg(X1, X2))
   GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)
   REMA_IN_GAG(s(X1), s(X2), s(X1)) -> U6_GAG(X1, X2, geqC_in_ga(X1, X2))
   REMA_IN_GAG(s(X1), s(X2), s(X1)) -> GEQC_IN_GA(X1, X2)
   GEQC_IN_GA(s(X1), s(X2)) -> U2_GA(X1, X2, geqC_in_ga(X1, X2))
   GEQC_IN_GA(s(X1), s(X2)) -> GEQC_IN_GA(X1, X2)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subD_in_gaa(x1, x2, x3)  =  subD_in_gaa(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

remA_in_ggg(x1, x2, x3)  =  remA_in_ggg(x1, x2, x3)

subD_in_gga(x1, x2, x3)  =  subD_in_gga(x1, x2)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

geqC_in_gg(x1, x2)  =  geqC_in_gg(x1, x2)

geqC_in_ga(x1, x2)  =  geqC_in_ga(x1)

REMA_IN_GAG(x1, x2, x3)  =  REMA_IN_GAG(x1, x3)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x1, x3, x4)

SUBD_IN_GAA(x1, x2, x3)  =  SUBD_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4)  =  U1_GAA(x1, x4)

U4_GAG(x1, x2, x3, x4)  =  U4_GAG(x1, x3, x4)

U5_GAG(x1, x2, x3, x4)  =  U5_GAG(x1, x2, x3, x4)

REMA_IN_GGG(x1, x2, x3)  =  REMA_IN_GGG(x1, x2, x3)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x1, x2, x3, x4)

SUBD_IN_GGA(x1, x2, x3)  =  SUBD_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U4_GGG(x1, x2, x3, x4)  =  U4_GGG(x1, x2, x3, x4)

U5_GGG(x1, x2, x3, x4)  =  U5_GGG(x1, x2, x3, x4)

U6_GGG(x1, x2, x3)  =  U6_GGG(x1, x2, x3)

GEQC_IN_GG(x1, x2)  =  GEQC_IN_GG(x1, x2)

U2_GG(x1, x2, x3)  =  U2_GG(x1, x2, x3)

U6_GAG(x1, x2, x3)  =  U6_GAG(x1, x3)

GEQC_IN_GA(x1, x2)  =  GEQC_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   REMA_IN_GAG(s(X1), s(X2), X3) -> U3_GAG(X1, X2, X3, subD_in_gaa(X1, X2, X4))
   REMA_IN_GAG(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X4)
   SUBD_IN_GAA(s(X1), s(X2), X3) -> U1_GAA(X1, X2, X3, subD_in_gaa(X1, X2, X3))
   SUBD_IN_GAA(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X3)
   REMA_IN_GAG(X1, s(X2), X3) -> U4_GAG(X1, X2, X3, subcB_in_gaa(X1, X2, X4))
   U4_GAG(X1, X2, X3, subcB_out_gaa(X1, X2, X4)) -> U5_GAG(X1, X2, X3, remA_in_ggg(X4, s(X2), X3))
   U4_GAG(X1, X2, X3, subcB_out_gaa(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)
   REMA_IN_GGG(s(X1), s(X2), X3) -> U3_GGG(X1, X2, X3, subD_in_gga(X1, X2, X4))
   REMA_IN_GGG(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X4)
   SUBD_IN_GGA(s(X1), s(X2), X3) -> U1_GGA(X1, X2, X3, subD_in_gga(X1, X2, X3))
   SUBD_IN_GGA(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X3)
   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2, X4))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> U5_GGG(X1, X2, X3, remA_in_ggg(X4, s(X2), X3))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)
   REMA_IN_GGG(s(X1), s(X2), s(X1)) -> U6_GGG(X1, X2, geqC_in_gg(X1, X2))
   REMA_IN_GGG(s(X1), s(X2), s(X1)) -> GEQC_IN_GG(X1, X2)
   GEQC_IN_GG(s(X1), s(X2)) -> U2_GG(X1, X2, geqC_in_gg(X1, X2))
   GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)
   REMA_IN_GAG(s(X1), s(X2), s(X1)) -> U6_GAG(X1, X2, geqC_in_ga(X1, X2))
   REMA_IN_GAG(s(X1), s(X2), s(X1)) -> GEQC_IN_GA(X1, X2)
   GEQC_IN_GA(s(X1), s(X2)) -> U2_GA(X1, X2, geqC_in_ga(X1, X2))
   GEQC_IN_GA(s(X1), s(X2)) -> GEQC_IN_GA(X1, X2)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subD_in_gaa(x1, x2, x3)  =  subD_in_gaa(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

remA_in_ggg(x1, x2, x3)  =  remA_in_ggg(x1, x2, x3)

subD_in_gga(x1, x2, x3)  =  subD_in_gga(x1, x2)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

geqC_in_gg(x1, x2)  =  geqC_in_gg(x1, x2)

geqC_in_ga(x1, x2)  =  geqC_in_ga(x1)

REMA_IN_GAG(x1, x2, x3)  =  REMA_IN_GAG(x1, x3)

U3_GAG(x1, x2, x3, x4)  =  U3_GAG(x1, x3, x4)

SUBD_IN_GAA(x1, x2, x3)  =  SUBD_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4)  =  U1_GAA(x1, x4)

U4_GAG(x1, x2, x3, x4)  =  U4_GAG(x1, x3, x4)

U5_GAG(x1, x2, x3, x4)  =  U5_GAG(x1, x2, x3, x4)

REMA_IN_GGG(x1, x2, x3)  =  REMA_IN_GGG(x1, x2, x3)

U3_GGG(x1, x2, x3, x4)  =  U3_GGG(x1, x2, x3, x4)

SUBD_IN_GGA(x1, x2, x3)  =  SUBD_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x2, x4)

U4_GGG(x1, x2, x3, x4)  =  U4_GGG(x1, x2, x3, x4)

U5_GGG(x1, x2, x3, x4)  =  U5_GGG(x1, x2, x3, x4)

U6_GGG(x1, x2, x3)  =  U6_GGG(x1, x2, x3)

GEQC_IN_GG(x1, x2)  =  GEQC_IN_GG(x1, x2)

U2_GG(x1, x2, x3)  =  U2_GG(x1, x2, x3)

U6_GAG(x1, x2, x3)  =  U6_GAG(x1, x3)

GEQC_IN_GA(x1, x2)  =  GEQC_IN_GA(x1)

U2_GA(x1, x2, x3)  =  U2_GA(x1, x3)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 5 SCCs with 16 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GA(s(X1), s(X2)) -> GEQC_IN_GA(X1, X2)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

GEQC_IN_GA(x1, x2)  =  GEQC_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GA(s(X1), s(X2)) -> GEQC_IN_GA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

GEQC_IN_GA(x1, x2)  =  GEQC_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GA(s(X1)) -> GEQC_IN_GA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GEQC_IN_GA(s(X1)) -> GEQC_IN_GA(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

GEQC_IN_GG(x1, x2)  =  GEQC_IN_GG(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GEQC_IN_GG(s(X1), s(X2)) -> GEQC_IN_GG(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GGA(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X3)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

SUBD_IN_GGA(x1, x2, x3)  =  SUBD_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GGA(s(X1), s(X2), X3) -> SUBD_IN_GGA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

SUBD_IN_GGA(x1, x2, x3)  =  SUBD_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GGA(s(X1), s(X2)) -> SUBD_IN_GGA(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUBD_IN_GGA(s(X1), s(X2)) -> SUBD_IN_GGA(X1, X2)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2, X4))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

REMA_IN_GGG(x1, x2, x3)  =  REMA_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4)  =  U4_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2, X4))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)

The TRS R consists of the following rules:

   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

REMA_IN_GGG(x1, x2, x3)  =  REMA_IN_GGG(x1, x2, x3)

U4_GGG(x1, x2, x3, x4)  =  U4_GGG(x1, x2, x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)

The TRS R consists of the following rules:

   subcB_in_gga(s(X1), X2) -> U13_gga(X1, X2, subcD_in_gga(X1, X2))
   U13_gga(X1, X2, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)
   subcD_in_gga(s(X1), s(X2)) -> U11_gga(X1, X2, subcD_in_gga(X1, X2))
   subcD_in_gga(X1, 0) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)

The set Q consists of the following terms:

   subcB_in_gga(x0, x1)
   U13_gga(x0, x1, x2)
   subcD_in_gga(x0, x1)
   U11_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(33) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   REMA_IN_GGG(X1, s(X2), X3) -> U4_GGG(X1, X2, X3, subcB_in_gga(X1, X2))
   U4_GGG(X1, X2, X3, subcB_out_gga(X1, X2, X4)) -> REMA_IN_GGG(X4, s(X2), X3)

Strictly oriented rules of the TRS R:

   subcD_in_gga(s(X1), s(X2)) -> U11_gga(X1, X2, subcD_in_gga(X1, X2))

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(REMA_IN_GGG(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_3
   POL(U11_gga(x_1, x_2, x_3)) = 2*x_1 + x_3
   POL(U13_gga(x_1, x_2, x_3)) = 2 + x_3
   POL(U4_GGG(x_1, x_2, x_3, x_4)) = 2*x_3 + 2*x_4
   POL(s(x_1)) = 2 + 2*x_1
   POL(subcB_in_gga(x_1, x_2)) = x_1
   POL(subcB_out_gga(x_1, x_2, x_3)) = 2 + 2*x_3
   POL(subcD_in_gga(x_1, x_2)) = 2*x_1
   POL(subcD_out_gga(x_1, x_2, x_3)) = 2*x_3


----------------------------------------

(34)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   subcB_in_gga(s(X1), X2) -> U13_gga(X1, X2, subcD_in_gga(X1, X2))
   U13_gga(X1, X2, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)
   subcD_in_gga(X1, 0) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)

The set Q consists of the following terms:

   subcB_in_gga(x0, x1)
   U13_gga(x0, x1, x2)
   subcD_in_gga(x0, x1)
   U11_gga(x0, x1, x2)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(35) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(36)
YES

----------------------------------------

(37)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GAA(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X3)

The TRS R consists of the following rules:

   subcB_in_gaa(s(X1), X2, X3) -> U13_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(s(X1), s(X2), X3) -> U11_gaa(X1, X2, X3, subcD_in_gaa(X1, X2, X3))
   subcD_in_gaa(X1, 0, X1) -> subcD_out_gaa(X1, 0, X1)
   U11_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcD_out_gaa(s(X1), s(X2), X3)
   U13_gaa(X1, X2, X3, subcD_out_gaa(X1, X2, X3)) -> subcB_out_gaa(s(X1), X2, X3)
   subcB_in_gga(s(X1), X2, X3) -> U13_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(s(X1), s(X2), X3) -> U11_gga(X1, X2, X3, subcD_in_gga(X1, X2, X3))
   subcD_in_gga(X1, 0, X1) -> subcD_out_gga(X1, 0, X1)
   U11_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcD_out_gga(s(X1), s(X2), X3)
   U13_gga(X1, X2, X3, subcD_out_gga(X1, X2, X3)) -> subcB_out_gga(s(X1), X2, X3)

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

subcB_in_gaa(x1, x2, x3)  =  subcB_in_gaa(x1)

U13_gaa(x1, x2, x3, x4)  =  U13_gaa(x1, x4)

subcD_in_gaa(x1, x2, x3)  =  subcD_in_gaa(x1)

U11_gaa(x1, x2, x3, x4)  =  U11_gaa(x1, x4)

subcD_out_gaa(x1, x2, x3)  =  subcD_out_gaa(x1, x2, x3)

subcB_out_gaa(x1, x2, x3)  =  subcB_out_gaa(x1, x2, x3)

subcB_in_gga(x1, x2, x3)  =  subcB_in_gga(x1, x2)

U13_gga(x1, x2, x3, x4)  =  U13_gga(x1, x2, x4)

subcD_in_gga(x1, x2, x3)  =  subcD_in_gga(x1, x2)

U11_gga(x1, x2, x3, x4)  =  U11_gga(x1, x2, x4)

0  =  0

subcD_out_gga(x1, x2, x3)  =  subcD_out_gga(x1, x2, x3)

subcB_out_gga(x1, x2, x3)  =  subcB_out_gga(x1, x2, x3)

SUBD_IN_GAA(x1, x2, x3)  =  SUBD_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(38) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(39)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GAA(s(X1), s(X2), X3) -> SUBD_IN_GAA(X1, X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

SUBD_IN_GAA(x1, x2, x3)  =  SUBD_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(40) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(41)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SUBD_IN_GAA(s(X1)) -> SUBD_IN_GAA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(42) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SUBD_IN_GAA(s(X1)) -> SUBD_IN_GAA(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(43)
YES
