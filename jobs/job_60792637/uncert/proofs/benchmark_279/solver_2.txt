YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/YWyi1.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

flat(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToTRSTransformerProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 56 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Clauses:

right(tree(X, XS1, XS2), XS2).
flat(niltree, nil).
flat(tree(X, niltree, XS), cons(X, YS)) :- ','(right(tree(X, niltree, XS), ZS), flat(ZS, YS)).
flat(tree(X, tree(Y, YS1, YS2), XS), ZS) :- flat(tree(Y, YS1, tree(X, YS2, XS)), ZS).


Query: flat(g,a)
----------------------------------------

(1) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(right (tree X XS1 XS2) XS2)",
                null
            ],
            [
                "(flat (niltree) (nil))",
                null
            ],
            [
                "(flat (tree X (niltree) XS) (cons X YS))",
                "(',' (right (tree X (niltree) XS) ZS) (flat ZS YS))"
            ],
            [
                "(flat (tree X (tree Y YS1 YS2) XS) ZS)",
                "(flat (tree Y YS1 (tree X YS2 XS)) ZS)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "231": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(flat (tree T38 T39 (tree T37 T40 T41)) T43)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38",
                        "T39",
                        "T40",
                        "T41"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(flat T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "210": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "232": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(flat T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(flat T1 T2)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(flat T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "211": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(flat T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "224": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(flat T24 T18)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": [],
                    "exprvars": []
                }
            },
            "214": {
                "goal": [{
                    "clause": 3,
                    "scope": 1,
                    "term": "(flat T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "215": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (right (tree T15 (niltree) T16) X18) (flat X18 T18))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T15",
                        "T16"
                    ],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "205": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(flat T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "216": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "206": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(flat T1 T2)"
                    },
                    {
                        "clause": 3,
                        "scope": 1,
                        "term": "(flat T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "217": {
                "goal": [{
                    "clause": 0,
                    "scope": 2,
                    "term": "(',' (right (tree T15 (niltree) T16) X18) (flat X18 T18))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T15",
                        "T16"
                    ],
                    "free": ["X18"],
                    "exprvars": []
                }
            },
            "208": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "209": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 205,
                "label": "PARALLEL"
            },
            {
                "from": 2,
                "to": 206,
                "label": "PARALLEL"
            },
            {
                "from": 205,
                "to": 208,
                "label": "EVAL with clause\nflat(niltree, nil).\nand substitutionT1 -> niltree,\nT2 -> nil"
            },
            {
                "from": 205,
                "to": 209,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 206,
                "to": 211,
                "label": "PARALLEL"
            },
            {
                "from": 206,
                "to": 214,
                "label": "PARALLEL"
            },
            {
                "from": 208,
                "to": 210,
                "label": "SUCCESS"
            },
            {
                "from": 211,
                "to": 215,
                "label": "EVAL with clause\nflat(tree(X15, niltree, X16), cons(X15, X17)) :- ','(right(tree(X15, niltree, X16), X18), flat(X18, X17)).\nand substitutionX15 -> T15,\nX16 -> T16,\nT1 -> tree(T15, niltree, T16),\nX17 -> T18,\nT2 -> cons(T15, T18),\nT17 -> T18"
            },
            {
                "from": 211,
                "to": 216,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 214,
                "to": 231,
                "label": "EVAL with clause\nflat(tree(X40, tree(X41, X42, X43), X44), X45) :- flat(tree(X41, X42, tree(X40, X43, X44)), X45).\nand substitutionX40 -> T37,\nX41 -> T38,\nX42 -> T39,\nX43 -> T40,\nX44 -> T41,\nT1 -> tree(T37, tree(T38, T39, T40), T41),\nT2 -> T43,\nX45 -> T43,\nT42 -> T43"
            },
            {
                "from": 214,
                "to": 232,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 215,
                "to": 217,
                "label": "CASE"
            },
            {
                "from": 217,
                "to": 224,
                "label": "ONLY EVAL with clause\nright(tree(X25, X26, X27), X27).\nand substitutionT15 -> T23,\nX25 -> T23,\nX26 -> niltree,\nT16 -> T24,\nX27 -> T24,\nX18 -> T24"
            },
            {
                "from": 224,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T24\nT2 -> T18"
            },
            {
                "from": 231,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> tree(T38, T39, tree(T37, T40, T41))\nT2 -> T43"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in(niltree) -> f1_out1(nil)
   f1_in(tree(T23, niltree, T24)) -> U1(f1_in(T24), tree(T23, niltree, T24))
   U1(f1_out1(T18), tree(T23, niltree, T24)) -> f1_out1(cons(T23, T18))
   f1_in(tree(T37, tree(T38, T39, T40), T41)) -> U2(f1_in(tree(T38, T39, tree(T37, T40, T41))), tree(T37, tree(T38, T39, T40), T41))
   U2(f1_out1(T43), tree(T37, tree(T38, T39, T40), T41)) -> f1_out1(T43)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
[f1_in_1, nil] > niltree > tree_3
[f1_in_1, nil] > [U1_2, cons_2] > f1_out1_1
[f1_in_1, nil] > U2_2


Status:
f1_in_1: [1]
niltree: multiset status
f1_out1_1: multiset status
nil: multiset status
tree_3: [2,3,1]
U1_2: multiset status
cons_2: multiset status
U2_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f1_in(niltree) -> f1_out1(nil)
   f1_in(tree(T23, niltree, T24)) -> U1(f1_in(T24), tree(T23, niltree, T24))
   U1(f1_out1(T18), tree(T23, niltree, T24)) -> f1_out1(cons(T23, T18))
   f1_in(tree(T37, tree(T38, T39, T40), T41)) -> U2(f1_in(tree(T38, T39, tree(T37, T40, T41))), tree(T37, tree(T38, T39, T40), T41))
   U2(f1_out1(T43), tree(T37, tree(T38, T39, T40), T41)) -> f1_out1(T43)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
