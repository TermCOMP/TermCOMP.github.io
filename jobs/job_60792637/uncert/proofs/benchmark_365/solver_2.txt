MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/fC4oo.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

balance(a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 2 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) PiDP
    (7) UsableRulesProof [EQUIVALENT, 0 ms]
    (8) PiDP
    (9) PiDPToQDPProof [SOUND, 0 ms]
    (10) QDP
(11) PrologToPiTRSProof [SOUND, 8 ms]
(12) PiTRS
    (13) DependencyPairsProof [EQUIVALENT, 0 ms]
    (14) PiDP
    (15) DependencyGraphProof [EQUIVALENT, 0 ms]
    (16) PiDP
    (17) UsableRulesProof [EQUIVALENT, 0 ms]
    (18) PiDP
    (19) PiDPToQDPProof [SOUND, 0 ms]
    (20) QDP
(21) PrologToTRSTransformerProof [SOUND, 186 ms]
(22) QTRS
    (23) QTRSRRRProof [EQUIVALENT, 214 ms]
    (24) QTRS
(25) PrologToDTProblemTransformerProof [SOUND, 163 ms]
(26) TRIPLES
    (27) TriplesToPiDPProof [SOUND, 9 ms]
    (28) PiDP
    (29) DependencyGraphProof [EQUIVALENT, 0 ms]
    (30) AND
        (31) PiDP
            (32) UsableRulesProof [EQUIVALENT, 0 ms]
            (33) PiDP
            (34) PiDPToQDPProof [SOUND, 0 ms]
            (35) QDP
        (36) PiDP
            (37) UsableRulesProof [EQUIVALENT, 0 ms]
            (38) PiDP
(39) PrologToIRSwTTransformerProof [SOUND, 187 ms]
(40) AND
    (41) IRSwT
        (42) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (43) IRSwT
        (44) IntTRSCompressionProof [EQUIVALENT, 9 ms]
        (45) IRSwT
        (46) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (47) IRSwT
        (48) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (49) IRSwT
        (50) FilterProof [EQUIVALENT, 0 ms]
        (51) IntTRS
        (52) IntTRSPeriodicNontermProof [COMPLETE, 4 ms]
        (53) NO
    (54) IRSwT
        (55) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (56) TRUE


----------------------------------------

(0)
Obligation:
Clauses:

balance(T, TB) :- balance(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])).
balance(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)).
balance(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) :- ','(balance(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)), balance(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))).


Query: balance(a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

balance_in_2: (f,b)

balance_in_5: (f,f,f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCE_IN_AG(T, TB) -> U1_AG(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   BALANCE_IN_AG(T, TB) -> BALANCE_IN_AAAAA(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag

BALANCE_IN_AG(x1, x2)  =  BALANCE_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x3)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)

U3_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCE_IN_AG(T, TB) -> U1_AG(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   BALANCE_IN_AG(T, TB) -> BALANCE_IN_AAAAA(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag

BALANCE_IN_AG(x1, x2)  =  BALANCE_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x3)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)

U3_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(8)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))

The TRS R consists of the following rules:

   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))

The argument filtering Pi contains the following mapping:
balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(9) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(balance_out_aaaaa) -> BALANCE_IN_AAAAA
   BALANCE_IN_AAAAA -> U2_AAAAA(balance_in_aaaaa)
   BALANCE_IN_AAAAA -> BALANCE_IN_AAAAA

The TRS R consists of the following rules:

   balance_in_aaaaa -> balance_out_aaaaa
   balance_in_aaaaa -> U2_aaaaa(balance_in_aaaaa)
   U2_aaaaa(balance_out_aaaaa) -> U3_aaaaa(balance_in_aaaaa)
   U3_aaaaa(balance_out_aaaaa) -> balance_out_aaaaa

The set Q consists of the following terms:

   balance_in_aaaaa
   U2_aaaaa(x0)
   U3_aaaaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

balance_in_2: (f,b)

balance_in_5: (f,f,f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag(x2)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(12)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag(x2)



----------------------------------------

(13) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCE_IN_AG(T, TB) -> U1_AG(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   BALANCE_IN_AG(T, TB) -> BALANCE_IN_AAAAA(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag(x2)

BALANCE_IN_AG(x1, x2)  =  BALANCE_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)

U3_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCE_IN_AG(T, TB) -> U1_AG(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   BALANCE_IN_AG(T, TB) -> BALANCE_IN_AAAAA(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag(x2)

BALANCE_IN_AG(x1, x2)  =  BALANCE_IN_AG(x2)

U1_AG(x1, x2, x3)  =  U1_AG(x2, x3)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)

U3_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))

The TRS R consists of the following rules:

   balance_in_ag(T, TB) -> U1_ag(T, TB, balance_in_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, [])))
   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))
   U1_ag(T, TB, balance_out_aaaaa(T, -(I, []), -(.(','(TB, -(I, [])), X), X), -(Rest, []), -(Rest, []))) -> balance_out_ag(T, TB)

The argument filtering Pi contains the following mapping:
balance_in_ag(x1, x2)  =  balance_in_ag(x2)

U1_ag(x1, x2, x3)  =  U1_ag(x2, x3)

balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

balance_out_ag(x1, x2)  =  balance_out_ag(x2)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(18)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> BALANCE_IN_AAAAA(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_AAAAA(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   BALANCE_IN_AAAAA(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> BALANCE_IN_AAAAA(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))

The TRS R consists of the following rules:

   balance_in_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T)) -> balance_out_aaaaa(nil, -(X, X), -(A, B), -(A, B), -(.(','(nil, -(C, C)), T), T))
   balance_in_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT)) -> U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1)))
   U2_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(L, -(IH, .(V, IT1)), -(H, T), -(HR1, TR1), -(NH, NT1))) -> U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_in_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT)))
   U3_aaaaa(L, V, R, IH, IT, LB, VB, RB, A, D, H, X, T, HR, TR, NH, NT, balance_out_aaaaa(R, -(IT1, IT), -(HR1, TR1), -(HR, TR), -(NT1, NT))) -> balance_out_aaaaa(tree(L, V, R), -(IH, IT), -(.(','(tree(LB, VB, RB), -(A, D)), H), .(','(LB, -(A, .(VB, X))), .(','(RB, -(X, D)), T))), -(HR, TR), -(NH, NT))

The argument filtering Pi contains the following mapping:
balance_in_aaaaa(x1, x2, x3, x4, x5)  =  balance_in_aaaaa

balance_out_aaaaa(x1, x2, x3, x4, x5)  =  balance_out_aaaaa

U2_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_aaaaa(x18)

U3_aaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U3_aaaaa(x18)

BALANCE_IN_AAAAA(x1, x2, x3, x4, x5)  =  BALANCE_IN_AAAAA

U2_AAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)  =  U2_AAAAA(x18)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(19) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U2_AAAAA(balance_out_aaaaa) -> BALANCE_IN_AAAAA
   BALANCE_IN_AAAAA -> U2_AAAAA(balance_in_aaaaa)
   BALANCE_IN_AAAAA -> BALANCE_IN_AAAAA

The TRS R consists of the following rules:

   balance_in_aaaaa -> balance_out_aaaaa
   balance_in_aaaaa -> U2_aaaaa(balance_in_aaaaa)
   U2_aaaaa(balance_out_aaaaa) -> U3_aaaaa(balance_in_aaaaa)
   U3_aaaaa(balance_out_aaaaa) -> balance_out_aaaaa

The set Q consists of the following terms:

   balance_in_aaaaa
   U2_aaaaa(x0)
   U3_aaaaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(21) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(balance T TB)",
                "(balance T (- I ([])) (- (. (',' TB (- I ([]))) X) X) (- Rest ([])) (- Rest ([])))"
            ],
            [
                "(balance (nil) (- X X) (- A B) (- A B) (- (. (',' (nil) (- C C)) T) T))",
                null
            ],
            [
                "(balance (tree L V R) (- IH IT) (- (. (',' (tree LB VB RB) (- A D)) H) (. (',' LB (- A (. VB X))) (. (',' RB (- X D)) T))) (- HR TR) (- NH NT))",
                "(',' (balance L (- IH (. V IT1)) (- H T) (- HR1 TR1) (- NH NT1)) (balance R (- IT1 IT) (- HR1 TR1) (- HR TR) (- NT1 NT)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "27": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "371": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "350": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "351": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "450": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "494": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T447 (- T448 (. T449 X541)) (- T450 T451) (- X542 X543) (- T452 X544)) (balance T453 (- X541 ([])) (- X542 X543) (- T454 ([])) (- X544 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X541",
                        "X542",
                        "X543",
                        "X544"
                    ],
                    "exprvars": []
                }
            },
            "198": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144)) (balance T43 (- X141 ([])) (- X142 X143) (- X149 ([])) (- X144 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "495": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "199": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "452": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T314 (- T315 (. T316 X413)) (- T317 T318) (- X414 X415) (- T319 X416)) (balance T320 (- X413 (. T321 X417)) (- X414 X415) (- X418 X419) (- X416 X420)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X417",
                        "X418",
                        "X419",
                        "X420",
                        "X413",
                        "X414",
                        "X415",
                        "X416"
                    ],
                    "exprvars": []
                }
            },
            "496": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T447 (- T448 (. T449 X541)) (- T450 T451) (- X542 X543) (- T452 X544))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X541",
                        "X542",
                        "X543",
                        "X544"
                    ],
                    "exprvars": []
                }
            },
            "453": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "497": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T473 (- T469 ([])) (- T470 T471) (- T474 ([])) (- T472 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "399": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "454": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T314 (- T315 (. T316 X413)) (- T317 T318) (- X414 X415) (- T319 X416))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X413",
                        "X414",
                        "X415",
                        "X416"
                    ],
                    "exprvars": []
                }
            },
            "476": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "455": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T340 (- T336 (. T341 X417)) (- T337 T338) (- X418 X419) (- T339 X420))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X417",
                        "X418",
                        "X419",
                        "X420"
                    ],
                    "exprvars": []
                }
            },
            "477": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "456": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "415": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "417": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "418": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T164 (- T165 (. T166 X278)) (- (. (',' T160 (- T168 ([]))) (. (',' T155 (- T165 (. T156 T169))) (. (',' T157 (- T169 (. T158 T168))) T167))) T167) (- X279 X280) (- X285 X281)) (balance T170 (- X278 (. T171 X282)) (- X279 X280) (- X283 X284) (- X281 X286)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T155",
                        "T156",
                        "T157",
                        "T158",
                        "T160"
                    ],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X285",
                        "X286",
                        "X278",
                        "X279",
                        "X280",
                        "X281"
                    ],
                    "exprvars": []
                }
            },
            "419": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "480": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "482": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "400": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "446": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "447": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "448": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "449": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "428": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T164 (- T165 (. T166 X278)) (- (. (',' T160 (- T168 ([]))) (. (',' T155 (- T165 (. T156 T169))) (. (',' T157 (- T169 (. T158 T168))) T167))) T167) (- X279 X280) (- X285 X281))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T155",
                        "T156",
                        "T157",
                        "T158",
                        "T160"
                    ],
                    "free": [
                        "X285",
                        "X278",
                        "X279",
                        "X280",
                        "X281"
                    ],
                    "exprvars": []
                }
            },
            "429": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 6,
                "label": "ONLY EVAL with clause\nbalance(X22, X23) :- balance(X22, -(X24, []), -(.(','(X23, -(X24, [])), X25), X25), -(X26, []), -(X26, [])).\nand substitutionT1 -> T12,\nX22 -> T12,\nT2 -> T11,\nX23 -> T11,\nT10 -> T12"
            },
            {
                "from": 6,
                "to": 8,
                "label": "CASE"
            },
            {
                "from": 8,
                "to": 11,
                "label": "PARALLEL"
            },
            {
                "from": 8,
                "to": 12,
                "label": "PARALLEL"
            },
            {
                "from": 11,
                "to": 13,
                "label": "EVAL with clause\nbalance(nil, -(X69, X69), -(X70, X71), -(X70, X71), -(.(','(nil, -(X72, X72)), X73), X73)).\nand substitutionT12 -> nil,\nX24 -> [],\nX69 -> [],\nX74 -> [],\nT11 -> nil,\nX25 -> [],\nX70 -> .(','(nil, -([], [])), []),\nX71 -> [],\nX26 -> .(','(nil, -([], [])), []),\nX75 -> [],\nT19 -> nil,\nX72 -> [],\nX73 -> []"
            },
            {
                "from": 11,
                "to": 14,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 12,
                "to": 198,
                "label": "EVAL with clause\nbalance(tree(X124, X125, X126), -(X127, X128), -(.(','(tree(X129, X130, X131), -(X132, X133)), X134), .(','(X129, -(X132, .(X130, X135))), .(','(X131, -(X135, X133)), X136))), -(X137, X138), -(X139, X140)) :- ','(balance(X124, -(X127, .(X125, X141)), -(X134, X136), -(X142, X143), -(X139, X144)), balance(X126, -(X141, X128), -(X142, X143), -(X137, X138), -(X144, X140))).\nand substitutionX124 -> T38,\nX125 -> T40,\nX126 -> T43,\nT12 -> tree(T38, T40, T43),\nX24 -> T39,\nX127 -> T39,\nX128 -> [],\nX129 -> T35,\nX130 -> T36,\nX131 -> T37,\nT11 -> tree(T35, T36, T37),\nX132 -> T39,\nX133 -> [],\nX25 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX134 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX135 -> T42,\nX136 -> T41,\nX146 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX26 -> X149,\nX137 -> X149,\nX138 -> [],\nX139 -> X149,\nX140 -> [],\nT32 -> T38,\nX145 -> T39,\nT33 -> T40,\nX148 -> T41,\nX147 -> T42,\nT34 -> T43"
            },
            {
                "from": 12,
                "to": 199,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 27,
                "label": "SUCCESS"
            },
            {
                "from": 198,
                "to": 350,
                "label": "SPLIT 1"
            },
            {
                "from": 198,
                "to": 351,
                "label": "SPLIT 2\nreplacements:X141 -> T60,\nX142 -> T61,\nX143 -> T62,\nX149 -> T63,\nX144 -> T64,\nT43 -> T65"
            },
            {
                "from": 350,
                "to": 371,
                "label": "CASE"
            },
            {
                "from": 351,
                "to": 456,
                "label": "CASE"
            },
            {
                "from": 371,
                "to": 399,
                "label": "PARALLEL"
            },
            {
                "from": 371,
                "to": 400,
                "label": "PARALLEL"
            },
            {
                "from": 399,
                "to": 415,
                "label": "EVAL with clause\nbalance(nil, -(X206, X206), -(X207, X208), -(X207, X208), -(.(','(nil, -(X209, X209)), X210), X210)).\nand substitutionT38 -> nil,\nT39 -> .(T115, T116),\nX206 -> .(T115, T116),\nT40 -> T115,\nX141 -> T116,\nT114 -> .(T115, T116),\nT35 -> T117,\nT36 -> T118,\nT42 -> T119,\nT37 -> T120,\nT41 -> T121,\nX207 -> .(','(T117, -(.(T115, T116), .(T118, T119))), .(','(T120, -(T119, [])), T121)),\nX208 -> T121,\nX142 -> .(','(T117, -(.(T115, T116), .(T118, T119))), .(','(T120, -(T119, [])), T121)),\nX143 -> T121,\nX209 -> X211,\nX210 -> X212,\nX149 -> .(','(nil, -(X211, X211)), X212),\nX144 -> X212"
            },
            {
                "from": 399,
                "to": 416,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 400,
                "to": 418,
                "label": "EVAL with clause\nbalance(tree(X261, X262, X263), -(X264, X265), -(.(','(tree(X266, X267, X268), -(X269, X270)), X271), .(','(X266, -(X269, .(X267, X272))), .(','(X268, -(X272, X270)), X273))), -(X274, X275), -(X276, X277)) :- ','(balance(X261, -(X264, .(X262, X278)), -(X271, X273), -(X279, X280), -(X276, X281)), balance(X263, -(X278, X265), -(X279, X280), -(X274, X275), -(X281, X277))).\nand substitutionX261 -> T164,\nX262 -> T166,\nX263 -> T170,\nT38 -> tree(T164, T166, T170),\nT39 -> T165,\nX264 -> T165,\nT40 -> T171,\nX141 -> X282,\nX265 -> .(T171, X282),\nX266 -> T155,\nX267 -> T156,\nX268 -> T157,\nT35 -> tree(T155, T156, T157),\nX269 -> T165,\nT36 -> T158,\nT42 -> T168,\nX270 -> .(T158, T168),\nT37 -> T160,\nT41 -> .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)),\nX271 -> .(','(T160, -(T168, [])), .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167))),\nX272 -> T169,\nX273 -> T167,\nT161 -> .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)),\nX142 -> X283,\nX274 -> X283,\nX143 -> X284,\nX275 -> X284,\nX149 -> X285,\nX276 -> X285,\nX144 -> X286,\nX277 -> X286,\nT150 -> T164,\nT153 -> T165,\nT151 -> T166,\nT163 -> T167,\nT159 -> T168,\nT162 -> T169,\nT152 -> T170,\nT154 -> T171"
            },
            {
                "from": 400,
                "to": 419,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 415,
                "to": 417,
                "label": "SUCCESS"
            },
            {
                "from": 418,
                "to": 428,
                "label": "SPLIT 1"
            },
            {
                "from": 418,
                "to": 429,
                "label": "SPLIT 2\nreplacements:X278 -> T194,\nX279 -> T195,\nX280 -> T196,\nX285 -> T197,\nX281 -> T198,\nT170 -> T199,\nT171 -> T200"
            },
            {
                "from": 428,
                "to": 429,
                "label": "INSTANCE with matching:\nT199 -> T164\nT194 -> T165\nT200 -> T166\nX282 -> X278\nT195 -> .(','(T160, -(T168, [])), .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)))\nT196 -> T167\nX283 -> X279\nX284 -> X280\nT198 -> X285\nX286 -> X281"
            },
            {
                "from": 429,
                "to": 446,
                "label": "CASE"
            },
            {
                "from": 446,
                "to": 447,
                "label": "PARALLEL"
            },
            {
                "from": 446,
                "to": 448,
                "label": "PARALLEL"
            },
            {
                "from": 447,
                "to": 449,
                "label": "EVAL with clause\nbalance(nil, -(X345, X345), -(X346, X347), -(X346, X347), -(.(','(nil, -(X348, X348)), X349), X349)).\nand substitutionT199 -> nil,\nT194 -> .(T266, T267),\nX345 -> .(T266, T267),\nT200 -> T266,\nX282 -> T267,\nT265 -> .(T266, T267),\nT195 -> T268,\nX346 -> T268,\nT196 -> T269,\nX347 -> T269,\nX283 -> T268,\nX284 -> T269,\nX348 -> T270,\nX349 -> T271,\nT198 -> .(','(nil, -(T270, T270)), T271),\nX286 -> T271"
            },
            {
                "from": 447,
                "to": 450,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 448,
                "to": 452,
                "label": "EVAL with clause\nbalance(tree(X396, X397, X398), -(X399, X400), -(.(','(tree(X401, X402, X403), -(X404, X405)), X406), .(','(X401, -(X404, .(X402, X407))), .(','(X403, -(X407, X405)), X408))), -(X409, X410), -(X411, X412)) :- ','(balance(X396, -(X399, .(X397, X413)), -(X406, X408), -(X414, X415), -(X411, X416)), balance(X398, -(X413, X400), -(X414, X415), -(X409, X410), -(X416, X412))).\nand substitutionX396 -> T314,\nX397 -> T316,\nX398 -> T320,\nT199 -> tree(T314, T316, T320),\nT194 -> T315,\nX399 -> T315,\nT200 -> T321,\nX282 -> X417,\nX400 -> .(T321, X417),\nX401 -> T305,\nX402 -> T306,\nX403 -> T307,\nX404 -> T308,\nX405 -> T309,\nX406 -> T317,\nT195 -> .(','(tree(T305, T306, T307), -(T308, T309)), T317),\nX407 -> T311,\nX408 -> T318,\nT196 -> .(','(T305, -(T308, .(T306, T311))), .(','(T307, -(T311, T309)), T318)),\nX283 -> X418,\nX409 -> X418,\nX284 -> X419,\nX410 -> X419,\nT198 -> T319,\nX411 -> T319,\nX286 -> X420,\nX412 -> X420,\nT300 -> T314,\nT303 -> T315,\nT301 -> T316,\nT310 -> T317,\nT312 -> T318,\nT313 -> T319,\nT302 -> T320,\nT304 -> T321"
            },
            {
                "from": 448,
                "to": 453,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 449,
                "to": 451,
                "label": "SUCCESS"
            },
            {
                "from": 452,
                "to": 454,
                "label": "SPLIT 1"
            },
            {
                "from": 452,
                "to": 455,
                "label": "SPLIT 2\nreplacements:X413 -> T336,\nX414 -> T337,\nX415 -> T338,\nX416 -> T339,\nT320 -> T340,\nT321 -> T341"
            },
            {
                "from": 454,
                "to": 429,
                "label": "INSTANCE with matching:\nT199 -> T314\nT194 -> T315\nT200 -> T316\nX282 -> X413\nT195 -> T317\nT196 -> T318\nX283 -> X414\nX284 -> X415\nT198 -> T319\nX286 -> X416"
            },
            {
                "from": 455,
                "to": 429,
                "label": "INSTANCE with matching:\nT199 -> T340\nT194 -> T336\nT200 -> T341\nX282 -> X417\nT195 -> T337\nT196 -> T338\nX283 -> X418\nX284 -> X419\nT198 -> T339\nX286 -> X420"
            },
            {
                "from": 456,
                "to": 476,
                "label": "PARALLEL"
            },
            {
                "from": 456,
                "to": 477,
                "label": "PARALLEL"
            },
            {
                "from": 476,
                "to": 480,
                "label": "EVAL with clause\nbalance(nil, -(X481, X481), -(X482, X483), -(X482, X483), -(.(','(nil, -(X484, X484)), X485), X485)).\nand substitutionT65 -> nil,\nT60 -> [],\nX481 -> [],\nT400 -> [],\nT61 -> T401,\nX482 -> T401,\nT62 -> [],\nX483 -> [],\nT63 -> T401,\nT402 -> [],\nX484 -> T403,\nX485 -> [],\nT64 -> .(','(nil, -(T403, T403)), []),\nT404 -> []"
            },
            {
                "from": 476,
                "to": 481,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 477,
                "to": 494,
                "label": "EVAL with clause\nbalance(tree(X524, X525, X526), -(X527, X528), -(.(','(tree(X529, X530, X531), -(X532, X533)), X534), .(','(X529, -(X532, .(X530, X535))), .(','(X531, -(X535, X533)), X536))), -(X537, X538), -(X539, X540)) :- ','(balance(X524, -(X527, .(X525, X541)), -(X534, X536), -(X542, X543), -(X539, X544)), balance(X526, -(X541, X528), -(X542, X543), -(X537, X538), -(X544, X540))).\nand substitutionX524 -> T447,\nX525 -> T449,\nX526 -> T453,\nT65 -> tree(T447, T449, T453),\nT60 -> T448,\nX527 -> T448,\nX528 -> [],\nX529 -> T437,\nX530 -> T438,\nX531 -> T439,\nX532 -> T440,\nX533 -> T441,\nX534 -> T450,\nT61 -> .(','(tree(T437, T438, T439), -(T440, T441)), T450),\nX535 -> T443,\nX536 -> T451,\nT62 -> .(','(T437, -(T440, .(T438, T443))), .(','(T439, -(T443, T441)), T451)),\nT63 -> T454,\nX537 -> T454,\nX538 -> [],\nT64 -> T452,\nX539 -> T452,\nX540 -> [],\nT433 -> T447,\nT436 -> T448,\nT434 -> T449,\nT442 -> T450,\nT444 -> T451,\nT446 -> T452,\nT435 -> T453,\nT445 -> T454"
            },
            {
                "from": 477,
                "to": 495,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 480,
                "to": 482,
                "label": "SUCCESS"
            },
            {
                "from": 494,
                "to": 496,
                "label": "SPLIT 1"
            },
            {
                "from": 494,
                "to": 497,
                "label": "SPLIT 2\nreplacements:X541 -> T469,\nX542 -> T470,\nX543 -> T471,\nX544 -> T472,\nT453 -> T473,\nT454 -> T474"
            },
            {
                "from": 496,
                "to": 429,
                "label": "INSTANCE with matching:\nT199 -> T447\nT194 -> T448\nT200 -> T449\nX282 -> X541\nT195 -> T450\nT196 -> T451\nX283 -> X542\nX284 -> X543\nT198 -> T452\nX286 -> X544"
            },
            {
                "from": 497,
                "to": 351,
                "label": "INSTANCE with matching:\nT65 -> T473\nT60 -> T469\nT61 -> T470\nT62 -> T471\nT63 -> T474\nT64 -> T472"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(22)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f2_in(nil) -> f2_out1
   f2_in(tree(T35, T36, T37)) -> U1(f198_in(T35, T36, T37), tree(T35, T36, T37))
   U1(f198_out1, tree(T35, T36, T37)) -> f2_out1
   f429_in -> f429_out1
   f429_in -> U2(f452_in)
   U2(f452_out1) -> f429_out1
   f351_in -> f351_out1
   f351_in -> U3(f494_in)
   U3(f494_out1) -> f351_out1
   f350_in(T117, T118, T120) -> f350_out1
   f350_in(tree(T155, T156, T157), T158, T160) -> U4(f418_in(T160, T155, T156, T157, T158), tree(T155, T156, T157), T158, T160)
   U4(f418_out1, tree(T155, T156, T157), T158, T160) -> f350_out1
   f198_in(T35, T36, T37) -> U5(f350_in(T35, T36, T37), T35, T36, T37)
   U5(f350_out1, T35, T36, T37) -> U6(f351_in, T35, T36, T37)
   U6(f351_out1, T35, T36, T37) -> f198_out1
   f418_in(T160, T155, T156, T157, T158) -> U7(f429_in, T160, T155, T156, T157, T158)
   U7(f429_out1, T160, T155, T156, T157, T158) -> U8(f429_in, T160, T155, T156, T157, T158)
   U8(f429_out1, T160, T155, T156, T157, T158) -> f418_out1
   f452_in -> U9(f429_in)
   U9(f429_out1) -> U10(f429_in)
   U10(f429_out1) -> f452_out1
   f494_in -> U11(f429_in)
   U11(f429_out1) -> U12(f351_in)
   U12(f351_out1) -> f494_out1

Q is empty.

----------------------------------------

(23) QTRSRRRProof (EQUIVALENT)
Used ordering:
f2_in/1(YES)
nil/0)
f2_out1/0)
tree/3(YES,YES,YES)
U1/2(YES,YES)
f198_in/3(YES,YES,YES)
f198_out1/0)
f429_in/0)
f429_out1/0)
U2/1)YES(
f452_in/0)
f452_out1/0)
f351_in/0)
f351_out1/0)
U3/1)YES(
f494_in/0)
f494_out1/0)
f350_in/3(YES,YES,YES)
f350_out1/0)
U4/4(YES,YES,YES,YES)
f418_in/5(YES,YES,YES,YES,YES)
f418_out1/0)
U5/4(YES,YES,YES,YES)
U6/4(YES,YES,YES,YES)
U7/6(YES,YES,YES,YES,YES,YES)
U8/6(YES,YES,YES,YES,YES,YES)
U9/1)YES(
U10/1)YES(
U11/1)YES(
U12/1)YES(

Quasi precedence:
[f2_in_1, f198_in_3] > U1_2 > f2_out1
[f2_in_1, f198_in_3] > f350_in_3 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > [f351_out1, f494_out1] > f198_out1
[f2_in_1, f198_in_3] > f350_in_3 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > f418_out1
[f2_in_1, f198_in_3] > f350_in_3 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > [U7_6, U8_6]
[f2_in_1, f198_in_3] > f350_in_3 > U4_4 > [tree_3, f350_out1] > f2_out1
[f2_in_1, f198_in_3] > f350_in_3 > U4_4 > [tree_3, f350_out1] > U6_4
[f2_in_1, f198_in_3] > U5_4 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > [f351_out1, f494_out1] > f198_out1
[f2_in_1, f198_in_3] > U5_4 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > f418_out1
[f2_in_1, f198_in_3] > U5_4 > [f429_in, f429_out1, f452_in, f452_out1, f351_in, f494_in, f418_in_5] > [U7_6, U8_6]
[f2_in_1, f198_in_3] > U5_4 > U6_4
nil > f2_out1


Status:
f2_in_1: multiset status
nil: multiset status
f2_out1: multiset status
tree_3: multiset status
U1_2: multiset status
f198_in_3: multiset status
f198_out1: multiset status
f429_in: multiset status
f429_out1: multiset status
f452_in: multiset status
f452_out1: multiset status
f351_in: multiset status
f351_out1: multiset status
f494_in: multiset status
f494_out1: multiset status
f350_in_3: multiset status
f350_out1: multiset status
U4_4: multiset status
f418_in_5: [3,1,2,4,5]
f418_out1: multiset status
U5_4: multiset status
U6_4: multiset status
U7_6: multiset status
U8_6: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f2_in(nil) -> f2_out1
   f2_in(tree(T35, T36, T37)) -> U1(f198_in(T35, T36, T37), tree(T35, T36, T37))
   U1(f198_out1, tree(T35, T36, T37)) -> f2_out1
   f351_in -> f351_out1
   f350_in(T117, T118, T120) -> f350_out1
   f350_in(tree(T155, T156, T157), T158, T160) -> U4(f418_in(T160, T155, T156, T157, T158), tree(T155, T156, T157), T158, T160)
   U4(f418_out1, tree(T155, T156, T157), T158, T160) -> f350_out1
   f198_in(T35, T36, T37) -> U5(f350_in(T35, T36, T37), T35, T36, T37)
   U5(f350_out1, T35, T36, T37) -> U6(f351_in, T35, T36, T37)
   U6(f351_out1, T35, T36, T37) -> f198_out1
   f418_in(T160, T155, T156, T157, T158) -> U7(f429_in, T160, T155, T156, T157, T158)
   U8(f429_out1, T160, T155, T156, T157, T158) -> f418_out1




----------------------------------------

(24)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f429_in -> f429_out1
   f429_in -> U2(f452_in)
   U2(f452_out1) -> f429_out1
   f351_in -> U3(f494_in)
   U3(f494_out1) -> f351_out1
   U7(f429_out1, T160, T155, T156, T157, T158) -> U8(f429_in, T160, T155, T156, T157, T158)
   f452_in -> U9(f429_in)
   U9(f429_out1) -> U10(f429_in)
   U10(f429_out1) -> f452_out1
   f494_in -> U11(f429_in)
   U11(f429_out1) -> U12(f351_in)
   U12(f351_out1) -> f494_out1

Q is empty.

----------------------------------------

(25) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(balance T TB)",
                "(balance T (- I ([])) (- (. (',' TB (- I ([]))) X) X) (- Rest ([])) (- Rest ([])))"
            ],
            [
                "(balance (nil) (- X X) (- A B) (- A B) (- (. (',' (nil) (- C C)) T) T))",
                null
            ],
            [
                "(balance (tree L V R) (- IH IT) (- (. (',' (tree LB VB RB) (- A D)) H) (. (',' LB (- A (. VB X))) (. (',' RB (- X D)) T))) (- HR TR) (- NH NT))",
                "(',' (balance L (- IH (. V IT1)) (- H T) (- HR1 TR1) (- NH NT1)) (balance R (- IT1 IT) (- HR1 TR1) (- HR TR) (- NT1 NT)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "22": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "370": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T58 (- T53 ([])) (- T54 T55) (- T56 ([])) (- T57 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "492": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T307 (- T308 (. T309 X380)) (- T310 T311) (- X381 X382) (- T312 X383)) (balance T313 (- X380 (. T314 X384)) (- X381 X382) (- X385 X386) (- X383 X387)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X384",
                        "X385",
                        "X386",
                        "X387",
                        "X380",
                        "X381",
                        "X382",
                        "X383"
                    ],
                    "exprvars": []
                }
            },
            "493": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "498": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T307 (- T308 (. T309 X380)) (- T310 T311) (- X381 X382) (- T312 X383))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X380",
                        "X381",
                        "X382",
                        "X383"
                    ],
                    "exprvars": []
                }
            },
            "499": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T333 (- T329 (. T334 X384)) (- T330 T331) (- X385 X386) (- T332 X387))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X384",
                        "X385",
                        "X386",
                        "X387"
                    ],
                    "exprvars": []
                }
            },
            "478": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(balance T192 (- T187 (. T193 X249)) (- T188 T189) (- X250 X251) (- T191 X253))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X249",
                        "X250",
                        "X251",
                        "X253"
                    ],
                    "exprvars": []
                }
            },
            "413": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T157 (- T158 (. T159 X245)) (- (. (',' T153 (- T161 ([]))) (. (',' T148 (- T158 (. T149 T162))) (. (',' T150 (- T162 (. T151 T161))) T160))) T160) (- X246 X247) (- X252 X248)) (balance T163 (- X245 (. T164 X249)) (- X246 X247) (- X250 X251) (- X248 X253)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T148",
                        "T149",
                        "T150",
                        "T151",
                        "T153"
                    ],
                    "free": [
                        "X249",
                        "X250",
                        "X251",
                        "X252",
                        "X253",
                        "X245",
                        "X246",
                        "X247",
                        "X248"
                    ],
                    "exprvars": []
                }
            },
            "479": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(balance T192 (- T187 (. T193 X249)) (- T188 T189) (- X250 X251) (- T191 X253))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X249",
                        "X250",
                        "X251",
                        "X253"
                    ],
                    "exprvars": []
                }
            },
            "414": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "459": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(balance T192 (- T187 (. T193 X249)) (- T188 T189) (- X250 X251) (- T191 X253))"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(balance T192 (- T187 (. T193 X249)) (- T188 T189) (- X250 X251) (- T191 X253))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X249",
                        "X250",
                        "X251",
                        "X253"
                    ],
                    "exprvars": []
                }
            },
            "35": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111)) (balance T36 (- X108 ([])) (- X109 X110) (- X116 ([])) (- X111 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X116",
                        "X108",
                        "X109",
                        "X110",
                        "X111"
                    ],
                    "exprvars": []
                }
            },
            "36": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T7 (- X5 ([])) (- (. (',' T6 (- X5 ([]))) X6) X6) (- X7 ([])) (- X7 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X5",
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(balance T7 (- X5 ([])) (- (. (',' T6 (- X5 ([]))) X6) X6) (- X7 ([])) (- X7 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(balance T7 (- X5 ([])) (- (. (',' T6 (- X5 ([]))) X6) X6) (- X7 ([])) (- X7 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X5",
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(balance T7 (- X5 ([])) (- (. (',' T6 (- X5 ([]))) X6) X6) (- X7 ([])) (- X7 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X5",
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "383": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111))"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X116",
                        "X108",
                        "X109",
                        "X110",
                        "X111"
                    ],
                    "exprvars": []
                }
            },
            "384": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X116",
                        "X108",
                        "X109",
                        "X110",
                        "X111"
                    ],
                    "exprvars": []
                }
            },
            "385": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X116",
                        "X108",
                        "X109",
                        "X110",
                        "X111"
                    ],
                    "exprvars": []
                }
            },
            "484": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "386": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "387": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T157 (- T158 (. T159 X245)) (- (. (',' T153 (- T161 ([]))) (. (',' T148 (- T158 (. T149 T162))) (. (',' T150 (- T162 (. T151 T161))) T160))) T160) (- X246 X247) (- X252 X248))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T148",
                        "T149",
                        "T150",
                        "T151",
                        "T153"
                    ],
                    "free": [
                        "X252",
                        "X245",
                        "X246",
                        "X247",
                        "X248"
                    ],
                    "exprvars": []
                }
            },
            "486": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "388": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T192 (- T187 (. T193 X249)) (- T188 T189) (- X250 X251) (- T191 X253))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X249",
                        "X250",
                        "X251",
                        "X253"
                    ],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(balance T58 (- T53 ([])) (- T54 T55) (- T56 ([])) (- T57 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(balance T58 (- T53 ([])) (- T54 T55) (- T56 ([])) (- T57 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "369": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T31 (- T32 (. T33 X108)) (- (. (',' T28 (- T32 (. T29 T35))) (. (',' T30 (- T35 ([]))) T34)) T34) (- X109 X110) (- X116 X111))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29",
                        "T30"
                    ],
                    "free": [
                        "X116",
                        "X108",
                        "X109",
                        "X110",
                        "X111"
                    ],
                    "exprvars": []
                }
            },
            "501": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(balance T58 (- T53 ([])) (- T54 T55) (- T56 ([])) (- T57 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "502": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(balance T58 (- T53 ([])) (- T54 T55) (- T56 ([])) (- T57 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "503": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "504": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "505": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "506": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T440 (- T441 (. T442 X508)) (- T443 T444) (- X509 X510) (- T445 X511)) (balance T446 (- X508 ([])) (- X509 X510) (- T447 ([])) (- X511 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X508",
                        "X509",
                        "X510",
                        "X511"
                    ],
                    "exprvars": []
                }
            },
            "507": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "508": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T440 (- T441 (. T442 X508)) (- T443 T444) (- X509 X510) (- T445 X511))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X508",
                        "X509",
                        "X510",
                        "X511"
                    ],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(balance T7 (- X5 ([])) (- (. (',' T6 (- X5 ([]))) X6) X6) (- X7 ([])) (- X7 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X5",
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "509": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T466 (- T462 ([])) (- T463 T464) (- T467 ([])) (- T465 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 15,
                "label": "ONLY EVAL with clause\nbalance(X3, X4) :- balance(X3, -(X5, []), -(.(','(X4, -(X5, [])), X6), X6), -(X7, []), -(X7, [])).\nand substitutionT1 -> T7,\nX3 -> T7,\nT2 -> T6,\nX4 -> T6,\nT5 -> T7"
            },
            {
                "from": 15,
                "to": 16,
                "label": "CASE"
            },
            {
                "from": 16,
                "to": 19,
                "label": "PARALLEL"
            },
            {
                "from": 16,
                "to": 20,
                "label": "PARALLEL"
            },
            {
                "from": 19,
                "to": 22,
                "label": "EVAL with clause\nbalance(nil, -(X36, X36), -(X37, X38), -(X37, X38), -(.(','(nil, -(X39, X39)), X40), X40)).\nand substitutionT7 -> nil,\nX5 -> [],\nX36 -> [],\nX41 -> [],\nT6 -> nil,\nX6 -> [],\nX37 -> .(','(nil, -([], [])), []),\nX38 -> [],\nX7 -> .(','(nil, -([], [])), []),\nX42 -> [],\nT12 -> nil,\nX39 -> [],\nX40 -> []"
            },
            {
                "from": 19,
                "to": 25,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 20,
                "to": 35,
                "label": "EVAL with clause\nbalance(tree(X91, X92, X93), -(X94, X95), -(.(','(tree(X96, X97, X98), -(X99, X100)), X101), .(','(X96, -(X99, .(X97, X102))), .(','(X98, -(X102, X100)), X103))), -(X104, X105), -(X106, X107)) :- ','(balance(X91, -(X94, .(X92, X108)), -(X101, X103), -(X109, X110), -(X106, X111)), balance(X93, -(X108, X95), -(X109, X110), -(X104, X105), -(X111, X107))).\nand substitutionX91 -> T31,\nX92 -> T33,\nX93 -> T36,\nT7 -> tree(T31, T33, T36),\nX5 -> T32,\nX94 -> T32,\nX95 -> [],\nX96 -> T28,\nX97 -> T29,\nX98 -> T30,\nT6 -> tree(T28, T29, T30),\nX99 -> T32,\nX100 -> [],\nX6 -> .(','(T28, -(T32, .(T29, T35))), .(','(T30, -(T35, [])), T34)),\nX101 -> .(','(T28, -(T32, .(T29, T35))), .(','(T30, -(T35, [])), T34)),\nX102 -> T35,\nX103 -> T34,\nX113 -> .(','(T28, -(T32, .(T29, T35))), .(','(T30, -(T35, [])), T34)),\nX7 -> X116,\nX104 -> X116,\nX105 -> [],\nX106 -> X116,\nX107 -> [],\nT25 -> T31,\nX112 -> T32,\nT26 -> T33,\nX115 -> T34,\nX114 -> T35,\nT27 -> T36"
            },
            {
                "from": 20,
                "to": 36,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 22,
                "to": 26,
                "label": "SUCCESS"
            },
            {
                "from": 35,
                "to": 369,
                "label": "SPLIT 1"
            },
            {
                "from": 35,
                "to": 370,
                "label": "SPLIT 2\nreplacements:X108 -> T53,\nX109 -> T54,\nX110 -> T55,\nX116 -> T56,\nX111 -> T57,\nT36 -> T58"
            },
            {
                "from": 369,
                "to": 383,
                "label": "CASE"
            },
            {
                "from": 370,
                "to": 500,
                "label": "CASE"
            },
            {
                "from": 383,
                "to": 384,
                "label": "PARALLEL"
            },
            {
                "from": 383,
                "to": 385,
                "label": "PARALLEL"
            },
            {
                "from": 384,
                "to": 386,
                "label": "EVAL with clause\nbalance(nil, -(X173, X173), -(X174, X175), -(X174, X175), -(.(','(nil, -(X176, X176)), X177), X177)).\nand substitutionT31 -> nil,\nT32 -> .(T108, T109),\nX173 -> .(T108, T109),\nT33 -> T108,\nX108 -> T109,\nT107 -> .(T108, T109),\nT28 -> T110,\nT29 -> T111,\nT35 -> T112,\nT30 -> T113,\nT34 -> T114,\nX174 -> .(','(T110, -(.(T108, T109), .(T111, T112))), .(','(T113, -(T112, [])), T114)),\nX175 -> T114,\nX109 -> .(','(T110, -(.(T108, T109), .(T111, T112))), .(','(T113, -(T112, [])), T114)),\nX110 -> T114,\nX176 -> X178,\nX177 -> X179,\nX116 -> .(','(nil, -(X178, X178)), X179),\nX111 -> X179"
            },
            {
                "from": 384,
                "to": 387,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 385,
                "to": 413,
                "label": "EVAL with clause\nbalance(tree(X228, X229, X230), -(X231, X232), -(.(','(tree(X233, X234, X235), -(X236, X237)), X238), .(','(X233, -(X236, .(X234, X239))), .(','(X235, -(X239, X237)), X240))), -(X241, X242), -(X243, X244)) :- ','(balance(X228, -(X231, .(X229, X245)), -(X238, X240), -(X246, X247), -(X243, X248)), balance(X230, -(X245, X232), -(X246, X247), -(X241, X242), -(X248, X244))).\nand substitutionX228 -> T157,\nX229 -> T159,\nX230 -> T163,\nT31 -> tree(T157, T159, T163),\nT32 -> T158,\nX231 -> T158,\nT33 -> T164,\nX108 -> X249,\nX232 -> .(T164, X249),\nX233 -> T148,\nX234 -> T149,\nX235 -> T150,\nT28 -> tree(T148, T149, T150),\nX236 -> T158,\nT29 -> T151,\nT35 -> T161,\nX237 -> .(T151, T161),\nT30 -> T153,\nT34 -> .(','(T148, -(T158, .(T149, T162))), .(','(T150, -(T162, .(T151, T161))), T160)),\nX238 -> .(','(T153, -(T161, [])), .(','(T148, -(T158, .(T149, T162))), .(','(T150, -(T162, .(T151, T161))), T160))),\nX239 -> T162,\nX240 -> T160,\nT154 -> .(','(T148, -(T158, .(T149, T162))), .(','(T150, -(T162, .(T151, T161))), T160)),\nX109 -> X250,\nX241 -> X250,\nX110 -> X251,\nX242 -> X251,\nX116 -> X252,\nX243 -> X252,\nX111 -> X253,\nX244 -> X253,\nT143 -> T157,\nT146 -> T158,\nT144 -> T159,\nT156 -> T160,\nT152 -> T161,\nT155 -> T162,\nT145 -> T163,\nT147 -> T164"
            },
            {
                "from": 385,
                "to": 414,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 386,
                "to": 388,
                "label": "SUCCESS"
            },
            {
                "from": 413,
                "to": 442,
                "label": "SPLIT 1"
            },
            {
                "from": 413,
                "to": 443,
                "label": "SPLIT 2\nreplacements:X245 -> T187,\nX246 -> T188,\nX247 -> T189,\nX252 -> T190,\nX248 -> T191,\nT163 -> T192,\nT164 -> T193"
            },
            {
                "from": 442,
                "to": 443,
                "label": "INSTANCE with matching:\nT192 -> T157\nT187 -> T158\nT193 -> T159\nX249 -> X245\nT188 -> .(','(T153, -(T161, [])), .(','(T148, -(T158, .(T149, T162))), .(','(T150, -(T162, .(T151, T161))), T160)))\nT189 -> T160\nX250 -> X246\nX251 -> X247\nT191 -> X252\nX253 -> X248"
            },
            {
                "from": 443,
                "to": 459,
                "label": "CASE"
            },
            {
                "from": 459,
                "to": 478,
                "label": "PARALLEL"
            },
            {
                "from": 459,
                "to": 479,
                "label": "PARALLEL"
            },
            {
                "from": 478,
                "to": 484,
                "label": "EVAL with clause\nbalance(nil, -(X312, X312), -(X313, X314), -(X313, X314), -(.(','(nil, -(X315, X315)), X316), X316)).\nand substitutionT192 -> nil,\nT187 -> .(T259, T260),\nX312 -> .(T259, T260),\nT193 -> T259,\nX249 -> T260,\nT258 -> .(T259, T260),\nT188 -> T261,\nX313 -> T261,\nT189 -> T262,\nX314 -> T262,\nX250 -> T261,\nX251 -> T262,\nX315 -> T263,\nX316 -> T264,\nT191 -> .(','(nil, -(T263, T263)), T264),\nX253 -> T264"
            },
            {
                "from": 478,
                "to": 485,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 479,
                "to": 492,
                "label": "EVAL with clause\nbalance(tree(X363, X364, X365), -(X366, X367), -(.(','(tree(X368, X369, X370), -(X371, X372)), X373), .(','(X368, -(X371, .(X369, X374))), .(','(X370, -(X374, X372)), X375))), -(X376, X377), -(X378, X379)) :- ','(balance(X363, -(X366, .(X364, X380)), -(X373, X375), -(X381, X382), -(X378, X383)), balance(X365, -(X380, X367), -(X381, X382), -(X376, X377), -(X383, X379))).\nand substitutionX363 -> T307,\nX364 -> T309,\nX365 -> T313,\nT192 -> tree(T307, T309, T313),\nT187 -> T308,\nX366 -> T308,\nT193 -> T314,\nX249 -> X384,\nX367 -> .(T314, X384),\nX368 -> T298,\nX369 -> T299,\nX370 -> T300,\nX371 -> T301,\nX372 -> T302,\nX373 -> T310,\nT188 -> .(','(tree(T298, T299, T300), -(T301, T302)), T310),\nX374 -> T304,\nX375 -> T311,\nT189 -> .(','(T298, -(T301, .(T299, T304))), .(','(T300, -(T304, T302)), T311)),\nX250 -> X385,\nX376 -> X385,\nX251 -> X386,\nX377 -> X386,\nT191 -> T312,\nX378 -> T312,\nX253 -> X387,\nX379 -> X387,\nT293 -> T307,\nT296 -> T308,\nT294 -> T309,\nT303 -> T310,\nT305 -> T311,\nT306 -> T312,\nT295 -> T313,\nT297 -> T314"
            },
            {
                "from": 479,
                "to": 493,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 484,
                "to": 486,
                "label": "SUCCESS"
            },
            {
                "from": 492,
                "to": 498,
                "label": "SPLIT 1"
            },
            {
                "from": 492,
                "to": 499,
                "label": "SPLIT 2\nreplacements:X380 -> T329,\nX381 -> T330,\nX382 -> T331,\nX383 -> T332,\nT313 -> T333,\nT314 -> T334"
            },
            {
                "from": 498,
                "to": 443,
                "label": "INSTANCE with matching:\nT192 -> T307\nT187 -> T308\nT193 -> T309\nX249 -> X380\nT188 -> T310\nT189 -> T311\nX250 -> X381\nX251 -> X382\nT191 -> T312\nX253 -> X383"
            },
            {
                "from": 499,
                "to": 443,
                "label": "INSTANCE with matching:\nT192 -> T333\nT187 -> T329\nT193 -> T334\nX249 -> X384\nT188 -> T330\nT189 -> T331\nX250 -> X385\nX251 -> X386\nT191 -> T332\nX253 -> X387"
            },
            {
                "from": 500,
                "to": 501,
                "label": "PARALLEL"
            },
            {
                "from": 500,
                "to": 502,
                "label": "PARALLEL"
            },
            {
                "from": 501,
                "to": 503,
                "label": "EVAL with clause\nbalance(nil, -(X448, X448), -(X449, X450), -(X449, X450), -(.(','(nil, -(X451, X451)), X452), X452)).\nand substitutionT58 -> nil,\nT53 -> [],\nX448 -> [],\nT393 -> [],\nT54 -> T394,\nX449 -> T394,\nT55 -> [],\nX450 -> [],\nT56 -> T394,\nT395 -> [],\nX451 -> T396,\nX452 -> [],\nT57 -> .(','(nil, -(T396, T396)), []),\nT397 -> []"
            },
            {
                "from": 501,
                "to": 504,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 502,
                "to": 506,
                "label": "EVAL with clause\nbalance(tree(X491, X492, X493), -(X494, X495), -(.(','(tree(X496, X497, X498), -(X499, X500)), X501), .(','(X496, -(X499, .(X497, X502))), .(','(X498, -(X502, X500)), X503))), -(X504, X505), -(X506, X507)) :- ','(balance(X491, -(X494, .(X492, X508)), -(X501, X503), -(X509, X510), -(X506, X511)), balance(X493, -(X508, X495), -(X509, X510), -(X504, X505), -(X511, X507))).\nand substitutionX491 -> T440,\nX492 -> T442,\nX493 -> T446,\nT58 -> tree(T440, T442, T446),\nT53 -> T441,\nX494 -> T441,\nX495 -> [],\nX496 -> T430,\nX497 -> T431,\nX498 -> T432,\nX499 -> T433,\nX500 -> T434,\nX501 -> T443,\nT54 -> .(','(tree(T430, T431, T432), -(T433, T434)), T443),\nX502 -> T436,\nX503 -> T444,\nT55 -> .(','(T430, -(T433, .(T431, T436))), .(','(T432, -(T436, T434)), T444)),\nT56 -> T447,\nX504 -> T447,\nX505 -> [],\nT57 -> T445,\nX506 -> T445,\nX507 -> [],\nT426 -> T440,\nT429 -> T441,\nT427 -> T442,\nT435 -> T443,\nT437 -> T444,\nT439 -> T445,\nT428 -> T446,\nT438 -> T447"
            },
            {
                "from": 502,
                "to": 507,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 503,
                "to": 505,
                "label": "SUCCESS"
            },
            {
                "from": 506,
                "to": 508,
                "label": "SPLIT 1"
            },
            {
                "from": 506,
                "to": 509,
                "label": "SPLIT 2\nreplacements:X508 -> T462,\nX509 -> T463,\nX510 -> T464,\nX511 -> T465,\nT446 -> T466,\nT447 -> T467"
            },
            {
                "from": 508,
                "to": 443,
                "label": "INSTANCE with matching:\nT192 -> T440\nT187 -> T441\nT193 -> T442\nX249 -> X508\nT188 -> T443\nT189 -> T444\nX250 -> X509\nX251 -> X510\nT191 -> T445\nX253 -> X511"
            },
            {
                "from": 509,
                "to": 370,
                "label": "INSTANCE with matching:\nT58 -> T466\nT53 -> T462\nT54 -> T463\nT55 -> T464\nT56 -> T467\nT57 -> T465"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(26)
Obligation:
Triples:

balanceA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) :- balanceA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22).
balanceA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) :- ','(balancecA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22), balanceA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)).
balanceB(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) :- balanceA(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18).
balanceB(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) :- ','(balancecA(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18), balanceB(X3, X15, X16, X17, X13, X18)).
balanceD(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) :- balanceA(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19).
balanceD(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) :- ','(balancecA(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19), balanceA(X3, X12, X4, X20, X16, X17, X21, X22, X19, X23)).
balanceD(tree(X1, X2, X3), tree(X4, X5, X6)) :- ','(balancecC(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14), balanceB(X3, X8, X11, X12, X13, X14)).

Clauses:

balancecA(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6).
balancecA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) :- ','(balancecA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22), balancecA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)).
balancecB(nil, [], X1, [], X1, .(','(nil, -(X2, X2)), [])).
balancecB(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) :- ','(balancecA(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18), balancecB(X3, X15, X16, X17, X13, X18)).
balancecC(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9).
balancecC(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18) :- ','(balancecA(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22), balancecA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)).

Afs:

balanceD(x1, x2)  =  balanceD(x2)


----------------------------------------

(27) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

balanceD_in_2: (f,b)

balanceA_in_10: (f,f,f,f,f,f,f,f,f,f)

balancecA_in_10: (f,f,f,f,f,f,f,f,f,f)

balancecC_in_13: (f,f,f,f,b,b,f,b,f,f,f,f,f)

balanceB_in_6: (f,f,f,f,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> U7_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balanceA_in_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19))
   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> BALANCEA_IN_AAAAAAAAAA(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U1_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balanceA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U3_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balanceA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> BALANCEA_IN_AAAAAAAAAA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)
   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_in_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19))
   U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_out_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)) -> U9_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balanceA_in_aaaaaaaaaa(X3, X12, X4, X20, X16, X17, X21, X22, X19, X23))
   U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_out_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)) -> BALANCEA_IN_AAAAAAAAAA(X3, X12, X4, X20, X16, X17, X21, X22, X19, X23)
   BALANCED_IN_AG(tree(X1, X2, X3), tree(X4, X5, X6)) -> U10_AG(X1, X2, X3, X4, X5, X6, balancecC_in_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14))
   U10_AG(X1, X2, X3, X4, X5, X6, balancecC_out_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14)) -> U11_AG(X1, X2, X3, X4, X5, X6, balanceB_in_aaaaaa(X3, X8, X11, X12, X13, X14))
   U10_AG(X1, X2, X3, X4, X5, X6, balancecC_out_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14)) -> BALANCEB_IN_AAAAAA(X3, X8, X11, X12, X13, X14)
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U4_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balanceA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> U6_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balanceB_in_aaaaaa(X3, X15, X16, X17, X13, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> BALANCEB_IN_AAAAAA(X3, X15, X16, X17, X13, X18)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)
   balancecC_in_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9) -> balancecC_out_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9)
   balancecC_in_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18) -> U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22))
   U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22)) -> U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecC_out_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balanceA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balanceA_in_aaaaaaaaaa

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

balancecC_in_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_in_aaaaggagaaaaa(x5, x6, x8)

balancecC_out_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_out_aaaaggagaaaaa(x5, x6, x8)

U17_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U17_aaaaggagaaaaa(x7, x8, x9, x10, x12, x19)

U18_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U18_aaaaggagaaaaa(x7, x8, x9, x10, x12, x23)

balanceB_in_aaaaaa(x1, x2, x3, x4, x5, x6)  =  balanceB_in_aaaaaa

BALANCED_IN_AG(x1, x2)  =  BALANCED_IN_AG(x2)

U7_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U7_AG(x6, x7, x8, x9, x10, x11)

BALANCEA_IN_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  BALANCEA_IN_AAAAAAAAAA

U1_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U1_AAAAAAAAAA(x19)

U2_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U2_AAAAAAAAAA(x19)

U3_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U3_AAAAAAAAAA(x19)

U8_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U8_AG(x6, x7, x8, x9, x10, x11)

U9_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U9_AG(x6, x7, x8, x9, x10, x11)

U10_AG(x1, x2, x3, x4, x5, x6, x7)  =  U10_AG(x4, x5, x6, x7)

U11_AG(x1, x2, x3, x4, x5, x6, x7)  =  U11_AG(x4, x5, x6, x7)

BALANCEB_IN_AAAAAA(x1, x2, x3, x4, x5, x6)  =  BALANCEB_IN_AAAAAA

U4_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U4_AAAAAA(x15)

U5_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U5_AAAAAA(x15)

U6_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U6_AAAAAA(x15)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> U7_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balanceA_in_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19))
   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> BALANCEA_IN_AAAAAAAAAA(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U1_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balanceA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U3_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balanceA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> BALANCEA_IN_AAAAAAAAAA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)
   BALANCED_IN_AG(tree(tree(X1, X2, X3), X4, X5), tree(tree(X6, X7, X8), X9, X10)) -> U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_in_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19))
   U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_out_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)) -> U9_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balanceA_in_aaaaaaaaaa(X3, X12, X4, X20, X16, X17, X21, X22, X19, X23))
   U8_AG(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, balancecA_out_aaaaaaaaaa(X1, X11, X2, X12, .(','(X10, -(X13, [])), .(','(X6, -(X11, .(X7, X14))), .(','(X8, -(X14, .(X9, X13))), X15))), X15, X16, X17, X18, X19)) -> BALANCEA_IN_AAAAAAAAAA(X3, X12, X4, X20, X16, X17, X21, X22, X19, X23)
   BALANCED_IN_AG(tree(X1, X2, X3), tree(X4, X5, X6)) -> U10_AG(X1, X2, X3, X4, X5, X6, balancecC_in_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14))
   U10_AG(X1, X2, X3, X4, X5, X6, balancecC_out_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14)) -> U11_AG(X1, X2, X3, X4, X5, X6, balanceB_in_aaaaaa(X3, X8, X11, X12, X13, X14))
   U10_AG(X1, X2, X3, X4, X5, X6, balancecC_out_aaaaggagaaaaa(X1, X7, X2, X8, X4, X5, X9, X6, X10, X11, X12, X13, X14)) -> BALANCEB_IN_AAAAAA(X3, X8, X11, X12, X13, X14)
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U4_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balanceA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)
   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> U6_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balanceB_in_aaaaaa(X3, X15, X16, X17, X13, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> BALANCEB_IN_AAAAAA(X3, X15, X16, X17, X13, X18)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)
   balancecC_in_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9) -> balancecC_out_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9)
   balancecC_in_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18) -> U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22))
   U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22)) -> U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecC_out_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balanceA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balanceA_in_aaaaaaaaaa

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

balancecC_in_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_in_aaaaggagaaaaa(x5, x6, x8)

balancecC_out_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_out_aaaaggagaaaaa(x5, x6, x8)

U17_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U17_aaaaggagaaaaa(x7, x8, x9, x10, x12, x19)

U18_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U18_aaaaggagaaaaa(x7, x8, x9, x10, x12, x23)

balanceB_in_aaaaaa(x1, x2, x3, x4, x5, x6)  =  balanceB_in_aaaaaa

BALANCED_IN_AG(x1, x2)  =  BALANCED_IN_AG(x2)

U7_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U7_AG(x6, x7, x8, x9, x10, x11)

BALANCEA_IN_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  BALANCEA_IN_AAAAAAAAAA

U1_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U1_AAAAAAAAAA(x19)

U2_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U2_AAAAAAAAAA(x19)

U3_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U3_AAAAAAAAAA(x19)

U8_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U8_AG(x6, x7, x8, x9, x10, x11)

U9_AG(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)  =  U9_AG(x6, x7, x8, x9, x10, x11)

U10_AG(x1, x2, x3, x4, x5, x6, x7)  =  U10_AG(x4, x5, x6, x7)

U11_AG(x1, x2, x3, x4, x5, x6, x7)  =  U11_AG(x4, x5, x6, x7)

BALANCEB_IN_AAAAAA(x1, x2, x3, x4, x5, x6)  =  BALANCEB_IN_AAAAAA

U4_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U4_AAAAAA(x15)

U5_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U5_AAAAAA(x15)

U6_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U6_AAAAAA(x15)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 2 SCCs with 13 less nodes.
----------------------------------------

(30)
Complex Obligation (AND)

----------------------------------------

(31)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> BALANCEA_IN_AAAAAAAAAA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)
   balancecC_in_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9) -> balancecC_out_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9)
   balancecC_in_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18) -> U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22))
   U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22)) -> U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecC_out_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

balancecC_in_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_in_aaaaggagaaaaa(x5, x6, x8)

balancecC_out_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_out_aaaaggagaaaaa(x5, x6, x8)

U17_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U17_aaaaggagaaaaa(x7, x8, x9, x10, x12, x19)

U18_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U18_aaaaggagaaaaa(x7, x8, x9, x10, x12, x23)

BALANCEA_IN_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  BALANCEA_IN_AAAAAAAAAA

U2_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U2_AAAAAAAAAA(x19)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(32) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(33)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U2_AAAAAAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> BALANCEA_IN_AAAAAAAAAA(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)
   BALANCEA_IN_AAAAAAAAAA(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> BALANCEA_IN_AAAAAAAAAA(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

BALANCEA_IN_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  BALANCEA_IN_AAAAAAAAAA

U2_AAAAAAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U2_AAAAAAAAAA(x19)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(34) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   BALANCEA_IN_AAAAAAAAAA -> U2_AAAAAAAAAA(balancecA_in_aaaaaaaaaa)
   U2_AAAAAAAAAA(balancecA_out_aaaaaaaaaa) -> BALANCEA_IN_AAAAAAAAAA
   BALANCEA_IN_AAAAAAAAAA -> BALANCEA_IN_AAAAAAAAAA

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa -> balancecA_out_aaaaaaaaaa
   balancecA_in_aaaaaaaaaa -> U13_aaaaaaaaaa(balancecA_in_aaaaaaaaaa)
   U13_aaaaaaaaaa(balancecA_out_aaaaaaaaaa) -> U14_aaaaaaaaaa(balancecA_in_aaaaaaaaaa)
   U14_aaaaaaaaaa(balancecA_out_aaaaaaaaaa) -> balancecA_out_aaaaaaaaaa

The set Q consists of the following terms:

   balancecA_in_aaaaaaaaaa
   U13_aaaaaaaaaa(x0)
   U14_aaaaaaaaaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(36)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> BALANCEB_IN_AAAAAA(X3, X15, X16, X17, X13, X18)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)
   balancecC_in_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9) -> balancecC_out_aaaaggagaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X5, X6, X7, .(','(X3, -(.(X1, X2), .(X4, X5))), .(','(X6, -(X5, [])), X7)), X7, .(','(nil, -(X8, X8)), X9), X9)
   balancecC_in_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18) -> U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22))
   U17_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, .(','(X12, -(X11, [])), .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14))), X14, X20, X21, X17, X22)) -> U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U18_aaaaggagaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecC_out_aaaaggagaaaaa(tree(X1, X2, X3), X4, X5, X6, tree(X7, X8, X9), X10, X11, X12, .(','(X7, -(X4, .(X8, X13))), .(','(X9, -(X13, .(X10, X11))), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

balancecC_in_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_in_aaaaggagaaaaa(x5, x6, x8)

balancecC_out_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13)  =  balancecC_out_aaaaggagaaaaa(x5, x6, x8)

U17_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U17_aaaaggagaaaaa(x7, x8, x9, x10, x12, x19)

U18_aaaaggagaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U18_aaaaggagaaaaa(x7, x8, x9, x10, x12, x23)

BALANCEB_IN_AAAAAA(x1, x2, x3, x4, x5, x6)  =  BALANCEB_IN_AAAAAA

U5_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U5_AAAAAA(x15)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(37) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(38)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   BALANCEB_IN_AAAAAA(tree(X1, X2, X3), X4, .(','(tree(X5, X6, X7), -(X8, X9)), X10), .(','(X5, -(X8, .(X6, X11))), .(','(X7, -(X11, X9)), X12)), X13, X14) -> U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_in_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18))
   U5_AAAAAA(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, balancecA_out_aaaaaaaaaa(X1, X4, X2, X15, X10, X12, X16, X17, X14, X18)) -> BALANCEB_IN_AAAAAA(X3, X15, X16, X17, X13, X18)

The TRS R consists of the following rules:

   balancecA_in_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6) -> balancecA_out_aaaaaaaaaa(nil, .(X1, X2), X1, X2, X3, X4, X3, X4, .(','(nil, -(X5, X5)), X6), X6)
   balancecA_in_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18) -> U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_in_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22))
   U13_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, balancecA_out_aaaaaaaaaa(X1, X4, X2, X19, X12, X14, X20, X21, X17, X22)) -> U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_in_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18))
   U14_aaaaaaaaaa(X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, balancecA_out_aaaaaaaaaa(X3, X19, X5, X6, X20, X21, X15, X16, X22, X18)) -> balancecA_out_aaaaaaaaaa(tree(X1, X2, X3), X4, X5, X6, .(','(tree(X7, X8, X9), -(X10, X11)), X12), .(','(X7, -(X10, .(X8, X13))), .(','(X9, -(X13, X11)), X14)), X15, X16, X17, X18)

The argument filtering Pi contains the following mapping:
tree(x1, x2, x3)  =  tree(x1, x2, x3)

balancecA_in_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_in_aaaaaaaaaa

balancecA_out_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)  =  balancecA_out_aaaaaaaaaa

U13_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)  =  U13_aaaaaaaaaa(x19)

U14_aaaaaaaaaa(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23)  =  U14_aaaaaaaaaa(x23)

BALANCEB_IN_AAAAAA(x1, x2, x3, x4, x5, x6)  =  BALANCEB_IN_AAAAAA

U5_AAAAAA(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)  =  U5_AAAAAA(x15)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(39) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(balance T TB)",
                "(balance T (- I ([])) (- (. (',' TB (- I ([]))) X) X) (- Rest ([])) (- Rest ([])))"
            ],
            [
                "(balance (nil) (- X X) (- A B) (- A B) (- (. (',' (nil) (- C C)) T) T))",
                null
            ],
            [
                "(balance (tree L V R) (- IH IT) (- (. (',' (tree LB VB RB) (- A D)) H) (. (',' LB (- A (. VB X))) (. (',' RB (- X D)) T))) (- HR TR) (- NH NT))",
                "(',' (balance L (- IH (. V IT1)) (- H T) (- HR1 TR1) (- NH NT1)) (balance R (- IT1 IT) (- HR1 TR1) (- HR TR) (- NT1 NT)))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "23": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "391": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "490": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "491": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "372": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 3,
                        "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                    },
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "573": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "574": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "575": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "510": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T314 (- T315 (. T316 X413)) (- T317 T318) (- X414 X415) (- T319 X416)) (balance T320 (- X413 (. T321 X417)) (- X414 X415) (- X418 X419) (- X416 X420)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X417",
                        "X418",
                        "X419",
                        "X420",
                        "X413",
                        "X414",
                        "X415",
                        "X416"
                    ],
                    "exprvars": []
                }
            },
            "576": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T447 (- T448 (. T449 X541)) (- T450 T451) (- X542 X543) (- T452 X544)) (balance T453 (- X541 ([])) (- X542 X543) (- T454 ([])) (- X544 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X541",
                        "X542",
                        "X543",
                        "X544"
                    ],
                    "exprvars": []
                }
            },
            "379": {
                "goal": [{
                    "clause": 1,
                    "scope": 3,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "511": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "577": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "610": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T447 (- T448 (. T449 X541)) (- T450 T451) (- X542 X543) (- T452 X544))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X541",
                        "X542",
                        "X543",
                        "X544"
                    ],
                    "exprvars": []
                }
            },
            "457": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T164 (- T165 (. T166 X278)) (- (. (',' T160 (- T168 ([]))) (. (',' T155 (- T165 (. T156 T169))) (. (',' T157 (- T169 (. T158 T168))) T167))) T167) (- X279 X280) (- X285 X281))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T155",
                        "T156",
                        "T157",
                        "T158",
                        "T160"
                    ],
                    "free": [
                        "X285",
                        "X278",
                        "X279",
                        "X280",
                        "X281"
                    ],
                    "exprvars": []
                }
            },
            "512": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T314 (- T315 (. T316 X413)) (- T317 T318) (- X414 X415) (- T319 X416))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X413",
                        "X414",
                        "X415",
                        "X416"
                    ],
                    "exprvars": []
                }
            },
            "611": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T473 (- T469 ([])) (- T470 T471) (- T474 ([])) (- T472 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "458": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "513": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T340 (- T336 (. T341 X417)) (- T337 T338) (- X418 X419) (- T339 X420))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X417",
                        "X418",
                        "X419",
                        "X420"
                    ],
                    "exprvars": []
                }
            },
            "514": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "518": {
                "goal": [{
                    "clause": 1,
                    "scope": 5,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "519": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "37": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144)) (balance T43 (- X141 ([])) (- X142 X143) (- X149 ([])) (- X144 ([]))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "38": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "380": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "381": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "382": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "483": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 4,
                        "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                    },
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "344": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T38 (- T39 (. T40 X141)) (- (. (',' T35 (- T39 (. T36 T42))) (. (',' T37 (- T42 ([]))) T41)) T41) (- X142 X143) (- X149 X144))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T35",
                        "T36",
                        "T37"
                    ],
                    "free": [
                        "X149",
                        "X141",
                        "X142",
                        "X143",
                        "X144"
                    ],
                    "exprvars": []
                }
            },
            "487": {
                "goal": [{
                    "clause": 1,
                    "scope": 4,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "345": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T65 (- T60 ([])) (- T61 T62) (- T63 ([])) (- T64 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (balance T164 (- T165 (. T166 X278)) (- (. (',' T160 (- T168 ([]))) (. (',' T155 (- T165 (. T156 T169))) (. (',' T157 (- T169 (. T158 T168))) T167))) T167) (- X279 X280) (- X285 X281)) (balance T170 (- X278 (. T171 X282)) (- X279 X280) (- X283 X284) (- X281 X286)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T155",
                        "T156",
                        "T157",
                        "T158",
                        "T160"
                    ],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X285",
                        "X286",
                        "X278",
                        "X279",
                        "X280",
                        "X281"
                    ],
                    "exprvars": []
                }
            },
            "488": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(balance T199 (- T194 (. T200 X282)) (- T195 T196) (- X283 X284) (- T198 X286))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X282",
                        "X283",
                        "X284",
                        "X286"
                    ],
                    "exprvars": []
                }
            },
            "445": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "489": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(balance T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(balance T12 (- X24 ([])) (- (. (',' T11 (- X24 ([]))) X25) X25) (- X26 ([])) (- X26 ([])))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X24",
                        "X25",
                        "X26"
                    ],
                    "exprvars": []
                }
            },
            "21": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 7,
                "label": "CASE"
            },
            {
                "from": 7,
                "to": 9,
                "label": "ONLY EVAL with clause\nbalance(X22, X23) :- balance(X22, -(X24, []), -(.(','(X23, -(X24, [])), X25), X25), -(X26, []), -(X26, [])).\nand substitutionT1 -> T12,\nX22 -> T12,\nT2 -> T11,\nX23 -> T11,\nT10 -> T12"
            },
            {
                "from": 9,
                "to": 10,
                "label": "CASE"
            },
            {
                "from": 10,
                "to": 17,
                "label": "PARALLEL"
            },
            {
                "from": 10,
                "to": 18,
                "label": "PARALLEL"
            },
            {
                "from": 17,
                "to": 21,
                "label": "EVAL with clause\nbalance(nil, -(X69, X69), -(X70, X71), -(X70, X71), -(.(','(nil, -(X72, X72)), X73), X73)).\nand substitutionT12 -> nil,\nX24 -> [],\nX69 -> [],\nX74 -> [],\nT11 -> nil,\nX25 -> [],\nX70 -> .(','(nil, -([], [])), []),\nX71 -> [],\nX26 -> .(','(nil, -([], [])), []),\nX75 -> [],\nT19 -> nil,\nX72 -> [],\nX73 -> []"
            },
            {
                "from": 17,
                "to": 23,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 18,
                "to": 37,
                "label": "EVAL with clause\nbalance(tree(X124, X125, X126), -(X127, X128), -(.(','(tree(X129, X130, X131), -(X132, X133)), X134), .(','(X129, -(X132, .(X130, X135))), .(','(X131, -(X135, X133)), X136))), -(X137, X138), -(X139, X140)) :- ','(balance(X124, -(X127, .(X125, X141)), -(X134, X136), -(X142, X143), -(X139, X144)), balance(X126, -(X141, X128), -(X142, X143), -(X137, X138), -(X144, X140))).\nand substitutionX124 -> T38,\nX125 -> T40,\nX126 -> T43,\nT12 -> tree(T38, T40, T43),\nX24 -> T39,\nX127 -> T39,\nX128 -> [],\nX129 -> T35,\nX130 -> T36,\nX131 -> T37,\nT11 -> tree(T35, T36, T37),\nX132 -> T39,\nX133 -> [],\nX25 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX134 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX135 -> T42,\nX136 -> T41,\nX146 -> .(','(T35, -(T39, .(T36, T42))), .(','(T37, -(T42, [])), T41)),\nX26 -> X149,\nX137 -> X149,\nX138 -> [],\nX139 -> X149,\nX140 -> [],\nT32 -> T38,\nX145 -> T39,\nT33 -> T40,\nX148 -> T41,\nX147 -> T42,\nT34 -> T43"
            },
            {
                "from": 18,
                "to": 38,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 21,
                "to": 24,
                "label": "SUCCESS"
            },
            {
                "from": 37,
                "to": 344,
                "label": "SPLIT 1"
            },
            {
                "from": 37,
                "to": 345,
                "label": "SPLIT 2\nreplacements:X141 -> T60,\nX142 -> T61,\nX143 -> T62,\nX149 -> T63,\nX144 -> T64,\nT43 -> T65"
            },
            {
                "from": 344,
                "to": 372,
                "label": "CASE"
            },
            {
                "from": 345,
                "to": 514,
                "label": "CASE"
            },
            {
                "from": 372,
                "to": 379,
                "label": "PARALLEL"
            },
            {
                "from": 372,
                "to": 380,
                "label": "PARALLEL"
            },
            {
                "from": 379,
                "to": 381,
                "label": "EVAL with clause\nbalance(nil, -(X206, X206), -(X207, X208), -(X207, X208), -(.(','(nil, -(X209, X209)), X210), X210)).\nand substitutionT38 -> nil,\nT39 -> .(T115, T116),\nX206 -> .(T115, T116),\nT40 -> T115,\nX141 -> T116,\nT114 -> .(T115, T116),\nT35 -> T117,\nT36 -> T118,\nT42 -> T119,\nT37 -> T120,\nT41 -> T121,\nX207 -> .(','(T117, -(.(T115, T116), .(T118, T119))), .(','(T120, -(T119, [])), T121)),\nX208 -> T121,\nX142 -> .(','(T117, -(.(T115, T116), .(T118, T119))), .(','(T120, -(T119, [])), T121)),\nX143 -> T121,\nX209 -> X211,\nX210 -> X212,\nX149 -> .(','(nil, -(X211, X211)), X212),\nX144 -> X212"
            },
            {
                "from": 379,
                "to": 382,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 380,
                "to": 444,
                "label": "EVAL with clause\nbalance(tree(X261, X262, X263), -(X264, X265), -(.(','(tree(X266, X267, X268), -(X269, X270)), X271), .(','(X266, -(X269, .(X267, X272))), .(','(X268, -(X272, X270)), X273))), -(X274, X275), -(X276, X277)) :- ','(balance(X261, -(X264, .(X262, X278)), -(X271, X273), -(X279, X280), -(X276, X281)), balance(X263, -(X278, X265), -(X279, X280), -(X274, X275), -(X281, X277))).\nand substitutionX261 -> T164,\nX262 -> T166,\nX263 -> T170,\nT38 -> tree(T164, T166, T170),\nT39 -> T165,\nX264 -> T165,\nT40 -> T171,\nX141 -> X282,\nX265 -> .(T171, X282),\nX266 -> T155,\nX267 -> T156,\nX268 -> T157,\nT35 -> tree(T155, T156, T157),\nX269 -> T165,\nT36 -> T158,\nT42 -> T168,\nX270 -> .(T158, T168),\nT37 -> T160,\nT41 -> .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)),\nX271 -> .(','(T160, -(T168, [])), .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167))),\nX272 -> T169,\nX273 -> T167,\nT161 -> .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)),\nX142 -> X283,\nX274 -> X283,\nX143 -> X284,\nX275 -> X284,\nX149 -> X285,\nX276 -> X285,\nX144 -> X286,\nX277 -> X286,\nT150 -> T164,\nT153 -> T165,\nT151 -> T166,\nT163 -> T167,\nT159 -> T168,\nT162 -> T169,\nT152 -> T170,\nT154 -> T171"
            },
            {
                "from": 380,
                "to": 445,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 381,
                "to": 391,
                "label": "SUCCESS"
            },
            {
                "from": 444,
                "to": 457,
                "label": "SPLIT 1"
            },
            {
                "from": 444,
                "to": 458,
                "label": "SPLIT 2\nreplacements:X278 -> T194,\nX279 -> T195,\nX280 -> T196,\nX285 -> T197,\nX281 -> T198,\nT170 -> T199,\nT171 -> T200"
            },
            {
                "from": 457,
                "to": 458,
                "label": "INSTANCE with matching:\nT199 -> T164\nT194 -> T165\nT200 -> T166\nX282 -> X278\nT195 -> .(','(T160, -(T168, [])), .(','(T155, -(T165, .(T156, T169))), .(','(T157, -(T169, .(T158, T168))), T167)))\nT196 -> T167\nX283 -> X279\nX284 -> X280\nT198 -> X285\nX286 -> X281"
            },
            {
                "from": 458,
                "to": 483,
                "label": "CASE"
            },
            {
                "from": 483,
                "to": 487,
                "label": "PARALLEL"
            },
            {
                "from": 483,
                "to": 488,
                "label": "PARALLEL"
            },
            {
                "from": 487,
                "to": 489,
                "label": "EVAL with clause\nbalance(nil, -(X345, X345), -(X346, X347), -(X346, X347), -(.(','(nil, -(X348, X348)), X349), X349)).\nand substitutionT199 -> nil,\nT194 -> .(T266, T267),\nX345 -> .(T266, T267),\nT200 -> T266,\nX282 -> T267,\nT265 -> .(T266, T267),\nT195 -> T268,\nX346 -> T268,\nT196 -> T269,\nX347 -> T269,\nX283 -> T268,\nX284 -> T269,\nX348 -> T270,\nX349 -> T271,\nT198 -> .(','(nil, -(T270, T270)), T271),\nX286 -> T271"
            },
            {
                "from": 487,
                "to": 490,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 488,
                "to": 510,
                "label": "EVAL with clause\nbalance(tree(X396, X397, X398), -(X399, X400), -(.(','(tree(X401, X402, X403), -(X404, X405)), X406), .(','(X401, -(X404, .(X402, X407))), .(','(X403, -(X407, X405)), X408))), -(X409, X410), -(X411, X412)) :- ','(balance(X396, -(X399, .(X397, X413)), -(X406, X408), -(X414, X415), -(X411, X416)), balance(X398, -(X413, X400), -(X414, X415), -(X409, X410), -(X416, X412))).\nand substitutionX396 -> T314,\nX397 -> T316,\nX398 -> T320,\nT199 -> tree(T314, T316, T320),\nT194 -> T315,\nX399 -> T315,\nT200 -> T321,\nX282 -> X417,\nX400 -> .(T321, X417),\nX401 -> T305,\nX402 -> T306,\nX403 -> T307,\nX404 -> T308,\nX405 -> T309,\nX406 -> T317,\nT195 -> .(','(tree(T305, T306, T307), -(T308, T309)), T317),\nX407 -> T311,\nX408 -> T318,\nT196 -> .(','(T305, -(T308, .(T306, T311))), .(','(T307, -(T311, T309)), T318)),\nX283 -> X418,\nX409 -> X418,\nX284 -> X419,\nX410 -> X419,\nT198 -> T319,\nX411 -> T319,\nX286 -> X420,\nX412 -> X420,\nT300 -> T314,\nT303 -> T315,\nT301 -> T316,\nT310 -> T317,\nT312 -> T318,\nT313 -> T319,\nT302 -> T320,\nT304 -> T321"
            },
            {
                "from": 488,
                "to": 511,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 489,
                "to": 491,
                "label": "SUCCESS"
            },
            {
                "from": 510,
                "to": 512,
                "label": "SPLIT 1"
            },
            {
                "from": 510,
                "to": 513,
                "label": "SPLIT 2\nreplacements:X413 -> T336,\nX414 -> T337,\nX415 -> T338,\nX416 -> T339,\nT320 -> T340,\nT321 -> T341"
            },
            {
                "from": 512,
                "to": 458,
                "label": "INSTANCE with matching:\nT199 -> T314\nT194 -> T315\nT200 -> T316\nX282 -> X413\nT195 -> T317\nT196 -> T318\nX283 -> X414\nX284 -> X415\nT198 -> T319\nX286 -> X416"
            },
            {
                "from": 513,
                "to": 458,
                "label": "INSTANCE with matching:\nT199 -> T340\nT194 -> T336\nT200 -> T341\nX282 -> X417\nT195 -> T337\nT196 -> T338\nX283 -> X418\nX284 -> X419\nT198 -> T339\nX286 -> X420"
            },
            {
                "from": 514,
                "to": 518,
                "label": "PARALLEL"
            },
            {
                "from": 514,
                "to": 519,
                "label": "PARALLEL"
            },
            {
                "from": 518,
                "to": 573,
                "label": "EVAL with clause\nbalance(nil, -(X481, X481), -(X482, X483), -(X482, X483), -(.(','(nil, -(X484, X484)), X485), X485)).\nand substitutionT65 -> nil,\nT60 -> [],\nX481 -> [],\nT400 -> [],\nT61 -> T401,\nX482 -> T401,\nT62 -> [],\nX483 -> [],\nT63 -> T401,\nT402 -> [],\nX484 -> T403,\nX485 -> [],\nT64 -> .(','(nil, -(T403, T403)), []),\nT404 -> []"
            },
            {
                "from": 518,
                "to": 574,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 519,
                "to": 576,
                "label": "EVAL with clause\nbalance(tree(X524, X525, X526), -(X527, X528), -(.(','(tree(X529, X530, X531), -(X532, X533)), X534), .(','(X529, -(X532, .(X530, X535))), .(','(X531, -(X535, X533)), X536))), -(X537, X538), -(X539, X540)) :- ','(balance(X524, -(X527, .(X525, X541)), -(X534, X536), -(X542, X543), -(X539, X544)), balance(X526, -(X541, X528), -(X542, X543), -(X537, X538), -(X544, X540))).\nand substitutionX524 -> T447,\nX525 -> T449,\nX526 -> T453,\nT65 -> tree(T447, T449, T453),\nT60 -> T448,\nX527 -> T448,\nX528 -> [],\nX529 -> T437,\nX530 -> T438,\nX531 -> T439,\nX532 -> T440,\nX533 -> T441,\nX534 -> T450,\nT61 -> .(','(tree(T437, T438, T439), -(T440, T441)), T450),\nX535 -> T443,\nX536 -> T451,\nT62 -> .(','(T437, -(T440, .(T438, T443))), .(','(T439, -(T443, T441)), T451)),\nT63 -> T454,\nX537 -> T454,\nX538 -> [],\nT64 -> T452,\nX539 -> T452,\nX540 -> [],\nT433 -> T447,\nT436 -> T448,\nT434 -> T449,\nT442 -> T450,\nT444 -> T451,\nT446 -> T452,\nT435 -> T453,\nT445 -> T454"
            },
            {
                "from": 519,
                "to": 577,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 573,
                "to": 575,
                "label": "SUCCESS"
            },
            {
                "from": 576,
                "to": 610,
                "label": "SPLIT 1"
            },
            {
                "from": 576,
                "to": 611,
                "label": "SPLIT 2\nreplacements:X541 -> T469,\nX542 -> T470,\nX543 -> T471,\nX544 -> T472,\nT453 -> T473,\nT454 -> T474"
            },
            {
                "from": 610,
                "to": 458,
                "label": "INSTANCE with matching:\nT199 -> T447\nT194 -> T448\nT200 -> T449\nX282 -> X541\nT195 -> T450\nT196 -> T451\nX283 -> X542\nX284 -> X543\nT198 -> T452\nX286 -> X544"
            },
            {
                "from": 611,
                "to": 345,
                "label": "INSTANCE with matching:\nT65 -> T473\nT60 -> T469\nT61 -> T470\nT62 -> T471\nT63 -> T474\nT64 -> T472"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(40)
Complex Obligation (AND)

----------------------------------------

(41)
Obligation:
Rules:
f488_in -> f510_in :|: TRUE
f510_out -> f488_out :|: TRUE
f511_out -> f488_out :|: TRUE
f488_in -> f511_in :|: TRUE
f483_out -> f458_out :|: TRUE
f458_in -> f483_in :|: TRUE
f458_out -> f512_out :|: TRUE
f512_in -> f458_in :|: TRUE
f513_out -> f510_out :|: TRUE
f510_in -> f512_in :|: TRUE
f512_out -> f513_in :|: TRUE
f513_in -> f458_in :|: TRUE
f458_out -> f513_out :|: TRUE
f487_out -> f483_out :|: TRUE
f483_in -> f488_in :|: TRUE
f488_out -> f483_out :|: TRUE
f483_in -> f487_in :|: TRUE
f7_out(T2) -> f1_out(T2) :|: TRUE
f1_in(x) -> f7_in(x) :|: TRUE
f7_in(T11) -> f9_in(T11) :|: TRUE
f9_out(x1) -> f7_out(x1) :|: TRUE
f9_in(x2) -> f10_in(x2) :|: TRUE
f10_out(x3) -> f9_out(x3) :|: TRUE
f18_out(x4) -> f10_out(x4) :|: TRUE
f10_in(x5) -> f17_in(x5) :|: TRUE
f17_out(x6) -> f10_out(x6) :|: TRUE
f10_in(x7) -> f18_in(x7) :|: TRUE
f37_out(T35, T36, T37) -> f18_out(tree(T35, T36, T37)) :|: TRUE
f38_out -> f18_out(x8) :|: TRUE
f18_in(tree(x9, x10, x11)) -> f37_in(x9, x10, x11) :|: TRUE
f18_in(x12) -> f38_in :|: TRUE
f344_out(x13, x14, x15) -> f345_in :|: TRUE
f345_out -> f37_out(x16, x17, x18) :|: TRUE
f37_in(x19, x20, x21) -> f344_in(x19, x20, x21) :|: TRUE
f344_in(x22, x23, x24) -> f372_in(x22, x23, x24) :|: TRUE
f372_out(x25, x26, x27) -> f344_out(x25, x26, x27) :|: TRUE
f380_out(x28, x29, x30) -> f372_out(x28, x29, x30) :|: TRUE
f372_in(x31, x32, x33) -> f380_in(x31, x32, x33) :|: TRUE
f372_in(x34, x35, x36) -> f379_in(x34, x35, x36) :|: TRUE
f379_out(x37, x38, x39) -> f372_out(x37, x38, x39) :|: TRUE
f380_in(tree(T155, T156, T157), T158, T160) -> f444_in(T160, T155, T156, T157, T158) :|: TRUE
f444_out(x40, x41, x42, x43, x44) -> f380_out(tree(x41, x42, x43), x44, x40) :|: TRUE
f380_in(x45, x46, x47) -> f445_in :|: TRUE
f445_out -> f380_out(x48, x49, x50) :|: TRUE
f458_out -> f444_out(x51, x52, x53, x54, x55) :|: TRUE
f444_in(x56, x57, x58, x59, x60) -> f457_in(x56, x57, x58, x59, x60) :|: TRUE
f457_out(x61, x62, x63, x64, x65) -> f458_in :|: TRUE
f457_in(x66, x67, x68, x69, x70) -> f458_in :|: TRUE
f458_out -> f457_out(x71, x72, x73, x74, x75) :|: TRUE
f345_in -> f514_in :|: TRUE
f514_out -> f345_out :|: TRUE
f518_out -> f514_out :|: TRUE
f519_out -> f514_out :|: TRUE
f514_in -> f519_in :|: TRUE
f514_in -> f518_in :|: TRUE
f519_in -> f577_in :|: TRUE
f577_out -> f519_out :|: TRUE
f576_out -> f519_out :|: TRUE
f519_in -> f576_in :|: TRUE
f610_out -> f611_in :|: TRUE
f611_out -> f576_out :|: TRUE
f576_in -> f610_in :|: TRUE
f458_out -> f610_out :|: TRUE
f610_in -> f458_in :|: TRUE
Start term: f1_in(T2)

----------------------------------------

(42) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f488_in -> f510_in :|: TRUE
f458_in -> f483_in :|: TRUE
f512_in -> f458_in :|: TRUE
f510_in -> f512_in :|: TRUE
f483_in -> f488_in :|: TRUE


----------------------------------------

(43)
Obligation:
Rules:
f488_in -> f510_in :|: TRUE
f458_in -> f483_in :|: TRUE
f512_in -> f458_in :|: TRUE
f510_in -> f512_in :|: TRUE
f483_in -> f488_in :|: TRUE

----------------------------------------

(44) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(45)
Obligation:
Rules:
f488_in -> f488_in :|: TRUE

----------------------------------------

(46) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(47)
Obligation:
Rules:
f488_in -> f488_in :|: TRUE

----------------------------------------

(48) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f488_in -> f488_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(49)
Obligation:

Termination digraph:
Nodes:
(1) f488_in -> f488_in :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(50) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f488_in()
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(51)
Obligation:
Rules:
f488_in -> f488_in :|: TRUE

----------------------------------------

(52) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc) -> f(1) :|: pc = 1 && TRUE
Witness term starting non-terminating reduction: f(1)
----------------------------------------

(53)
NO

----------------------------------------

(54)
Obligation:
Rules:
f483_out -> f458_out :|: TRUE
f458_in -> f483_in :|: TRUE
f519_in -> f577_in :|: TRUE
f577_out -> f519_out :|: TRUE
f576_out -> f519_out :|: TRUE
f519_in -> f576_in :|: TRUE
f458_out -> f512_out :|: TRUE
f512_in -> f458_in :|: TRUE
f513_out -> f510_out :|: TRUE
f510_in -> f512_in :|: TRUE
f512_out -> f513_in :|: TRUE
f489_in -> f489_out :|: TRUE
f458_out -> f610_out :|: TRUE
f610_in -> f458_in :|: TRUE
f345_out -> f611_out :|: TRUE
f611_in -> f345_in :|: TRUE
f610_out -> f611_in :|: TRUE
f611_out -> f576_out :|: TRUE
f576_in -> f610_in :|: TRUE
f488_in -> f510_in :|: TRUE
f510_out -> f488_out :|: TRUE
f511_out -> f488_out :|: TRUE
f488_in -> f511_in :|: TRUE
f487_in -> f489_in :|: TRUE
f490_out -> f487_out :|: TRUE
f489_out -> f487_out :|: TRUE
f487_in -> f490_in :|: TRUE
f518_out -> f514_out :|: TRUE
f519_out -> f514_out :|: TRUE
f514_in -> f519_in :|: TRUE
f514_in -> f518_in :|: TRUE
f345_in -> f514_in :|: TRUE
f514_out -> f345_out :|: TRUE
f513_in -> f458_in :|: TRUE
f458_out -> f513_out :|: TRUE
f487_out -> f483_out :|: TRUE
f483_in -> f488_in :|: TRUE
f488_out -> f483_out :|: TRUE
f483_in -> f487_in :|: TRUE
f7_out(T2) -> f1_out(T2) :|: TRUE
f1_in(x) -> f7_in(x) :|: TRUE
f7_in(T11) -> f9_in(T11) :|: TRUE
f9_out(x1) -> f7_out(x1) :|: TRUE
f9_in(x2) -> f10_in(x2) :|: TRUE
f10_out(x3) -> f9_out(x3) :|: TRUE
f18_out(x4) -> f10_out(x4) :|: TRUE
f10_in(x5) -> f17_in(x5) :|: TRUE
f17_out(x6) -> f10_out(x6) :|: TRUE
f10_in(x7) -> f18_in(x7) :|: TRUE
f37_out(T35, T36, T37) -> f18_out(tree(T35, T36, T37)) :|: TRUE
f38_out -> f18_out(x8) :|: TRUE
f18_in(tree(x9, x10, x11)) -> f37_in(x9, x10, x11) :|: TRUE
f18_in(x12) -> f38_in :|: TRUE
f344_out(x13, x14, x15) -> f345_in :|: TRUE
f345_out -> f37_out(x16, x17, x18) :|: TRUE
f37_in(x19, x20, x21) -> f344_in(x19, x20, x21) :|: TRUE
Start term: f1_in(T2)

----------------------------------------

(55) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(56)
TRUE
