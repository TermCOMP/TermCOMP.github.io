MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/Sg12G.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

perm(a,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) PrologToPiTRSProof [SOUND, 0 ms]
(2) PiTRS
    (3) DependencyPairsProof [EQUIVALENT, 0 ms]
    (4) PiDP
    (5) DependencyGraphProof [EQUIVALENT, 0 ms]
    (6) AND
        (7) PiDP
            (8) UsableRulesProof [EQUIVALENT, 0 ms]
            (9) PiDP
            (10) PiDPToQDPProof [SOUND, 0 ms]
            (11) QDP
            (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (13) YES
        (14) PiDP
            (15) UsableRulesProof [EQUIVALENT, 0 ms]
            (16) PiDP
            (17) PiDPToQDPProof [SOUND, 0 ms]
            (18) QDP
            (19) NonTerminationLoopProof [COMPLETE, 0 ms]
            (20) NO
        (21) PiDP
            (22) UsableRulesProof [EQUIVALENT, 0 ms]
            (23) PiDP
            (24) PiDPToQDPProof [SOUND, 0 ms]
            (25) QDP
            (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (27) YES
(28) PrologToPiTRSProof [SOUND, 0 ms]
(29) PiTRS
    (30) DependencyPairsProof [EQUIVALENT, 0 ms]
    (31) PiDP
    (32) DependencyGraphProof [EQUIVALENT, 0 ms]
    (33) AND
        (34) PiDP
            (35) UsableRulesProof [EQUIVALENT, 0 ms]
            (36) PiDP
            (37) PiDPToQDPProof [SOUND, 0 ms]
            (38) QDP
            (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (40) YES
        (41) PiDP
            (42) UsableRulesProof [EQUIVALENT, 0 ms]
            (43) PiDP
            (44) PiDPToQDPProof [SOUND, 0 ms]
            (45) QDP
            (46) NonTerminationLoopProof [COMPLETE, 0 ms]
            (47) NO
        (48) PiDP
            (49) UsableRulesProof [EQUIVALENT, 0 ms]
            (50) PiDP
            (51) PiDPToQDPProof [SOUND, 0 ms]
            (52) QDP
            (53) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (54) YES
(55) PrologToTRSTransformerProof [SOUND, 0 ms]
(56) QTRS
    (57) DependencyPairsProof [EQUIVALENT, 0 ms]
    (58) QDP
    (59) DependencyGraphProof [EQUIVALENT, 0 ms]
    (60) AND
        (61) QDP
            (62) MNOCProof [EQUIVALENT, 0 ms]
            (63) QDP
            (64) UsableRulesProof [EQUIVALENT, 0 ms]
            (65) QDP
            (66) QReductionProof [EQUIVALENT, 0 ms]
            (67) QDP
            (68) NonTerminationLoopProof [COMPLETE, 0 ms]
            (69) NO
        (70) QDP
            (71) MNOCProof [EQUIVALENT, 0 ms]
            (72) QDP
            (73) UsableRulesProof [EQUIVALENT, 0 ms]
            (74) QDP
            (75) QReductionProof [EQUIVALENT, 0 ms]
            (76) QDP
            (77) NonTerminationLoopProof [COMPLETE, 0 ms]
            (78) NO
        (79) QDP
            (80) MNOCProof [EQUIVALENT, 0 ms]
            (81) QDP
            (82) UsableRulesProof [EQUIVALENT, 0 ms]
            (83) QDP
            (84) QReductionProof [EQUIVALENT, 0 ms]
            (85) QDP
            (86) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (87) YES
(88) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(89) TRIPLES
    (90) TriplesToPiDPProof [SOUND, 4 ms]
    (91) PiDP
    (92) DependencyGraphProof [EQUIVALENT, 0 ms]
    (93) AND
        (94) PiDP
            (95) UsableRulesProof [EQUIVALENT, 0 ms]
            (96) PiDP
            (97) PiDPToQDPProof [SOUND, 0 ms]
            (98) QDP
            (99) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (100) YES
        (101) PiDP
            (102) UsableRulesProof [EQUIVALENT, 0 ms]
            (103) PiDP
            (104) PiDPToQDPProof [SOUND, 0 ms]
            (105) QDP
            (106) NonTerminationLoopProof [COMPLETE, 0 ms]
            (107) NO
        (108) PiDP
            (109) PiDPToQDPProof [SOUND, 0 ms]
            (110) QDP
            (111) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (112) YES
(113) PrologToIRSwTTransformerProof [SOUND, 0 ms]
(114) AND
    (115) IRSwT
        (116) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (117) TRUE
    (118) IRSwT
        (119) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (120) IRSwT
        (121) IntTRSCompressionProof [EQUIVALENT, 9 ms]
        (122) IRSwT
        (123) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (124) IRSwT
        (125) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
        (126) IRSwT
        (127) FilterProof [EQUIVALENT, 1 ms]
        (128) IntTRS
        (129) IntTRSNonPeriodicNontermProof [COMPLETE, 3 ms]
        (130) NO
    (131) IRSwT
        (132) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (133) IRSwT


----------------------------------------

(0)
Obligation:
Clauses:

perm([], []).
perm(Xs, .(X, Ys)) :- ','(app(X1s, .(X, X2s), Xs), ','(app(X1s, X2s, Zs), perm(Zs, Ys))).
app([], X, X).
app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs).


Query: perm(a,g)
----------------------------------------

(1) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

perm_in_2: (f,b)

app_in_3: (f,f,f) (b,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(2)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)



----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   PERM_IN_AG(Xs, .(X, Ys)) -> APP_IN_AAA(X1s, .(X, X2s), Xs)
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> U4_AAA(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> APP_IN_GAA(X1s, X2s, Zs)
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> U4_GAA(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_AG(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x5)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   PERM_IN_AG(Xs, .(X, Ys)) -> APP_IN_AAA(X1s, .(X, X2s), Xs)
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> U4_AAA(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> APP_IN_GAA(X1s, X2s, Zs)
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> U4_GAA(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_AG(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x5)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 5 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(Xs)) -> APP_IN_GAA(Xs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GAA(.(Xs)) -> APP_IN_GAA(Xs)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(16)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(17) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA -> APP_IN_AAA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(19) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = APP_IN_AAA evaluates to  t =APP_IN_AAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from APP_IN_AAA to APP_IN_AAA.




----------------------------------------

(20)
NO

----------------------------------------

(21)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)
   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(23)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)
   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))

The TRS R consists of the following rules:

   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x2)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x5)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(24) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AG(Ys, app_out_aaa(X1s)) -> U2_AG(Ys, app_in_gaa(X1s))
   U2_AG(Ys, app_out_gaa) -> PERM_IN_AG(Ys)
   PERM_IN_AG(.(Ys)) -> U1_AG(Ys, app_in_aaa)

The TRS R consists of the following rules:

   app_in_gaa([]) -> app_out_gaa
   app_in_gaa(.(Xs)) -> U4_gaa(app_in_gaa(Xs))
   app_in_aaa -> app_out_aaa([])
   app_in_aaa -> U4_aaa(app_in_aaa)
   U4_gaa(app_out_gaa) -> app_out_gaa
   U4_aaa(app_out_aaa(Xs)) -> app_out_aaa(.(Xs))

The set Q consists of the following terms:

   app_in_gaa(x0)
   app_in_aaa
   U4_gaa(x0)
   U4_aaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U2_AG(Ys, app_out_gaa) -> PERM_IN_AG(Ys)
The graph contains the following edges 1 >= 1


*PERM_IN_AG(.(Ys)) -> U1_AG(Ys, app_in_aaa)
The graph contains the following edges 1 > 1


*U1_AG(Ys, app_out_aaa(X1s)) -> U2_AG(Ys, app_in_gaa(X1s))
The graph contains the following edges 1 >= 1


----------------------------------------

(27)
YES

----------------------------------------

(28) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

perm_in_2: (f,b)

app_in_3: (f,f,f) (b,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(29)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)



----------------------------------------

(30) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   PERM_IN_AG(Xs, .(X, Ys)) -> APP_IN_AAA(X1s, .(X, X2s), Xs)
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> U4_AAA(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> APP_IN_GAA(X1s, X2s, Zs)
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> U4_GAA(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_AG(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x2, x5)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   PERM_IN_AG(Xs, .(X, Ys)) -> APP_IN_AAA(X1s, .(X, X2s), Xs)
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> U4_AAA(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> APP_IN_GAA(X1s, X2s, Zs)
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> U4_GAA(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_AG(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x2, x5)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(32) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 5 less nodes.
----------------------------------------

(33)
Complex Obligation (AND)

----------------------------------------

(34)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(36)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_GAA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_GAA(x1, x2, x3)  =  APP_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(37) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_GAA(.(Xs)) -> APP_IN_GAA(Xs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APP_IN_GAA(.(Xs)) -> APP_IN_GAA(Xs)
The graph contains the following edges 1 > 1


----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(42) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(43)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(.(X, Xs), Ys, .(X, Zs)) -> APP_IN_AAA(Xs, Ys, Zs)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(44) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(45)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA -> APP_IN_AAA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(46) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = APP_IN_AAA evaluates to  t =APP_IN_AAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from APP_IN_AAA to APP_IN_AAA.




----------------------------------------

(47)
NO

----------------------------------------

(48)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)
   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))

The TRS R consists of the following rules:

   perm_in_ag([], []) -> perm_out_ag([], [])
   perm_in_ag(Xs, .(X, Ys)) -> U1_ag(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))
   U1_ag(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_ag(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U2_ag(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> U3_ag(Xs, X, Ys, perm_in_ag(Zs, Ys))
   U3_ag(Xs, X, Ys, perm_out_ag(Zs, Ys)) -> perm_out_ag(Xs, .(X, Ys))

The argument filtering Pi contains the following mapping:
perm_in_ag(x1, x2)  =  perm_in_ag(x2)

[]  =  []

perm_out_ag(x1, x2)  =  perm_out_ag(x2)

.(x1, x2)  =  .(x2)

U1_ag(x1, x2, x3, x4)  =  U1_ag(x3, x4)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

U2_ag(x1, x2, x3, x4)  =  U2_ag(x3, x4)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

U3_ag(x1, x2, x3, x4)  =  U3_ag(x3, x4)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(49) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(50)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AG(Xs, X, Ys, app_out_aaa(X1s, .(X, X2s), Xs)) -> U2_AG(Xs, X, Ys, app_in_gaa(X1s, X2s, Zs))
   U2_AG(Xs, X, Ys, app_out_gaa(X1s, X2s, Zs)) -> PERM_IN_AG(Zs, Ys)
   PERM_IN_AG(Xs, .(X, Ys)) -> U1_AG(Xs, X, Ys, app_in_aaa(X1s, .(X, X2s), Xs))

The TRS R consists of the following rules:

   app_in_gaa([], X, X) -> app_out_gaa([], X, X)
   app_in_gaa(.(X, Xs), Ys, .(X, Zs)) -> U4_gaa(X, Xs, Ys, Zs, app_in_gaa(Xs, Ys, Zs))
   app_in_aaa([], X, X) -> app_out_aaa([], X, X)
   app_in_aaa(.(X, Xs), Ys, .(X, Zs)) -> U4_aaa(X, Xs, Ys, Zs, app_in_aaa(Xs, Ys, Zs))
   U4_gaa(X, Xs, Ys, Zs, app_out_gaa(Xs, Ys, Zs)) -> app_out_gaa(.(X, Xs), Ys, .(X, Zs))
   U4_aaa(X, Xs, Ys, Zs, app_out_aaa(Xs, Ys, Zs)) -> app_out_aaa(.(X, Xs), Ys, .(X, Zs))

The argument filtering Pi contains the following mapping:
[]  =  []

.(x1, x2)  =  .(x2)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

app_out_aaa(x1, x2, x3)  =  app_out_aaa(x1)

U4_aaa(x1, x2, x3, x4, x5)  =  U4_aaa(x5)

app_in_gaa(x1, x2, x3)  =  app_in_gaa(x1)

app_out_gaa(x1, x2, x3)  =  app_out_gaa(x1)

U4_gaa(x1, x2, x3, x4, x5)  =  U4_gaa(x2, x5)

PERM_IN_AG(x1, x2)  =  PERM_IN_AG(x2)

U1_AG(x1, x2, x3, x4)  =  U1_AG(x3, x4)

U2_AG(x1, x2, x3, x4)  =  U2_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(51) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AG(Ys, app_out_aaa(X1s)) -> U2_AG(Ys, app_in_gaa(X1s))
   U2_AG(Ys, app_out_gaa(X1s)) -> PERM_IN_AG(Ys)
   PERM_IN_AG(.(Ys)) -> U1_AG(Ys, app_in_aaa)

The TRS R consists of the following rules:

   app_in_gaa([]) -> app_out_gaa([])
   app_in_gaa(.(Xs)) -> U4_gaa(Xs, app_in_gaa(Xs))
   app_in_aaa -> app_out_aaa([])
   app_in_aaa -> U4_aaa(app_in_aaa)
   U4_gaa(Xs, app_out_gaa(Xs)) -> app_out_gaa(.(Xs))
   U4_aaa(app_out_aaa(Xs)) -> app_out_aaa(.(Xs))

The set Q consists of the following terms:

   app_in_gaa(x0)
   app_in_aaa
   U4_gaa(x0, x1)
   U4_aaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(53) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U2_AG(Ys, app_out_gaa(X1s)) -> PERM_IN_AG(Ys)
The graph contains the following edges 1 >= 1


*PERM_IN_AG(.(Ys)) -> U1_AG(Ys, app_in_aaa)
The graph contains the following edges 1 > 1


*U1_AG(Ys, app_out_aaa(X1s)) -> U2_AG(Ys, app_in_gaa(X1s))
The graph contains the following edges 1 >= 1


----------------------------------------

(54)
YES

----------------------------------------

(55) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm Xs (. X Ys))",
                "(',' (app X1s (. X X2s) Xs) (',' (app X1s X2s Zs) (perm Zs Ys)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "26": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "251": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(app X13 (. T10 X14) T12)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app X13 (. T10 X14) T12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "252": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "253": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "156": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "178": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app X13 (. T10 X14) T12) (',' (app X13 X14 X15) (perm X15 T11)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T10",
                        "T11"
                    ],
                    "free": [
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            },
            "233": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "310": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "311": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "235": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T17 T18 X15) (perm X15 T11))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "279": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X53 (. T39 X54) T42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T39"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "314": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "315": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "316": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "180": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "280": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "264": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "122": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "265": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "320": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T66 T67 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "123": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "266": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "124": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "125": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "323": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "307": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "308": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T49 T11)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "309": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(app T17 T18 X15)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(app T17 T18 X15)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 26,
                "label": "CASE"
            },
            {
                "from": 26,
                "to": 122,
                "label": "PARALLEL"
            },
            {
                "from": 26,
                "to": 123,
                "label": "PARALLEL"
            },
            {
                "from": 122,
                "to": 124,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 122,
                "to": 125,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 123,
                "to": 178,
                "label": "EVAL with clause\nperm(X10, .(X11, X12)) :- ','(app(X13, .(X11, X14), X10), ','(app(X13, X14, X15), perm(X15, X12))).\nand substitutionT1 -> T12,\nX10 -> T12,\nX11 -> T10,\nX12 -> T11,\nT2 -> .(T10, T11),\nT9 -> T12"
            },
            {
                "from": 123,
                "to": 180,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 124,
                "to": 156,
                "label": "SUCCESS"
            },
            {
                "from": 178,
                "to": 233,
                "label": "SPLIT 1"
            },
            {
                "from": 178,
                "to": 235,
                "label": "SPLIT 2\nreplacements:X13 -> T17,\nX14 -> T18"
            },
            {
                "from": 233,
                "to": 251,
                "label": "CASE"
            },
            {
                "from": 235,
                "to": 307,
                "label": "SPLIT 1"
            },
            {
                "from": 235,
                "to": 308,
                "label": "SPLIT 2\nreplacements:X15 -> T49"
            },
            {
                "from": 251,
                "to": 252,
                "label": "PARALLEL"
            },
            {
                "from": 251,
                "to": 253,
                "label": "PARALLEL"
            },
            {
                "from": 252,
                "to": 264,
                "label": "EVAL with clause\napp([], X32, X32).\nand substitutionX13 -> [],\nT10 -> T31,\nX14 -> T32,\nX32 -> .(T31, T32),\nX33 -> T32,\nT12 -> .(T31, T32)"
            },
            {
                "from": 252,
                "to": 265,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 253,
                "to": 279,
                "label": "EVAL with clause\napp(.(X48, X49), X50, .(X48, X51)) :- app(X49, X50, X51).\nand substitutionX48 -> T40,\nX49 -> X53,\nX13 -> .(T40, X53),\nT10 -> T39,\nX14 -> X54,\nX50 -> .(T39, X54),\nX52 -> T40,\nX51 -> T42,\nT12 -> .(T40, T42),\nT41 -> T42"
            },
            {
                "from": 253,
                "to": 280,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 264,
                "to": 266,
                "label": "SUCCESS"
            },
            {
                "from": 279,
                "to": 233,
                "label": "INSTANCE with matching:\nX13 -> X53\nT10 -> T39\nX14 -> X54\nT12 -> T42"
            },
            {
                "from": 307,
                "to": 309,
                "label": "CASE"
            },
            {
                "from": 308,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T49\nT2 -> T11"
            },
            {
                "from": 309,
                "to": 310,
                "label": "PARALLEL"
            },
            {
                "from": 309,
                "to": 311,
                "label": "PARALLEL"
            },
            {
                "from": 310,
                "to": 314,
                "label": "EVAL with clause\napp([], X67, X67).\nand substitutionT17 -> [],\nT18 -> T56,\nX67 -> T56,\nX15 -> T56"
            },
            {
                "from": 310,
                "to": 315,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 311,
                "to": 320,
                "label": "EVAL with clause\napp(.(X78, X79), X80, .(X78, X81)) :- app(X79, X80, X81).\nand substitutionX78 -> T63,\nX79 -> T66,\nT17 -> .(T63, T66),\nT18 -> T67,\nX80 -> T67,\nX81 -> X82,\nX15 -> .(T63, X82),\nT64 -> T66,\nT65 -> T67"
            },
            {
                "from": 311,
                "to": 323,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 314,
                "to": 316,
                "label": "SUCCESS"
            },
            {
                "from": 320,
                "to": 307,
                "label": "INSTANCE with matching:\nT17 -> T66\nT18 -> T67\nX15 -> X82"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(56)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

Q is empty.

----------------------------------------

(57) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(.(T10, T11)) -> U1^1(f178_in(T10, T11), .(T10, T11))
   F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
   F233_IN(T39) -> U2^1(f233_in(T39), T39)
   F233_IN(T39) -> F233_IN(T39)
   F307_IN -> U3^1(f307_in)
   F307_IN -> F307_IN
   F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
   F178_IN(T10, T11) -> F233_IN(T10)
   U4^1(f233_out1, T10, T11) -> U5^1(f235_in(T11), T10, T11)
   U4^1(f233_out1, T10, T11) -> F235_IN(T11)
   F235_IN(T11) -> U6^1(f307_in, T11)
   F235_IN(T11) -> F307_IN
   U6^1(f307_out1, T11) -> U7^1(f3_in(T11), T11)
   U6^1(f307_out1, T11) -> F3_IN(T11)

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 7 less nodes.
----------------------------------------

(60)
Complex Obligation (AND)

----------------------------------------

(61)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F307_IN -> F307_IN

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(62) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(63)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F307_IN -> F307_IN

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(64) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(65)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F307_IN -> F307_IN

R is empty.
The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(66) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)


----------------------------------------

(67)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F307_IN -> F307_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(68) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F307_IN evaluates to  t =F307_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F307_IN to F307_IN.




----------------------------------------

(69)
NO

----------------------------------------

(70)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F233_IN(T39) -> F233_IN(T39)

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(71) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(72)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F233_IN(T39) -> F233_IN(T39)

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(73) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(74)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F233_IN(T39) -> F233_IN(T39)

R is empty.
The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(75) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)


----------------------------------------

(76)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F233_IN(T39) -> F233_IN(T39)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(77) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F233_IN(T39) evaluates to  t =F233_IN(T39)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F233_IN(T39) to F233_IN(T39).




----------------------------------------

(78)
NO

----------------------------------------

(79)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
   F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
   U4^1(f233_out1, T10, T11) -> F235_IN(T11)
   F235_IN(T11) -> U6^1(f307_in, T11)
   U6^1(f307_out1, T11) -> F3_IN(T11)

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(80) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(81)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
   F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
   U4^1(f233_out1, T10, T11) -> F235_IN(T11)
   F235_IN(T11) -> U6^1(f307_in, T11)
   U6^1(f307_out1, T11) -> F3_IN(T11)

The TRS R consists of the following rules:

   f3_in([]) -> f3_out1
   f3_in(.(T10, T11)) -> U1(f178_in(T10, T11), .(T10, T11))
   U1(f178_out1, .(T10, T11)) -> f3_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1
   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f178_in(T10, T11) -> U4(f233_in(T10), T10, T11)
   U4(f233_out1, T10, T11) -> U5(f235_in(T11), T10, T11)
   U5(f235_out1, T10, T11) -> f178_out1
   f235_in(T11) -> U6(f307_in, T11)
   U6(f307_out1, T11) -> U7(f3_in(T11), T11)
   U7(f3_out1, T11) -> f235_out1

The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(82) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(83)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
   F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
   U4^1(f233_out1, T10, T11) -> F235_IN(T11)
   F235_IN(T11) -> U6^1(f307_in, T11)
   U6^1(f307_out1, T11) -> F3_IN(T11)

The TRS R consists of the following rules:

   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1

The set Q consists of the following terms:

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(84) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f3_in([])
   f3_in(.(x0, x1))
   U1(f178_out1, .(x0, x1))
   f178_in(x0, x1)
   U4(f233_out1, x0, x1)
   U5(f235_out1, x0, x1)
   f235_in(x0)
   U6(f307_out1, x0)
   U7(f3_out1, x0)


----------------------------------------

(85)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
   F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
   U4^1(f233_out1, T10, T11) -> F235_IN(T11)
   F235_IN(T11) -> U6^1(f307_in, T11)
   U6^1(f307_out1, T11) -> F3_IN(T11)

The TRS R consists of the following rules:

   f307_in -> f307_out1
   f307_in -> U3(f307_in)
   U3(f307_out1) -> f307_out1
   f233_in(T31) -> f233_out1
   f233_in(T39) -> U2(f233_in(T39), T39)
   U2(f233_out1, T39) -> f233_out1

The set Q consists of the following terms:

   f233_in(x0)
   U2(f233_out1, x0)
   f307_in
   U3(f307_out1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(86) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F178_IN(T10, T11) -> U4^1(f233_in(T10), T10, T11)
The graph contains the following edges 1 >= 2, 2 >= 3


*U6^1(f307_out1, T11) -> F3_IN(T11)
The graph contains the following edges 2 >= 1


*U4^1(f233_out1, T10, T11) -> F235_IN(T11)
The graph contains the following edges 3 >= 1


*F3_IN(.(T10, T11)) -> F178_IN(T10, T11)
The graph contains the following edges 1 > 1, 1 > 2


*F235_IN(T11) -> U6^1(f307_in, T11)
The graph contains the following edges 1 >= 2


----------------------------------------

(87)
YES

----------------------------------------

(88) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm Xs (. X Ys))",
                "(',' (app X1s (. X X2s) Xs) (',' (app X1s X2s Zs) (perm Zs Ys)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "192": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "293": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "294": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "196": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (app X10 (. T8 X11) T10) (',' (app X10 X11 X12) (perm X12 T9)))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (app X10 (. T8 X11) T10) (',' (app X10 X11 X12) (perm X12 T9)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "297": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app X53 (. T36 X54) T39) (',' (app (. T40 X53) X54 X12) (perm X12 T9)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T9",
                        "T36"
                    ],
                    "free": [
                        "X12",
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "330": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "298": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "331": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "299": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X53 (. T36 X54) T39)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "332": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T108 T109 X141)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X141"],
                    "exprvars": []
                }
            },
            "333": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "312": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X92 (. T68 X93) T71)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T68"],
                    "free": [
                        "X92",
                        "X93"
                    ],
                    "exprvars": []
                }
            },
            "313": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "317": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app (. T47 T45) T46 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "318": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T76 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "319": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(app (. T47 T45) T46 X12)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(app (. T47 T45) T46 X12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "161": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(perm T1 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "282": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T21 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "283": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T23 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": [],
                    "exprvars": []
                }
            },
            "284": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(app ([]) T21 X12)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(app ([]) T21 X12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "166": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "188": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app X10 (. T8 X11) T10) (',' (app X10 X11 X12) (perm X12 T9)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "287": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(app ([]) T21 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "288": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(app ([]) T21 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "321": {
                "goal": [{
                    "clause": 3,
                    "scope": 5,
                    "term": "(app (. T47 T45) T46 X12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "289": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "300": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app (. T47 T45) T46 X12) (perm X12 T9))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "202": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(',' (app X10 (. T8 X11) T10) (',' (app X10 X11 X12) (perm X12 T9)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "301": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(app X53 (. T36 X54) T39)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app X53 (. T36 X54) T39)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "203": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(',' (app X10 (. T8 X11) T10) (',' (app X10 X11 X12) (perm X12 T9)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T8",
                        "T9"
                    ],
                    "free": [
                        "X10",
                        "X11",
                        "X12"
                    ],
                    "exprvars": []
                }
            },
            "302": {
                "goal": [{
                    "clause": 2,
                    "scope": 4,
                    "term": "(app X53 (. T36 X54) T39)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "127": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(perm T1 ([]))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "204": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app ([]) T21 X12) (perm X12 T9))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X12"],
                    "exprvars": []
                }
            },
            "303": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(app X53 (. T36 X54) T39)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "325": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T90 T91 X119)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "205": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "304": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "326": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(app T90 T91 X119)"
                    },
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(app T90 T91 X119)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "129": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(perm T1 T2)",
                        "(perm ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "305": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "327": {
                "goal": [{
                    "clause": 2,
                    "scope": 6,
                    "term": "(app T90 T91 X119)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "306": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "328": {
                "goal": [{
                    "clause": 3,
                    "scope": 6,
                    "term": "(app T90 T91 X119)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X119"],
                    "exprvars": []
                }
            },
            "329": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 127,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 5,
                "to": 129,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 127,
                "to": 161,
                "label": "SUCCESS"
            },
            {
                "from": 129,
                "to": 188,
                "label": "EVAL with clause\nperm(X7, .(X8, X9)) :- ','(app(X10, .(X8, X11), X7), ','(app(X10, X11, X12), perm(X12, X9))).\nand substitutionT1 -> T10,\nX7 -> T10,\nX8 -> T8,\nX9 -> T9,\nT2 -> .(T8, T9),\nT7 -> T10"
            },
            {
                "from": 129,
                "to": 192,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 161,
                "to": 166,
                "label": "BACKTRACK\nfor clause: perm(Xs, .(X, Ys)) :- ','(app(X1s, .(X, X2s), Xs), ','(app(X1s, X2s, Zs), perm(Zs, Ys)))because of non-unification"
            },
            {
                "from": 188,
                "to": 196,
                "label": "CASE"
            },
            {
                "from": 196,
                "to": 202,
                "label": "PARALLEL"
            },
            {
                "from": 196,
                "to": 203,
                "label": "PARALLEL"
            },
            {
                "from": 202,
                "to": 204,
                "label": "EVAL with clause\napp([], X21, X21).\nand substitutionX10 -> [],\nT8 -> T19,\nX11 -> T21,\nX21 -> .(T19, T21),\nX22 -> T21,\nT10 -> .(T19, T21),\nT20 -> T21"
            },
            {
                "from": 202,
                "to": 205,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 203,
                "to": 297,
                "label": "EVAL with clause\napp(.(X48, X49), X50, .(X48, X51)) :- app(X49, X50, X51).\nand substitutionX48 -> T40,\nX49 -> X53,\nX10 -> .(T40, X53),\nT8 -> T36,\nX11 -> X54,\nX50 -> .(T36, X54),\nX52 -> T40,\nX51 -> T39,\nT10 -> .(T40, T39),\nT38 -> T39,\nT37 -> T40"
            },
            {
                "from": 203,
                "to": 298,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 204,
                "to": 282,
                "label": "SPLIT 1"
            },
            {
                "from": 204,
                "to": 283,
                "label": "SPLIT 2\nreplacements:X12 -> T23"
            },
            {
                "from": 282,
                "to": 284,
                "label": "CASE"
            },
            {
                "from": 283,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T23\nT2 -> T9"
            },
            {
                "from": 284,
                "to": 287,
                "label": "PARALLEL"
            },
            {
                "from": 284,
                "to": 288,
                "label": "PARALLEL"
            },
            {
                "from": 287,
                "to": 289,
                "label": "ONLY EVAL with clause\napp([], X29, X29).\nand substitutionT21 -> T29,\nX29 -> T29,\nX12 -> T29"
            },
            {
                "from": 288,
                "to": 294,
                "label": "BACKTRACK\nfor clause: app(.(X, Xs), Ys, .(X, Zs)) :- app(Xs, Ys, Zs)because of non-unification"
            },
            {
                "from": 289,
                "to": 293,
                "label": "SUCCESS"
            },
            {
                "from": 297,
                "to": 299,
                "label": "SPLIT 1"
            },
            {
                "from": 297,
                "to": 300,
                "label": "SPLIT 2\nreplacements:X53 -> T45,\nX54 -> T46,\nT40 -> T47"
            },
            {
                "from": 299,
                "to": 301,
                "label": "CASE"
            },
            {
                "from": 300,
                "to": 317,
                "label": "SPLIT 1"
            },
            {
                "from": 300,
                "to": 318,
                "label": "SPLIT 2\nreplacements:X12 -> T76"
            },
            {
                "from": 301,
                "to": 302,
                "label": "PARALLEL"
            },
            {
                "from": 301,
                "to": 303,
                "label": "PARALLEL"
            },
            {
                "from": 302,
                "to": 304,
                "label": "EVAL with clause\napp([], X71, X71).\nand substitutionX53 -> [],\nT36 -> T60,\nX54 -> T61,\nX71 -> .(T60, T61),\nX72 -> T61,\nT39 -> .(T60, T61)"
            },
            {
                "from": 302,
                "to": 305,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 303,
                "to": 312,
                "label": "EVAL with clause\napp(.(X87, X88), X89, .(X87, X90)) :- app(X88, X89, X90).\nand substitutionX87 -> T69,\nX88 -> X92,\nX53 -> .(T69, X92),\nT36 -> T68,\nX54 -> X93,\nX89 -> .(T68, X93),\nX91 -> T69,\nX90 -> T71,\nT39 -> .(T69, T71),\nT70 -> T71"
            },
            {
                "from": 303,
                "to": 313,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 304,
                "to": 306,
                "label": "SUCCESS"
            },
            {
                "from": 312,
                "to": 299,
                "label": "INSTANCE with matching:\nX53 -> X92\nT36 -> T68\nX54 -> X93\nT39 -> T71"
            },
            {
                "from": 317,
                "to": 319,
                "label": "CASE"
            },
            {
                "from": 318,
                "to": 1,
                "label": "INSTANCE with matching:\nT1 -> T76\nT2 -> T9"
            },
            {
                "from": 319,
                "to": 321,
                "label": "BACKTRACK\nfor clause: app([], X, X)because of non-unification"
            },
            {
                "from": 321,
                "to": 325,
                "label": "ONLY EVAL with clause\napp(.(X115, X116), X117, .(X115, X118)) :- app(X116, X117, X118).\nand substitutionT47 -> T87,\nX115 -> T87,\nT45 -> T90,\nX116 -> T90,\nT46 -> T91,\nX117 -> T91,\nX118 -> X119,\nX12 -> .(T87, X119),\nT88 -> T90,\nT89 -> T91"
            },
            {
                "from": 325,
                "to": 326,
                "label": "CASE"
            },
            {
                "from": 326,
                "to": 327,
                "label": "PARALLEL"
            },
            {
                "from": 326,
                "to": 328,
                "label": "PARALLEL"
            },
            {
                "from": 327,
                "to": 329,
                "label": "EVAL with clause\napp([], X126, X126).\nand substitutionT90 -> [],\nT91 -> T98,\nX126 -> T98,\nX119 -> T98"
            },
            {
                "from": 327,
                "to": 330,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 328,
                "to": 332,
                "label": "EVAL with clause\napp(.(X137, X138), X139, .(X137, X140)) :- app(X138, X139, X140).\nand substitutionX137 -> T105,\nX138 -> T108,\nT90 -> .(T105, T108),\nT91 -> T109,\nX139 -> T109,\nX140 -> X141,\nX119 -> .(T105, X141),\nT106 -> T108,\nT107 -> T109"
            },
            {
                "from": 328,
                "to": 333,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 329,
                "to": 331,
                "label": "SUCCESS"
            },
            {
                "from": 332,
                "to": 325,
                "label": "INSTANCE with matching:\nT90 -> T108\nT91 -> T109\nX119 -> X141"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(89)
Obligation:
Triples:

appC(.(X1, X2), X3, X4, .(X1, X5)) :- appC(X2, X3, X4, X5).
appE(.(X1, X2), X3, .(X1, X4)) :- appE(X2, X3, X4).
permA(.(X1, X2), .(X1, X3)) :- ','(appcB(X2, X4), permA(X4, X3)).
permA(.(X1, X2), .(X3, X4)) :- appC(X5, X3, X6, X2).
permA(.(X1, X2), .(X3, X4)) :- ','(appcC(X5, X3, X6, X2), appE(X5, X6, X7)).
permA(.(X1, X2), .(X3, X4)) :- ','(appcC(X5, X3, X6, X2), ','(appcD(X1, X5, X6, X7), permA(X7, X4))).

Clauses:

permcA([], []).
permcA(.(X1, X2), .(X1, X3)) :- ','(appcB(X2, X4), permcA(X4, X3)).
permcA(.(X1, X2), .(X3, X4)) :- ','(appcC(X5, X3, X6, X2), ','(appcD(X1, X5, X6, X7), permcA(X7, X4))).
appcC([], X1, X2, .(X1, X2)).
appcC(.(X1, X2), X3, X4, .(X1, X5)) :- appcC(X2, X3, X4, X5).
appcE([], X1, X1).
appcE(.(X1, X2), X3, .(X1, X4)) :- appcE(X2, X3, X4).
appcB(X1, X1).
appcD(X1, X2, X3, .(X1, X4)) :- appcE(X2, X3, X4).

Afs:

permA(x1, x2)  =  permA(x2)


----------------------------------------

(90) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

permA_in_2: (f,b)

appC_in_4: (f,f,f,f)

appcC_in_4: (f,f,f,f)

appE_in_3: (b,f,f)

appcD_in_4: (f,b,f,f)

appcE_in_3: (b,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   PERMA_IN_AG(.(X1, X2), .(X1, X3)) -> U3_AG(X1, X2, X3, appcB_in_aa(X2, X4))
   U3_AG(X1, X2, X3, appcB_out_aa(X2, X4)) -> U4_AG(X1, X2, X3, permA_in_ag(X4, X3))
   U3_AG(X1, X2, X3, appcB_out_aa(X2, X4)) -> PERMA_IN_AG(X4, X3)
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> U5_AG(X1, X2, X3, X4, appC_in_aaaa(X5, X3, X6, X2))
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> APPC_IN_AAAA(X5, X3, X6, X2)
   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> U1_AAAA(X1, X2, X3, X4, X5, appC_in_aaaa(X2, X3, X4, X5))
   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> APPC_IN_AAAA(X2, X3, X4, X5)
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> U6_AG(X1, X2, X3, X4, appcC_in_aaaa(X5, X3, X6, X2))
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> U7_AG(X1, X2, X3, X4, appE_in_gaa(X5, X6, X7))
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> APPE_IN_GAA(X5, X6, X7)
   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U2_GAA(X1, X2, X3, X4, appE_in_gaa(X2, X3, X4))
   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GAA(X2, X3, X4)
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> U8_AG(X1, X2, X3, X4, appcD_in_agaa(X1, X5, X6, X7))
   U8_AG(X1, X2, X3, X4, appcD_out_agaa(X1, X5, X6, X7)) -> U9_AG(X1, X2, X3, X4, permA_in_ag(X7, X4))
   U8_AG(X1, X2, X3, X4, appcD_out_agaa(X1, X5, X6, X7)) -> PERMA_IN_AG(X7, X4)

The TRS R consists of the following rules:

   appcB_in_aa(X1, X1) -> appcB_out_aa(X1, X1)
   appcC_in_aaaa([], X1, X2, .(X1, X2)) -> appcC_out_aaaa([], X1, X2, .(X1, X2))
   appcC_in_aaaa(.(X1, X2), X3, X4, .(X1, X5)) -> U16_aaaa(X1, X2, X3, X4, X5, appcC_in_aaaa(X2, X3, X4, X5))
   U16_aaaa(X1, X2, X3, X4, X5, appcC_out_aaaa(X2, X3, X4, X5)) -> appcC_out_aaaa(.(X1, X2), X3, X4, .(X1, X5))
   appcD_in_agaa(X1, X2, X3, .(X1, X4)) -> U18_agaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   appcE_in_gaa([], X1, X1) -> appcE_out_gaa([], X1, X1)
   appcE_in_gaa(.(X1, X2), X3, .(X1, X4)) -> U17_gaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   U17_gaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcE_out_gaa(.(X1, X2), X3, .(X1, X4))
   U18_agaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcD_out_agaa(X1, X2, X3, .(X1, X4))

The argument filtering Pi contains the following mapping:
permA_in_ag(x1, x2)  =  permA_in_ag(x2)

.(x1, x2)  =  .(x2)

appcB_in_aa(x1, x2)  =  appcB_in_aa

appcB_out_aa(x1, x2)  =  appcB_out_aa

appC_in_aaaa(x1, x2, x3, x4)  =  appC_in_aaaa

appcC_in_aaaa(x1, x2, x3, x4)  =  appcC_in_aaaa

appcC_out_aaaa(x1, x2, x3, x4)  =  appcC_out_aaaa(x1)

U16_aaaa(x1, x2, x3, x4, x5, x6)  =  U16_aaaa(x6)

appE_in_gaa(x1, x2, x3)  =  appE_in_gaa(x1)

appcD_in_agaa(x1, x2, x3, x4)  =  appcD_in_agaa(x2)

U18_agaa(x1, x2, x3, x4, x5)  =  U18_agaa(x2, x5)

appcE_in_gaa(x1, x2, x3)  =  appcE_in_gaa(x1)

[]  =  []

appcE_out_gaa(x1, x2, x3)  =  appcE_out_gaa(x1)

U17_gaa(x1, x2, x3, x4, x5)  =  U17_gaa(x2, x5)

appcD_out_agaa(x1, x2, x3, x4)  =  appcD_out_agaa(x2)

PERMA_IN_AG(x1, x2)  =  PERMA_IN_AG(x2)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x3, x4)

U4_AG(x1, x2, x3, x4)  =  U4_AG(x3, x4)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)

APPC_IN_AAAA(x1, x2, x3, x4)  =  APPC_IN_AAAA

U1_AAAA(x1, x2, x3, x4, x5, x6)  =  U1_AAAA(x6)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x4, x5)

U7_AG(x1, x2, x3, x4, x5)  =  U7_AG(x4, x5)

APPE_IN_GAA(x1, x2, x3)  =  APPE_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4, x5)  =  U2_GAA(x2, x5)

U8_AG(x1, x2, x3, x4, x5)  =  U8_AG(x4, x5)

U9_AG(x1, x2, x3, x4, x5)  =  U9_AG(x4, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(91)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PERMA_IN_AG(.(X1, X2), .(X1, X3)) -> U3_AG(X1, X2, X3, appcB_in_aa(X2, X4))
   U3_AG(X1, X2, X3, appcB_out_aa(X2, X4)) -> U4_AG(X1, X2, X3, permA_in_ag(X4, X3))
   U3_AG(X1, X2, X3, appcB_out_aa(X2, X4)) -> PERMA_IN_AG(X4, X3)
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> U5_AG(X1, X2, X3, X4, appC_in_aaaa(X5, X3, X6, X2))
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> APPC_IN_AAAA(X5, X3, X6, X2)
   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> U1_AAAA(X1, X2, X3, X4, X5, appC_in_aaaa(X2, X3, X4, X5))
   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> APPC_IN_AAAA(X2, X3, X4, X5)
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> U6_AG(X1, X2, X3, X4, appcC_in_aaaa(X5, X3, X6, X2))
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> U7_AG(X1, X2, X3, X4, appE_in_gaa(X5, X6, X7))
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> APPE_IN_GAA(X5, X6, X7)
   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U2_GAA(X1, X2, X3, X4, appE_in_gaa(X2, X3, X4))
   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GAA(X2, X3, X4)
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> U8_AG(X1, X2, X3, X4, appcD_in_agaa(X1, X5, X6, X7))
   U8_AG(X1, X2, X3, X4, appcD_out_agaa(X1, X5, X6, X7)) -> U9_AG(X1, X2, X3, X4, permA_in_ag(X7, X4))
   U8_AG(X1, X2, X3, X4, appcD_out_agaa(X1, X5, X6, X7)) -> PERMA_IN_AG(X7, X4)

The TRS R consists of the following rules:

   appcB_in_aa(X1, X1) -> appcB_out_aa(X1, X1)
   appcC_in_aaaa([], X1, X2, .(X1, X2)) -> appcC_out_aaaa([], X1, X2, .(X1, X2))
   appcC_in_aaaa(.(X1, X2), X3, X4, .(X1, X5)) -> U16_aaaa(X1, X2, X3, X4, X5, appcC_in_aaaa(X2, X3, X4, X5))
   U16_aaaa(X1, X2, X3, X4, X5, appcC_out_aaaa(X2, X3, X4, X5)) -> appcC_out_aaaa(.(X1, X2), X3, X4, .(X1, X5))
   appcD_in_agaa(X1, X2, X3, .(X1, X4)) -> U18_agaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   appcE_in_gaa([], X1, X1) -> appcE_out_gaa([], X1, X1)
   appcE_in_gaa(.(X1, X2), X3, .(X1, X4)) -> U17_gaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   U17_gaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcE_out_gaa(.(X1, X2), X3, .(X1, X4))
   U18_agaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcD_out_agaa(X1, X2, X3, .(X1, X4))

The argument filtering Pi contains the following mapping:
permA_in_ag(x1, x2)  =  permA_in_ag(x2)

.(x1, x2)  =  .(x2)

appcB_in_aa(x1, x2)  =  appcB_in_aa

appcB_out_aa(x1, x2)  =  appcB_out_aa

appC_in_aaaa(x1, x2, x3, x4)  =  appC_in_aaaa

appcC_in_aaaa(x1, x2, x3, x4)  =  appcC_in_aaaa

appcC_out_aaaa(x1, x2, x3, x4)  =  appcC_out_aaaa(x1)

U16_aaaa(x1, x2, x3, x4, x5, x6)  =  U16_aaaa(x6)

appE_in_gaa(x1, x2, x3)  =  appE_in_gaa(x1)

appcD_in_agaa(x1, x2, x3, x4)  =  appcD_in_agaa(x2)

U18_agaa(x1, x2, x3, x4, x5)  =  U18_agaa(x2, x5)

appcE_in_gaa(x1, x2, x3)  =  appcE_in_gaa(x1)

[]  =  []

appcE_out_gaa(x1, x2, x3)  =  appcE_out_gaa(x1)

U17_gaa(x1, x2, x3, x4, x5)  =  U17_gaa(x2, x5)

appcD_out_agaa(x1, x2, x3, x4)  =  appcD_out_agaa(x2)

PERMA_IN_AG(x1, x2)  =  PERMA_IN_AG(x2)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x3, x4)

U4_AG(x1, x2, x3, x4)  =  U4_AG(x3, x4)

U5_AG(x1, x2, x3, x4, x5)  =  U5_AG(x4, x5)

APPC_IN_AAAA(x1, x2, x3, x4)  =  APPC_IN_AAAA

U1_AAAA(x1, x2, x3, x4, x5, x6)  =  U1_AAAA(x6)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x4, x5)

U7_AG(x1, x2, x3, x4, x5)  =  U7_AG(x4, x5)

APPE_IN_GAA(x1, x2, x3)  =  APPE_IN_GAA(x1)

U2_GAA(x1, x2, x3, x4, x5)  =  U2_GAA(x2, x5)

U8_AG(x1, x2, x3, x4, x5)  =  U8_AG(x4, x5)

U9_AG(x1, x2, x3, x4, x5)  =  U9_AG(x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(92) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 8 less nodes.
----------------------------------------

(93)
Complex Obligation (AND)

----------------------------------------

(94)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GAA(X2, X3, X4)

The TRS R consists of the following rules:

   appcB_in_aa(X1, X1) -> appcB_out_aa(X1, X1)
   appcC_in_aaaa([], X1, X2, .(X1, X2)) -> appcC_out_aaaa([], X1, X2, .(X1, X2))
   appcC_in_aaaa(.(X1, X2), X3, X4, .(X1, X5)) -> U16_aaaa(X1, X2, X3, X4, X5, appcC_in_aaaa(X2, X3, X4, X5))
   U16_aaaa(X1, X2, X3, X4, X5, appcC_out_aaaa(X2, X3, X4, X5)) -> appcC_out_aaaa(.(X1, X2), X3, X4, .(X1, X5))
   appcD_in_agaa(X1, X2, X3, .(X1, X4)) -> U18_agaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   appcE_in_gaa([], X1, X1) -> appcE_out_gaa([], X1, X1)
   appcE_in_gaa(.(X1, X2), X3, .(X1, X4)) -> U17_gaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   U17_gaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcE_out_gaa(.(X1, X2), X3, .(X1, X4))
   U18_agaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcD_out_agaa(X1, X2, X3, .(X1, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

appcB_in_aa(x1, x2)  =  appcB_in_aa

appcB_out_aa(x1, x2)  =  appcB_out_aa

appcC_in_aaaa(x1, x2, x3, x4)  =  appcC_in_aaaa

appcC_out_aaaa(x1, x2, x3, x4)  =  appcC_out_aaaa(x1)

U16_aaaa(x1, x2, x3, x4, x5, x6)  =  U16_aaaa(x6)

appcD_in_agaa(x1, x2, x3, x4)  =  appcD_in_agaa(x2)

U18_agaa(x1, x2, x3, x4, x5)  =  U18_agaa(x2, x5)

appcE_in_gaa(x1, x2, x3)  =  appcE_in_gaa(x1)

[]  =  []

appcE_out_gaa(x1, x2, x3)  =  appcE_out_gaa(x1)

U17_gaa(x1, x2, x3, x4, x5)  =  U17_gaa(x2, x5)

appcD_out_agaa(x1, x2, x3, x4)  =  appcD_out_agaa(x2)

APPE_IN_GAA(x1, x2, x3)  =  APPE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(95) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(96)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPE_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPE_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APPE_IN_GAA(x1, x2, x3)  =  APPE_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(97) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(98)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPE_IN_GAA(.(X2)) -> APPE_IN_GAA(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(99) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPE_IN_GAA(.(X2)) -> APPE_IN_GAA(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(100)
YES

----------------------------------------

(101)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> APPC_IN_AAAA(X2, X3, X4, X5)

The TRS R consists of the following rules:

   appcB_in_aa(X1, X1) -> appcB_out_aa(X1, X1)
   appcC_in_aaaa([], X1, X2, .(X1, X2)) -> appcC_out_aaaa([], X1, X2, .(X1, X2))
   appcC_in_aaaa(.(X1, X2), X3, X4, .(X1, X5)) -> U16_aaaa(X1, X2, X3, X4, X5, appcC_in_aaaa(X2, X3, X4, X5))
   U16_aaaa(X1, X2, X3, X4, X5, appcC_out_aaaa(X2, X3, X4, X5)) -> appcC_out_aaaa(.(X1, X2), X3, X4, .(X1, X5))
   appcD_in_agaa(X1, X2, X3, .(X1, X4)) -> U18_agaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   appcE_in_gaa([], X1, X1) -> appcE_out_gaa([], X1, X1)
   appcE_in_gaa(.(X1, X2), X3, .(X1, X4)) -> U17_gaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   U17_gaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcE_out_gaa(.(X1, X2), X3, .(X1, X4))
   U18_agaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcD_out_agaa(X1, X2, X3, .(X1, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

appcB_in_aa(x1, x2)  =  appcB_in_aa

appcB_out_aa(x1, x2)  =  appcB_out_aa

appcC_in_aaaa(x1, x2, x3, x4)  =  appcC_in_aaaa

appcC_out_aaaa(x1, x2, x3, x4)  =  appcC_out_aaaa(x1)

U16_aaaa(x1, x2, x3, x4, x5, x6)  =  U16_aaaa(x6)

appcD_in_agaa(x1, x2, x3, x4)  =  appcD_in_agaa(x2)

U18_agaa(x1, x2, x3, x4, x5)  =  U18_agaa(x2, x5)

appcE_in_gaa(x1, x2, x3)  =  appcE_in_gaa(x1)

[]  =  []

appcE_out_gaa(x1, x2, x3)  =  appcE_out_gaa(x1)

U17_gaa(x1, x2, x3, x4, x5)  =  U17_gaa(x2, x5)

appcD_out_agaa(x1, x2, x3, x4)  =  appcD_out_agaa(x2)

APPC_IN_AAAA(x1, x2, x3, x4)  =  APPC_IN_AAAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(102) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(103)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPC_IN_AAAA(.(X1, X2), X3, X4, .(X1, X5)) -> APPC_IN_AAAA(X2, X3, X4, X5)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

APPC_IN_AAAA(x1, x2, x3, x4)  =  APPC_IN_AAAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(104) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(105)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPC_IN_AAAA -> APPC_IN_AAAA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(106) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = APPC_IN_AAAA evaluates to  t =APPC_IN_AAAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from APPC_IN_AAAA to APPC_IN_AAAA.




----------------------------------------

(107)
NO

----------------------------------------

(108)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U3_AG(X1, X2, X3, appcB_out_aa(X2, X4)) -> PERMA_IN_AG(X4, X3)
   PERMA_IN_AG(.(X1, X2), .(X1, X3)) -> U3_AG(X1, X2, X3, appcB_in_aa(X2, X4))
   PERMA_IN_AG(.(X1, X2), .(X3, X4)) -> U6_AG(X1, X2, X3, X4, appcC_in_aaaa(X5, X3, X6, X2))
   U6_AG(X1, X2, X3, X4, appcC_out_aaaa(X5, X3, X6, X2)) -> U8_AG(X1, X2, X3, X4, appcD_in_agaa(X1, X5, X6, X7))
   U8_AG(X1, X2, X3, X4, appcD_out_agaa(X1, X5, X6, X7)) -> PERMA_IN_AG(X7, X4)

The TRS R consists of the following rules:

   appcB_in_aa(X1, X1) -> appcB_out_aa(X1, X1)
   appcC_in_aaaa([], X1, X2, .(X1, X2)) -> appcC_out_aaaa([], X1, X2, .(X1, X2))
   appcC_in_aaaa(.(X1, X2), X3, X4, .(X1, X5)) -> U16_aaaa(X1, X2, X3, X4, X5, appcC_in_aaaa(X2, X3, X4, X5))
   U16_aaaa(X1, X2, X3, X4, X5, appcC_out_aaaa(X2, X3, X4, X5)) -> appcC_out_aaaa(.(X1, X2), X3, X4, .(X1, X5))
   appcD_in_agaa(X1, X2, X3, .(X1, X4)) -> U18_agaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   appcE_in_gaa([], X1, X1) -> appcE_out_gaa([], X1, X1)
   appcE_in_gaa(.(X1, X2), X3, .(X1, X4)) -> U17_gaa(X1, X2, X3, X4, appcE_in_gaa(X2, X3, X4))
   U17_gaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcE_out_gaa(.(X1, X2), X3, .(X1, X4))
   U18_agaa(X1, X2, X3, X4, appcE_out_gaa(X2, X3, X4)) -> appcD_out_agaa(X1, X2, X3, .(X1, X4))

The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

appcB_in_aa(x1, x2)  =  appcB_in_aa

appcB_out_aa(x1, x2)  =  appcB_out_aa

appcC_in_aaaa(x1, x2, x3, x4)  =  appcC_in_aaaa

appcC_out_aaaa(x1, x2, x3, x4)  =  appcC_out_aaaa(x1)

U16_aaaa(x1, x2, x3, x4, x5, x6)  =  U16_aaaa(x6)

appcD_in_agaa(x1, x2, x3, x4)  =  appcD_in_agaa(x2)

U18_agaa(x1, x2, x3, x4, x5)  =  U18_agaa(x2, x5)

appcE_in_gaa(x1, x2, x3)  =  appcE_in_gaa(x1)

[]  =  []

appcE_out_gaa(x1, x2, x3)  =  appcE_out_gaa(x1)

U17_gaa(x1, x2, x3, x4, x5)  =  U17_gaa(x2, x5)

appcD_out_agaa(x1, x2, x3, x4)  =  appcD_out_agaa(x2)

PERMA_IN_AG(x1, x2)  =  PERMA_IN_AG(x2)

U3_AG(x1, x2, x3, x4)  =  U3_AG(x3, x4)

U6_AG(x1, x2, x3, x4, x5)  =  U6_AG(x4, x5)

U8_AG(x1, x2, x3, x4, x5)  =  U8_AG(x4, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(109) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(110)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_AG(X3, appcB_out_aa) -> PERMA_IN_AG(X3)
   PERMA_IN_AG(.(X3)) -> U3_AG(X3, appcB_in_aa)
   PERMA_IN_AG(.(X4)) -> U6_AG(X4, appcC_in_aaaa)
   U6_AG(X4, appcC_out_aaaa(X5)) -> U8_AG(X4, appcD_in_agaa(X5))
   U8_AG(X4, appcD_out_agaa(X5)) -> PERMA_IN_AG(X4)

The TRS R consists of the following rules:

   appcB_in_aa -> appcB_out_aa
   appcC_in_aaaa -> appcC_out_aaaa([])
   appcC_in_aaaa -> U16_aaaa(appcC_in_aaaa)
   U16_aaaa(appcC_out_aaaa(X2)) -> appcC_out_aaaa(.(X2))
   appcD_in_agaa(X2) -> U18_agaa(X2, appcE_in_gaa(X2))
   appcE_in_gaa([]) -> appcE_out_gaa([])
   appcE_in_gaa(.(X2)) -> U17_gaa(X2, appcE_in_gaa(X2))
   U17_gaa(X2, appcE_out_gaa(X2)) -> appcE_out_gaa(.(X2))
   U18_agaa(X2, appcE_out_gaa(X2)) -> appcD_out_agaa(X2)

The set Q consists of the following terms:

   appcB_in_aa
   appcC_in_aaaa
   U16_aaaa(x0)
   appcD_in_agaa(x0)
   appcE_in_gaa(x0)
   U17_gaa(x0, x1)
   U18_agaa(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(111) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PERMA_IN_AG(.(X3)) -> U3_AG(X3, appcB_in_aa)
The graph contains the following edges 1 > 1


*PERMA_IN_AG(.(X4)) -> U6_AG(X4, appcC_in_aaaa)
The graph contains the following edges 1 > 1


*U3_AG(X3, appcB_out_aa) -> PERMA_IN_AG(X3)
The graph contains the following edges 1 >= 1


*U8_AG(X4, appcD_out_agaa(X5)) -> PERMA_IN_AG(X4)
The graph contains the following edges 1 >= 1


*U6_AG(X4, appcC_out_aaaa(X5)) -> U8_AG(X4, appcD_in_agaa(X5))
The graph contains the following edges 1 >= 1


----------------------------------------

(112)
YES

----------------------------------------

(113) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(perm ([]) ([]))",
                null
            ],
            [
                "(perm Xs (. X Ys))",
                "(',' (app X1s (. X X2s) Xs) (',' (app X1s X2s Zs) (perm Zs Ys)))"
            ],
            [
                "(app ([]) X X)",
                null
            ],
            [
                "(app (. X Xs) Ys (. X Zs))",
                "(app Xs Ys Zs)"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "27": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "28": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "29": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "290": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "291": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "292": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "295": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X53 (. T39 X54) T42)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T39"],
                    "free": [
                        "X53",
                        "X54"
                    ],
                    "exprvars": []
                }
            },
            "296": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "277": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "278": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T17 T18 X15) (perm X15 T11))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "336": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(app T17 T18 X15)"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(app T17 T18 X15)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "339": {
                "goal": [{
                    "clause": 2,
                    "scope": 3,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "281": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(app X13 (. T10 X14) T12)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app X13 (. T10 X14) T12)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "285": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "340": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "286": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(app X13 (. T10 X14) T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X13",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "341": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "342": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "343": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "322": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T17 T18 X15)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "344": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T66 T67 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(perm T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "345": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "324": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(perm T49 T11)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(perm T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T2"],
                    "free": [],
                    "exprvars": []
                }
            },
            "82": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app X13 (. T10 X14) T12) (',' (app X13 X14 X15) (perm X15 T11)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T10",
                        "T11"
                    ],
                    "free": [
                        "X13",
                        "X14",
                        "X15"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 6,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 27,
                "label": "EVAL with clause\nperm([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 6,
                "to": 28,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 7,
                "to": 82,
                "label": "EVAL with clause\nperm(X10, .(X11, X12)) :- ','(app(X13, .(X11, X14), X10), ','(app(X13, X14, X15), perm(X15, X12))).\nand substitutionT1 -> T12,\nX10 -> T12,\nX11 -> T10,\nX12 -> T11,\nT2 -> .(T10, T11),\nT9 -> T12"
            },
            {
                "from": 7,
                "to": 92,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 27,
                "to": 29,
                "label": "SUCCESS"
            },
            {
                "from": 82,
                "to": 277,
                "label": "SPLIT 1"
            },
            {
                "from": 82,
                "to": 278,
                "label": "SPLIT 2\nreplacements:X13 -> T17,\nX14 -> T18"
            },
            {
                "from": 277,
                "to": 281,
                "label": "CASE"
            },
            {
                "from": 278,
                "to": 322,
                "label": "SPLIT 1"
            },
            {
                "from": 278,
                "to": 324,
                "label": "SPLIT 2\nreplacements:X15 -> T49"
            },
            {
                "from": 281,
                "to": 285,
                "label": "PARALLEL"
            },
            {
                "from": 281,
                "to": 286,
                "label": "PARALLEL"
            },
            {
                "from": 285,
                "to": 290,
                "label": "EVAL with clause\napp([], X32, X32).\nand substitutionX13 -> [],\nT10 -> T31,\nX14 -> T32,\nX32 -> .(T31, T32),\nX33 -> T32,\nT12 -> .(T31, T32)"
            },
            {
                "from": 285,
                "to": 291,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 286,
                "to": 295,
                "label": "EVAL with clause\napp(.(X48, X49), X50, .(X48, X51)) :- app(X49, X50, X51).\nand substitutionX48 -> T40,\nX49 -> X53,\nX13 -> .(T40, X53),\nT10 -> T39,\nX14 -> X54,\nX50 -> .(T39, X54),\nX52 -> T40,\nX51 -> T42,\nT12 -> .(T40, T42),\nT41 -> T42"
            },
            {
                "from": 286,
                "to": 296,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 290,
                "to": 292,
                "label": "SUCCESS"
            },
            {
                "from": 295,
                "to": 277,
                "label": "INSTANCE with matching:\nX13 -> X53\nT10 -> T39\nX14 -> X54\nT12 -> T42"
            },
            {
                "from": 322,
                "to": 336,
                "label": "CASE"
            },
            {
                "from": 324,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T49\nT2 -> T11"
            },
            {
                "from": 336,
                "to": 339,
                "label": "PARALLEL"
            },
            {
                "from": 336,
                "to": 340,
                "label": "PARALLEL"
            },
            {
                "from": 339,
                "to": 341,
                "label": "EVAL with clause\napp([], X67, X67).\nand substitutionT17 -> [],\nT18 -> T56,\nX67 -> T56,\nX15 -> T56"
            },
            {
                "from": 339,
                "to": 342,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 340,
                "to": 344,
                "label": "EVAL with clause\napp(.(X78, X79), X80, .(X78, X81)) :- app(X79, X80, X81).\nand substitutionX78 -> T63,\nX79 -> T66,\nT17 -> .(T63, T66),\nT18 -> T67,\nX80 -> T67,\nX81 -> X82,\nX15 -> .(T63, X82),\nT64 -> T66,\nT65 -> T67"
            },
            {
                "from": 340,
                "to": 345,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 341,
                "to": 343,
                "label": "SUCCESS"
            },
            {
                "from": 344,
                "to": 322,
                "label": "INSTANCE with matching:\nT17 -> T66\nT18 -> T67\nX15 -> X82"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(114)
Complex Obligation (AND)

----------------------------------------

(115)
Obligation:
Rules:
f344_in -> f322_in :|: TRUE
f322_out -> f344_out :|: TRUE
f345_out -> f340_out :|: TRUE
f340_in -> f345_in :|: TRUE
f344_out -> f340_out :|: TRUE
f340_in -> f344_in :|: TRUE
f336_out -> f322_out :|: TRUE
f322_in -> f336_in :|: TRUE
f339_out -> f336_out :|: TRUE
f336_in -> f340_in :|: TRUE
f336_in -> f339_in :|: TRUE
f340_out -> f336_out :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x) -> f2_out(x) :|: TRUE
f4_in(x1) -> f6_in(x1) :|: TRUE
f7_out(x2) -> f4_out(x2) :|: TRUE
f6_out(x3) -> f4_out(x3) :|: TRUE
f4_in(x4) -> f7_in(x4) :|: TRUE
f7_in(.(T10, T11)) -> f82_in(T10, T11) :|: TRUE
f92_out -> f7_out(x5) :|: TRUE
f7_in(x6) -> f92_in :|: TRUE
f82_out(x7, x8) -> f7_out(.(x7, x8)) :|: TRUE
f277_out(x9) -> f278_in(x10) :|: TRUE
f82_in(x11, x12) -> f277_in(x11) :|: TRUE
f278_out(x13) -> f82_out(x14, x13) :|: TRUE
f322_out -> f324_in(x15) :|: TRUE
f278_in(x16) -> f322_in :|: TRUE
f324_out(x17) -> f278_out(x17) :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(116) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(117)
TRUE

----------------------------------------

(118)
Obligation:
Rules:
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_out(x) -> f295_out(x) :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f281_out(x1) -> f277_out(x1) :|: TRUE
f295_out(x2) -> f286_out(x2) :|: TRUE
f286_in(x3) -> f296_in :|: TRUE
f286_in(x4) -> f295_in(x4) :|: TRUE
f296_out -> f286_out(x5) :|: TRUE
f281_in(x6) -> f286_in(x6) :|: TRUE
f285_out(x7) -> f281_out(x7) :|: TRUE
f286_out(x8) -> f281_out(x8) :|: TRUE
f281_in(x9) -> f285_in(x9) :|: TRUE
f2_in(T2) -> f4_in(T2) :|: TRUE
f4_out(x10) -> f2_out(x10) :|: TRUE
f4_in(x11) -> f6_in(x11) :|: TRUE
f7_out(x12) -> f4_out(x12) :|: TRUE
f6_out(x13) -> f4_out(x13) :|: TRUE
f4_in(x14) -> f7_in(x14) :|: TRUE
f7_in(.(x15, x16)) -> f82_in(x15, x16) :|: TRUE
f92_out -> f7_out(x17) :|: TRUE
f7_in(x18) -> f92_in :|: TRUE
f82_out(x19, x20) -> f7_out(.(x19, x20)) :|: TRUE
f277_out(x21) -> f278_in(x22) :|: TRUE
f82_in(x23, x24) -> f277_in(x23) :|: TRUE
f278_out(x25) -> f82_out(x26, x25) :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(119) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f286_in(x4) -> f295_in(x4) :|: TRUE
f281_in(x6) -> f286_in(x6) :|: TRUE


----------------------------------------

(120)
Obligation:
Rules:
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f286_in(x4) -> f295_in(x4) :|: TRUE
f281_in(x6) -> f286_in(x6) :|: TRUE

----------------------------------------

(121) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(122)
Obligation:
Rules:
f286_in(x4:0) -> f286_in(x4:0) :|: TRUE

----------------------------------------

(123) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(124)
Obligation:
Rules:
f286_in(x4:0) -> f286_in(x4:0) :|: TRUE

----------------------------------------

(125) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f286_in(x4:0) -> f286_in(x4:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(126)
Obligation:

Termination digraph:
Nodes:
(1) f286_in(x4:0) -> f286_in(x4:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(127) FilterProof (EQUIVALENT)
Used the following sort dictionary for filtering: 
f286_in(VARIABLE)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(128)
Obligation:
Rules:
f286_in(x4:0) -> f286_in(x4:0) :|: TRUE

----------------------------------------

(129) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, x4:0) -> f(1, x4:0) :|: pc = 1 && TRUE
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and T)) and !(((run2_0 * 1)) = ((1 * 1)) and T))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and T))

----------------------------------------

(130)
NO

----------------------------------------

(131)
Obligation:
Rules:
f344_in -> f322_in :|: TRUE
f322_out -> f344_out :|: TRUE
f4_in(T2) -> f6_in(T2) :|: TRUE
f7_out(x) -> f4_out(x) :|: TRUE
f6_out(x1) -> f4_out(x1) :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f345_out -> f340_out :|: TRUE
f340_in -> f345_in :|: TRUE
f344_out -> f340_out :|: TRUE
f340_in -> f344_in :|: TRUE
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_out(x3) -> f295_out(x3) :|: TRUE
f336_out -> f322_out :|: TRUE
f322_in -> f336_in :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f281_out(x4) -> f277_out(x4) :|: TRUE
f322_out -> f324_in(T11) :|: TRUE
f278_in(x5) -> f322_in :|: TRUE
f324_out(x6) -> f278_out(x6) :|: TRUE
f281_in(x7) -> f286_in(x7) :|: TRUE
f285_out(x8) -> f281_out(x8) :|: TRUE
f286_out(x9) -> f281_out(x9) :|: TRUE
f281_in(x10) -> f285_in(x10) :|: TRUE
f2_out(x11) -> f324_out(x11) :|: TRUE
f324_in(x12) -> f2_in(x12) :|: TRUE
f7_in(.(x13, x14)) -> f82_in(x13, x14) :|: TRUE
f92_out -> f7_out(x15) :|: TRUE
f7_in(x16) -> f92_in :|: TRUE
f82_out(x17, x18) -> f7_out(.(x17, x18)) :|: TRUE
f285_in(T31) -> f290_in :|: TRUE
f285_in(x19) -> f291_in :|: TRUE
f291_out -> f285_out(x20) :|: TRUE
f290_out -> f285_out(x21) :|: TRUE
f341_in -> f341_out :|: TRUE
f295_out(x22) -> f286_out(x22) :|: TRUE
f286_in(x23) -> f296_in :|: TRUE
f286_in(x24) -> f295_in(x24) :|: TRUE
f296_out -> f286_out(x25) :|: TRUE
f2_in(x26) -> f4_in(x26) :|: TRUE
f4_out(x27) -> f2_out(x27) :|: TRUE
f277_out(x28) -> f278_in(x29) :|: TRUE
f82_in(x30, x31) -> f277_in(x30) :|: TRUE
f278_out(x32) -> f82_out(x33, x32) :|: TRUE
f339_in -> f341_in :|: TRUE
f341_out -> f339_out :|: TRUE
f342_out -> f339_out :|: TRUE
f339_in -> f342_in :|: TRUE
f290_in -> f290_out :|: TRUE
f339_out -> f336_out :|: TRUE
f336_in -> f340_in :|: TRUE
f336_in -> f339_in :|: TRUE
f340_out -> f336_out :|: TRUE
Start term: f2_in(T2)

----------------------------------------

(132) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f344_in -> f322_in :|: TRUE
f322_out -> f344_out :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f344_out -> f340_out :|: TRUE
f340_in -> f344_in :|: TRUE
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_out(x3) -> f295_out(x3) :|: TRUE
f336_out -> f322_out :|: TRUE
f322_in -> f336_in :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f281_out(x4) -> f277_out(x4) :|: TRUE
f322_out -> f324_in(T11) :|: TRUE
f278_in(x5) -> f322_in :|: TRUE
f281_in(x7) -> f286_in(x7) :|: TRUE
f285_out(x8) -> f281_out(x8) :|: TRUE
f286_out(x9) -> f281_out(x9) :|: TRUE
f281_in(x10) -> f285_in(x10) :|: TRUE
f324_in(x12) -> f2_in(x12) :|: TRUE
f7_in(.(x13, x14)) -> f82_in(x13, x14) :|: TRUE
f285_in(T31) -> f290_in :|: TRUE
f290_out -> f285_out(x21) :|: TRUE
f341_in -> f341_out :|: TRUE
f295_out(x22) -> f286_out(x22) :|: TRUE
f286_in(x24) -> f295_in(x24) :|: TRUE
f2_in(x26) -> f4_in(x26) :|: TRUE
f277_out(x28) -> f278_in(x29) :|: TRUE
f82_in(x30, x31) -> f277_in(x30) :|: TRUE
f339_in -> f341_in :|: TRUE
f341_out -> f339_out :|: TRUE
f290_in -> f290_out :|: TRUE
f339_out -> f336_out :|: TRUE
f336_in -> f340_in :|: TRUE
f336_in -> f339_in :|: TRUE
f340_out -> f336_out :|: TRUE


----------------------------------------

(133)
Obligation:
Rules:
f344_in -> f322_in :|: TRUE
f322_out -> f344_out :|: TRUE
f4_in(x2) -> f7_in(x2) :|: TRUE
f344_out -> f340_out :|: TRUE
f340_in -> f344_in :|: TRUE
f295_in(T39) -> f277_in(T39) :|: TRUE
f277_out(x3) -> f295_out(x3) :|: TRUE
f336_out -> f322_out :|: TRUE
f322_in -> f336_in :|: TRUE
f277_in(T10) -> f281_in(T10) :|: TRUE
f281_out(x4) -> f277_out(x4) :|: TRUE
f322_out -> f324_in(T11) :|: TRUE
f278_in(x5) -> f322_in :|: TRUE
f281_in(x7) -> f286_in(x7) :|: TRUE
f285_out(x8) -> f281_out(x8) :|: TRUE
f286_out(x9) -> f281_out(x9) :|: TRUE
f281_in(x10) -> f285_in(x10) :|: TRUE
f324_in(x12) -> f2_in(x12) :|: TRUE
f7_in(.(x13, x14)) -> f82_in(x13, x14) :|: TRUE
f285_in(T31) -> f290_in :|: TRUE
f290_out -> f285_out(x21) :|: TRUE
f341_in -> f341_out :|: TRUE
f295_out(x22) -> f286_out(x22) :|: TRUE
f286_in(x24) -> f295_in(x24) :|: TRUE
f2_in(x26) -> f4_in(x26) :|: TRUE
f277_out(x28) -> f278_in(x29) :|: TRUE
f82_in(x30, x31) -> f277_in(x30) :|: TRUE
f339_in -> f341_in :|: TRUE
f341_out -> f339_out :|: TRUE
f290_in -> f290_out :|: TRUE
f339_out -> f336_out :|: TRUE
f336_in -> f340_in :|: TRUE
f336_in -> f339_in :|: TRUE
f340_out -> f336_out :|: TRUE
