Input TRS:
    1: pred(s(x)) -> x
    2: minus(x,0()) -> x
    3: minus(x,s(y)) -> pred(minus(x,y))
    4: quot(0(),s(y)) -> 0()
    5: quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
    6: rand(x) ->= x
    7: rand(x) ->= rand(s(x))
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #quot(s(x),s(y)) -> #quot(minus(x,y),s(y))
   #2: #quot(s(x),s(y)) -> #minus(x,y)
   #3: #minus(x,s(y)) -> #pred(minus(x,y))
   #4: #minus(x,s(y)) -> #minus(x,y)
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: x1	status: [x1]	precedence above: #minus
 minus(x1,x2)	weight: max{0, x1}	status: x1
  pred(x1)	weight: x1	status: x1
  rand(x1)	weight: (/ 1 4) + x1	status: []	precedence above:
     0()	weight: (/ 1 4)	status: []	precedence above:
  quot(x1,x2)	weight: max{0, (/ 1 4) + x1}	status: [x1]	precedence above: s #minus
#minus(x1,x2)	weight: x2	status: [x2]	precedence above:
#pred(x1)	weight: x1	status: []	precedence above:
#quot(x1,x2)	weight: max{0, (/ 1 4) + x2}	status: [x2]	precedence above:
    Removed DPs: #4
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: x1	status: [x1]	precedence above: minus #minus
 minus(x1,x2)	weight: max{0, x1}	status: [x1]	precedence above:
  pred(x1)	weight: x1	status: x1
  rand(x1)	weight: (/ 1 4) + x1	status: []	precedence above:
     0()	weight: (/ 1 4)	status: []	precedence above:
  quot(x1,x2)	weight: max{0, (/ 1 4) + x1}	status: [x1]	precedence above: s minus #minus
#minus(x1,x2)	weight: x2	status: [x2]	precedence above:
#pred(x1)	weight: x1	status: []	precedence above:
#quot(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 2) + x1}	status: [x2,x1]	precedence above:
    Removed DPs: #1
Number of SCCs: 0, DPs: 0, edges: 0
