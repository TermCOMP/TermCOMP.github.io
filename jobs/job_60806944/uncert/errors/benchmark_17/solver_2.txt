Input TRS:
    1: minus(x,o()) -> x
    2: minus(s(x),s(y)) -> minus(x,y)
    3: div(0(),s(y)) -> 0()
    4: div(s(x),s(y)) -> s(div(minus(x,y),s(y)))
    5: divL(x,nil()) -> x
    6: divL(x,cons(y,xs)) -> divL(div(x,y),xs)
    7: divL(z,cons(x,cons(y,xs))) ->= divL(z,cons(y,cons(x,xs)))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #minus(s(x),s(y)) -> #minus(x,y)
   #2: #divL(x,cons(y,xs)) -> #divL(div(x,y),xs)
   #3: #divL(x,cons(y,xs)) -> #div(x,y)
   #4: #divL(z,cons(x,cons(y,xs))) ->? #divL(z,cons(y,cons(x,xs)))
   #5: #div(s(x),s(y)) -> #div(minus(x,y),s(y))
   #6: #div(s(x),s(y)) -> #minus(x,y)
Number of SCCs: 3, DPs: 4, edges: 6
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
   div(x1,x2)	weight: 0
     o()	weight: 0
     0()	weight: 0
   nil()	weight: 0
  divL(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
  cons(x1,x2)	weight: 0
#divL(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 3, edges: 5
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: x1
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: (/ 1 4) + x1
   div(x1,x2)	weight: 0
     o()	weight: 0
     0()	weight: 0
   nil()	weight: 0
  divL(x1,x2)	weight: 0
#minus(x1,x2)	weight: 0
  cons(x1,x2)	weight: 0
#divL(x1,x2)	weight: 0
    Usable rules: { 1 2 }
    Removed DPs: #5
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #2 #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: x1
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: (/ 1 4) + x1
   div(x1,x2)	weight: (/ 1 4)
     o()	weight: 0
     0()	weight: 0
   nil()	weight: 0
  divL(x1,x2)	weight: 0
#minus(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4) + x1 + x2
#divL(x1,x2)	weight: x2
    Usable rules: { 1..3 }
    Removed DPs: #2
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
