Input TRS:
    1: f(s(x),y) -> f(-(s(x),y),y)
    2: +(0(),y) ->= y
    3: +(s(x),y) ->= s(+(x,y))
    4: -(x,0()) ->= x
    5: -(0(),y) ->= 0()
    6: -(s(x),s(y)) ->= -(x,y)
    7: f(x,y) ->= f(x,+(x,y))
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #f(x,y) ->? #f(x,+(x,y))
   #2: #f(s(x),y) -> #f(-(s(x),y),y)
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #1 #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found duplicating loop.
  #f(x_{1},y)	-#1->
  #f(x_{1},+(x_{1},y))	--->*
  #f(x_{1},+(x_{1},y))
  Looping with: [ y := +(x_{1},y); x_{1} := x_{1}; ]
