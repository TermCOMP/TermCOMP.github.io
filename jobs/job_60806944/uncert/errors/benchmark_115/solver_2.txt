Input TRS:
    1: Tl(O(x),y) -> Wr(check(x),y)
    2: Tl(O(x),y) -> Wr(x,check(y))
    3: Tl(N(x),y) -> Wr(check(x),y)
    4: Tl(N(x),y) -> Wr(x,check(y))
    5: Tr(x,O(y)) -> Wl(check(x),y)
    6: Tr(x,O(y)) -> Wl(x,check(y))
    7: Tr(x,N(y)) -> Wl(check(x),y)
    8: Tr(x,N(y)) -> Wl(x,check(y))
    9: Tl(B(),y) -> Wr(check(B()),y)
    10: Tl(B(),y) -> Wr(B(),check(y))
    11: Tr(x,B()) -> Wl(check(x),B())
    12: Tr(x,B()) -> Wl(x,check(B()))
    13: Tl(O(x),y) ->= Wl(check(x),y)
    14: Tl(O(x),y) ->= Wl(x,check(y))
    15: Tl(N(x),y) ->= Wl(check(x),y)
    16: Tl(N(x),y) ->= Wl(x,check(y))
    17: Tr(x,O(y)) ->= Wr(check(x),y)
    18: Tr(x,O(y)) ->= Wr(x,check(y))
    19: Tr(x,N(y)) ->= Wr(check(x),y)
    20: Tr(x,N(y)) ->= Wr(x,check(y))
    21: B() ->= N(B())
    22: check(O(x)) ->= ok(O(x))
    23: Wl(ok(x),y) ->= Tl(x,y)
    24: Wl(x,ok(y)) ->= Tl(x,y)
    25: Wr(ok(x),y) ->= Tr(x,y)
    26: Wr(x,ok(y)) ->= Tr(x,y)
    27: check(O(x)) ->= O(check(x))
    28: check(N(x)) ->= N(check(x))
    29: O(ok(x)) ->= ok(O(x))
    30: N(ok(x)) ->= ok(N(x))
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... removes: 18 1 17 5 14 13 6 2
    Tl(x1,x2)	weight: (/ 1 4) + x1 + x2
     O(x1)	weight: (/ 127565 4) + x1
     B()	weight: 0
 check(x1)	weight: (/ 1 4) + x1
    ok(x1)	weight: (/ 1 4) + x1
    Tr(x1,x2)	weight: (/ 1 4) + x1 + x2
    Wr(x1,x2)	weight: x1 + x2
     N(x1)	weight: x1
    Wl(x1,x2)	weight: x1 + x2
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #Tl(B(),y) -> #Wr(check(B()),y)
   #2: #Tr(x,B()) -> #Wl(check(x),B())
   #3: #Wl(x,ok(y)) ->? #Tl(x,y)
   #4: #Wl(ok(x),y) ->? #Tl(x,y)
   #5: #Tr(x,B()) -> #Wl(x,check(B()))
   #6: #Wr(ok(x),y) ->? #Tr(x,y)
   #7: #Tr(x,N(y)) ->? #Wr(x,check(y))
   #8: #Tr(x,N(y)) -> #Wl(check(x),y)
   #9: #Tl(B(),y) -> #Wr(B(),check(y))
   #10: #Tr(x,N(y)) ->? #Wr(check(x),y)
   #11: #Wr(x,ok(y)) ->? #Tr(x,y)
   #12: #Tl(N(x),y) ->? #Wl(x,check(y))
   #13: #Tl(N(x),y) -> #Wr(check(x),y)
   #14: #Tr(x,N(y)) -> #Wl(x,check(y))
   #15: #Tl(N(x),y) ->? #Wl(check(x),y)
   #16: #Tl(N(x),y) -> #Wr(x,check(y))
Number of SCCs: 1, DPs: 16, edges: 48
	SCC { #1..16 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
  #Wr(x1,x2)	weight: max{0, (/ 1 8) + x1}
  #Tl(x1,x2)	weight: max{0, (/ 1 8) + x1}
    Tl(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
     O(x1)	weight: 0
     B()	weight: (/ 1 8)
 check(x1)	weight: 0
    ok(x1)	weight: x1
    Tr(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
    Wr(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
  #Wl(x1,x2)	weight: max{0, (/ 1 8) + x1}
     N(x1)	weight: x1
    Wl(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
  #Tr(x1,x2)	weight: max{0, (/ 1 8) + x1}
    Removed DPs: #1
Number of SCCs: 1, DPs: 15, edges: 44
	SCC { #2..16 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
  #Wr(x1,x2)	weight: max{0, (/ 1 8) + x2}
  #Tl(x1,x2)	weight: max{0, (/ 1 8) + x2}
    Tl(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
     O(x1)	weight: 0
     B()	weight: (/ 1 8)
 check(x1)	weight: 0
    ok(x1)	weight: x1
    Tr(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
    Wr(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
  #Wl(x1,x2)	weight: max{0, (/ 1 8) + x2}
     N(x1)	weight: x1
    Wl(x1,x2)	weight: max{(/ 3 8) + x2, (/ 1 8) + x1}
  #Tr(x1,x2)	weight: max{0, (/ 1 8) + x2}
    Removed DPs: #5
Number of SCCs: 1, DPs: 14, edges: 40
	SCC { #2..4 #6..16 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
