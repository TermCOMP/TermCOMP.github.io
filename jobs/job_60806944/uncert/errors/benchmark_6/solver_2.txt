Input TRS:
    1: minus1(x,0()) -> x
    2: minus1(s(x),s(y)) -> minus1(x,y)
    3: div1(0(),s(y)) -> 0()
    4: div1(s(x),s(y)) -> s(div1(minus1(x,y),s(y)))
    5: minus2(0(),x) -> x
    6: minus2(s(x),s(y)) -> minus2(x,y)
    7: div2(s(y),0()) -> 0()
    8: div2(s(x),s(y)) -> s(div2(s(x),minus2(x,y)))
    9: minus1(x,y) ->= minus2(y,x)
    10: minus2(x,y) ->= minus1(y,x)
    11: div1(x,y) ->= div2(y,x)
    12: div2(x,y) ->= div1(y,x)
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #minus1(s(x),s(y)) -> #minus1(x,y)
   #2: #minus2(s(x),s(y)) -> #minus2(x,y)
   #3: #minus1(x,y) ->? #minus2(y,x)
   #4: #div1(x,y) ->? #div2(y,x)
   #5: #div2(x,y) ->? #div1(y,x)
   #6: #minus2(x,y) ->? #minus1(y,x)
   #7: #div2(s(x),s(y)) -> #div2(s(x),minus2(x,y))
   #8: #div2(s(x),s(y)) -> #minus2(x,y)
   #9: #div1(s(x),s(y)) -> #div1(minus1(x,y),s(y))
   #10: #div1(s(x),s(y)) -> #minus1(x,y)
Number of SCCs: 2, DPs: 8, edges: 16
	SCC { #1..3 #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  div1(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#div1(x1,x2)	weight: 0
minus2(x1,x2)	weight: 0
#minus1(x1,x2)	weight: x2
     0()	weight: 0
minus1(x1,x2)	weight: 0
  div2(x1,x2)	weight: 0
#div2(x1,x2)	weight: 0
#minus2(x1,x2)	weight: x1
    Usable rules: { }
    Removed DPs: #1 #2
Number of SCCs: 2, DPs: 6, edges: 10
	SCC { #3 #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
