Input TRS:
    1: top(ok(U(x,y))) -> top(check(D(x,y)))
    2: D(x,B()) -> U(x,B())
    3: F(x,U(O(y),z)) -> U(x,F(y,z))
    4: F(x,U(N(y),z)) -> U(x,F(y,z))
    5: D(O(x),F(y,z)) -> F(x,D(y,z))
    6: D(N(x),F(y,z)) -> F(x,D(y,z))
    7: F(x,U(E(),y)) -> U(x,F(E(),y))
    8: D(E(),F(x,y)) -> F(E(),D(x,y))
    9: U(O(x),y) ->= U(x,y)
    10: U(N(x),y) ->= U(x,y)
    11: D(O(x),y) ->= D(x,y)
    12: D(N(x),y) ->= D(x,y)
    13: E() ->= N(E())
    14: check(O(x)) ->= ok(O(x))
    15: check(U(x,y)) ->= U(check(x),y)
    16: check(U(x,y)) ->= U(x,check(y))
    17: check(D(x,y)) ->= D(check(x),y)
    18: check(D(x,y)) ->= D(x,check(y))
    19: check(F(x,y)) ->= F(check(x),y)
    20: check(F(x,y)) ->= F(x,check(y))
    21: check(O(x)) ->= O(check(x))
    22: check(N(x)) ->= N(check(x))
    23: U(ok(x),y) ->= ok(U(x,y))
    24: U(x,ok(y)) ->= ok(U(x,y))
    25: D(ok(x),y) ->= ok(D(x,y))
    26: D(x,ok(y)) ->= ok(D(x,y))
    27: F(ok(x),y) ->= ok(F(x,y))
    28: F(x,ok(y)) ->= ok(F(x,y))
    29: O(ok(x)) ->= ok(O(x))
    30: N(ok(x)) ->= ok(N(x))
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... removes: 3 5 11 9
     F(x1,x2)	weight: (/ 138897 4) + x1 + x2
   top(x1)	weight: x1
     E()	weight: 0
     D(x1,x2)	weight: (/ 2361 4) + x1 + x2
     O(x1)	weight: (/ 1 4) + x1
     B()	weight: 0
 check(x1)	weight: (/ 1 4) + x1
    ok(x1)	weight: (/ 1 4) + x1
     N(x1)	weight: x1
     U(x1,x2)	weight: (/ 2361 4) + x1 + x2
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #D(N(x),F(y,z)) -> #F(x,D(y,z))
   #2: #D(N(x),F(y,z)) -> #D(y,z)
   #3: #D(N(x),y) ->? #D(x,y)
   #4: #D(ok(x),y) ->? #D(x,y)
   #5: #check(F(x,y)) ->? #F(x,check(y))
   #6: #check(F(x,y)) ->? #check(y)
   #7: #F(x,U(E(),y)) -> #F(E(),y)
   #8: #F(x,ok(y)) ->? #F(x,y)
   #9: #check(N(x)) ->? #check(x)
   #10: #F(ok(x),y) ->? #F(x,y)
   #11: #check(D(x,y)) ->? #D(check(x),y)
   #12: #check(D(x,y)) ->? #check(x)
   #13: #check(F(x,y)) ->? #F(check(x),y)
   #14: #check(F(x,y)) ->? #check(x)
   #15: #D(x,ok(y)) ->? #D(x,y)
   #16: #check(O(x)) ->? #check(x)
   #17: #check(U(x,y)) ->? #check(y)
   #18: #top(ok(U(x,y))) -> #top(check(D(x,y)))
   #19: #top(ok(U(x,y))) -> #check(D(x,y))
   #20: #top(ok(U(x,y))) -> #D(x,y)
   #21: #D(E(),F(x,y)) -> #F(E(),D(x,y))
   #22: #D(E(),F(x,y)) -> #D(x,y)
   #23: #check(U(x,y)) ->? #check(x)
   #24: #F(x,U(N(y),z)) -> #F(y,z)
   #25: #check(D(x,y)) ->? #D(x,check(y))
   #26: #check(D(x,y)) ->? #check(y)
Number of SCCs: 4, DPs: 18, edges: 106
	SCC { #18 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
