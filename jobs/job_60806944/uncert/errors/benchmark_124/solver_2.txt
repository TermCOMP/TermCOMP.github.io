Input TRS:
    1: R(x,RT()) -> RT()
    2: W(x,WT()) -> WT()
    3: RB() ->= R(New(),RB())
    4: WB() ->= W(New(),WB())
    5: top(ok(sys(read(r1,R(t,r2)),write(WT(),WB()),p))) ->= top(check(sys(read(R(t,r1),r2),write(WT(),WB()),p)))
    6: top(ok(sys(read(RT(),RB()),write(WT(),W(t,w1)),p))) ->= top(check(sys(read(RT(),RB()),write(W(t,WT()),w1),p)))
    7: top(ok(sys(read(r1,R(t,r2)),write(WT(),w1),PR()))) ->= top(check(sys(read(R(t,r1),r2),write(WT(),w1),PW())))
    8: top(ok(sys(read(RT(),r2),write(WT(),W(t,w1)),PW()))) ->= top(check(sys(read(RT(),r2),write(W(t,WT()),w1),PR())))
    9: check(Old()) ->= ok(Old())
    10: check(R(x,y)) ->= R(check(x),y)
    11: check(R(x,y)) ->= R(x,check(y))
    12: check(W(x,y)) ->= W(check(x),y)
    13: check(W(x,y)) ->= W(x,check(y))
    14: check(read(x,y)) ->= read(check(x),y)
    15: check(read(x,y)) ->= read(x,check(y))
    16: check(write(x,y)) ->= write(check(x),y)
    17: check(write(x,y)) ->= write(x,check(y))
    18: check(sys(x,y,z)) ->= sys(check(x),y,z)
    19: check(sys(x,y,z)) ->= sys(x,check(y),z)
    20: check(sys(x,y,z)) ->= sys(x,y,check(z))
    21: R(ok(x),y) ->= ok(R(x,y))
    22: R(x,ok(y)) ->= ok(R(x,y))
    23: W(ok(x),y) ->= ok(W(x,y))
    24: W(x,ok(y)) ->= ok(W(x,y))
    25: read(ok(x),y) ->= ok(read(x,y))
    26: read(x,ok(y)) ->= ok(read(x,y))
    27: write(ok(x),y) ->= ok(write(x,y))
    28: write(x,ok(y)) ->= ok(write(x,y))
    29: sys(ok(x),y,z) ->= ok(sys(x,y,z))
    30: sys(x,ok(y),z) ->= ok(sys(x,y,z))
    31: sys(x,y,ok(z)) ->= ok(sys(x,y,z))
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #top(ok(sys(read(RT(),RB()),write(WT(),W(t,w1)),p))) ->? #top(check(sys(read(RT(),RB()),write(W(t,WT()),w1),p)))
   #2: #top(ok(sys(read(RT(),RB()),write(WT(),W(t,w1)),p))) ->? #check(sys(read(RT(),RB()),write(W(t,WT()),w1),p))
   #3: #top(ok(sys(read(RT(),RB()),write(WT(),W(t,w1)),p))) ->? #W(t,WT())
   #4: #check(W(x,y)) ->? #W(x,check(y))
   #5: #check(W(x,y)) ->? #check(y)
   #6: #check(R(x,y)) ->? #R(x,check(y))
   #7: #check(R(x,y)) ->? #check(y)
   #8: #W(x,ok(y)) ->? #W(x,y)
   #9: #W(ok(x),y) ->? #W(x,y)
   #10: #check(W(x,y)) ->? #W(check(x),y)
   #11: #check(W(x,y)) ->? #check(x)
   #12: #check(read(x,y)) ->? #check(x)
   #13: #check(sys(x,y,z)) ->? #check(z)
   #14: #top(ok(sys(read(r1,R(t,r2)),write(WT(),w1),PR()))) ->? #top(check(sys(read(R(t,r1),r2),write(WT(),w1),PW())))
   #15: #top(ok(sys(read(r1,R(t,r2)),write(WT(),w1),PR()))) ->? #check(sys(read(R(t,r1),r2),write(WT(),w1),PW()))
   #16: #top(ok(sys(read(r1,R(t,r2)),write(WT(),w1),PR()))) ->? #R(t,r1)
   #17: #check(R(x,y)) ->? #R(check(x),y)
   #18: #check(R(x,y)) ->? #check(x)
   #19: #top(ok(sys(read(r1,R(t,r2)),write(WT(),WB()),p))) ->? #top(check(sys(read(R(t,r1),r2),write(WT(),WB()),p)))
   #20: #top(ok(sys(read(r1,R(t,r2)),write(WT(),WB()),p))) ->? #check(sys(read(R(t,r1),r2),write(WT(),WB()),p))
   #21: #top(ok(sys(read(r1,R(t,r2)),write(WT(),WB()),p))) ->? #R(t,r1)
   #22: #R(x,ok(y)) ->? #R(x,y)
   #23: #check(write(x,y)) ->? #check(y)
   #24: #check(sys(x,y,z)) ->? #check(y)
   #25: #R(ok(x),y) ->? #R(x,y)
   #26: #check(write(x,y)) ->? #check(x)
   #27: #RB() ->? #R(New(),RB())
   #28: #RB() ->? #RB()
   #29: #top(ok(sys(read(RT(),r2),write(WT(),W(t,w1)),PW()))) ->? #top(check(sys(read(RT(),r2),write(W(t,WT()),w1),PR())))
   #30: #top(ok(sys(read(RT(),r2),write(WT(),W(t,w1)),PW()))) ->? #check(sys(read(RT(),r2),write(W(t,WT()),w1),PR()))
   #31: #top(ok(sys(read(RT(),r2),write(WT(),W(t,w1)),PW()))) ->? #W(t,WT())
   #32: #check(read(x,y)) ->? #check(y)
   #33: #WB() ->? #W(New(),WB())
   #34: #WB() ->? #WB()
   #35: #check(sys(x,y,z)) ->? #check(x)
Number of SCCs: 6, DPs: 21, edges: 147
	SCC { #28 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
