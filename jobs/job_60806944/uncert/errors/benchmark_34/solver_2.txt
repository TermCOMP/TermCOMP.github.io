Input TRS:
    1: minus(x,0()) -> x
    2: minus(s(x),s(y)) -> minus(x,y)
    3: double(0()) -> 0()
    4: double(s(x)) -> s(s(double(x)))
    5: plus(0(),y) -> y
    6: plus(s(x),y) -> s(plus(x,y))
    7: plus(s(x),y) -> plus(x,s(y))
    8: plus(s(x),y) -> s(plus(minus(x,y),double(y)))
    9: rand(x) ->= x
    10: rand(x) ->= rand(s(x))
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #minus(s(x),s(y)) -> #minus(x,y)
   #2: #plus(s(x),y) -> #plus(x,y)
   #3: #plus(s(x),y) -> #plus(x,s(y))
   #4: #plus(s(x),y) -> #plus(minus(x,y),double(y))
   #5: #plus(s(x),y) -> #minus(x,y)
   #6: #plus(s(x),y) -> #double(y)
   #7: #double(s(x)) -> #double(x)
Number of SCCs: 3, DPs: 5, edges: 11
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: x1	status: [x1]	precedence above: minus
 minus(x1,x2)	weight: max{0, x1}	status: [x1]	precedence above:
#plus(x1,x2)	weight: max{0, x2}	status: []	precedence above:
  rand(x1)	weight: (/ 1 2) + x1	status: []	precedence above:
     0()	weight: (/ 1 2)	status: []	precedence above:
#double(x1)	weight: x1	status: [x1]	precedence above:
double(x1)	weight: x1	status: [x1]	precedence above: s minus 0
#minus(x1,x2)	weight: (/ 1 2) + x2 + x1	status: [x1,x2]	precedence above:
  plus(x1,x2)	weight: max{x2, x1}	status: [x1,x2]	precedence above: s minus 0 double
    Removed DPs: #7
Number of SCCs: 2, DPs: 4, edges: 10
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: x1	status: [x1]	precedence above: minus
 minus(x1,x2)	weight: max{0, x1}	status: [x1]	precedence above:
#plus(x1,x2)	weight: max{0, x2}	status: []	precedence above:
  rand(x1)	weight: (/ 1 2) + x1	status: []	precedence above:
     0()	weight: (/ 1 2)	status: []	precedence above:
#double(x1)	weight: x1	status: [x1]	precedence above:
double(x1)	weight: x1	status: [x1]	precedence above: s minus 0
#minus(x1,x2)	weight: x1	status: x1
  plus(x1,x2)	weight: max{x2, x1}	status: [x1,x2]	precedence above: s minus 0 double
    Removed DPs: #1
Number of SCCs: 1, DPs: 3, edges: 9
	SCC { #2..4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... succeeded.
     s(x1)	weight: x1	status: [x1]	precedence above: minus #plus
 minus(x1,x2)	weight: max{0, x1}	status: [x1]	precedence above:
#plus(x1,x2)	weight: max{0, x1}	status: [x1]	precedence above:
  rand(x1)	weight: (/ 1 2) + x1	status: []	precedence above:
     0()	weight: (/ 1 2)	status: []	precedence above:
#double(x1)	weight: x1	status: [x1]	precedence above:
double(x1)	weight: x1	status: [x1]	precedence above: s minus #plus 0
#minus(x1,x2)	weight: x1	status: x1
  plus(x1,x2)	weight: max{x2, x1}	status: [x1,x2]	precedence above: s minus #plus 0 double
    Removed DPs: #2..4
Number of SCCs: 0, DPs: 0, edges: 0
