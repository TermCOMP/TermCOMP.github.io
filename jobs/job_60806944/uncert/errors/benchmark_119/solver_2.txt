Input TRS:
    1: top(U(x,y)) -> top(check(D(x,y)))
    2: D(x,B()) -> U(x,B())
    3: F(x,U(O(y),z)) -> U(x,F(y,z))
    4: F(x,U(N(y),z)) -> U(x,F(y,z))
    5: D(O(x),F(y,z)) -> F(x,D(y,z))
    6: D(N(x),F(y,z)) -> F(x,D(y,z))
    7: F(x,U(E(),y)) -> U(x,F(E(),y))
    8: D(E(),F(x,y)) -> F(E(),D(x,y))
    9: E() ->= N(E())
    10: check(O(x)) ->= O(x)
    11: check(U(x,y)) ->= U(check(x),y)
    12: check(U(x,y)) ->= U(x,check(y))
    13: check(D(x,y)) ->= D(check(x),y)
    14: check(D(x,y)) ->= D(x,check(y))
    15: check(F(x,y)) ->= F(check(x),y)
    16: check(F(x,y)) ->= F(x,check(y))
    17: check(O(x)) ->= O(check(x))
    18: check(N(x)) ->= N(check(x))
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... removes: 3 5
     F(x1,x2)	weight: (/ 1 8) + x1 + 2 * x2
   top(x1)	weight: x1
     E()	weight: 0
     D(x1,x2)	weight: (/ 1 8) + x1 + 2 * x2
     O(x1)	weight: (/ 188889 8) + 2 * x1
     B()	weight: 0
 check(x1)	weight: x1
     N(x1)	weight: x1
     U(x1,x2)	weight: (/ 1 8) + x1 + 2 * x2
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #D(N(x),F(y,z)) -> #F(x,D(y,z))
   #2: #D(N(x),F(y,z)) -> #D(y,z)
   #3: #check(D(x,y)) ->? #D(check(x),y)
   #4: #check(D(x,y)) ->? #check(x)
   #5: #check(U(x,y)) ->? #check(x)
   #6: #check(U(x,y)) ->? #check(y)
   #7: #check(D(x,y)) ->? #D(x,check(y))
   #8: #check(D(x,y)) ->? #check(y)
   #9: #F(x,U(E(),y)) -> #F(E(),y)
   #10: #check(O(x)) ->? #check(x)
   #11: #check(F(x,y)) ->? #F(x,check(y))
   #12: #check(F(x,y)) ->? #check(y)
   #13: #top(U(x,y)) -> #top(check(D(x,y)))
   #14: #top(U(x,y)) -> #check(D(x,y))
   #15: #top(U(x,y)) -> #D(x,y)
   #16: #D(E(),F(x,y)) -> #F(E(),D(x,y))
   #17: #D(E(),F(x,y)) -> #D(x,y)
   #18: #check(F(x,y)) ->? #F(check(x),y)
   #19: #check(F(x,y)) ->? #check(x)
   #20: #F(x,U(N(y),z)) -> #F(y,z)
   #21: #check(N(x)) ->? #check(x)
Number of SCCs: 4, DPs: 13, edges: 73
	SCC { #13 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #top(U(x_{i5},B()))	-#13->
  #top(check(D(x_{i5},B())))	--->*
  #top(U(check(x_{i5}),B()))
  Looping with: [ x_{i5} := check(x_{i5}); ]
