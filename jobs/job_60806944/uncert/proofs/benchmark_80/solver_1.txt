YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/cTuhR.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given RelTRS could be proven:

(0) RelTRS
(1) RelTRStoRelADPProof [EQUIVALENT, 0 ms]
(2) RelADPP
(3) RelADPDepGraphProof [EQUIVALENT, 0 ms]
(4) TRUE


----------------------------------------

(0)
Obligation:
Relative term rewrite system:
The relative TRS consists of the following R rules:

   f(x, 0) -> s(x)
   g(x) -> h(x, gen)
   h(0, x) -> f(x, x)
   a -> b

The relative TRS consists of the following S rules:

   gen -> s(gen)


----------------------------------------

(1) RelTRStoRelADPProof (EQUIVALENT)


We upgrade the RelTRS problem to an equivalent Relative ADP Problem [IJCAR24].

----------------------------------------

(2)
Obligation:
Relative ADP Problem with
absolute ADPs:

   f(x, 0) -> s(x)
   g(x) -> H(x, gen)
   g(x) -> h(x, GEN)
   h(0, x) -> F(x, x)
   a -> b

and relative ADPs:

   gen -> s(GEN)


----------------------------------------

(3) RelADPDepGraphProof (EQUIVALENT)


We use the relative dependency graph processor [IJCAR24].
The approximation of the Relative Dependency Graph contains:
  0 SCCs with nodes from P_abs,
  0 Lassos,
Result: This relative DT problem is equivalent to 0 subproblems.

----------------------------------------

(4)
TRUE
