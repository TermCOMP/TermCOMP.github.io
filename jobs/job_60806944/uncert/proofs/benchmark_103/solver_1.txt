YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/dsu3N.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given RelTRS could be proven:

(0) RelTRS
(1) RelTRStoRelADPProof [EQUIVALENT, 0 ms]
(2) RelADPP
(3) RelADPReductionPairProof [EQUIVALENT, 47 ms]
(4) RelADPP
(5) DAbsisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Relative term rewrite system:
The relative TRS consists of the following R rules:

   f(f(x)) -> x

The relative TRS consists of the following S rules:

   f(x) -> g(f(g(f(x))))


----------------------------------------

(1) RelTRStoRelADPProof (EQUIVALENT)


We upgrade the RelTRS problem to an equivalent Relative ADP Problem [IJCAR24].

----------------------------------------

(2)
Obligation:
Relative ADP Problem with
absolute ADPs:

   f(f(x)) -> x

and relative ADPs:

   f(x) -> g(F(g(F(x))))


----------------------------------------

(3) RelADPReductionPairProof (EQUIVALENT)


We use the reduction pair processor [IJCAR24].
The following rules can be oriented strictly (l^# > ann(r)) 
and therefore we can remove all of its annotations in the right-hand side:
Absolute ADPs:

   f(f(x)) -> x


The remaining rules can at least be oriented weakly:

Ordered with Polynomial interpretation [POLO]:

   POL(F(x_1)) = x_1
   POL(f(x_1)) = 1 + x_1
   POL(g(x_1)) = 0

----------------------------------------

(4)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   f(f(x)) -> x
   f(x) -> g(F(g(F(x))))


----------------------------------------

(5) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(6)
YES
