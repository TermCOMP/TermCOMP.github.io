Input TRS:
    AC symbols: plus times
    1: 0(S()) -> S()
    2: plus(S(),x) -> x
    3: plus(0(x),0(y)) -> 0(plus(x,y))
    4: plus(0(x),1(y)) -> 1(plus(x,y))
    5: plus(0(x),j(y)) -> j(plus(x,y))
    6: plus(1(x),1(y)) -> j(plus(1(S()),plus(x,y)))
    7: plus(j(x),j(y)) -> 1(plus(j(S()),plus(x,y)))
    8: plus(1(x),j(y)) -> 0(plus(x,y))
    9: opp(S()) -> S()
    10: opp(0(x)) -> 0(opp(x))
    11: opp(1(x)) -> j(opp(x))
    12: opp(j(x)) -> 1(opp(x))
    13: minus(x,y) -> plus(opp(y),x)
    14: times(S(),x) -> S()
    15: times(0(x),y) -> 0(times(x,y))
    16: times(1(x),y) -> plus(0(times(x,y)),y)
    17: times(j(x),y) -> minus(0(times(x,y)),y)
Number of strict rules: 17
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #plus(1(x),1(y)) -> #plus(1(S()),plus(x,y))
   #2: #plus(1(x),1(y)) -> #plus(x,y)
   #3: #minus(x,y) -> #plus(opp(y),x)
   #4: #minus(x,y) -> #opp(y)
   #5: #opp(1(x)) -> #opp(x)
   #6: #opp(j(x)) -> #opp(x)
   #7: #plus(j(x),j(y)) -> #plus(j(S()),plus(x,y))
   #8: #plus(j(x),j(y)) -> #plus(x,y)
   #9: #opp(0(x)) -> #0(opp(x))
   #10: #opp(0(x)) -> #opp(x)
   #11: #plus(0(x),j(y)) -> #plus(x,y)
   #12: #times(j(x),y) -> #minus(0(times(x,y)),y)
   #13: #times(j(x),y) -> #0(times(x,y))
   #14: #times(j(x),y) -> #times(x,y)
   #15: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #16: #times(x,times(y,z)) ->= #times(x,y)
   #17: #times(1(x),y) -> #plus(0(times(x,y)),y)
   #18: #times(1(x),y) -> #0(times(x,y))
   #19: #times(1(x),y) -> #times(x,y)
   #20: #plus(0(x),0(y)) -> #0(plus(x,y))
   #21: #plus(0(x),0(y)) -> #plus(x,y)
   #22: #plus(1(x),j(y)) -> #0(plus(x,y))
   #23: #plus(1(x),j(y)) -> #plus(x,y)
   #24: #times(0(x),y) -> #0(times(x,y))
   #25: #times(0(x),y) -> #times(x,y)
   #26: #plus(0(x),1(y)) -> #plus(x,y)
   #27: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #28: #plus(x,plus(y,z)) ->= #plus(x,y)
Number of SCCs: 3, DPs: 18, edges: 134
	SCC { #5 #6 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: (/ 1 2) + x1
     S()	weight: 0
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 #opp(x1)	weight: x1
#times(x1,x2)	weight: 0
     0(x1)	weight: (/ 1 2) + x1
 times(x1,x2)	weight: 0
     j(x1)	weight: (/ 1 2) + x1
#minus(x1,x2)	weight: 0
   opp(x1)	weight: 0
  plus(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5 #6 #10
Number of SCCs: 2, DPs: 15, edges: 125
	SCC { #14..16 #19 #25 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: max{0, x1}
     S()	weight: (/ 1 2)
 minus(x1,x2)	weight: max{0, x1, (/ 1 2) + x2}
#plus(x1,x2)	weight: 0
 #opp(x1)	weight: 0
#times(x1,x2)	weight: x1 + x2
     0(x1)	weight: max{0, x1}
 times(x1,x2)	weight: (/ 1 2) + x1 + x2
     j(x1)	weight: max{0, x1}
#minus(x1,x2)	weight: 0
   opp(x1)	weight: (max (/ 1 2) 0)
  plus(x1,x2)	weight: max{(/ 1 2), max{x2, x1}}
    Usable rules: { 1..19 }
    Removed DPs: #16
Number of SCCs: 2, DPs: 14, edges: 116
	SCC { #14 #15 #19 #25 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
