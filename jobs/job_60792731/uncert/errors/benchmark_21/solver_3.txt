Input TRS:
    AC symbols: plus times
    1: zero(0()) -> 0()
    2: plus(x,0()) -> x
    3: plus(zero(x),zero(y)) -> zero(plus(x,y))
    4: plus(zero(x),un(y)) -> un(plus(x,y))
    5: plus(zero(x),j(y)) -> j(plus(x,y))
    6: plus(un(x),j(y)) -> zero(plus(x,y))
    7: plus(un(x),un(y)) -> j(plus(x,plus(y,un(0()))))
    8: plus(j(x),j(y)) -> un(plus(x,plus(y,j(0()))))
    9: minus(x,y) -> plus(x,neg(y))
    10: neg(0()) -> 0()
    11: neg(zero(x)) -> zero(neg(x))
    12: neg(un(x)) -> j(neg(x))
    13: neg(j(x)) -> un(neg(x))
    14: times(x,0()) -> 0()
    15: times(x,times(0(),z)) -> times(0(),z)
    16: times(x,zero(y)) -> zero(times(x,y))
    17: times(x,times(zero(y),z)) -> times(zero(times(x,y)),z)
    18: times(x,un(y)) -> plus(x,zero(times(x,y)))
    19: times(x,times(un(y),z)) -> times(plus(x,zero(times(x,y))),z)
    20: times(x,j(y)) -> plus(zero(times(x,y)),neg(x))
    21: times(x,times(j(y),z)) -> times(plus(zero(times(x,y)),neg(x)),z)
Number of strict rules: 21
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #plus(un(x),j(y)) -> #zero(plus(x,y))
   #2: #plus(un(x),j(y)) -> #plus(x,y)
   #3: #neg(j(x)) -> #neg(x)
   #4: #minus(x,y) -> #plus(x,neg(y))
   #5: #minus(x,y) -> #neg(y)
   #6: #neg(zero(x)) -> #zero(neg(x))
   #7: #neg(zero(x)) -> #neg(x)
   #8: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #9: #times(x,times(y,z)) ->= #times(x,y)
   #10: #neg(un(x)) -> #neg(x)
   #11: #times(x,j(y)) -> #plus(zero(times(x,y)),neg(x))
   #12: #times(x,j(y)) -> #zero(times(x,y))
   #13: #times(x,j(y)) -> #times(x,y)
   #14: #times(x,j(y)) -> #neg(x)
   #15: #plus(un(x),un(y)) -> #plus(x,plus(y,un(0())))
   #16: #plus(un(x),un(y)) -> #plus(y,un(0()))
   #17: #plus(zero(x),j(y)) -> #plus(x,y)
   #18: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #19: #plus(x,plus(y,z)) ->= #plus(x,y)
   #20: #times(x,times(zero(y),z)) -> #times(zero(times(x,y)),z)
   #21: #times(x,times(zero(y),z)) -> #zero(times(x,y))
   #22: #times(x,times(zero(y),z)) -> #times(x,y)
   #23: #times(x,times(un(y),z)) -> #times(plus(x,zero(times(x,y))),z)
   #24: #times(x,times(un(y),z)) -> #plus(x,zero(times(x,y)))
   #25: #times(x,times(un(y),z)) -> #zero(times(x,y))
   #26: #times(x,times(un(y),z)) -> #times(x,y)
   #27: #times(x,times(j(y),z)) -> #times(plus(zero(times(x,y)),neg(x)),z)
   #28: #times(x,times(j(y),z)) -> #plus(zero(times(x,y)),neg(x))
   #29: #times(x,times(j(y),z)) -> #zero(times(x,y))
   #30: #times(x,times(j(y),z)) -> #times(x,y)
   #31: #times(x,times(j(y),z)) -> #neg(x)
   #32: #times(x,zero(y)) -> #zero(times(x,y))
   #33: #times(x,zero(y)) -> #times(x,y)
   #34: #plus(zero(x),zero(y)) -> #zero(plus(x,y))
   #35: #plus(zero(x),zero(y)) -> #plus(x,y)
   #36: #plus(j(x),j(y)) -> #plus(x,plus(y,j(0())))
   #37: #plus(j(x),j(y)) -> #plus(y,j(0()))
   #38: #plus(zero(x),un(y)) -> #plus(x,y)
   #39: #times(x,un(y)) -> #plus(x,zero(times(x,y)))
   #40: #times(x,un(y)) -> #zero(times(x,y))
   #41: #times(x,un(y)) -> #times(x,y)
Number of SCCs: 3, DPs: 24, edges: 230
	SCC { #3 #7 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
   neg(x1)	weight: 0
     j(x1)	weight: (/ 1 2) + x1
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
 #neg(x1)	weight: x1
#zero(x1)	weight: 0
    un(x1)	weight: (/ 1 2) + x1
    Usable rules: { }
    Removed DPs: #3 #7 #10
Number of SCCs: 2, DPs: 21, edges: 221
	SCC { #2 #15..19 #35..38 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1 + x2
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
   neg(x1)	weight: 0
     j(x1)	weight: (/ 1 4) + x1
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: x1 + x2
 #neg(x1)	weight: 0
#zero(x1)	weight: 0
    un(x1)	weight: (/ 1 4) + x1
    Usable rules: { 1..8 22 }
    Removed DPs: #2 #15..17 #35..38
Number of SCCs: 2, DPs: 13, edges: 125
	SCC { #18 #19 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 13, edges: 125
	SCC { #8 #9 #13 #20 #22 #23 #26 #27 #30 #33 #41 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
  zero(x1)	weight: max{0, x1}
 minus(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
#times(x1,x2)	weight: x1 + x2
     0()	weight: (/ 1 4)
 times(x1,x2)	weight: (/ 1 4) + x1 + x2
   neg(x1)	weight: max{0, (/ 1 4) + x1}
     j(x1)	weight: max{0, x1}
#minus(x1,x2)	weight: 0
  plus(x1,x2)	weight: max{(/ 1 4), max{x2, x1}}
 #neg(x1)	weight: 0
#zero(x1)	weight: 0
    un(x1)	weight: max{0, x1}
    Usable rules: { 1..8 10..23 }
    Removed DPs: #9 #22 #26 #30
Number of SCCs: 2, DPs: 9, edges: 53
	SCC { #8 #13 #20 #23 #27 #33 #41 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
