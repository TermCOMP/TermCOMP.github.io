Input TRS:
    AC symbols: or and
    C symbols: eq neq
    1: eq(x,x) -> true()
    2: not(eq(x,y)) -> neq(x,y)
    3: not(neq(x,y)) -> eq(x,y)
    4: not(true()) -> false()
    5: not(false()) -> true()
    6: not(not(x)) -> x
    7: not(and(x,y)) -> or(not(x),not(y))
    8: not(or(x,y)) -> and(not(x),not(y))
    9: neq(x,x) -> false()
    10: or(and(x,y),z) -> and(or(x,z),or(y,z))
    11: or(x,x) -> x
    12: or(x,true()) -> true()
    13: or(x,false()) -> x
    14: and(x,x) -> x
    15: and(x,true()) -> x
    16: and(x,false()) -> false()
    17: and(x,or(x,y)) -> x
Number of strict rules: 17
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #not(eq(x,y)) -> #neq(x,y)
   #2: #not(and(x,y)) -> #or(not(x),not(y))
   #3: #not(and(x,y)) -> #not(x)
   #4: #not(and(x,y)) -> #not(y)
   #5: #or(and(x,y),z) -> #and(or(x,z),or(y,z))
   #6: #or(and(x,y),z) -> #or(x,z)
   #7: #or(and(x,y),z) -> #or(y,z)
   #8: #and(x,and(y,z)) ->= #and(and(x,y),z)
   #9: #and(x,and(y,z)) ->= #and(x,y)
   #10: #not(neq(x,y)) -> #eq(x,y)
   #11: #not(or(x,y)) -> #and(not(x),not(y))
   #12: #not(or(x,y)) -> #not(x)
   #13: #not(or(x,y)) -> #not(y)
   #14: #or(x,or(y,z)) ->= #or(or(x,y),z)
   #15: #or(x,or(y,z)) ->= #or(x,y)
Number of SCCs: 3, DPs: 10, edges: 36
	SCC { #8 #9 }
Removing DPs: only weak rules.
Number of SCCs: 2, DPs: 10, edges: 36
	SCC { #3 #4 #12 #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   neq(x1,x2)	weight: 0
   and(x1,x2)	weight: (/ 1 2) + x1 + x2
    eq(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  #eq(x1,x2)	weight: 0
 #not(x1)	weight: x1
 #neq(x1,x2)	weight: 0
    or(x1,x2)	weight: (/ 1 2) + x1 + x2
  #or(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
   not(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #4 #12 #13
Number of SCCs: 1, DPs: 6, edges: 20
	SCC { #6 #7 #14 #15 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
   neq(x1,x2)	status: {}	precedence above:
   and(x1,x2)	status: {x1,x2}	precedence above: false
    eq(x1,x2)	status: {}	precedence above:
 false()	status: []	precedence above:
  true()	status: []	precedence above:
  #eq(x1,x2)	status: {}	precedence above:
 #not(x1)	status: []	precedence above:
 #neq(x1,x2)	status: {}	precedence above:
    or(x1,x2)	status: {x1,x2}	precedence above: and false true
  #or(x1,x2)	status: {x1,x2}	precedence above: and false true or
 #and(x1,x2)	status: {}	precedence above:
   not(x1)	status: []	precedence above:
    Usable rules: { 10..19 }
    Removed DPs: #6 #7 #15
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #14 }
Removing DPs: only weak rules.
Number of SCCs: 0, DPs: 3, edges: 5
Next Dependency Pairs:
   #16: #or(or(x,false()),†1) -> #or(x,†1)
   #17: #or(or(x,x),†1) -> #or(x,†1)
   #18: #or(or(x,true()),†1) -> #or(true(),†1)
   #19: #and(and(x,x),†1) -> #and(x,†1)
   #20: #or(or(and(x,y),z),†1) -> #or(and(or(x,z),or(y,z)),†1)
   #21: #and(and(x,or(x,y)),†1) -> #and(x,†1)
   #22: #and(x,and(y,z)) ->= #and(and(x,y),z)
   #23: #and(x,and(y,z)) ->= #and(x,y)
   #24: #and(and(x,false()),†1) -> #and(false(),†1)
   #25: #and(and(x,true()),†1) -> #and(x,†1)
   #26: #or(x,or(y,z)) ->= #or(or(x,y),z)
   #27: #or(x,or(y,z)) ->= #or(x,y)
Number of SCCs: 2, DPs: 12, edges: 72
	SCC { #16..18 #20 #26 #27 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
   neq(x1,x2)	status: {}	precedence above:
   and(x1,x2)	status: {x1,x2}	precedence above: false
    eq(x1,x2)	status: {}	precedence above:
 false()	status: []	precedence above:
  true()	status: []	precedence above:
  #eq(x1,x2)	status: {}	precedence above:
 #not(x1)	status: []	precedence above:
 #neq(x1,x2)	status: {}	precedence above:
    or(x1,x2)	status: {x1,x2}	precedence above: and false true
  #or(x1,x2)	status: {x1,x2}	precedence above: and false true or
 #and(x1,x2)	status: {}	precedence above:
   not(x1)	status: []	precedence above:
    Usable rules: { 10..19 }
    Removed DPs: #16..18 #20 #27
Number of SCCs: 2, DPs: 7, edges: 37
	SCC { #26 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 7, edges: 37
	SCC { #19 #21..25 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   neq(x1,x2)	weight: 0
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
    eq(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  #eq(x1,x2)	weight: 0
 #not(x1)	weight: 0
 #neq(x1,x2)	weight: 0
    or(x1,x2)	weight: (/ 1 4)
  #or(x1,x2)	weight: 0
 #and(x1,x2)	weight: x1 + x2
   not(x1)	weight: 0
    Usable rules: { 14..17 19 }
    Removed DPs: #19 #21 #23..25
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #22 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 2, edges: 2
