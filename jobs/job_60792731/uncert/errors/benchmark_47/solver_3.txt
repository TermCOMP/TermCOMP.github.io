Input TRS:
    AC symbols: + U *
    1: 0(\#()) -> \#()
    2: +(\#(),x) -> x
    3: +(0(x),0(y)) -> 0(+(x,y))
    4: +(0(x),1(y)) -> 1(+(x,y))
    5: +(1(x),1(y)) -> 0(+(1(\#()),+(x,y)))
    6: *(\#(),x) -> \#()
    7: *(0(x),y) -> 0(*(x,y))
    8: *(1(x),y) -> +(0(*(x,y)),y)
    9: U(empty(),b) -> b
    10: sum(empty()) -> 0(\#())
    11: sum(singl(x)) -> x
    12: sum(U(x,y)) -> +(sum(x),sum(y))
    13: prod(empty()) -> 1(\#())
    14: prod(singl(x)) -> x
    15: prod(U(x,y)) -> *(prod(x),prod(y))
Number of strict rules: 15
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #sum(U(x,y)) -> #+(sum(x),sum(y))
   #2: #sum(U(x,y)) -> #sum(x)
   #3: #sum(U(x,y)) -> #sum(y)
   #4: #*(0(x),y) -> #0(*(x,y))
   #5: #*(0(x),y) -> #*(x,y)
   #6: #sum(empty()) -> #0(\#())
   #7: #+(1(x),1(y)) -> #0(+(1(\#()),+(x,y)))
   #8: #+(1(x),1(y)) -> #+(1(\#()),+(x,y))
   #9: #+(1(x),1(y)) -> #+(x,y)
   #10: #U(x,U(y,z)) ->= #U(U(x,y),z)
   #11: #U(x,U(y,z)) ->= #U(x,y)
   #12: #+(x,+(y,z)) ->= #+(+(x,y),z)
   #13: #+(x,+(y,z)) ->= #+(x,y)
   #14: #+(0(x),0(y)) -> #0(+(x,y))
   #15: #+(0(x),0(y)) -> #+(x,y)
   #16: #*(1(x),y) -> #+(0(*(x,y)),y)
   #17: #*(1(x),y) -> #0(*(x,y))
   #18: #*(1(x),y) -> #*(x,y)
   #19: #prod(U(x,y)) -> #*(prod(x),prod(y))
   #20: #prod(U(x,y)) -> #prod(x)
   #21: #prod(U(x,y)) -> #prod(y)
   #22: #+(0(x),1(y)) -> #+(x,y)
   #23: #*(x,*(y,z)) ->= #*(*(x,y),z)
   #24: #*(x,*(y,z)) ->= #*(x,y)
Number of SCCs: 5, DPs: 16, edges: 64
	SCC { #20 #21 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: 0
  prod(x1)	weight: 0
#prod(x1)	weight: x1
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   #U(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: 0
 singl(x1)	weight: 0
 empty()	weight: 0
     +(x1,x2)	weight: 0
 #sum(x1)	weight: 0
     U(x1,x2)	weight: (/ 1 2) + x1 + x2
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #20 #21
Number of SCCs: 4, DPs: 14, edges: 60
	SCC { #2 #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: 0
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: 0
     \#()	weight: 0
   #U(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: 0
 singl(x1)	weight: 0
 empty()	weight: 0
     +(x1,x2)	weight: 0
 #sum(x1)	weight: x1
     U(x1,x2)	weight: (/ 1 2) + x1 + x2
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #3
Number of SCCs: 3, DPs: 12, edges: 56
	SCC { #10 #11 }
Removing DPs: only weak rules.
Number of SCCs: 2, DPs: 12, edges: 56
	SCC { #5 #18 #23 #24 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: max{0, x1}
  prod(x1)	weight: 0
#prod(x1)	weight: 0
   #*(x1,x2)	weight: x1 + x2
     \#()	weight: (/ 1 2)
   #U(x1,x2)	weight: 0
   sum(x1)	weight: 0
     0(x1)	weight: max{0, x1}
 singl(x1)	weight: 0
 empty()	weight: 0
     +(x1,x2)	weight: max{(/ 1 2), max{x2, x1}}
 #sum(x1)	weight: 0
     U(x1,x2)	weight: 0
   #+(x1,x2)	weight: 0
     *(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { 1..8 16 18 }
    Removed DPs: #24
Number of SCCs: 2, DPs: 11, edges: 49
	SCC { #5 #18 #23 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
