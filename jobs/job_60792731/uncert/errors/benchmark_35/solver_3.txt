Input TRS:
    AC symbols: plus times
    1: plus(x,0()) -> x
    2: plus(0(),y) -> y
    3: plus(s(x),y) -> s(plus(x,y))
    4: times(0(),y) -> 0()
    5: times(s(0()),y) -> y
    6: times(s(x),y) -> plus(y,times(x,y))
    7: div(0(),y) -> 0()
    8: div(x,y) -> quot(x,y,y)
    9: quot(0(),s(y),z) -> 0()
    10: quot(s(x),s(y),z) -> quot(x,y,z)
    11: quot(x,0(),s(z)) -> s(div(x,s(z)))
    12: div(div(x,y),z) -> div(x,times(y,z))
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #times(s(x),y) -> #plus(y,times(x,y))
   #2: #times(s(x),y) -> #times(x,y)
   #3: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #4: #plus(x,plus(y,z)) ->= #plus(x,y)
   #5: #quot(x,0(),s(z)) -> #div(x,s(z))
   #6: #div(div(x,y),z) -> #div(x,times(y,z))
   #7: #div(div(x,y),z) -> #times(y,z)
   #8: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #9: #times(x,times(y,z)) ->= #times(x,y)
   #10: #quot(s(x),s(y),z) -> #quot(x,y,z)
   #11: #plus(s(x),y) -> #plus(x,y)
   #12: #div(x,y) -> #quot(x,y,y)
Number of SCCs: 3, DPs: 10, edges: 26
	SCC { #3 #4 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#plus(x1,x2)	weight: x1 + x2
   div(x1,x2)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: (/ 1 2) + x1 + x2
#quot(x1,x2,x3)	weight: 0
    Usable rules: { 1..3 13 }
    Removed DPs: #4 #11
Number of SCCs: 3, DPs: 8, edges: 18
	SCC { #3 }
Removing DPs: only weak rules.
Number of SCCs: 2, DPs: 8, edges: 18
	SCC { #2 #8 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
 #div(x1,x2)	status: [x2]	precedence above:
     s(x1)	status: [x1]	precedence above:
#plus(x1,x2)	status: {}	precedence above:
   div(x1,x2)	status: [x2]	precedence above:
#times(x1,x2)	status: {x1,x2}	precedence above: s 0 times plus
     0()	status: []	precedence above:
  quot(x1,x2,x3)	status: [x2]	precedence above:
 times(x1,x2)	status: {x1,x2}	precedence above: s 0 plus
  plus(x1,x2)	status: {x1,x2}	precedence above: s
#quot(x1,x2,x3)	status: [x1]	precedence above:
    Usable rules: { 1..6 13 14 }
    Removed DPs: #2 #9
Number of SCCs: 3, DPs: 6, edges: 10
	SCC { #8 }
Removing DPs: only weak rules.
Number of SCCs: 2, DPs: 6, edges: 10
	SCC { #5 #6 #10 #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: x1
     s(x1)	weight: (/ 1 4) + x1
#plus(x1,x2)	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1 + x2
#times(x1,x2)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
 times(x1,x2)	weight: (/ 1 4)
  plus(x1,x2)	weight: (/ 1 2)
#quot(x1,x2,x3)	weight: x1
    Usable rules: { }
    Removed DPs: #6 #10
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #5 #12 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
 #div(x1,x2)	weight: max{0, (/ 1 4) + x2}
     s(x1)	weight: (/ 1 8)
#plus(x1,x2)	weight: 0
   div(x1,x2)	weight: 0
#times(x1,x2)	weight: (max 0 (/ 1 8))
     0()	weight: (/ 3 8)
  quot(x1,x2,x3)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: max{(/ 1 8), max{x2, x1}}
#quot(x1,x2,x3)	weight: max{0, (/ 1 8) + x3, (/ 1 8) + x2}
    Usable rules: { }
    Removed DPs: #5 #12
Number of SCCs: 2, DPs: 2, edges: 2
Next Dependency Pairs:
   #13: #plus(plus(0(),y),†1) -> #plus(y,†1)
   #14: #times(times(s(x),y),†1) -> #times(plus(y,times(x,y)),†1)
   #15: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #16: #plus(x,plus(y,z)) ->= #plus(x,y)
   #17: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #18: #times(x,times(y,z)) ->= #times(x,y)
   #19: #times(times(s(0()),y),†1) -> #times(y,†1)
   #20: #plus(plus(s(x),y),†1) -> #plus(s(plus(x,y)),†1)
   #21: #plus(plus(x,0()),†1) -> #plus(x,†1)
   #22: #times(times(0(),y),†1) -> #times(0(),†1)
Number of SCCs: 2, DPs: 10, edges: 50
	SCC { #13 #15 #16 #20 #21 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: (/ 1 4)
     s(x1)	weight: (/ 1 4)
#plus(x1,x2)	weight: x1 + x2
   div(x1,x2)	weight: (/ 1 4)
#times(x1,x2)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
 times(x1,x2)	weight: (/ 1 4)
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
#quot(x1,x2,x3)	weight: 0
    Usable rules: { 1..3 13 }
    Removed DPs: #13 #16 #20 #21
Number of SCCs: 2, DPs: 6, edges: 26
	SCC { #15 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 6, edges: 26
	SCC { #14 #17..19 #22 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
 #div(x1,x2)	status: [x2]	precedence above:
     s(x1)	status: [x1]	precedence above:
#plus(x1,x2)	status: {}	precedence above:
   div(x1,x2)	status: [x2]	precedence above:
#times(x1,x2)	status: {x1,x2}	precedence above: s 0 times plus
     0()	status: []	precedence above:
  quot(x1,x2,x3)	status: [x2]	precedence above:
 times(x1,x2)	status: {x1,x2}	precedence above: s 0 plus
  plus(x1,x2)	status: {x1,x2}	precedence above: s
#quot(x1,x2,x3)	status: [x1]	precedence above:
    Usable rules: { 1..6 13 14 }
    Removed DPs: #14 #18 #19 #22
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #17 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 2, edges: 2
