Input TRS:
    AC symbols: plus
    1: app(nil(),k) -> k
    2: app(l,nil()) -> l
    3: app(cons(x,l),k) -> cons(x,app(l,k))
    4: sum(cons(x,nil())) -> cons(x,nil())
    5: sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
    6: sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
    7: plus(0(),y) -> y
    8: plus(s(x),y) -> s(plus(x,y))
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... removes: 1 3 5 7 2
     s(x1)	weight: x1
   sum(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  plus(x1,x2)	weight: (/ 1 16) + x2 + x1
  cons(x1,x2)	weight: (/ 3 16) + 2 * x1 + x2
   app(x1,x2)	weight: (/ 18273 16) + 2 * x1 + x2
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing sum
AC symbols: plus
4: sum❆1_cons(x,nil()) -> cons(x,nil())
6: sum❆1_app(l,cons(x,cons(y,k))) -> sum❆1_app(l,sum❆1_cons(x,cons(y,k)))
8: plus(s(x),y) -> s(plus(x,y))
9: sum(cons(_1,_2)) ->= sum❆1_cons(_1,_2)
10: sum(app(_1,_2)) ->= sum❆1_app(_1,_2)
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... removes: 10 9
sum❆1_app(x1,x2)	weight: (/ 2249 4) + x1 + x2
     s(x1)	weight: x1
sum❆1_cons(x1,x2)	weight: (/ 82149 4) + 2 * x1 + x2
   sum(x1)	weight: 2 * x1
     0()	weight: 0
   nil()	weight: 0
  plus(x1,x2)	weight: (/ 1 4) + x2 + x1
  cons(x1,x2)	weight: (/ 82149 4) + 2 * x1 + x2
   app(x1,x2)	weight: (/ 1125 4) + x1 + x2
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... removes: 4 6
sum❆1_app(x1,x2)	weight: (/ 8993 16) + x1 + x2
     s(x1)	weight: x1
sum❆1_cons(x1,x2)	weight: (/ 3 16) + 2 * x1 + x2
   sum(x1)	weight: 2 * x1
     0()	weight: 0
   nil()	weight: 0
  plus(x1,x2)	weight: (/ 1 16) + x2 + x1
  cons(x1,x2)	weight: (/ 1 8) + 2 * x1 + 2 * x2
   app(x1,x2)	weight: (/ 4497 16) + x1 + x2
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #2: #plus(x,plus(y,z)) ->= #plus(x,y)
   #3: #plus(s(x),y) -> #plus(x,y)
Number of SCCs: 1, DPs: 3, edges: 9
	SCC { #1..3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
sum❆1_app(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
sum❆1_cons(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1 + x2
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  plus(x1,x2)	weight: (/ 1 2) + x1 + x2
  cons(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 8 11 }
    Removed DPs: #2 #3
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: only weak rules.
Number of SCCs: 0, DPs: 1, edges: 1
Next Dependency Pairs:
   #4: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #5: #plus(x,plus(y,z)) ->= #plus(x,y)
   #6: #plus(plus(s(x),y),†1) -> #plus(s(plus(x,y)),†1)
Number of SCCs: 1, DPs: 3, edges: 9
	SCC { #4..6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
sum❆1_app(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
sum❆1_cons(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1 + x2
   sum(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
  cons(x1,x2)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 8 11 }
    Removed DPs: #5 #6
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #4 }
Removing DPs: only weak rules.
Number of SCCs: 0, DPs: 1, edges: 1
