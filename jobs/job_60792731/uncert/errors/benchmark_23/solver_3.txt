Input TRS:
    AC symbols: plus times
    1: 0(S()) -> S()
    2: plus(S(),x) -> x
    3: plus(0(x),0(y)) -> 0(plus(x,y))
    4: plus(0(x),1(y)) -> 1(plus(x,y))
    5: plus(1(x),1(y)) -> 0(plus(x,plus(y,1(S()))))
    6: times(S(),x) -> S()
    7: times(0(x),y) -> 0(times(x,y))
    8: times(1(x),y) -> plus(0(times(x,y)),y)
Number of strict rules: 8
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #2: #plus(x,plus(y,z)) ->= #plus(x,y)
   #3: #times(0(x),y) -> #0(times(x,y))
   #4: #times(0(x),y) -> #times(x,y)
   #5: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #6: #times(x,times(y,z)) ->= #times(x,y)
   #7: #plus(1(x),1(y)) -> #0(plus(x,plus(y,1(S()))))
   #8: #plus(1(x),1(y)) -> #plus(x,plus(y,1(S())))
   #9: #plus(1(x),1(y)) -> #plus(y,1(S()))
   #10: #plus(0(x),0(y)) -> #0(plus(x,y))
   #11: #plus(0(x),0(y)) -> #plus(x,y)
   #12: #times(1(x),y) -> #plus(0(times(x,y)),y)
   #13: #times(1(x),y) -> #0(times(x,y))
   #14: #times(1(x),y) -> #times(x,y)
   #15: #plus(0(x),1(y)) -> #plus(x,y)
Number of SCCs: 2, DPs: 10, edges: 52
	SCC { #4..6 #14 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
   #0(x1)	weight: 0
     1(x1)	weight: max{0, x1}
     S()	weight: (/ 1 2)
#plus(x1,x2)	weight: 0
#times(x1,x2)	weight: x1 + x2
     0(x1)	weight: max{0, x1}
 times(x1,x2)	weight: (/ 1 2) + x1 + x2
  plus(x1,x2)	weight: max{(/ 1 2), max{x2, x1}}
    Usable rules: { 1..10 }
    Removed DPs: #6
Number of SCCs: 2, DPs: 9, edges: 45
	SCC { #4 #5 #14 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
