Input TRS:
    AC symbols: inter union
    C symbols: eq
    1: if(true(),x,y) -> x
    2: if(false(),x,y) -> y
    3: eq(0(),0()) -> true()
    4: eq(0(),s(x)) -> false()
    5: eq(s(x),s(y)) -> eq(x,y)
    6: union(empty(),x) -> x
    7: inter(empty(),x) -> empty()
    8: inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
    9: inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty())
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #inter(singl(x),singl(y)) -> #if(eq(x,y),singl(x),empty())
   #2: #inter(singl(x),singl(y)) -> #eq(x,y)
   #3: #union(x,union(y,z)) ->= #union(union(x,y),z)
   #4: #union(x,union(y,z)) ->= #union(x,y)
   #5: #inter(x,inter(y,z)) ->= #inter(inter(x,y),z)
   #6: #inter(x,inter(y,z)) ->= #inter(x,y)
   #7: #eq(s(x),s(y)) -> #eq(x,y)
   #8: #inter(union(y,z),x) -> #union(inter(x,y),inter(x,z))
   #9: #inter(union(y,z),x) -> #inter(x,y)
   #10: #inter(union(y,z),x) -> #inter(x,z)
Number of SCCs: 3, DPs: 7, edges: 21
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    eq(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
  #eq(x1,x2)	weight: x1 + x2
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
 union(x1,x2)	weight: 0
 singl(x1)	weight: 0
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: 0
 empty()	weight: 0
#inter(x1,x2)	weight: 0
#union(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 2, DPs: 6, edges: 20
	SCC { #3 #4 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 6, edges: 20
	SCC { #5 #6 #9 #10 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
     s(x1)	status: [x1]	precedence above:
    eq(x1,x2)	status: {}	precedence above: false true
 false()	status: []	precedence above:
  true()	status: []	precedence above:
  #eq(x1,x2)	status: {}	precedence above:
    if(x1,x2,x3)	status: [x3,x2]	precedence above:
     0()	status: []	precedence above:
 union(x1,x2)	status: {x1,x2}	precedence above:
 singl(x1)	status: [x1]	precedence above: empty
  #if(x1,x2,x3)	status: [x1,x2,x3]	precedence above:
 inter(x1,x2)	status: {x1,x2}	precedence above: if union singl empty
 empty()	status: []	precedence above:
#inter(x1,x2)	status: {x1,x2}	precedence above: if union singl inter empty
#union(x1,x2)	status: {}	precedence above:
    Usable rules: { 1 2 6..11 }
    Removed DPs: #6 #9 #10
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #5 }
Removing DPs: only weak rules.
Number of SCCs: 0, DPs: 3, edges: 5
Next Dependency Pairs:
   #11: #union(union(empty(),x),†1) -> #union(x,†1)
   #12: #inter(inter(singl(x),singl(y)),†1) -> #inter(if(eq(x,y),singl(x),empty()),†1)
   #13: #union(x,union(y,z)) ->= #union(union(x,y),z)
   #14: #union(x,union(y,z)) ->= #union(x,y)
   #15: #inter(inter(empty(),x),†1) -> #inter(empty(),†1)
   #16: #inter(x,inter(y,z)) ->= #inter(inter(x,y),z)
   #17: #inter(x,inter(y,z)) ->= #inter(x,y)
   #18: #inter(inter(union(y,z),x),†1) -> #inter(union(inter(x,y),inter(x,z)),†1)
Number of SCCs: 2, DPs: 8, edges: 34
	SCC { #12 #15..18 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
     s(x1)	status: [x1]	precedence above:
    eq(x1,x2)	status: {x1,x2}	precedence above: false true
 false()	status: []	precedence above:
  true()	status: []	precedence above:
  #eq(x1,x2)	status: {}	precedence above:
    if(x1,x2,x3)	status: [x3,x2]	precedence above:
     0()	status: []	precedence above:
 union(x1,x2)	status: {x1,x2}	precedence above:
 singl(x1)	status: [x1]	precedence above: empty
  #if(x1,x2,x3)	status: [x1,x2,x3]	precedence above:
 inter(x1,x2)	status: {x1,x2}	precedence above: if union singl empty
 empty()	status: []	precedence above:
#inter(x1,x2)	status: {x1,x2}	precedence above: if union singl inter empty
#union(x1,x2)	status: {}	precedence above:
    Usable rules: { 1 2 6..11 }
    Removed DPs: #12 #15 #17 #18
Number of SCCs: 2, DPs: 4, edges: 10
	SCC { #16 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 4, edges: 10
	SCC { #11 #13 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4)
    eq(x1,x2)	weight: (/ 1 4) + x1 + x2
 false()	weight: 0
  true()	weight: 0
  #eq(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: (/ 3 4) + x1
     0()	weight: 0
 union(x1,x2)	weight: (/ 1 4) + x1 + x2
 singl(x1)	weight: (/ 1 4)
  #if(x1,x2,x3)	weight: 0
 inter(x1,x2)	weight: (/ 1 4) + x1 + x2
 empty()	weight: 0
#inter(x1,x2)	weight: 0
#union(x1,x2)	weight: x1 + x2
    Usable rules: { 6 11 }
    Removed DPs: #11 #14
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #13 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 2, edges: 2
