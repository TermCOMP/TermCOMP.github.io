Input TRS:
    AC symbols: plus times
    1: p(s(x)) -> x
    2: plus(x,0()) -> x
    3: plus(x,s(y)) -> s(plus(x,y))
    4: times(x,0()) -> 0()
    5: times(x,s(y)) -> plus(x,times(x,y))
    6: minus(x,0()) -> x
    7: minus(s(x),s(y)) -> minus(p(s(x)),p(s(y)))
    8: div(0(),s(y)) -> 0()
    9: div(s(x),s(y)) -> s(div(minus(x,y),s(y)))
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing p
AC symbols: plus times
1: p❆1_s(x) -> x
2: plus(x,0()) -> x
3: plus(x,s(y)) -> s(plus(x,y))
4: times(x,0()) -> 0()
5: times(x,s(y)) -> plus(x,times(x,y))
6: minus(x,0()) -> x
7: minus(s(x),s(y)) -> minus(p❆1_s(x),p❆1_s(y))
8: div(0(),s(y)) -> 0()
9: div(s(x),s(y)) -> s(div(minus(x,y),s(y)))
10: p(s(_1)) ->= p❆1_s(_1)
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #div(s(x),s(y)) -> #div(minus(x,y),s(y))
   #2: #div(s(x),s(y)) -> #minus(x,y)
   #3: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #4: #plus(x,plus(y,z)) ->= #plus(x,y)
   #5: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #6: #times(x,times(y,z)) ->= #times(x,y)
   #7: #minus(s(x),s(y)) -> #minus(p❆1_s(x),p❆1_s(y))
   #8: #minus(s(x),s(y)) -> #p❆1_s(x)
   #9: #minus(s(x),s(y)) -> #p❆1_s(y)
   #10: #p(s(_1)) ->? #p❆1_s(_1)
   #11: #times(x,s(y)) -> #plus(x,times(x,y))
   #12: #times(x,s(y)) -> #times(x,y)
   #13: #plus(x,s(y)) -> #plus(x,y)
Number of SCCs: 4, DPs: 8, edges: 20
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
p❆1_s(x1)	weight: (/ 1 4) + x1
#plus(x1,x2)	weight: 0
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
#p❆1_s(x1)	weight: 0
     p(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
  plus(x1,x2)	weight: 0
    Usable rules: { 1 }
    Removed DPs: #7
Number of SCCs: 3, DPs: 7, edges: 19
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: x1
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: (/ 1 4) + x1
p❆1_s(x1)	weight: (/ 1 4) + x1
#plus(x1,x2)	weight: 0
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
#p❆1_s(x1)	weight: 0
     p(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
  plus(x1,x2)	weight: 0
    Usable rules: { 1 6 7 }
    Removed DPs: #1
Number of SCCs: 2, DPs: 6, edges: 18
	SCC { #3 #4 #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: x1
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: (/ 1 4) + x1
p❆1_s(x1)	weight: (/ 1 4) + x1
#plus(x1,x2)	weight: x1 + x2
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
#p❆1_s(x1)	weight: 0
     p(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#minus(x1,x2)	weight: x2
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { 2 3 11 }
    Removed DPs: #4 #13
Number of SCCs: 2, DPs: 4, edges: 10
	SCC { #3 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 4, edges: 10
	SCC { #5 #6 #12 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
 #div(x1,x2)	status: [x1]	precedence above:
     s(x1)	status: [x1]	precedence above:
 minus(x1,x2)	status: [x2]	precedence above:
p❆1_s(x1)	status: []	precedence above:
#plus(x1,x2)	status: {}	precedence above:
   div(x1,x2)	status: [x1]	precedence above:
   #p(x1)	status: []	precedence above:
#p❆1_s(x1)	status: []	precedence above:
     p(x1)	status: []	precedence above:
#times(x1,x2)	status: {x1,x2}	precedence above: s 0 times plus
     0()	status: []	precedence above:
 times(x1,x2)	status: {x1,x2}	precedence above: s 0 plus
#minus(x1,x2)	status: [x2]	precedence above:
  plus(x1,x2)	status: {x1,x2}	precedence above: s
    Usable rules: { 2..5 11 12 }
    Removed DPs: #6 #12
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #5 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 2, edges: 2
Next Dependency Pairs:
   #14: #plus(plus(x,0()),†1) -> #plus(x,†1)
   #15: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #16: #plus(x,plus(y,z)) ->= #plus(x,y)
   #17: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #18: #times(x,times(y,z)) ->= #times(x,y)
   #19: #times(times(x,s(y)),†1) -> #times(plus(x,times(x,y)),†1)
   #20: #plus(plus(x,s(y)),†1) -> #plus(s(plus(x,y)),†1)
   #21: #times(times(x,0()),†1) -> #times(0(),†1)
Number of SCCs: 2, DPs: 8, edges: 32
	SCC { #14..16 #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
 minus(x1,x2)	weight: (/ 1 4) + x1
p❆1_s(x1)	weight: (/ 1 4) + x1
#plus(x1,x2)	weight: x1 + x2
   div(x1,x2)	weight: 0
   #p(x1)	weight: 0
#p❆1_s(x1)	weight: 0
     p(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: (/ 1 4)
#minus(x1,x2)	weight: x2
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { 2 3 11 }
    Removed DPs: #14 #16 #20
Number of SCCs: 2, DPs: 5, edges: 17
	SCC { #15 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 5, edges: 17
	SCC { #17..19 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
 #div(x1,x2)	status: [x1]	precedence above:
     s(x1)	status: [x1]	precedence above:
 minus(x1,x2)	status: [x2]	precedence above:
p❆1_s(x1)	status: []	precedence above:
#plus(x1,x2)	status: {}	precedence above:
   div(x1,x2)	status: [x1]	precedence above:
   #p(x1)	status: []	precedence above:
#p❆1_s(x1)	status: []	precedence above:
     p(x1)	status: []	precedence above:
#times(x1,x2)	status: {x1,x2}	precedence above: s 0 times plus
     0()	status: []	precedence above:
 times(x1,x2)	status: {x1,x2}	precedence above: s 0 plus
#minus(x1,x2)	status: [x2]	precedence above:
  plus(x1,x2)	status: {x1,x2}	precedence above: s
    Usable rules: { 2..5 11 12 }
    Removed DPs: #18 #19 #21
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #17 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 2, edges: 2
