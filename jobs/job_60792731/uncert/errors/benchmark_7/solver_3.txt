Input TRS:
    AC symbols: plus
    1: sum(x,y) -> S(int(x,y))
    2: S(nil()) -> 0()
    3: S(cons(x,xs)) -> plus(x,S(xs))
    4: plus(x,0()) -> x
    5: plus(x,s(y)) -> s(plus(x,y))
    6: int(0(),0()) -> cons(0(),nil())
    7: int(0(),s(y)) -> cons(0(),int(s(0()),s(y)))
    8: int(s(x),0()) -> nil()
    9: int(s(x),s(y)) -> intlist(int(x,y))
    10: intlist(nil()) -> nil()
    11: intlist(cons(x,y)) -> cons(s(x),intlist(y))
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... removes: 8 1 6 2
     s(x1)	weight: x1
     S(x1)	weight: (/ 1 16) + x1
   sum(x1,x2)	weight: (/ 1 2) + 2 * x1 + x2
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: x1
   int(x1,x2)	weight: (/ 1 16) + x1 + x2
  plus(x1,x2)	weight: x2 + x1
  cons(x1,x2)	weight: x1 + x2
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing int
AC symbols: plus
3: S(cons(x,xs)) -> plus(x,S(xs))
4: plus(x,0()) -> x
5: plus(x,s(y)) -> s(plus(x,y))
7: int❆1_0(s(y)) -> cons(0(),int❆1_s(0(),s(y)))
9: int❆1_s(x,s(y)) -> intlist(int(x,y))
10: intlist(nil()) -> nil()
11: intlist(cons(x,y)) -> cons(s(x),intlist(y))
12: int(0(),_1) ->= int❆1_0(_1)
13: int(s(_1),_2) ->= int❆1_s(_1,_2)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #int(s(_1),_2) ->? #int❆1_s(_1,_2)
   #2: #int❆1_s(x,s(y)) -> #intlist(int(x,y))
   #3: #int❆1_s(x,s(y)) -> #int(x,y)
   #4: #intlist(cons(x,y)) -> #intlist(y)
   #5: #int(0(),_1) ->? #int❆1_0(_1)
   #6: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #7: #plus(x,plus(y,z)) ->= #plus(x,y)
   #8: #int❆1_0(s(y)) -> #int❆1_s(0(),s(y))
   #9: #plus(x,s(y)) -> #plus(x,y)
   #10: #S(cons(x,xs)) -> #plus(x,S(xs))
   #11: #S(cons(x,xs)) -> #S(xs)
Number of SCCs: 4, DPs: 9, edges: 16
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: x1
     s(x1)	weight: 0
     S(x1)	weight: 0
#plus(x1,x2)	weight: 0
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: 0
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: 0
  plus(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
 #int(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 3, DPs: 8, edges: 15
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: 0
     S(x1)	weight: 0
#plus(x1,x2)	weight: 0
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: 0
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: x1
  plus(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
 #int(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #11
Number of SCCs: 2, DPs: 7, edges: 14
	SCC { #6 #7 #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
     S(x1)	weight: 0
#plus(x1,x2)	weight: x1 + x2
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: 0
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: 0
  plus(x1,x2)	weight: (/ 1 2) + x1 + x2
  cons(x1,x2)	weight: (/ 1 2)
 #int(x1,x2)	weight: 0
    Usable rules: { 4 5 14 }
    Removed DPs: #7 #9
Number of SCCs: 2, DPs: 5, edges: 6
	SCC { #6 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 5, edges: 6
	SCC { #1 #3 #5 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
     S(x1)	weight: 0
#plus(x1,x2)	weight: x1 + x2
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: 0
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: x1
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: 0
  plus(x1,x2)	weight: (/ 1 2) + x1 + x2
  cons(x1,x2)	weight: (/ 1 2)
 #int(x1,x2)	weight: x1
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #3 #5 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: (/ 3 4) + x1
     S(x1)	weight: 0
#plus(x1,x2)	weight: x1 + x2
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: (/ 1 4) + x1
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: x2
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: 0
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
  cons(x1,x2)	weight: (/ 1 4)
 #int(x1,x2)	weight: (/ 1 2) + x2
    Usable rules: { }
    Removed DPs: #3 #5 #8
Number of SCCs: 1, DPs: 1, edges: 1
Next Dependency Pairs:
   #12: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #13: #plus(x,plus(y,z)) ->= #plus(x,y)
   #14: #plus(plus(x,s(y)),†1) -> #plus(s(plus(x,y)),†1)
   #15: #plus(plus(x,0()),†1) -> #plus(x,†1)
Number of SCCs: 1, DPs: 4, edges: 16
	SCC { #12..15 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: (/ 1 4)
     S(x1)	weight: 0
#plus(x1,x2)	weight: x1 + x2
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: (/ 1 4)
   sum(x1,x2)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
   #S(x1)	weight: 0
  plus(x1,x2)	weight: (/ 1 4) + x1 + x2
  cons(x1,x2)	weight: (/ 1 4)
 #int(x1,x2)	weight: (/ 1 2)
    Usable rules: { 4 5 14 }
    Removed DPs: #13..15
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #12 }
Removing DPs: only weak rules.
Number of SCCs: 0, DPs: 1, edges: 1
