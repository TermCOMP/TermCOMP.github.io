Input TRS:
    AC symbols: plus union mult
    1: union(X,empty()) -> X
    2: union(empty(),X) -> X
    3: 0(z()) -> z()
    4: U101(tt(),X,Y) -> U102(isBin(Y),X,Y)
    5: U102(tt(),X,Y) -> 0(mult(X,Y))
    6: U11(tt()) -> tt()
    7: U111(tt(),X,Y) -> U112(isBin(Y),X,Y)
    8: U112(tt(),X,Y) -> plus(0(mult(X,Y)),Y)
    9: U121(tt(),X) -> X
    10: U131(tt(),X,Y) -> U132(isBin(Y),X,Y)
    11: U132(tt(),X,Y) -> 0(plus(X,Y))
    12: U141(tt(),X,Y) -> U142(isBin(Y),X,Y)
    13: U142(tt(),X,Y) -> 1(plus(X,Y))
    14: U151(tt(),X,Y) -> U152(isBin(Y),X,Y)
    15: U152(tt(),X,Y) -> 0(plus(plus(X,Y),1(z())))
    16: U161(tt(),X) -> X
    17: U171(tt(),A,B) -> U172(isBag(B),A,B)
    18: U172(tt(),A,B) -> mult(prod(A),prod(B))
    19: U181(tt(),X) -> X
    20: U191(tt(),A,B) -> U192(isBag(B),A,B)
    21: U192(tt(),A,B) -> plus(sum(A),sum(B))
    22: U21(tt(),V2) -> U22(isBag(V2))
    23: U22(tt()) -> tt()
    24: U31(tt()) -> tt()
    25: U41(tt()) -> tt()
    26: U51(tt(),V2) -> U52(isBin(V2))
    27: U52(tt()) -> tt()
    28: U61(tt(),V2) -> U62(isBin(V2))
    29: U62(tt()) -> tt()
    30: U71(tt()) -> tt()
    31: U81(tt()) -> tt()
    32: U91(tt()) -> z()
    33: isBag(empty()) -> tt()
    34: isBag(singl(V1)) -> U11(isBin(V1))
    35: isBag(union(V1,V2)) -> U21(isBag(V1),V2)
    36: isBin(z()) -> tt()
    37: isBin(0(V1)) -> U31(isBin(V1))
    38: isBin(1(V1)) -> U41(isBin(V1))
    39: isBin(mult(V1,V2)) -> U51(isBin(V1),V2)
    40: isBin(plus(V1,V2)) -> U61(isBin(V1),V2)
    41: isBin(prod(V1)) -> U71(isBag(V1))
    42: isBin(sum(V1)) -> U81(isBag(V1))
    43: mult(z(),X) -> U91(isBin(X))
    44: mult(0(X),Y) -> U101(isBin(X),X,Y)
    45: mult(1(X),Y) -> U111(isBin(X),X,Y)
    46: plus(z(),X) -> U121(isBin(X),X)
    47: plus(0(X),0(Y)) -> U131(isBin(X),X,Y)
    48: plus(0(X),1(Y)) -> U141(isBin(X),X,Y)
    49: plus(1(X),1(Y)) -> U151(isBin(X),X,Y)
    50: prod(empty()) -> 1(z())
    51: prod(singl(X)) -> U161(isBin(X),X)
    52: prod(union(A,B)) -> U171(isBag(A),A,B)
    53: sum(empty()) -> 0(z())
    54: sum(singl(X)) -> U181(isBin(X),X)
    55: sum(union(A,B)) -> U191(isBag(A),A,B)
Number of strict rules: 55
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #mult(z(),X) -> #U91(isBin(X))
   #2: #mult(z(),X) -> #isBin(X)
   #3: #isBag(union(V1,V2)) -> #U21(isBag(V1),V2)
   #4: #isBag(union(V1,V2)) -> #isBag(V1)
   #5: #plus(z(),X) -> #U121(isBin(X),X)
   #6: #plus(z(),X) -> #isBin(X)
   #7: #isBin(sum(V1)) -> #U81(isBag(V1))
   #8: #isBin(sum(V1)) -> #isBag(V1)
   #9: #isBin(prod(V1)) -> #U71(isBag(V1))
   #10: #isBin(prod(V1)) -> #isBag(V1)
   #11: #isBin(0(V1)) -> #U31(isBin(V1))
   #12: #isBin(0(V1)) -> #isBin(V1)
   #13: #plus(0(X),0(Y)) -> #U131(isBin(X),X,Y)
   #14: #plus(0(X),0(Y)) -> #isBin(X)
   #15: #sum(empty()) -> #0(z())
   #16: #plus(0(X),1(Y)) -> #U141(isBin(X),X,Y)
   #17: #plus(0(X),1(Y)) -> #isBin(X)
   #18: #mult(x,mult(y,z)) ->= #mult(mult(x,y),z)
   #19: #mult(x,mult(y,z)) ->= #mult(x,y)
   #20: #isBin(1(V1)) -> #U41(isBin(V1))
   #21: #isBin(1(V1)) -> #isBin(V1)
   #22: #sum(union(A,B)) -> #U191(isBag(A),A,B)
   #23: #sum(union(A,B)) -> #isBag(A)
   #24: #isBin(plus(V1,V2)) -> #U61(isBin(V1),V2)
   #25: #isBin(plus(V1,V2)) -> #isBin(V1)
   #26: #prod(singl(X)) -> #U161(isBin(X),X)
   #27: #prod(singl(X)) -> #isBin(X)
   #28: #U142(tt(),X,Y) -> #plus(X,Y)
   #29: #U132(tt(),X,Y) -> #0(plus(X,Y))
   #30: #U132(tt(),X,Y) -> #plus(X,Y)
   #31: #union(x,union(y,z)) ->= #union(union(x,y),z)
   #32: #union(x,union(y,z)) ->= #union(x,y)
   #33: #mult(1(X),Y) -> #U111(isBin(X),X,Y)
   #34: #mult(1(X),Y) -> #isBin(X)
   #35: #U141(tt(),X,Y) -> #U142(isBin(Y),X,Y)
   #36: #U141(tt(),X,Y) -> #isBin(Y)
   #37: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #38: #plus(x,plus(y,z)) ->= #plus(x,y)
   #39: #U151(tt(),X,Y) -> #U152(isBin(Y),X,Y)
   #40: #U151(tt(),X,Y) -> #isBin(Y)
   #41: #prod(union(A,B)) -> #U171(isBag(A),A,B)
   #42: #prod(union(A,B)) -> #isBag(A)
   #43: #plus(1(X),1(Y)) -> #U151(isBin(X),X,Y)
   #44: #plus(1(X),1(Y)) -> #isBin(X)
   #45: #U191(tt(),A,B) -> #U192(isBag(B),A,B)
   #46: #U191(tt(),A,B) -> #isBag(B)
   #47: #U111(tt(),X,Y) -> #U112(isBin(Y),X,Y)
   #48: #U111(tt(),X,Y) -> #isBin(Y)
   #49: #isBin(mult(V1,V2)) -> #U51(isBin(V1),V2)
   #50: #isBin(mult(V1,V2)) -> #isBin(V1)
   #51: #U131(tt(),X,Y) -> #U132(isBin(Y),X,Y)
   #52: #U131(tt(),X,Y) -> #isBin(Y)
   #53: #U102(tt(),X,Y) -> #0(mult(X,Y))
   #54: #U102(tt(),X,Y) -> #mult(X,Y)
   #55: #mult(0(X),Y) -> #U101(isBin(X),X,Y)
   #56: #mult(0(X),Y) -> #isBin(X)
   #57: #U61(tt(),V2) -> #U62(isBin(V2))
   #58: #U61(tt(),V2) -> #isBin(V2)
   #59: #U21(tt(),V2) -> #U22(isBag(V2))
   #60: #U21(tt(),V2) -> #isBag(V2)
   #61: #isBag(singl(V1)) -> #U11(isBin(V1))
   #62: #isBag(singl(V1)) -> #isBin(V1)
   #63: #U171(tt(),A,B) -> #U172(isBag(B),A,B)
   #64: #U171(tt(),A,B) -> #isBag(B)
   #65: #U51(tt(),V2) -> #U52(isBin(V2))
   #66: #U51(tt(),V2) -> #isBin(V2)
   #67: #U192(tt(),A,B) -> #plus(sum(A),sum(B))
   #68: #U192(tt(),A,B) -> #sum(A)
   #69: #U192(tt(),A,B) -> #sum(B)
   #70: #sum(singl(X)) -> #U181(isBin(X),X)
   #71: #sum(singl(X)) -> #isBin(X)
   #72: #U112(tt(),X,Y) -> #plus(0(mult(X,Y)),Y)
   #73: #U112(tt(),X,Y) -> #0(mult(X,Y))
   #74: #U112(tt(),X,Y) -> #mult(X,Y)
   #75: #U152(tt(),X,Y) -> #0(plus(plus(X,Y),1(z())))
   #76: #U152(tt(),X,Y) -> #plus(plus(X,Y),1(z()))
   #77: #U152(tt(),X,Y) -> #plus(X,Y)
   #78: #U101(tt(),X,Y) -> #U102(isBin(Y),X,Y)
   #79: #U101(tt(),X,Y) -> #isBin(Y)
   #80: #U172(tt(),A,B) -> #mult(prod(A),prod(B))
   #81: #U172(tt(),A,B) -> #prod(A)
   #82: #U172(tt(),A,B) -> #prod(B)
Number of SCCs: 6, DPs: 44, edges: 142
	SCC { #31 #32 }
Removing DPs: only weak rules.
Number of SCCs: 5, DPs: 44, edges: 142
	SCC { #41 #63 #81 #82 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
#isBag(x1)	weight: 0
   U21(x1,x2)	weight: (/ 1 2) + x2
     1(x1)	weight: (/ 1 4)
  prod(x1)	weight: (/ 1 4)
  U161(x1,x2)	weight: 0
   U11(x1)	weight: (/ 1 4) + x1
#U142(x1,x2,x3)	weight: 0
  U192(x1,x2,x3)	weight: 0
     z()	weight: 0
  U142(x1,x2,x3)	weight: 0
#U152(x1,x2,x3)	weight: 0
#U181(x1,x2)	weight: 0
#prod(x1)	weight: x1
   U91(x1)	weight: 0
#U101(x1,x2,x3)	weight: 0
   U71(x1)	weight: (/ 1 2)
 #U81(x1)	weight: 0
  U131(x1,x2,x3)	weight: 0
#plus(x1,x2)	weight: 0
  U101(x1,x2,x3)	weight: 0
  U111(x1,x2,x3)	weight: 0
  U132(x1,x2,x3)	weight: 0
  U152(x1,x2,x3)	weight: 0
#U121(x1,x2)	weight: 0
  U172(x1,x2,x3)	weight: 0
#U131(x1,x2,x3)	weight: 0
 #U52(x1)	weight: 0
   sum(x1)	weight: (/ 1 4)
  mult(x1,x2)	weight: (/ 1 4)
 isBin(x1)	weight: (/ 1 4)
#U141(x1,x2,x3)	weight: 0
  U141(x1,x2,x3)	weight: 0
#U171(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
 #U62(x1)	weight: 0
     0(x1)	weight: (/ 1 4)
  U191(x1,x2,x3)	weight: 0
#isBin(x1)	weight: 0
#U102(x1,x2,x3)	weight: 0
  U171(x1,x2,x3)	weight: 0
 union(x1,x2)	weight: (/ 3 4) + x1 + x2
   U62(x1)	weight: (/ 3 4)
  U151(x1,x2,x3)	weight: 0
#U111(x1,x2,x3)	weight: 0
#U192(x1,x2,x3)	weight: 0
 singl(x1)	weight: (/ 1 4)
   U52(x1)	weight: (/ 1 2) + x1
  plus(x1,x2)	weight: (/ 1 4)
   U61(x1,x2)	weight: (/ 1 2) + x2
 #U51(x1,x2)	weight: 0
 #U11(x1)	weight: 0
   U31(x1)	weight: (/ 1 2)
  U112(x1,x2,x3)	weight: 0
 #U41(x1)	weight: 0
  U102(x1,x2,x3)	weight: 0
#U191(x1,x2,x3)	weight: 0
 empty()	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: (/ 1 2)
 #U22(x1)	weight: 0
#U112(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1)	weight: 0
#U151(x1,x2,x3)	weight: 0
 isBag(x1)	weight: (/ 1 4)
   U22(x1)	weight: (/ 3 4)
   U51(x1,x2)	weight: (/ 1 2)
#U161(x1,x2)	weight: 0
#U172(x1,x2,x3)	weight: (/ 1 4) + x2 + x3
 #sum(x1)	weight: 0
   U41(x1)	weight: (/ 1 2)
 #U31(x1)	weight: 0
#union(x1,x2)	weight: 0
 #U91(x1)	weight: 0
#mult(x1,x2)	weight: 0
#U132(x1,x2,x3)	weight: 0
  U121(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
  U181(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #41 #63 #81 #82
Number of SCCs: 4, DPs: 40, edges: 137
	SCC { #22 #45 #68 #69 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   #0(x1)	weight: 0
#isBag(x1)	weight: 0
   U21(x1,x2)	weight: (/ 1 2)
     1(x1)	weight: (/ 1 4)
  prod(x1)	weight: (/ 1 4)
  U161(x1,x2)	weight: 0
   U11(x1)	weight: x1
#U142(x1,x2,x3)	weight: 0
  U192(x1,x2,x3)	weight: 0
     z()	weight: 0
  U142(x1,x2,x3)	weight: 0
#U152(x1,x2,x3)	weight: 0
#U181(x1,x2)	weight: 0
#prod(x1)	weight: 0
   U91(x1)	weight: 0
#U101(x1,x2,x3)	weight: 0
   U71(x1)	weight: (/ 1 4)
 #U81(x1)	weight: 0
  U131(x1,x2,x3)	weight: 0
#plus(x1,x2)	weight: 0
  U101(x1,x2,x3)	weight: 0
  U111(x1,x2,x3)	weight: 0
  U132(x1,x2,x3)	weight: 0
  U152(x1,x2,x3)	weight: 0
#U121(x1,x2)	weight: 0
  U172(x1,x2,x3)	weight: 0
#U131(x1,x2,x3)	weight: 0
 #U52(x1)	weight: 0
   sum(x1)	weight: (/ 1 4)
  mult(x1,x2)	weight: (/ 1 4)
 isBin(x1)	weight: (/ 1 4)
#U141(x1,x2,x3)	weight: 0
  U141(x1,x2,x3)	weight: 0
#U171(x1,x2,x3)	weight: (/ 1 2)
 #U62(x1)	weight: 0
     0(x1)	weight: (/ 1 4)
  U191(x1,x2,x3)	weight: 0
#isBin(x1)	weight: 0
#U102(x1,x2,x3)	weight: 0
  U171(x1,x2,x3)	weight: 0
 union(x1,x2)	weight: (/ 3 4) + x1 + x2
   U62(x1)	weight: (/ 1 4)
  U151(x1,x2,x3)	weight: 0
#U111(x1,x2,x3)	weight: 0
#U192(x1,x2,x3)	weight: (/ 1 4) + x2 + x3
 singl(x1)	weight: (/ 1 4)
   U52(x1)	weight: x1
  plus(x1,x2)	weight: (/ 1 4)
   U61(x1,x2)	weight: (/ 1 4)
 #U51(x1,x2)	weight: 0
 #U11(x1)	weight: 0
   U31(x1)	weight: (/ 1 4)
  U112(x1,x2,x3)	weight: 0
 #U41(x1)	weight: 0
  U102(x1,x2,x3)	weight: 0
#U191(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
 empty()	weight: 0
 #U21(x1,x2)	weight: 0
   U81(x1)	weight: (/ 1 4)
 #U22(x1)	weight: 0
#U112(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1)	weight: 0
#U151(x1,x2,x3)	weight: 0
 isBag(x1)	weight: (/ 1 4)
   U22(x1)	weight: (/ 3 4)
   U51(x1,x2)	weight: (/ 1 4)
#U161(x1,x2)	weight: 0
#U172(x1,x2,x3)	weight: (/ 1 4)
 #sum(x1)	weight: x1
   U41(x1)	weight: (/ 1 4)
 #U31(x1)	weight: 0
#union(x1,x2)	weight: 0
 #U91(x1)	weight: 0
#mult(x1,x2)	weight: 0
#U132(x1,x2,x3)	weight: 0
  U121(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
  U181(x1,x2)	weight: 0
    Usable rules: { 6 24..31 33 34 36..42 }
    Removed DPs: #22 #45 #68 #69
Number of SCCs: 3, DPs: 36, edges: 132
	SCC { #18 #19 #33 #47 #54 #55 #74 #78 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
