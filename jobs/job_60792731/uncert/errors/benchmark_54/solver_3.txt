Input TRS:
    AC symbols: _or_ _and_ _xor_
    1: U101(tt(),A,B) -> U102(isBoolKind(A),A,B)
    2: U102(tt(),A,B) -> U103(isBool(B),A,B)
    3: U103(tt(),A,B) -> U104(isBoolKind(B),A,B)
    4: U104(tt(),A,B) -> _xor_(_and_(A,B),_xor_(A,B))
    5: U11(tt(),A) -> U12(isBoolKind(A),A)
    6: U111(tt(),A) -> U112(isBoolKind(A))
    7: U112(tt()) -> false()
    8: U12(tt(),A) -> A
    9: U121(tt(),A) -> U122(isBoolKind(A),A)
    10: U122(tt(),A) -> A
    11: U131(tt(),B,U',U) -> U132(isBoolKind(B),B,U',U)
    12: U132(tt(),B,U',U) -> U133(isS(U'),B,U',U)
    13: U133(tt(),B,U',U) -> U134(isSKind(U'),B,U',U)
    14: U134(tt(),B,U',U) -> U135(isS(U),B,U',U)
    15: U135(tt(),B,U',U) -> U136(isSKind(U),B,U')
    16: U136(tt(),B,U') -> U137(equal(_isNotEqualTo_(B,true()),true()),U')
    17: U137(tt(),U') -> U'
    18: U141(tt(),U',U) -> U142(isSKind(U'),U)
    19: U142(tt(),U) -> U143(isS(U),U)
    20: U143(tt(),U) -> U144(isSKind(U),U)
    21: U144(tt(),U) -> U
    22: U151(tt(),V1,V2) -> U152(isBoolKind(V1),V1,V2)
    23: U152(tt(),V1,V2) -> U153(isBoolKind(V2),V1,V2)
    24: U153(tt(),V1,V2) -> U154(isBoolKind(V2),V1,V2)
    25: U154(tt(),V1,V2) -> U155(isBool(V1),V2)
    26: U155(tt(),V2) -> U156(isBool(V2))
    27: U156(tt()) -> tt()
    28: U161(tt(),V1,V2) -> U162(isBoolKind(V1),V1,V2)
    29: U162(tt(),V1,V2) -> U163(isBoolKind(V2),V1,V2)
    30: U163(tt(),V1,V2) -> U164(isBoolKind(V2),V1,V2)
    31: U164(tt(),V1,V2) -> U165(isBool(V1),V2)
    32: U165(tt(),V2) -> U166(isBool(V2))
    33: U166(tt()) -> tt()
    34: U171(tt(),V1,V2) -> U172(isBoolKind(V1),V1,V2)
    35: U172(tt(),V1,V2) -> U173(isBoolKind(V2),V1,V2)
    36: U173(tt(),V1,V2) -> U174(isBoolKind(V2),V1,V2)
    37: U174(tt(),V1,V2) -> U175(isBool(V1),V2)
    38: U175(tt(),V2) -> U176(isBool(V2))
    39: U176(tt()) -> tt()
    40: U181(tt(),V1,V2) -> U182(isBoolKind(V1),V1,V2)
    41: U182(tt(),V1,V2) -> U183(isBoolKind(V2),V1,V2)
    42: U183(tt(),V1,V2) -> U184(isBoolKind(V2),V1,V2)
    43: U184(tt(),V1,V2) -> U185(isBool(V1),V2)
    44: U185(tt(),V2) -> U186(isBool(V2))
    45: U186(tt()) -> tt()
    46: U191(tt(),V1) -> U192(isBoolKind(V1),V1)
    47: U192(tt(),V1) -> U193(isBool(V1))
    48: U193(tt()) -> tt()
    49: U201(tt(),V2) -> U202(isBoolKind(V2))
    50: U202(tt()) -> tt()
    51: U21(tt(),A,B,C) -> U22(isBoolKind(A),A,B,C)
    52: U211(tt(),V2) -> U212(isBoolKind(V2))
    53: U212(tt()) -> tt()
    54: U22(tt(),A,B,C) -> U23(isBool(B),A,B,C)
    55: U221(tt(),V2) -> U222(isBoolKind(V2))
    56: U222(tt()) -> tt()
    57: U23(tt(),A,B,C) -> U24(isBoolKind(B),A,B,C)
    58: U231(tt(),V2) -> U232(isBoolKind(V2))
    59: U232(tt()) -> tt()
    60: U24(tt(),A,B,C) -> U25(isBool(C),A,B,C)
    61: U241(tt()) -> tt()
    62: U25(tt(),A,B,C) -> U26(isBoolKind(C),A,B,C)
    63: U251(tt(),A) -> U252(isBoolKind(A),A)
    64: U252(tt(),A) -> _xor_(A,true())
    65: U26(tt(),A,B,C) -> _xor_(_and_(A,B),_and_(A,C))
    66: U31(tt(),A) -> U32(isBoolKind(A))
    67: U32(tt()) -> false()
    68: U41(tt(),A) -> U42(isBoolKind(A),A)
    69: U42(tt(),A) -> A
    70: U51(tt(),A,B) -> U52(isBoolKind(A),A,B)
    71: U52(tt(),A,B) -> U53(isBool(B),A,B)
    72: U53(tt(),A,B) -> U54(isBoolKind(B),A,B)
    73: U54(tt(),A,B) -> not_(_xor_(A,_and_(A,B)))
    74: U61(tt(),U',U) -> U62(isSKind(U'),U',U)
    75: U62(tt(),U',U) -> U63(isS(U),U',U)
    76: U63(tt(),U',U) -> U64(isSKind(U),U',U)
    77: U64(tt(),U',U) -> U65(equal(_isNotEqualTo_(U,U'),true()))
    78: U65(tt()) -> false()
    79: U71(tt(),U) -> U72(isSKind(U))
    80: U72(tt()) -> true()
    81: U81(tt(),U',U) -> U82(isSKind(U'),U',U)
    82: U82(tt(),U',U) -> U83(isS(U),U',U)
    83: U83(tt(),U',U) -> U84(isSKind(U),U',U)
    84: U84(tt(),U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false(),true())
    85: U91(tt(),U) -> U92(isSKind(U))
    86: U92(tt()) -> false()
    87: _and_(A,A) -> U11(isBool(A),A)
    88: _and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C)
    89: _and_(false(),A) -> U31(isBool(A),A)
    90: _and_(true(),A) -> U41(isBool(A),A)
    91: _implies_(A,B) -> U51(isBool(A),A,B)
    92: _isEqualTo_(U,U') -> U61(isS(U'),U',U)
    93: _isEqualTo_(U,U) -> U71(isS(U),U)
    94: _isNotEqualTo_(U,U') -> U81(isS(U'),U',U)
    95: _isNotEqualTo_(U,U) -> U91(isS(U),U)
    96: _or_(A,B) -> U101(isBool(A),A,B)
    97: _xor_(A,A) -> U111(isBool(A),A)
    98: _xor_(false(),A) -> U121(isBool(A),A)
    99: equal(X,X) -> tt()
    100: if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U)
    101: if_then_else_fi(true(),U,U') -> U141(isS(U'),U',U)
    102: isBool(false()) -> tt()
    103: isBool(true()) -> tt()
    104: isBool(_and_(V1,V2)) -> U151(isBoolKind(V1),V1,V2)
    105: isBool(_implies_(V1,V2)) -> U161(isBoolKind(V1),V1,V2)
    106: isBool(_isEqualTo_(V1,V2)) -> tt()
    107: isBool(_isNotEqualTo_(V1,V2)) -> tt()
    108: isBool(_or_(V1,V2)) -> U171(isBoolKind(V1),V1,V2)
    109: isBool(_xor_(V1,V2)) -> U181(isBoolKind(V1),V1,V2)
    110: isBool(not_(V1)) -> U191(isBoolKind(V1),V1)
    111: isBoolKind(false()) -> tt()
    112: isBoolKind(true()) -> tt()
    113: isBoolKind(_and_(V1,V2)) -> U201(isBoolKind(V1),V2)
    114: isBoolKind(_implies_(V1,V2)) -> U211(isBoolKind(V1),V2)
    115: isBoolKind(_isEqualTo_(V1,V2)) -> tt()
    116: isBoolKind(_isNotEqualTo_(V1,V2)) -> tt()
    117: isBoolKind(_or_(V1,V2)) -> U221(isBoolKind(V1),V2)
    118: isBoolKind(_xor_(V1,V2)) -> U231(isBoolKind(V1),V2)
    119: isBoolKind(not_(V1)) -> U241(isBoolKind(V1))
    120: not_(A) -> U251(isBool(A),A)
    121: not_(false()) -> true()
    122: not_(true()) -> false()
Number of strict rules: 122
Direct Order(PosReal,>,Poly) ... failed.
Freezing U71 U91 U133 U142 U62 U143 U72 U144 U63 U64 U82 U136 U81 U84 U134 U92 U83 U141 U61 U135
AC symbols: _and_ _xor_ _or_
1: U101(tt(),A,B) -> U102(isBoolKind(A),A,B)
2: U102(tt(),A,B) -> U103(isBool(B),A,B)
3: U103(tt(),A,B) -> U104(isBoolKind(B),A,B)
4: U104(tt(),A,B) -> _xor_(_and_(A,B),_xor_(A,B))
5: U11(tt(),A) -> U12(isBoolKind(A),A)
6: U111(tt(),A) -> U112(isBoolKind(A))
7: U112(tt()) -> false()
8: U12(tt(),A) -> A
9: U121(tt(),A) -> U122(isBoolKind(A),A)
10: U122(tt(),A) -> A
11: U131(tt(),B,U',U) -> U132(isBoolKind(B),B,U',U)
12: U132(tt(),B,U',U) -> U133❆1_isS(U',B,U',U)
13: U133❆1_tt(B,U',U) -> U134❆1_isSKind(U',B,U',U)
14: U134❆1_tt(B,U',U) -> U135❆1_isS(U,B,U',U)
15: U135❆1_tt(B,U',U) -> U136❆1_isSKind(U,B,U')
16: U136❆1_tt(B,U') -> U137(equal(_isNotEqualTo_(B,true()),true()),U')
17: U137(tt(),U') -> U'
18: U141❆1_tt(U',U) -> U142❆1_isSKind(U',U)
19: U142❆1_tt(U) -> U143❆1_isS(U,U)
20: U143❆1_tt(U) -> U144❆1_isSKind(U,U)
21: U144❆1_tt(U) -> U
22: U151(tt(),V1,V2) -> U152(isBoolKind(V1),V1,V2)
23: U152(tt(),V1,V2) -> U153(isBoolKind(V2),V1,V2)
24: U153(tt(),V1,V2) -> U154(isBoolKind(V2),V1,V2)
25: U154(tt(),V1,V2) -> U155(isBool(V1),V2)
26: U155(tt(),V2) -> U156(isBool(V2))
27: U156(tt()) -> tt()
28: U161(tt(),V1,V2) -> U162(isBoolKind(V1),V1,V2)
29: U162(tt(),V1,V2) -> U163(isBoolKind(V2),V1,V2)
30: U163(tt(),V1,V2) -> U164(isBoolKind(V2),V1,V2)
31: U164(tt(),V1,V2) -> U165(isBool(V1),V2)
32: U165(tt(),V2) -> U166(isBool(V2))
33: U166(tt()) -> tt()
34: U171(tt(),V1,V2) -> U172(isBoolKind(V1),V1,V2)
35: U172(tt(),V1,V2) -> U173(isBoolKind(V2),V1,V2)
36: U173(tt(),V1,V2) -> U174(isBoolKind(V2),V1,V2)
37: U174(tt(),V1,V2) -> U175(isBool(V1),V2)
38: U175(tt(),V2) -> U176(isBool(V2))
39: U176(tt()) -> tt()
40: U181(tt(),V1,V2) -> U182(isBoolKind(V1),V1,V2)
41: U182(tt(),V1,V2) -> U183(isBoolKind(V2),V1,V2)
42: U183(tt(),V1,V2) -> U184(isBoolKind(V2),V1,V2)
43: U184(tt(),V1,V2) -> U185(isBool(V1),V2)
44: U185(tt(),V2) -> U186(isBool(V2))
45: U186(tt()) -> tt()
46: U191(tt(),V1) -> U192(isBoolKind(V1),V1)
47: U192(tt(),V1) -> U193(isBool(V1))
48: U193(tt()) -> tt()
49: U201(tt(),V2) -> U202(isBoolKind(V2))
50: U202(tt()) -> tt()
51: U21(tt(),A,B,C) -> U22(isBoolKind(A),A,B,C)
52: U211(tt(),V2) -> U212(isBoolKind(V2))
53: U212(tt()) -> tt()
54: U22(tt(),A,B,C) -> U23(isBool(B),A,B,C)
55: U221(tt(),V2) -> U222(isBoolKind(V2))
56: U222(tt()) -> tt()
57: U23(tt(),A,B,C) -> U24(isBoolKind(B),A,B,C)
58: U231(tt(),V2) -> U232(isBoolKind(V2))
59: U232(tt()) -> tt()
60: U24(tt(),A,B,C) -> U25(isBool(C),A,B,C)
61: U241(tt()) -> tt()
62: U25(tt(),A,B,C) -> U26(isBoolKind(C),A,B,C)
63: U251(tt(),A) -> U252(isBoolKind(A),A)
64: U252(tt(),A) -> _xor_(A,true())
65: U26(tt(),A,B,C) -> _xor_(_and_(A,B),_and_(A,C))
66: U31(tt(),A) -> U32(isBoolKind(A))
67: U32(tt()) -> false()
68: U41(tt(),A) -> U42(isBoolKind(A),A)
69: U42(tt(),A) -> A
70: U51(tt(),A,B) -> U52(isBoolKind(A),A,B)
71: U52(tt(),A,B) -> U53(isBool(B),A,B)
72: U53(tt(),A,B) -> U54(isBoolKind(B),A,B)
73: U54(tt(),A,B) -> not_(_xor_(A,_and_(A,B)))
74: U61❆1_tt(U',U) -> U62❆1_isSKind(U',U',U)
75: U62❆1_tt(U',U) -> U63❆1_isS(U,U',U)
76: U63❆1_tt(U',U) -> U64❆1_isSKind(U,U',U)
77: U64❆1_tt(U',U) -> U65(equal(_isNotEqualTo_(U,U'),true()))
78: U65(tt()) -> false()
79: U71❆1_tt(U) -> U72❆1_isSKind(U)
80: U72❆1_tt() -> true()
81: U81❆1_tt(U',U) -> U82❆1_isSKind(U',U',U)
82: U82❆1_tt(U',U) -> U83❆1_isS(U,U',U)
83: U83❆1_tt(U',U) -> U84❆1_isSKind(U,U',U)
84: U84❆1_tt(U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false(),true())
85: U91❆1_tt(U) -> U92❆1_isSKind(U)
86: U92❆1_tt() -> false()
87: _and_(A,A) -> U11(isBool(A),A)
88: _and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C)
89: _and_(false(),A) -> U31(isBool(A),A)
90: _and_(true(),A) -> U41(isBool(A),A)
91: _implies_(A,B) -> U51(isBool(A),A,B)
92: _isEqualTo_(U,U') -> U61❆1_isS(U',U',U)
93: _isEqualTo_(U,U) -> U71❆1_isS(U,U)
94: _isNotEqualTo_(U,U') -> U81❆1_isS(U',U',U)
95: _isNotEqualTo_(U,U) -> U91❆1_isS(U,U)
96: _or_(A,B) -> U101(isBool(A),A,B)
97: _xor_(A,A) -> U111(isBool(A),A)
98: _xor_(false(),A) -> U121(isBool(A),A)
99: equal(X,X) -> tt()
100: if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U)
101: if_then_else_fi(true(),U,U') -> U141❆1_isS(U',U',U)
102: isBool(false()) -> tt()
103: isBool(true()) -> tt()
104: isBool(_and_(V1,V2)) -> U151(isBoolKind(V1),V1,V2)
105: isBool(_implies_(V1,V2)) -> U161(isBoolKind(V1),V1,V2)
106: isBool(_isEqualTo_(V1,V2)) -> tt()
107: isBool(_isNotEqualTo_(V1,V2)) -> tt()
108: isBool(_or_(V1,V2)) -> U171(isBoolKind(V1),V1,V2)
109: isBool(_xor_(V1,V2)) -> U181(isBoolKind(V1),V1,V2)
110: isBool(not_(V1)) -> U191(isBoolKind(V1),V1)
111: isBoolKind(false()) -> tt()
112: isBoolKind(true()) -> tt()
113: isBoolKind(_and_(V1,V2)) -> U201(isBoolKind(V1),V2)
114: isBoolKind(_implies_(V1,V2)) -> U211(isBoolKind(V1),V2)
115: isBoolKind(_isEqualTo_(V1,V2)) -> tt()
116: isBoolKind(_isNotEqualTo_(V1,V2)) -> tt()
117: isBoolKind(_or_(V1,V2)) -> U221(isBoolKind(V1),V2)
118: isBoolKind(_xor_(V1,V2)) -> U231(isBoolKind(V1),V2)
119: isBoolKind(not_(V1)) -> U241(isBoolKind(V1))
120: not_(A) -> U251(isBool(A),A)
121: not_(false()) -> true()
122: not_(true()) -> false()
123: U135(tt(),_3,_4,_5) ->= U135❆1_tt(_3,_4,_5)
124: U135(isS(_1),_4,_5,_6) ->= U135❆1_isS(_1,_4,_5,_6)
125: U61(tt(),_2,_3) ->= U61❆1_tt(_2,_3)
126: U61(isS(_1),_3,_4) ->= U61❆1_isS(_1,_3,_4)
127: U141(tt(),_2,_3) ->= U141❆1_tt(_2,_3)
128: U141(isS(_1),_3,_4) ->= U141❆1_isS(_1,_3,_4)
129: U83(tt(),_2,_3) ->= U83❆1_tt(_2,_3)
130: U83(isS(_1),_3,_4) ->= U83❆1_isS(_1,_3,_4)
131: U92(isSKind(_1)) ->= U92❆1_isSKind(_1)
132: U92(tt()) ->= U92❆1_tt()
133: U134(isSKind(_1),_4,_5,_6) ->= U134❆1_isSKind(_1,_4,_5,_6)
134: U134(tt(),_3,_4,_5) ->= U134❆1_tt(_3,_4,_5)
135: U84(isSKind(_1),_3,_4) ->= U84❆1_isSKind(_1,_3,_4)
136: U84(tt(),_2,_3) ->= U84❆1_tt(_2,_3)
137: U81(tt(),_2,_3) ->= U81❆1_tt(_2,_3)
138: U81(isS(_1),_3,_4) ->= U81❆1_isS(_1,_3,_4)
139: U136(isSKind(_1),_3,_4) ->= U136❆1_isSKind(_1,_3,_4)
140: U136(tt(),_2,_3) ->= U136❆1_tt(_2,_3)
141: U82(isSKind(_1),_3,_4) ->= U82❆1_isSKind(_1,_3,_4)
142: U82(tt(),_2,_3) ->= U82❆1_tt(_2,_3)
143: U64(isSKind(_1),_3,_4) ->= U64❆1_isSKind(_1,_3,_4)
144: U64(tt(),_2,_3) ->= U64❆1_tt(_2,_3)
145: U63(tt(),_2,_3) ->= U63❆1_tt(_2,_3)
146: U63(isS(_1),_3,_4) ->= U63❆1_isS(_1,_3,_4)
147: U144(isSKind(_1),_2) ->= U144❆1_isSKind(_1,_2)
148: U144(tt(),_1) ->= U144❆1_tt(_1)
149: U72(isSKind(_1)) ->= U72❆1_isSKind(_1)
150: U72(tt()) ->= U72❆1_tt()
151: U143(tt(),_1) ->= U143❆1_tt(_1)
152: U143(isS(_1),_2) ->= U143❆1_isS(_1,_2)
153: U62(isSKind(_1),_3,_4) ->= U62❆1_isSKind(_1,_3,_4)
154: U62(tt(),_2,_3) ->= U62❆1_tt(_2,_3)
155: U142(isSKind(_1),_2) ->= U142❆1_isSKind(_1,_2)
156: U142(tt(),_1) ->= U142❆1_tt(_1)
157: U133(isS(_1),_4,_5,_6) ->= U133❆1_isS(_1,_4,_5,_6)
158: U133(tt(),_3,_4,_5) ->= U133❆1_tt(_3,_4,_5)
159: U91(isS(_1),_2) ->= U91❆1_isS(_1,_2)
160: U91(tt(),_1) ->= U91❆1_tt(_1)
161: U71(isS(_1),_2) ->= U71❆1_isS(_1,_2)
162: U71(tt(),_1) ->= U71❆1_tt(_1)
Number of strict rules: 122
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #U102(tt(),A,B) -> #U103(isBool(B),A,B)
   #2: #U102(tt(),A,B) -> #isBool(B)
   #3: #U184(tt(),V1,V2) -> #U185(isBool(V1),V2)
   #4: #U184(tt(),V1,V2) -> #isBool(V1)
   #5: #U162(tt(),V1,V2) -> #U163(isBoolKind(V2),V1,V2)
   #6: #U162(tt(),V1,V2) -> #isBoolKind(V2)
   #7: #U172(tt(),V1,V2) -> #U173(isBoolKind(V2),V1,V2)
   #8: #U172(tt(),V1,V2) -> #isBoolKind(V2)
   #9: #U31(tt(),A) -> #U32(isBoolKind(A))
   #10: #U31(tt(),A) -> #isBoolKind(A)
   #11: #U191(tt(),V1) -> #U192(isBoolKind(V1),V1)
   #12: #U191(tt(),V1) -> #isBoolKind(V1)
   #13: #U183(tt(),V1,V2) -> #U184(isBoolKind(V2),V1,V2)
   #14: #U183(tt(),V1,V2) -> #isBoolKind(V2)
   #15: #U182(tt(),V1,V2) -> #U183(isBoolKind(V2),V1,V2)
   #16: #U182(tt(),V1,V2) -> #isBoolKind(V2)
   #17: #U174(tt(),V1,V2) -> #U175(isBool(V1),V2)
   #18: #U174(tt(),V1,V2) -> #isBool(V1)
   #19: #isBoolKind(_implies_(V1,V2)) -> #U211(isBoolKind(V1),V2)
   #20: #isBoolKind(_implies_(V1,V2)) -> #isBoolKind(V1)
   #21: #_and_(x,_and_(y,z)) ->= #_and_(_and_(x,y),z)
   #22: #_and_(x,_and_(y,z)) ->= #_and_(x,y)
   #23: #_xor_(A,A) -> #U111(isBool(A),A)
   #24: #_xor_(A,A) -> #isBool(A)
   #25: #_implies_(A,B) -> #U51(isBool(A),A,B)
   #26: #_implies_(A,B) -> #isBool(A)
   #27: #U54(tt(),A,B) -> #not_(_xor_(A,_and_(A,B)))
   #28: #U54(tt(),A,B) -> #_xor_(A,_and_(A,B))
   #29: #U54(tt(),A,B) -> #_and_(A,B)
   #30: #U192(tt(),V1) -> #U193(isBool(V1))
   #31: #U192(tt(),V1) -> #isBool(V1)
   #32: #U52(tt(),A,B) -> #U53(isBool(B),A,B)
   #33: #U52(tt(),A,B) -> #isBool(B)
   #34: #U135(tt(),_3,_4,_5) ->? #U135❆1_tt(_3,_4,_5)
   #35: #U231(tt(),V2) -> #U232(isBoolKind(V2))
   #36: #U231(tt(),V2) -> #isBoolKind(V2)
   #37: #isBoolKind(_and_(V1,V2)) -> #U201(isBoolKind(V1),V2)
   #38: #isBoolKind(_and_(V1,V2)) -> #isBoolKind(V1)
   #39: #U133(tt(),_3,_4,_5) ->? #U133❆1_tt(_3,_4,_5)
   #40: #U175(tt(),V2) -> #U176(isBool(V2))
   #41: #U175(tt(),V2) -> #isBool(V2)
   #42: #U143(tt(),_1) ->? #U143❆1_tt(_1)
   #43: #U62(tt(),_2,_3) ->? #U62❆1_tt(_2,_3)
   #44: #U111(tt(),A) -> #U112(isBoolKind(A))
   #45: #U111(tt(),A) -> #isBoolKind(A)
   #46: #_or_(x,_or_(y,z)) ->= #_or_(_or_(x,y),z)
   #47: #_or_(x,_or_(y,z)) ->= #_or_(x,y)
   #48: #isBool(not_(V1)) -> #U191(isBoolKind(V1),V1)
   #49: #isBool(not_(V1)) -> #isBoolKind(V1)
   #50: #U92(tt()) ->? #U92❆1_tt()
   #51: #U221(tt(),V2) -> #U222(isBoolKind(V2))
   #52: #U221(tt(),V2) -> #isBoolKind(V2)
   #53: #U181(tt(),V1,V2) -> #U182(isBoolKind(V1),V1,V2)
   #54: #U181(tt(),V1,V2) -> #isBoolKind(V1)
   #55: #_and_(true(),A) -> #U41(isBool(A),A)
   #56: #_and_(true(),A) -> #isBool(A)
   #57: #U21(tt(),A,B,C) -> #U22(isBoolKind(A),A,B,C)
   #58: #U21(tt(),A,B,C) -> #isBoolKind(A)
   #59: #U121(tt(),A) -> #U122(isBoolKind(A),A)
   #60: #U121(tt(),A) -> #isBoolKind(A)
   #61: #U131(tt(),B,U',U) -> #U132(isBoolKind(B),B,U',U)
   #62: #U131(tt(),B,U',U) -> #isBoolKind(B)
   #63: #_xor_(false(),A) -> #U121(isBool(A),A)
   #64: #_xor_(false(),A) -> #isBool(A)
   #65: #U142(tt(),_1) ->? #U142❆1_tt(_1)
   #66: #U23(tt(),A,B,C) -> #U24(isBoolKind(B),A,B,C)
   #67: #U23(tt(),A,B,C) -> #isBoolKind(B)
   #68: #isBool(_xor_(V1,V2)) -> #U181(isBoolKind(V1),V1,V2)
   #69: #isBool(_xor_(V1,V2)) -> #isBoolKind(V1)
   #70: #U153(tt(),V1,V2) -> #U154(isBoolKind(V2),V1,V2)
   #71: #U153(tt(),V1,V2) -> #isBoolKind(V2)
   #72: #U134(tt(),_3,_4,_5) ->? #U134❆1_tt(_3,_4,_5)
   #73: #U51(tt(),A,B) -> #U52(isBoolKind(A),A,B)
   #74: #U51(tt(),A,B) -> #isBoolKind(A)
   #75: #U152(tt(),V1,V2) -> #U153(isBoolKind(V2),V1,V2)
   #76: #U152(tt(),V1,V2) -> #isBoolKind(V2)
   #77: #isBoolKind(_xor_(V1,V2)) -> #U231(isBoolKind(V1),V2)
   #78: #isBoolKind(_xor_(V1,V2)) -> #isBoolKind(V1)
   #79: #_or_(A,B) -> #U101(isBool(A),A,B)
   #80: #_or_(A,B) -> #isBool(A)
   #81: #U164(tt(),V1,V2) -> #U165(isBool(V1),V2)
   #82: #U164(tt(),V1,V2) -> #isBool(V1)
   #83: #_xor_(x,_xor_(y,z)) ->= #_xor_(_xor_(x,y),z)
   #84: #_xor_(x,_xor_(y,z)) ->= #_xor_(x,y)
   #85: #_and_(false(),A) -> #U31(isBool(A),A)
   #86: #_and_(false(),A) -> #isBool(A)
   #87: #U25(tt(),A,B,C) -> #U26(isBoolKind(C),A,B,C)
   #88: #U25(tt(),A,B,C) -> #isBoolKind(C)
   #89: #U163(tt(),V1,V2) -> #U164(isBoolKind(V2),V1,V2)
   #90: #U163(tt(),V1,V2) -> #isBoolKind(V2)
   #91: #U211(tt(),V2) -> #U212(isBoolKind(V2))
   #92: #U211(tt(),V2) -> #isBoolKind(V2)
   #93: #U201(tt(),V2) -> #U202(isBoolKind(V2))
   #94: #U201(tt(),V2) -> #isBoolKind(V2)
   #95: #U154(tt(),V1,V2) -> #U155(isBool(V1),V2)
   #96: #U154(tt(),V1,V2) -> #isBool(V1)
   #97: #isBool(_or_(V1,V2)) -> #U171(isBoolKind(V1),V1,V2)
   #98: #isBool(_or_(V1,V2)) -> #isBoolKind(V1)
   #99: #U83(tt(),_2,_3) ->? #U83❆1_tt(_2,_3)
   #100: #_and_(A,_xor_(B,C)) -> #U21(isBool(A),A,B,C)
   #101: #_and_(A,_xor_(B,C)) -> #isBool(A)
   #102: #U84(tt(),_2,_3) ->? #U84❆1_tt(_2,_3)
   #103: #isBoolKind(not_(V1)) -> #U241(isBoolKind(V1))
   #104: #isBoolKind(not_(V1)) -> #isBoolKind(V1)
   #105: #U252(tt(),A) -> #_xor_(A,true())
   #106: #U53(tt(),A,B) -> #U54(isBoolKind(B),A,B)
   #107: #U53(tt(),A,B) -> #isBoolKind(B)
   #108: #U71(tt(),_1) ->? #U71❆1_tt(_1)
   #109: #not_(A) -> #U251(isBool(A),A)
   #110: #not_(A) -> #isBool(A)
   #111: #U11(tt(),A) -> #U12(isBoolKind(A),A)
   #112: #U11(tt(),A) -> #isBoolKind(A)
   #113: #U185(tt(),V2) -> #U186(isBool(V2))
   #114: #U185(tt(),V2) -> #isBool(V2)
   #115: #U26(tt(),A,B,C) -> #_xor_(_and_(A,B),_and_(A,C))
   #116: #U26(tt(),A,B,C) -> #_and_(A,B)
   #117: #U26(tt(),A,B,C) -> #_and_(A,C)
   #118: #U144(tt(),_1) ->? #U144❆1_tt(_1)
   #119: #U161(tt(),V1,V2) -> #U162(isBoolKind(V1),V1,V2)
   #120: #U161(tt(),V1,V2) -> #isBoolKind(V1)
   #121: #U151(tt(),V1,V2) -> #U152(isBoolKind(V1),V1,V2)
   #122: #U151(tt(),V1,V2) -> #isBoolKind(V1)
   #123: #U141(tt(),_2,_3) ->? #U141❆1_tt(_2,_3)
   #124: #U171(tt(),V1,V2) -> #U172(isBoolKind(V1),V1,V2)
   #125: #U171(tt(),V1,V2) -> #isBoolKind(V1)
   #126: #U84❆1_tt(U',U) -> #if_then_else_fi(_isEqualTo_(U,U'),false(),true())
   #127: #U84❆1_tt(U',U) -> #_isEqualTo_(U,U')
   #128: #_and_(A,A) -> #U11(isBool(A),A)
   #129: #_and_(A,A) -> #isBool(A)
   #130: #U81(tt(),_2,_3) ->? #U81❆1_tt(_2,_3)
   #131: #U64(tt(),_2,_3) ->? #U64❆1_tt(_2,_3)
   #132: #U82(tt(),_2,_3) ->? #U82❆1_tt(_2,_3)
   #133: #U72(tt()) ->? #U72❆1_tt()
   #134: #U24(tt(),A,B,C) -> #U25(isBool(C),A,B,C)
   #135: #U24(tt(),A,B,C) -> #isBool(C)
   #136: #isBoolKind(_or_(V1,V2)) -> #U221(isBoolKind(V1),V2)
   #137: #isBoolKind(_or_(V1,V2)) -> #isBoolKind(V1)
   #138: #U165(tt(),V2) -> #U166(isBool(V2))
   #139: #U165(tt(),V2) -> #isBool(V2)
   #140: #U61(tt(),_2,_3) ->? #U61❆1_tt(_2,_3)
   #141: #U251(tt(),A) -> #U252(isBoolKind(A),A)
   #142: #U251(tt(),A) -> #isBoolKind(A)
   #143: #isBool(_implies_(V1,V2)) -> #U161(isBoolKind(V1),V1,V2)
   #144: #isBool(_implies_(V1,V2)) -> #isBoolKind(V1)
   #145: #U155(tt(),V2) -> #U156(isBool(V2))
   #146: #U155(tt(),V2) -> #isBool(V2)
   #147: #if_then_else_fi(B,U,U') -> #U131(isBool(B),B,U',U)
   #148: #if_then_else_fi(B,U,U') -> #isBool(B)
   #149: #U41(tt(),A) -> #U42(isBoolKind(A),A)
   #150: #U41(tt(),A) -> #isBoolKind(A)
   #151: #U173(tt(),V1,V2) -> #U174(isBoolKind(V2),V1,V2)
   #152: #U173(tt(),V1,V2) -> #isBoolKind(V2)
   #153: #U136❆1_tt(B,U') -> #U137(equal(_isNotEqualTo_(B,true()),true()),U')
   #154: #U136❆1_tt(B,U') -> #equal(_isNotEqualTo_(B,true()),true())
   #155: #U136❆1_tt(B,U') -> #_isNotEqualTo_(B,true())
   #156: #U103(tt(),A,B) -> #U104(isBoolKind(B),A,B)
   #157: #U103(tt(),A,B) -> #isBoolKind(B)
   #158: #U64❆1_tt(U',U) -> #U65(equal(_isNotEqualTo_(U,U'),true()))
   #159: #U64❆1_tt(U',U) -> #equal(_isNotEqualTo_(U,U'),true())
   #160: #U64❆1_tt(U',U) -> #_isNotEqualTo_(U,U')
   #161: #U101(tt(),A,B) -> #U102(isBoolKind(A),A,B)
   #162: #U101(tt(),A,B) -> #isBoolKind(A)
   #163: #U136(tt(),_2,_3) ->? #U136❆1_tt(_2,_3)
   #164: #U22(tt(),A,B,C) -> #U23(isBool(B),A,B,C)
   #165: #U22(tt(),A,B,C) -> #isBool(B)
   #166: #U91(tt(),_1) ->? #U91❆1_tt(_1)
   #167: #U63(tt(),_2,_3) ->? #U63❆1_tt(_2,_3)
   #168: #U104(tt(),A,B) -> #_xor_(_and_(A,B),_xor_(A,B))
   #169: #U104(tt(),A,B) -> #_and_(A,B)
   #170: #U104(tt(),A,B) -> #_xor_(A,B)
   #171: #isBool(_and_(V1,V2)) -> #U151(isBoolKind(V1),V1,V2)
   #172: #isBool(_and_(V1,V2)) -> #isBoolKind(V1)
Number of SCCs: 5, DPs: 58, edges: 183
	SCC { #83 #84 }
Removing DPs: only weak rules.
Number of SCCs: 4, DPs: 58, edges: 183
	SCC { #46 #47 }
Removing DPs: only weak rules.
Number of SCCs: 3, DPs: 58, edges: 183
	SCC { #19 #20 #36..38 #52 #77 #78 #92 #94 #104 #136 #137 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
U144❆1_isSKind(x1,x2)	weight: 0
#U201(x1,x2)	weight: (/ 1 4) + x2
  U231(x1,x2)	weight: 0
 #U72(x1)	weight: 0
 #U32(x1)	weight: 0
   U21(x1,x2,x3,x4)	weight: 0
 #U83(x1,x2,x3)	weight: 0
#U64❆1_tt(x1,x2)	weight: 0
#U175(x1,x2)	weight: 0
 _and_(x1,x2)	weight: (/ 1 2) + x1 + x2
  U193(x1)	weight: 0
#U156(x1)	weight: 0
U141❆1_tt(x1,x2)	weight: 0
  U161(x1,x2,x3)	weight: 0
  U155(x1,x2)	weight: 0
  U182(x1,x2,x3)	weight: 0
U91❆1_tt(x1)	weight: 0
   U11(x1,x2)	weight: 0
#U144(x1,x2)	weight: 0
  U136(x1,x2,x3)	weight: 0
U61❆1_isS(x1,x2,x3)	weight: 0
U72❆1_tt()	weight: 0
#U142❆1_tt(x1)	weight: 0
#U61❆1_tt(x1,x2)	weight: 0
   U64(x1,x2,x3)	weight: 0
U143❆1_tt(x1)	weight: 0
U81❆1_isS(x1,x2,x3)	weight: 0
  U143(x1,x2)	weight: 0
#_isNotEqualTo_(x1,x2)	weight: 0
#U142(x1,x2)	weight: 0
  U166(x1)	weight: 0
  U192(x1,x2)	weight: 0
   U24(x1,x2,x3,x4)	weight: 0
U63❆1_isS(x1,x2,x3)	weight: 0
  not_(x1)	weight: (/ 1 4) + x1
 #U24(x1,x2,x3,x4)	weight: 0
  U142(x1,x2)	weight: 0
   U25(x1,x2,x3,x4)	weight: 0
#U165(x1,x2)	weight: 0
#U134❆1_tt(x1,x2,x3)	weight: 0
#U152(x1,x2,x3)	weight: 0
#U181(x1,x2,x3)	weight: 0
#_and_(x1,x2)	weight: 0
#isBoolKind(x1)	weight: x1
   U42(x1,x2)	weight: 0
   U91(x1,x2)	weight: 0
  U221(x1,x2)	weight: 0
U92❆1_isSKind(x1)	weight: 0
U134❆1_tt(x1,x2,x3)	weight: 0
U81❆1_tt(x1,x2)	weight: 0
#U101(x1,x2,x3)	weight: 0
#equal(x1,x2)	weight: 0
   U26(x1,x2,x3,x4)	weight: 0
U82❆1_isSKind(x1,x2,x3)	weight: 0
 #U82(x1,x2,x3)	weight: 0
#U135❆1_tt(x1,x2,x3)	weight: 0
#U72❆1_tt()	weight: 0
U133❆1_tt(x1,x2,x3)	weight: 0
U136❆1_isSKind(x1,x2,x3)	weight: 0
#U183(x1,x2,x3)	weight: 0
#U104(x1,x2,x3)	weight: 0
   U71(x1,x2)	weight: 0
 #U81(x1,x2,x3)	weight: 0
#U133(x1,x2,x3,x4)	weight: 0
 #U92(x1)	weight: 0
U83❆1_tt(x1,x2)	weight: 0
#isBool(x1)	weight: 0
  U131(x1,x2,x3,x4)	weight: 0
#U222(x1)	weight: 0
#U212(x1)	weight: 0
#U185(x1,x2)	weight: 0
  U135(x1,x2,x3,x4)	weight: 0
  U101(x1,x2,x3)	weight: 0
  _or_(x1,x2)	weight: (/ 1 2) + x1 + x2
#U231(x1,x2)	weight: (/ 1 4) + x2
#U136(x1,x2,x3)	weight: 0
  U111(x1,x2)	weight: 0
  U132(x1,x2,x3,x4)	weight: 0
U61❆1_tt(x1,x2)	weight: 0
  U152(x1,x2,x3)	weight: 0
  U103(x1,x2,x3)	weight: 0
isBool(x1)	weight: 0
 false()	weight: 0
#U155(x1,x2)	weight: 0
#U163(x1,x2,x3)	weight: 0
 #U23(x1,x2,x3,x4)	weight: 0
 #U53(x1,x2,x3)	weight: 0
#U164(x1,x2,x3)	weight: 0
#U63❆1_tt(x1,x2)	weight: 0
 #U65(x1)	weight: 0
#U121(x1,x2)	weight: 0
  U163(x1,x2,x3)	weight: 0
   U84(x1,x2,x3)	weight: 0
U71❆1_tt(x1)	weight: 0
U84❆1_isSKind(x1,x2,x3)	weight: 0
   U23(x1,x2,x3,x4)	weight: 0
#U133❆1_tt(x1,x2,x3)	weight: 0
  U174(x1,x2,x3)	weight: 0
U64❆1_tt(x1,x2)	weight: 0
   U63(x1,x2,x3)	weight: 0
  U172(x1,x2,x3)	weight: 0
  U144(x1,x2)	weight: 0
#U241(x1)	weight: 0
#U131(x1,x2,x3,x4)	weight: 0
   U72(x1)	weight: 0
U142❆1_isSKind(x1,x2)	weight: 0
#U143(x1,x2)	weight: 0
  U137(x1,x2)	weight: 0
  U241(x1)	weight: 0
#U176(x1)	weight: 0
U135❆1_isS(x1,x2,x3,x4)	weight: 0
U91❆1_isS(x1,x2)	weight: 0
 #U52(x1,x2,x3)	weight: 0
#U103(x1,x2,x3)	weight: 0
#U173(x1,x2,x3)	weight: 0
   U12(x1,x2)	weight: 0
#U166(x1)	weight: 0
#U84❆1_tt(x1,x2)	weight: 0
U63❆1_tt(x1,x2)	weight: 0
#U202(x1)	weight: 0
  true()	weight: 0
U82❆1_tt(x1,x2)	weight: 0
U143❆1_isS(x1,x2)	weight: 0
_implies_(x1,x2)	weight: (/ 1 2) + x1 + x2
 #U26(x1,x2,x3,x4)	weight: 0
#U62❆1_tt(x1,x2)	weight: 0
   U54(x1,x2,x3)	weight: 0
#U135(x1,x2,x3,x4)	weight: 0
#_implies_(x1,x2)	weight: 0
  U222(x1)	weight: 0
  U232(x1)	weight: 0
  U176(x1)	weight: 0
#U252(x1,x2)	weight: 0
#U81❆1_tt(x1,x2)	weight: 0
  U201(x1,x2)	weight: 0
 #U54(x1,x2,x3)	weight: 0
  U104(x1,x2,x3)	weight: 0
U135❆1_tt(x1,x2,x3)	weight: 0
 #U42(x1,x2)	weight: 0
#U141(x1,x2,x3)	weight: 0
  U252(x1,x2)	weight: 0
 #U12(x1,x2)	weight: 0
_isNotEqualTo_(x1,x2)	weight: (/ 1 4)
  U141(x1,x2,x3)	weight: 0
#U171(x1,x2,x3)	weight: 0
 #U62(x1,x2,x3)	weight: 0
   U83(x1,x2,x3)	weight: 0
#U136❆1_tt(x1,x2)	weight: 0
  U173(x1,x2,x3)	weight: 0
U133❆1_isS(x1,x2,x3,x4)	weight: 0
#_xor_(x1,x2)	weight: 0
 _xor_(x1,x2)	weight: (/ 1 2) + x1 + x2
  U191(x1,x2)	weight: 0
  U134(x1,x2,x3,x4)	weight: 0
U142❆1_tt(x1)	weight: 0
#U102(x1,x2,x3)	weight: 0
  U153(x1,x2,x3)	weight: 0
  U171(x1,x2,x3)	weight: 0
  U202(x1)	weight: 0
#U83❆1_tt(x1,x2)	weight: 0
#U141❆1_tt(x1,x2)	weight: 0
#U211(x1,x2)	weight: (/ 1 4) + x2
 #U25(x1,x2,x3,x4)	weight: 0
   U62(x1,x2,x3)	weight: 0
#U153(x1,x2,x3)	weight: 0
 #U63(x1,x2,x3)	weight: 0
  U165(x1,x2)	weight: 0
#U182(x1,x2,x3)	weight: 0
  U151(x1,x2,x3)	weight: 0
U83❆1_isS(x1,x2,x3)	weight: 0
  U133(x1,x2,x3,x4)	weight: 0
#U192(x1,x2)	weight: 0
#U111(x1,x2)	weight: 0
   U32(x1)	weight: 0
#U221(x1,x2)	weight: (/ 1 4) + x2
#U154(x1,x2,x3)	weight: 0
U141❆1_isS(x1,x2,x3)	weight: 0
#U232(x1)	weight: 0
#U251(x1,x2)	weight: 0
   isS(x1)	weight: 0
  U154(x1,x2,x3)	weight: 0
U84❆1_tt(x1,x2)	weight: 0
  U164(x1,x2,x3)	weight: 0
  U211(x1,x2)	weight: (/ 1 2) + x2
U92❆1_tt()	weight: 0
isBoolKind(x1)	weight: (/ 1 4)
U72❆1_isSKind(x1)	weight: 0
#U82❆1_tt(x1,x2)	weight: 0
#if_then_else_fi(x1,x2,x3)	weight: 0
  U251(x1,x2)	weight: 0
#U71❆1_tt(x1)	weight: 0
   U52(x1,x2,x3)	weight: 0
  U156(x1)	weight: 0
   U65(x1)	weight: 0
   U61(x1,x2,x3)	weight: 0
 #U51(x1,x2,x3)	weight: 0
#U134(x1,x2,x3,x4)	weight: 0
#not_(x1)	weight: 0
 #U11(x1,x2)	weight: 0
 #U64(x1,x2,x3)	weight: 0
   U31(x1,x2)	weight: 0
  U183(x1,x2,x3)	weight: 0
   U92(x1)	weight: 0
U64❆1_isSKind(x1,x2,x3)	weight: 0
U62❆1_tt(x1,x2)	weight: 0
  U112(x1)	weight: 0
#U193(x1)	weight: 0
#_isEqualTo_(x1,x2)	weight: 0
 #U41(x1,x2)	weight: 0
#U186(x1)	weight: 0
  U102(x1,x2,x3)	weight: 0
 equal(x1,x2)	weight: 0
U136❆1_tt(x1,x2)	weight: 0
#U91❆1_tt(x1)	weight: 0
#U191(x1,x2)	weight: 0
isSKind(x1)	weight: 0
 #U21(x1,x2,x3,x4)	weight: 0
   U81(x1,x2,x3)	weight: 0
#U144❆1_tt(x1)	weight: 0
   U82(x1,x2,x3)	weight: 0
U62❆1_isSKind(x1,x2,x3)	weight: 0
 #U22(x1,x2,x3,x4)	weight: 0
#U112(x1)	weight: 0
    tt()	weight: 0
 #U71(x1,x2)	weight: 0
 #U84(x1,x2,x3)	weight: 0
  U175(x1,x2)	weight: 0
U71❆1_isS(x1,x2)	weight: 0
#U151(x1,x2,x3)	weight: 0
  U184(x1,x2,x3)	weight: 0
#U162(x1,x2,x3)	weight: 0
#_or_(x1,x2)	weight: 0
   U22(x1,x2,x3,x4)	weight: 0
   U51(x1,x2,x3)	weight: 0
U144❆1_tt(x1)	weight: 0
#U161(x1,x2,x3)	weight: 0
#U172(x1,x2,x3)	weight: 0
#U137(x1,x2)	weight: 0
  U162(x1,x2,x3)	weight: 0
#U92❆1_tt()	weight: 0
U134❆1_isSKind(x1,x2,x3,x4)	weight: 0
#U122(x1,x2)	weight: 0
   U53(x1,x2,x3)	weight: 0
  U212(x1)	weight: (/ 3 4)
   U41(x1,x2)	weight: 0
_isEqualTo_(x1,x2)	weight: (/ 1 4)
 #U31(x1,x2)	weight: 0
#U184(x1,x2,x3)	weight: 0
 #U91(x1,x2)	weight: 0
  U186(x1)	weight: 0
if_then_else_fi(x1,x2,x3)	weight: 0
#U143❆1_tt(x1)	weight: 0
#U132(x1,x2,x3,x4)	weight: 0
  U121(x1,x2)	weight: 0
 #U61(x1,x2,x3)	weight: 0
  U181(x1,x2,x3)	weight: 0
  U122(x1,x2)	weight: 0
  U185(x1,x2)	weight: 0
#U174(x1,x2,x3)	weight: 0
    Usable rules: { 49 50 55 56 58 59 61 111..113 115..119 }
    Removed DPs: #19 #20 #36..38 #52 #77 #78 #92 #94 #104 #136 #137
Number of SCCs: 2, DPs: 45, edges: 98
	SCC { #21 #22 #57 #66 #87 #100 #116 #117 #134 #164 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS.