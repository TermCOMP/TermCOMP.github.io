Input TRS:
    AC symbols: plus times
    1: zero(S()) -> S()
    2: plus(x,S()) -> x
    3: plus(zero(x),zero(y)) -> zero(plus(x,y))
    4: plus(zero(x),un(y)) -> un(plus(x,y))
    5: plus(un(x),un(y)) -> zero(plus(x,plus(y,un(S()))))
    6: times(x,S()) -> S()
    7: times(x,times(S(),z)) -> times(S(),z)
    8: times(x,zero(y)) -> zero(times(x,y))
    9: times(x,times(zero(y),z)) -> times(zero(times(x,y)),z)
    10: times(x,un(y)) -> plus(x,zero(times(x,y)))
    11: times(x,times(un(y),z)) -> times(plus(x,zero(times(x,y))),z)
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #times(x,times(y,z)) ->= #times(times(x,y),z)
   #2: #times(x,times(y,z)) ->= #times(x,y)
   #3: #times(x,times(zero(y),z)) -> #times(zero(times(x,y)),z)
   #4: #times(x,times(zero(y),z)) -> #zero(times(x,y))
   #5: #times(x,times(zero(y),z)) -> #times(x,y)
   #6: #times(x,times(un(y),z)) -> #times(plus(x,zero(times(x,y))),z)
   #7: #times(x,times(un(y),z)) -> #plus(x,zero(times(x,y)))
   #8: #times(x,times(un(y),z)) -> #zero(times(x,y))
   #9: #times(x,times(un(y),z)) -> #times(x,y)
   #10: #plus(x,plus(y,z)) ->= #plus(plus(x,y),z)
   #11: #plus(x,plus(y,z)) ->= #plus(x,y)
   #12: #times(x,un(y)) -> #plus(x,zero(times(x,y)))
   #13: #times(x,un(y)) -> #zero(times(x,y))
   #14: #times(x,un(y)) -> #times(x,y)
   #15: #plus(un(x),un(y)) -> #zero(plus(x,plus(y,un(S()))))
   #16: #plus(un(x),un(y)) -> #plus(x,plus(y,un(S())))
   #17: #plus(un(x),un(y)) -> #plus(y,un(S()))
   #18: #plus(zero(x),zero(y)) -> #zero(plus(x,y))
   #19: #plus(zero(x),zero(y)) -> #plus(x,y)
   #20: #times(x,zero(y)) -> #zero(times(x,y))
   #21: #times(x,zero(y)) -> #times(x,y)
   #22: #plus(zero(x),un(y)) -> #plus(x,y)
Number of SCCs: 2, DPs: 14, edges: 100
	SCC { #10 #11 #16 #17 #19 #22 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: (/ 1 8) + x1
     S()	weight: 0
#plus(x1,x2)	weight: x1 + x2
#times(x1,x2)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: (/ 1 8) + x1 + x2
#zero(x1)	weight: 0
    un(x1)	weight: (/ 1 4) + x1
    Usable rules: { 1..5 12 }
    Removed DPs: #11 #16 #17 #19 #22
Number of SCCs: 2, DPs: 9, edges: 65
	SCC { #10 }
Removing DPs: only weak rules.
Number of SCCs: 1, DPs: 9, edges: 65
	SCC { #1..3 #5 #6 #9 #14 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
  zero(x1)	weight: max{0, x1}
     S()	weight: (/ 1 4)
#plus(x1,x2)	weight: 0
#times(x1,x2)	weight: x1 + x2
 times(x1,x2)	weight: (/ 1 4) + x1 + x2
  plus(x1,x2)	weight: max{(/ 1 4), max{x2, x1}}
#zero(x1)	weight: 0
    un(x1)	weight: max{0, x1}
    Usable rules: { 1..13 }
    Removed DPs: #2 #5 #9
Number of SCCs: 2, DPs: 6, edges: 26
	SCC { #1 #3 #6 #14 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
