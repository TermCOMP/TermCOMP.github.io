Input TRS:
    AC symbols: _or_ _and_ _xor_
    1: U101(tt(),A,B) -> U102(isBool(B),A,B)
    2: U102(tt(),A,B) -> _xor_(_and_(A,B),_xor_(A,B))
    3: U11(tt(),A) -> A
    4: U111(tt()) -> false()
    5: U121(tt(),A) -> A
    6: U131(tt(),B,U',U) -> U132(isS(U'),B,U',U)
    7: U132(tt(),B,U',U) -> U133(isS(U),B,U')
    8: U133(tt(),B,U') -> U134(equal(_isNotEqualTo_(B,true()),true()),U')
    9: U134(tt(),U') -> U'
    10: U141(tt(),U) -> U142(isS(U),U)
    11: U142(tt(),U) -> U
    12: U151(tt(),V2) -> U152(isBool(V2))
    13: U152(tt()) -> tt()
    14: U161(tt(),V2) -> U162(isBool(V2))
    15: U162(tt()) -> tt()
    16: U171(tt(),V2) -> U172(isUniversal(V2))
    17: U172(tt()) -> tt()
    18: U181(tt(),V2) -> U182(isUniversal(V2))
    19: U182(tt()) -> tt()
    20: U191(tt(),V2) -> U192(isBool(V2))
    21: U192(tt()) -> tt()
    22: U201(tt(),V2) -> U202(isBool(V2))
    23: U202(tt()) -> tt()
    24: U21(tt(),A,B,C) -> U22(isBool(B),A,B,C)
    25: U211(tt()) -> tt()
    26: U22(tt(),A,B,C) -> U23(isBool(C),A,B,C)
    27: U221(tt(),A) -> _xor_(A,true())
    28: U23(tt(),A,B,C) -> _xor_(_and_(A,B),_and_(A,C))
    29: U31(tt()) -> false()
    30: U41(tt(),A) -> A
    31: U51(tt(),A,B) -> U52(isBool(B),A,B)
    32: U52(tt(),A,B) -> not_(_xor_(A,_and_(A,B)))
    33: U61(tt(),U',U) -> U62(isS(U),U',U)
    34: U62(tt(),U',U) -> U63(equal(_isNotEqualTo_(U,U'),true()))
    35: U63(tt()) -> false()
    36: U71(tt()) -> true()
    37: U81(tt(),U',U) -> U82(isS(U),U',U)
    38: U82(tt(),U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false(),true())
    39: U91(tt()) -> false()
    40: _and_(A,A) -> U11(isBool(A),A)
    41: _and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C)
    42: _and_(false(),A) -> U31(isBool(A))
    43: _and_(true(),A) -> U41(isBool(A),A)
    44: _implies_(A,B) -> U51(isBool(A),A,B)
    45: _isEqualTo_(U,U') -> U61(isS(U'),U',U)
    46: _isEqualTo_(U,U) -> U71(isS(U))
    47: _isNotEqualTo_(U,U') -> U81(isS(U'),U',U)
    48: _isNotEqualTo_(U,U) -> U91(isS(U))
    49: _or_(A,B) -> U101(isBool(A),A,B)
    50: _xor_(A,A) -> U111(isBool(A))
    51: _xor_(false(),A) -> U121(isBool(A),A)
    52: equal(X,X) -> tt()
    53: if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U)
    54: if_then_else_fi(true(),U,U') -> U141(isS(U'),U)
    55: isBool(false()) -> tt()
    56: isBool(true()) -> tt()
    57: isBool(_and_(V1,V2)) -> U151(isBool(V1),V2)
    58: isBool(_implies_(V1,V2)) -> U161(isBool(V1),V2)
    59: isBool(_isEqualTo_(V1,V2)) -> U171(isUniversal(V1),V2)
    60: isBool(_isNotEqualTo_(V1,V2)) -> U181(isUniversal(V1),V2)
    61: isBool(_or_(V1,V2)) -> U191(isBool(V1),V2)
    62: isBool(_xor_(V1,V2)) -> U201(isBool(V1),V2)
    63: isBool(not_(V1)) -> U211(isBool(V1))
    64: not_(A) -> U221(isBool(A),A)
    65: not_(false()) -> true()
    66: not_(true()) -> false()
Number of strict rules: 66
Direct Order(PosReal,>,Poly) ... failed.
Freezing U181 U71 U91 U133 U142 U62 U172 U82 U81 U171 U182 U132 U141 U61
AC symbols: _or_ _and_ _xor_
1: U101(tt(),A,B) -> U102(isBool(B),A,B)
2: U102(tt(),A,B) -> _xor_(_and_(A,B),_xor_(A,B))
3: U11(tt(),A) -> A
4: U111(tt()) -> false()
5: U121(tt(),A) -> A
6: U131(tt(),B,U',U) -> U132❆1_isS(U',B,U',U)
7: U132❆1_tt(B,U',U) -> U133❆1_isS(U,B,U')
8: U133❆1_tt(B,U') -> U134(equal(_isNotEqualTo_(B,true()),true()),U')
9: U134(tt(),U') -> U'
10: U141❆1_tt(U) -> U142❆1_isS(U,U)
11: U142❆1_tt(U) -> U
12: U151(tt(),V2) -> U152(isBool(V2))
13: U152(tt()) -> tt()
14: U161(tt(),V2) -> U162(isBool(V2))
15: U162(tt()) -> tt()
16: U171❆1_tt(V2) -> U172❆1_isUniversal(V2)
17: U172❆1_tt() -> tt()
18: U181❆1_tt(V2) -> U182❆1_isUniversal(V2)
19: U182❆1_tt() -> tt()
20: U191(tt(),V2) -> U192(isBool(V2))
21: U192(tt()) -> tt()
22: U201(tt(),V2) -> U202(isBool(V2))
23: U202(tt()) -> tt()
24: U21(tt(),A,B,C) -> U22(isBool(B),A,B,C)
25: U211(tt()) -> tt()
26: U22(tt(),A,B,C) -> U23(isBool(C),A,B,C)
27: U221(tt(),A) -> _xor_(A,true())
28: U23(tt(),A,B,C) -> _xor_(_and_(A,B),_and_(A,C))
29: U31(tt()) -> false()
30: U41(tt(),A) -> A
31: U51(tt(),A,B) -> U52(isBool(B),A,B)
32: U52(tt(),A,B) -> not_(_xor_(A,_and_(A,B)))
33: U61❆1_tt(U',U) -> U62❆1_isS(U,U',U)
34: U62❆1_tt(U',U) -> U63(equal(_isNotEqualTo_(U,U'),true()))
35: U63(tt()) -> false()
36: U71❆1_tt() -> true()
37: U81❆1_tt(U',U) -> U82❆1_isS(U,U',U)
38: U82❆1_tt(U',U) -> if_then_else_fi(_isEqualTo_(U,U'),false(),true())
39: U91❆1_tt() -> false()
40: _and_(A,A) -> U11(isBool(A),A)
41: _and_(A,_xor_(B,C)) -> U21(isBool(A),A,B,C)
42: _and_(false(),A) -> U31(isBool(A))
43: _and_(true(),A) -> U41(isBool(A),A)
44: _implies_(A,B) -> U51(isBool(A),A,B)
45: _isEqualTo_(U,U') -> U61❆1_isS(U',U',U)
46: _isEqualTo_(U,U) -> U71❆1_isS(U)
47: _isNotEqualTo_(U,U') -> U81❆1_isS(U',U',U)
48: _isNotEqualTo_(U,U) -> U91❆1_isS(U)
49: _or_(A,B) -> U101(isBool(A),A,B)
50: _xor_(A,A) -> U111(isBool(A))
51: _xor_(false(),A) -> U121(isBool(A),A)
52: equal(X,X) -> tt()
53: if_then_else_fi(B,U,U') -> U131(isBool(B),B,U',U)
54: if_then_else_fi(true(),U,U') -> U141❆1_isS(U',U)
55: isBool(false()) -> tt()
56: isBool(true()) -> tt()
57: isBool(_and_(V1,V2)) -> U151(isBool(V1),V2)
58: isBool(_implies_(V1,V2)) -> U161(isBool(V1),V2)
59: isBool(_isEqualTo_(V1,V2)) -> U171❆1_isUniversal(V1,V2)
60: isBool(_isNotEqualTo_(V1,V2)) -> U181❆1_isUniversal(V1,V2)
61: isBool(_or_(V1,V2)) -> U191(isBool(V1),V2)
62: isBool(_xor_(V1,V2)) -> U201(isBool(V1),V2)
63: isBool(not_(V1)) -> U211(isBool(V1))
64: not_(A) -> U221(isBool(A),A)
65: not_(false()) -> true()
66: not_(true()) -> false()
67: U61(tt(),_2,_3) ->= U61❆1_tt(_2,_3)
68: U61(isS(_1),_3,_4) ->= U61❆1_isS(_1,_3,_4)
69: U141(tt(),_1) ->= U141❆1_tt(_1)
70: U141(isS(_1),_2) ->= U141❆1_isS(_1,_2)
71: U132(tt(),_3,_4,_5) ->= U132❆1_tt(_3,_4,_5)
72: U132(isS(_1),_4,_5,_6) ->= U132❆1_isS(_1,_4,_5,_6)
73: U182(tt()) ->= U182❆1_tt()
74: U182(isUniversal(_1)) ->= U182❆1_isUniversal(_1)
75: U171(tt(),_1) ->= U171❆1_tt(_1)
76: U171(isUniversal(_1),_2) ->= U171❆1_isUniversal(_1,_2)
77: U81(tt(),_2,_3) ->= U81❆1_tt(_2,_3)
78: U81(isS(_1),_3,_4) ->= U81❆1_isS(_1,_3,_4)
79: U82(tt(),_2,_3) ->= U82❆1_tt(_2,_3)
80: U82(isS(_1),_3,_4) ->= U82❆1_isS(_1,_3,_4)
81: U172(tt()) ->= U172❆1_tt()
82: U172(isUniversal(_1)) ->= U172❆1_isUniversal(_1)
83: U62(tt(),_2,_3) ->= U62❆1_tt(_2,_3)
84: U62(isS(_1),_3,_4) ->= U62❆1_isS(_1,_3,_4)
85: U142(tt(),_1) ->= U142❆1_tt(_1)
86: U142(isS(_1),_2) ->= U142❆1_isS(_1,_2)
87: U133(tt(),_2,_3) ->= U133❆1_tt(_2,_3)
88: U133(isS(_1),_3,_4) ->= U133❆1_isS(_1,_3,_4)
89: U91(tt()) ->= U91❆1_tt()
90: U91(isS(_1)) ->= U91❆1_isS(_1)
91: U71(tt()) ->= U71❆1_tt()
92: U71(isS(_1)) ->= U71❆1_isS(_1)
93: U181(tt(),_1) ->= U181❆1_tt(_1)
94: U181(isUniversal(_1),_2) ->= U181❆1_isUniversal(_1,_2)
Number of strict rules: 66
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #U102(tt(),A,B) -> #_xor_(_and_(A,B),_xor_(A,B))
   #2: #U102(tt(),A,B) -> #_and_(A,B)
   #3: #U102(tt(),A,B) -> #_xor_(A,B)
   #4: #_and_(true(),A) -> #U41(isBool(A),A)
   #5: #_and_(true(),A) -> #isBool(A)
   #6: #U62(tt(),_2,_3) ->? #U62❆1_tt(_2,_3)
   #7: #_and_(false(),A) -> #U31(isBool(A))
   #8: #_and_(false(),A) -> #isBool(A)
   #9: #_or_(x,_or_(y,z)) ->= #_or_(_or_(x,y),z)
   #10: #_or_(x,_or_(y,z)) ->= #_or_(x,y)
   #11: #_and_(A,_xor_(B,C)) -> #U21(isBool(A),A,B,C)
   #12: #_and_(A,_xor_(B,C)) -> #isBool(A)
   #13: #_xor_(x,_xor_(y,z)) ->= #_xor_(_xor_(x,y),z)
   #14: #_xor_(x,_xor_(y,z)) ->= #_xor_(x,y)
   #15: #U71(tt()) ->? #U71❆1_tt()
   #16: #U182(tt()) ->? #U182❆1_tt()
   #17: #if_then_else_fi(B,U,U') -> #U131(isBool(B),B,U',U)
   #18: #if_then_else_fi(B,U,U') -> #isBool(B)
   #19: #U132(tt(),_3,_4,_5) ->? #U132❆1_tt(_3,_4,_5)
   #20: #U171(tt(),_1) ->? #U171❆1_tt(_1)
   #21: #isBool(_implies_(V1,V2)) -> #U161(isBool(V1),V2)
   #22: #isBool(_implies_(V1,V2)) -> #isBool(V1)
   #23: #isBool(_or_(V1,V2)) -> #U191(isBool(V1),V2)
   #24: #isBool(_or_(V1,V2)) -> #isBool(V1)
   #25: #U82❆1_tt(U',U) -> #if_then_else_fi(_isEqualTo_(U,U'),false(),true())
   #26: #U82❆1_tt(U',U) -> #_isEqualTo_(U,U')
   #27: #U61(tt(),_2,_3) ->? #U61❆1_tt(_2,_3)
   #28: #_and_(A,A) -> #U11(isBool(A),A)
   #29: #_and_(A,A) -> #isBool(A)
   #30: #_xor_(false(),A) -> #U121(isBool(A),A)
   #31: #_xor_(false(),A) -> #isBool(A)
   #32: #isBool(_and_(V1,V2)) -> #U151(isBool(V1),V2)
   #33: #isBool(_and_(V1,V2)) -> #isBool(V1)
   #34: #U21(tt(),A,B,C) -> #U22(isBool(B),A,B,C)
   #35: #U21(tt(),A,B,C) -> #isBool(B)
   #36: #U172(tt()) ->? #U172❆1_tt()
   #37: #_and_(x,_and_(y,z)) ->= #_and_(_and_(x,y),z)
   #38: #_and_(x,_and_(y,z)) ->= #_and_(x,y)
   #39: #U141(tt(),_1) ->? #U141❆1_tt(_1)
   #40: #U151(tt(),V2) -> #U152(isBool(V2))
   #41: #U151(tt(),V2) -> #isBool(V2)
   #42: #U51(tt(),A,B) -> #U52(isBool(B),A,B)
   #43: #U51(tt(),A,B) -> #isBool(B)
   #44: #U82(tt(),_2,_3) ->? #U82❆1_tt(_2,_3)
   #45: #U91(tt()) ->? #U91❆1_tt()
   #46: #U161(tt(),V2) -> #U162(isBool(V2))
   #47: #U161(tt(),V2) -> #isBool(V2)
   #48: #isBool(_xor_(V1,V2)) -> #U201(isBool(V1),V2)
   #49: #isBool(_xor_(V1,V2)) -> #isBool(V1)
   #50: #_or_(A,B) -> #U101(isBool(A),A,B)
   #51: #_or_(A,B) -> #isBool(A)
   #52: #U191(tt(),V2) -> #U192(isBool(V2))
   #53: #U191(tt(),V2) -> #isBool(V2)
   #54: #U181(tt(),_1) ->? #U181❆1_tt(_1)
   #55: #not_(A) -> #U221(isBool(A),A)
   #56: #not_(A) -> #isBool(A)
   #57: #_implies_(A,B) -> #U51(isBool(A),A,B)
   #58: #_implies_(A,B) -> #isBool(A)
   #59: #U23(tt(),A,B,C) -> #_xor_(_and_(A,B),_and_(A,C))
   #60: #U23(tt(),A,B,C) -> #_and_(A,B)
   #61: #U23(tt(),A,B,C) -> #_and_(A,C)
   #62: #U201(tt(),V2) -> #U202(isBool(V2))
   #63: #U201(tt(),V2) -> #isBool(V2)
   #64: #U62❆1_tt(U',U) -> #U63(equal(_isNotEqualTo_(U,U'),true()))
   #65: #U62❆1_tt(U',U) -> #equal(_isNotEqualTo_(U,U'),true())
   #66: #U62❆1_tt(U',U) -> #_isNotEqualTo_(U,U')
   #67: #U133(tt(),_2,_3) ->? #U133❆1_tt(_2,_3)
   #68: #U221(tt(),A) -> #_xor_(A,true())
   #69: #U52(tt(),A,B) -> #not_(_xor_(A,_and_(A,B)))
   #70: #U52(tt(),A,B) -> #_xor_(A,_and_(A,B))
   #71: #U52(tt(),A,B) -> #_and_(A,B)
   #72: #isBool(not_(V1)) -> #U211(isBool(V1))
   #73: #isBool(not_(V1)) -> #isBool(V1)
   #74: #U22(tt(),A,B,C) -> #U23(isBool(C),A,B,C)
   #75: #U22(tt(),A,B,C) -> #isBool(C)
   #76: #U142(tt(),_1) ->? #U142❆1_tt(_1)
   #77: #U81(tt(),_2,_3) ->? #U81❆1_tt(_2,_3)
   #78: #U101(tt(),A,B) -> #U102(isBool(B),A,B)
   #79: #U101(tt(),A,B) -> #isBool(B)
   #80: #U133❆1_tt(B,U') -> #U134(equal(_isNotEqualTo_(B,true()),true()),U')
   #81: #U133❆1_tt(B,U') -> #equal(_isNotEqualTo_(B,true()),true())
   #82: #U133❆1_tt(B,U') -> #_isNotEqualTo_(B,true())
   #83: #_xor_(A,A) -> #U111(isBool(A))
   #84: #_xor_(A,A) -> #isBool(A)
Number of SCCs: 4, DPs: 24, edges: 109
	SCC { #13 #14 }
Removing DPs: only weak rules.
Number of SCCs: 3, DPs: 24, edges: 109
	SCC { #9 #10 }
Removing DPs: only weak rules.
Number of SCCs: 2, DPs: 24, edges: 109
	SCC { #11 #34 #37 #38 #60 #61 #74 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)...