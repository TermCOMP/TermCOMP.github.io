MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/iLt79.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given ETRS could not be shown:

(0) ETRS
(1) EquationalDependencyPairsProof [EQUIVALENT, 0 ms]
(2) EDP
(3) EDependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) EDP
        (6) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (7) EDP
        (8) EUsableRulesReductionPairsProof [EQUIVALENT, 65 ms]
        (9) EDP
        (10) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (11) TRUE
    (12) EDP
        (13) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (14) EDP
        (15) EDPPoloProof [EQUIVALENT, 105 ms]
        (16) EDP
        (17) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (18) EDP
        (19) EDPPoloProof [EQUIVALENT, 0 ms]
        (20) EDP
        (21) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (22) TRUE
    (23) EDP
        (24) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (25) EDP
        (26) EDPPoloProof [EQUIVALENT, 25 ms]
        (27) EDP
        (28) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (29) TRUE
    (30) EDP
        (31) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (32) EDP
        (33) EDPPoloProof [EQUIVALENT, 27 ms]
        (34) EDP
        (35) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (36) TRUE
    (37) EDP
        (38) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (39) EDP
        (40) EDPPoloProof [EQUIVALENT, 0 ms]
        (41) EDP
        (42) PisEmptyProof [EQUIVALENT, 0 ms]
        (43) YES
    (44) EDP
        (45) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (46) EDP
        (47) EDPPoloProof [EQUIVALENT, 2 ms]
        (48) EDP
        (49) EDependencyGraphProof [EQUIVALENT, 0 ms]
        (50) TRUE
    (51) EDP
        (52) ESharpUsableEquationsProof [EQUIVALENT, 0 ms]
        (53) EDP
        (54) EUsableRulesProof [EQUIVALENT, 22 ms]
        (55) EDP
    (56) EDP


----------------------------------------

(0)
Obligation:
Equational rewrite system:
The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)


----------------------------------------

(1) EquationalDependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,DA_STEIN] we result in the following initial EDP problem:
The TRS P consists of the following rules:

   U101^1(tt, M, N) -> U102^1(isNatKind(M), M, N)
   U101^1(tt, M, N) -> ISNATKIND(M)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)
   U102^1(tt, M, N) -> ISNAT(N)
   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U103^1(tt, M, N) -> ISNATKIND(N)
   U104^1(tt, M, N) -> D(N, M)
   U11^1(tt, N) -> U12^1(isNatKind(N))
   U11^1(tt, N) -> ISNATKIND(N)
   U111^1(tt, N) -> U112^1(isNatKind(N))
   U111^1(tt, N) -> ISNATKIND(N)
   U121^1(tt, M', N') -> U122^1(isNatKind(M'), M', N')
   U121^1(tt, M', N') -> ISNATKIND(M')
   U122^1(tt, M', N') -> U123^1(isNzNat(N'), M', N')
   U122^1(tt, M', N') -> ISNZNAT(N')
   U123^1(tt, M', N') -> U124^1(isNatKind(N'), M', N')
   U123^1(tt, M', N') -> ISNATKIND(N')
   U124^1(tt, M', N') -> U125^1(equal(_>_(N', M'), true), M', N')
   U124^1(tt, M', N') -> EQUAL(_>_(N', M'), true)
   U124^1(tt, M', N') -> _>_^1(N', M')
   U125^1(tt, M', N') -> GCD(d(N', M'), M')
   U125^1(tt, M', N') -> D(N', M')
   U131^1(tt, N') -> U132^1(isNatKind(N'), N')
   U131^1(tt, N') -> ISNATKIND(N')
   U141^1(tt, V1, V2) -> U142^1(isNatKind(V1), V1, V2)
   U141^1(tt, V1, V2) -> ISNATKIND(V1)
   U142^1(tt, V1, V2) -> U143^1(isNatKind(V2), V1, V2)
   U142^1(tt, V1, V2) -> ISNATKIND(V2)
   U143^1(tt, V1, V2) -> U144^1(isNatKind(V2), V1, V2)
   U143^1(tt, V1, V2) -> ISNATKIND(V2)
   U144^1(tt, V1, V2) -> U145^1(isNat(V1), V2)
   U144^1(tt, V1, V2) -> ISNAT(V1)
   U145^1(tt, V2) -> U146^1(isNat(V2))
   U145^1(tt, V2) -> ISNAT(V2)
   U151^1(tt, V1, V2) -> U152^1(isNatKind(V1), V1, V2)
   U151^1(tt, V1, V2) -> ISNATKIND(V1)
   U152^1(tt, V1, V2) -> U153^1(isNatKind(V2), V1, V2)
   U152^1(tt, V1, V2) -> ISNATKIND(V2)
   U153^1(tt, V1, V2) -> U154^1(isNatKind(V2), V1, V2)
   U153^1(tt, V1, V2) -> ISNATKIND(V2)
   U154^1(tt, V1, V2) -> U155^1(isNat(V1), V2)
   U154^1(tt, V1, V2) -> ISNAT(V1)
   U155^1(tt, V2) -> U156^1(isNat(V2))
   U155^1(tt, V2) -> ISNAT(V2)
   U161^1(tt, V2) -> U162^1(isNatKind(V2))
   U161^1(tt, V2) -> ISNATKIND(V2)
   U171^1(tt, V2) -> U172^1(isNatKind(V2))
   U171^1(tt, V2) -> ISNATKIND(V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   U181^1(tt, V) -> ISNATKIND(V)
   U182^1(tt, V) -> U183^1(isNzNat(V))
   U182^1(tt, V) -> ISNZNAT(V)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U191^1(tt, V1, V2) -> ISNATKIND(V1)
   U192^1(tt, V1, V2) -> U193^1(isNatKind(V2), V1, V2)
   U192^1(tt, V1, V2) -> ISNATKIND(V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U193^1(tt, V1, V2) -> ISNATKIND(V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U195^1(tt, V2) -> U196^1(isNat(V2))
   U195^1(tt, V2) -> ISNAT(V2)
   U201^1(tt, V1, V2) -> U202^1(isNatKind(V1), V1, V2)
   U201^1(tt, V1, V2) -> ISNATKIND(V1)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   U202^1(tt, V1, V2) -> ISNATKIND(V2)
   U203^1(tt, V1, V2) -> U204^1(isNatKind(V2), V1, V2)
   U203^1(tt, V1, V2) -> ISNATKIND(V2)
   U204^1(tt, V1, V2) -> U205^1(isNat(V1), V2)
   U204^1(tt, V1, V2) -> ISNAT(V1)
   U205^1(tt, V2) -> U206^1(isNat(V2))
   U205^1(tt, V2) -> ISNAT(V2)
   U21^1(tt, M, N) -> U22^1(isNatKind(M), M, N)
   U21^1(tt, M, N) -> ISNATKIND(M)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   U211^1(tt, V1, V2) -> ISNATKIND(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   U212^1(tt, V1, V2) -> ISNATKIND(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U213^1(tt, V1, V2) -> ISNATKIND(V2)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U215^1(tt, V2) -> U216^1(isNat(V2))
   U215^1(tt, V2) -> ISNAT(V2)
   U22^1(tt, M, N) -> U23^1(isNat(N), M, N)
   U22^1(tt, M, N) -> ISNAT(N)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U221^1(tt, V1, V2) -> ISNATKIND(V1)
   U222^1(tt, V1, V2) -> U223^1(isNatKind(V2), V1, V2)
   U222^1(tt, V1, V2) -> ISNATKIND(V2)
   U223^1(tt, V1, V2) -> U224^1(isNatKind(V2), V1, V2)
   U223^1(tt, V1, V2) -> ISNATKIND(V2)
   U224^1(tt, V1, V2) -> U225^1(isNat(V1), V2)
   U224^1(tt, V1, V2) -> ISNAT(V1)
   U225^1(tt, V2) -> U226^1(isNat(V2))
   U225^1(tt, V2) -> ISNAT(V2)
   U23^1(tt, M, N) -> U24^1(isNatKind(N), M, N)
   U23^1(tt, M, N) -> ISNATKIND(N)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U231^1(tt, V1) -> ISNATKIND(V1)
   U232^1(tt, V1) -> U233^1(isNzNat(V1))
   U232^1(tt, V1) -> ISNZNAT(V1)
   U24^1(tt, M, N) -> _+_^1(N, _+_(M, _*_(N, M)))
   U24^1(tt, M, N) -> _+_^1(M, _*_(N, M))
   U24^1(tt, M, N) -> _*_^1(N, M)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U241^1(tt, V1, V2) -> ISNATKIND(V1)
   U242^1(tt, V1, V2) -> U243^1(isNatKind(V2), V1, V2)
   U242^1(tt, V1, V2) -> ISNATKIND(V2)
   U243^1(tt, V1, V2) -> U244^1(isNatKind(V2), V1, V2)
   U243^1(tt, V1, V2) -> ISNATKIND(V2)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U245^1(tt, V2) -> U246^1(isNzNat(V2))
   U245^1(tt, V2) -> ISNZNAT(V2)
   U251^1(tt, V2) -> U252^1(isNatKind(V2))
   U251^1(tt, V2) -> ISNATKIND(V2)
   U261^1(tt, V2) -> U262^1(isNatKind(V2))
   U261^1(tt, V2) -> ISNATKIND(V2)
   U271^1(tt, V2) -> U272^1(isNatKind(V2))
   U271^1(tt, V2) -> ISNATKIND(V2)
   U281^1(tt, V2) -> U282^1(isNatKind(V2))
   U281^1(tt, V2) -> ISNATKIND(V2)
   U301^1(tt, V2) -> U302^1(isNatKind(V2))
   U301^1(tt, V2) -> ISNATKIND(V2)
   U31^1(tt, N) -> U32^1(isNatKind(N), N)
   U31^1(tt, N) -> ISNATKIND(N)
   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U321^1(tt, V1, V2) -> ISNATKIND(V1)
   U322^1(tt, V1, V2) -> U323^1(isNatKind(V2), V1, V2)
   U322^1(tt, V1, V2) -> ISNATKIND(V2)
   U323^1(tt, V1, V2) -> U324^1(isNatKind(V2), V1, V2)
   U323^1(tt, V1, V2) -> ISNATKIND(V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U324^1(tt, V1, V2) -> ISNZNAT(V1)
   U325^1(tt, V2) -> U326^1(isNzNat(V2))
   U325^1(tt, V2) -> ISNZNAT(V2)
   U331^1(tt, V1, V2) -> U332^1(isNatKind(V1), V1, V2)
   U331^1(tt, V1, V2) -> ISNATKIND(V1)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   U332^1(tt, V1, V2) -> ISNATKIND(V2)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U333^1(tt, V1, V2) -> ISNATKIND(V2)
   U334^1(tt, V1, V2) -> U335^1(isNzNat(V1), V2)
   U334^1(tt, V1, V2) -> ISNZNAT(V1)
   U335^1(tt, V2) -> U336^1(isNzNat(V2))
   U335^1(tt, V2) -> ISNZNAT(V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U341^1(tt, V1) -> ISNATKIND(V1)
   U342^1(tt, V1) -> U343^1(isNat(V1))
   U342^1(tt, V1) -> ISNAT(V1)
   U351^1(tt, N) -> U352^1(isNatKind(N), N)
   U351^1(tt, N) -> ISNATKIND(N)
   U361^1(tt, M') -> U362^1(isNatKind(M'))
   U361^1(tt, M') -> ISNATKIND(M')
   U371^1(tt, M', N) -> U372^1(isNatKind(M'), M', N)
   U371^1(tt, M', N) -> ISNATKIND(M')
   U372^1(tt, M', N) -> U373^1(isNat(N), M', N)
   U372^1(tt, M', N) -> ISNAT(N)
   U373^1(tt, M', N) -> U374^1(isNatKind(N), M', N)
   U373^1(tt, M', N) -> ISNATKIND(N)
   U374^1(tt, M', N) -> U375^1(equal(_>_(M', N), true))
   U374^1(tt, M', N) -> EQUAL(_>_(M', N), true)
   U374^1(tt, M', N) -> _>_^1(M', N)
   U381^1(tt, M', N) -> U382^1(isNatKind(M'), M', N)
   U381^1(tt, M', N) -> ISNATKIND(M')
   U382^1(tt, M', N) -> U383^1(isNat(N), M', N)
   U382^1(tt, M', N) -> ISNAT(N)
   U383^1(tt, M', N) -> U384^1(isNatKind(N), M', N)
   U383^1(tt, M', N) -> ISNATKIND(N)
   U384^1(tt, M', N) -> U385^1(equal(_>_(N, M'), true), M', N)
   U384^1(tt, M', N) -> EQUAL(_>_(N, M'), true)
   U384^1(tt, M', N) -> _>_^1(N, M')
   U385^1(tt, M', N) -> QUOT(d(N, M'), M')
   U385^1(tt, M', N) -> D(N, M')
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U41^1(tt, M, N) -> ISNATKIND(M)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U42^1(tt, M, N) -> ISNAT(N)
   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U43^1(tt, M, N) -> ISNATKIND(N)
   U44^1(tt, M, N) -> _+_^1(N, M)
   U51^1(tt, M, N) -> U52^1(isNatKind(M), M, N)
   U51^1(tt, M, N) -> ISNATKIND(M)
   U52^1(tt, M, N) -> U53^1(isNat(N), M, N)
   U52^1(tt, M, N) -> ISNAT(N)
   U53^1(tt, M, N) -> U54^1(isNatKind(N), M, N)
   U53^1(tt, M, N) -> ISNATKIND(N)
   U54^1(tt, M, N) -> _>_^1(M, N)
   U61^1(tt, M) -> U62^1(isNatKind(M))
   U61^1(tt, M) -> ISNATKIND(M)
   U71^1(tt, N') -> U72^1(isNatKind(N'))
   U71^1(tt, N') -> ISNATKIND(N')
   U81^1(tt, M, N) -> U82^1(isNatKind(M), M, N)
   U81^1(tt, M, N) -> ISNATKIND(M)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U82^1(tt, M, N) -> ISNAT(N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)
   U83^1(tt, M, N) -> ISNATKIND(N)
   U84^1(tt, M, N) -> _>_^1(N, M)
   U91^1(tt, N) -> U92^1(isNatKind(N), N)
   U91^1(tt, N) -> ISNATKIND(N)
   _*_^1(N, 0) -> U11^1(isNat(N), N)
   _*_^1(N, 0) -> ISNAT(N)
   _*_^1(s_(N), s_(M)) -> U21^1(isNat(M), M, N)
   _*_^1(s_(N), s_(M)) -> ISNAT(M)
   _+_^1(N, 0) -> U31^1(isNat(N), N)
   _+_^1(N, 0) -> ISNAT(N)
   _+_^1(s_(N), s_(M)) -> U41^1(isNat(M), M, N)
   _+_^1(s_(N), s_(M)) -> ISNAT(M)
   _<_^1(N, M) -> U51^1(isNat(M), M, N)
   _<_^1(N, M) -> ISNAT(M)
   _>_^1(0, M) -> U61^1(isNat(M), M)
   _>_^1(0, M) -> ISNAT(M)
   _>_^1(N', 0) -> U71^1(isNzNat(N'), N')
   _>_^1(N', 0) -> ISNZNAT(N')
   _>_^1(s_(N), s_(M)) -> U81^1(isNat(M), M, N)
   _>_^1(s_(N), s_(M)) -> ISNAT(M)
   D(0, N) -> U91^1(isNat(N), N)
   D(0, N) -> ISNAT(N)
   D(s_(N), s_(M)) -> U101^1(isNat(M), M, N)
   D(s_(N), s_(M)) -> ISNAT(M)
   GCD(0, N) -> U111^1(isNat(N), N)
   GCD(0, N) -> ISNAT(N)
   GCD(N', M') -> U121^1(isNzNat(M'), M', N')
   GCD(N', M') -> ISNZNAT(M')
   GCD(N', N') -> U131^1(isNzNat(N'), N')
   GCD(N', N') -> ISNZNAT(N')
   ISBOOLEAN(_<_(V1, V2)) -> U141^1(isNatKind(V1), V1, V2)
   ISBOOLEAN(_<_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEAN(_>_(V1, V2)) -> U151^1(isNatKind(V1), V1, V2)
   ISBOOLEAN(_>_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEANKIND(_<_(V1, V2)) -> U161^1(isNatKind(V1), V2)
   ISBOOLEANKIND(_<_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEANKIND(_>_(V1, V2)) -> U171^1(isNatKind(V1), V2)
   ISBOOLEANKIND(_>_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   ISNAT(V) -> ISNATKIND(V)
   ISNAT(_*_(V1, V2)) -> U191^1(isNatKind(V1), V1, V2)
   ISNAT(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(_+_(V1, V2)) -> U201^1(isNatKind(V1), V1, V2)
   ISNAT(_+_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(d(V1, V2)) -> U211^1(isNatKind(V1), V1, V2)
   ISNAT(d(V1, V2)) -> ISNATKIND(V1)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   ISNAT(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNAT(p_(V1)) -> U231^1(isNatKind(V1), V1)
   ISNAT(p_(V1)) -> ISNATKIND(V1)
   ISNAT(quot(V1, V2)) -> U241^1(isNatKind(V1), V1, V2)
   ISNAT(quot(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_*_(V1, V2)) -> U251^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> U261^1(isNatKind(V1), V2)
   ISNATKIND(_+_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(d(V1, V2)) -> U271^1(isNatKind(V1), V2)
   ISNATKIND(d(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(gcd(V1, V2)) -> U281^1(isNatKind(V1), V2)
   ISNATKIND(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(p_(V1)) -> U291^1(isNatKind(V1))
   ISNATKIND(p_(V1)) -> ISNATKIND(V1)
   ISNATKIND(quot(V1, V2)) -> U301^1(isNatKind(V1), V2)
   ISNATKIND(quot(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s_(V1)) -> U311^1(isNatKind(V1))
   ISNATKIND(s_(V1)) -> ISNATKIND(V1)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   ISNZNAT(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   ISNZNAT(s_(V1)) -> ISNATKIND(V1)
   P_(s_(N)) -> U351^1(isNat(N), N)
   P_(s_(N)) -> ISNAT(N)
   QUOT(M', M') -> U361^1(isNzNat(M'), M')
   QUOT(M', M') -> ISNZNAT(M')
   QUOT(N, M') -> U371^1(isNzNat(M'), M', N)
   QUOT(N, M') -> ISNZNAT(M')
   QUOT(N, M') -> U381^1(isNzNat(M'), M', N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains

----------------------------------------

(2)
Obligation:
The TRS P consists of the following rules:

   U101^1(tt, M, N) -> U102^1(isNatKind(M), M, N)
   U101^1(tt, M, N) -> ISNATKIND(M)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)
   U102^1(tt, M, N) -> ISNAT(N)
   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U103^1(tt, M, N) -> ISNATKIND(N)
   U104^1(tt, M, N) -> D(N, M)
   U11^1(tt, N) -> U12^1(isNatKind(N))
   U11^1(tt, N) -> ISNATKIND(N)
   U111^1(tt, N) -> U112^1(isNatKind(N))
   U111^1(tt, N) -> ISNATKIND(N)
   U121^1(tt, M', N') -> U122^1(isNatKind(M'), M', N')
   U121^1(tt, M', N') -> ISNATKIND(M')
   U122^1(tt, M', N') -> U123^1(isNzNat(N'), M', N')
   U122^1(tt, M', N') -> ISNZNAT(N')
   U123^1(tt, M', N') -> U124^1(isNatKind(N'), M', N')
   U123^1(tt, M', N') -> ISNATKIND(N')
   U124^1(tt, M', N') -> U125^1(equal(_>_(N', M'), true), M', N')
   U124^1(tt, M', N') -> EQUAL(_>_(N', M'), true)
   U124^1(tt, M', N') -> _>_^1(N', M')
   U125^1(tt, M', N') -> GCD(d(N', M'), M')
   U125^1(tt, M', N') -> D(N', M')
   U131^1(tt, N') -> U132^1(isNatKind(N'), N')
   U131^1(tt, N') -> ISNATKIND(N')
   U141^1(tt, V1, V2) -> U142^1(isNatKind(V1), V1, V2)
   U141^1(tt, V1, V2) -> ISNATKIND(V1)
   U142^1(tt, V1, V2) -> U143^1(isNatKind(V2), V1, V2)
   U142^1(tt, V1, V2) -> ISNATKIND(V2)
   U143^1(tt, V1, V2) -> U144^1(isNatKind(V2), V1, V2)
   U143^1(tt, V1, V2) -> ISNATKIND(V2)
   U144^1(tt, V1, V2) -> U145^1(isNat(V1), V2)
   U144^1(tt, V1, V2) -> ISNAT(V1)
   U145^1(tt, V2) -> U146^1(isNat(V2))
   U145^1(tt, V2) -> ISNAT(V2)
   U151^1(tt, V1, V2) -> U152^1(isNatKind(V1), V1, V2)
   U151^1(tt, V1, V2) -> ISNATKIND(V1)
   U152^1(tt, V1, V2) -> U153^1(isNatKind(V2), V1, V2)
   U152^1(tt, V1, V2) -> ISNATKIND(V2)
   U153^1(tt, V1, V2) -> U154^1(isNatKind(V2), V1, V2)
   U153^1(tt, V1, V2) -> ISNATKIND(V2)
   U154^1(tt, V1, V2) -> U155^1(isNat(V1), V2)
   U154^1(tt, V1, V2) -> ISNAT(V1)
   U155^1(tt, V2) -> U156^1(isNat(V2))
   U155^1(tt, V2) -> ISNAT(V2)
   U161^1(tt, V2) -> U162^1(isNatKind(V2))
   U161^1(tt, V2) -> ISNATKIND(V2)
   U171^1(tt, V2) -> U172^1(isNatKind(V2))
   U171^1(tt, V2) -> ISNATKIND(V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   U181^1(tt, V) -> ISNATKIND(V)
   U182^1(tt, V) -> U183^1(isNzNat(V))
   U182^1(tt, V) -> ISNZNAT(V)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U191^1(tt, V1, V2) -> ISNATKIND(V1)
   U192^1(tt, V1, V2) -> U193^1(isNatKind(V2), V1, V2)
   U192^1(tt, V1, V2) -> ISNATKIND(V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U193^1(tt, V1, V2) -> ISNATKIND(V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U195^1(tt, V2) -> U196^1(isNat(V2))
   U195^1(tt, V2) -> ISNAT(V2)
   U201^1(tt, V1, V2) -> U202^1(isNatKind(V1), V1, V2)
   U201^1(tt, V1, V2) -> ISNATKIND(V1)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   U202^1(tt, V1, V2) -> ISNATKIND(V2)
   U203^1(tt, V1, V2) -> U204^1(isNatKind(V2), V1, V2)
   U203^1(tt, V1, V2) -> ISNATKIND(V2)
   U204^1(tt, V1, V2) -> U205^1(isNat(V1), V2)
   U204^1(tt, V1, V2) -> ISNAT(V1)
   U205^1(tt, V2) -> U206^1(isNat(V2))
   U205^1(tt, V2) -> ISNAT(V2)
   U21^1(tt, M, N) -> U22^1(isNatKind(M), M, N)
   U21^1(tt, M, N) -> ISNATKIND(M)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   U211^1(tt, V1, V2) -> ISNATKIND(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   U212^1(tt, V1, V2) -> ISNATKIND(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U213^1(tt, V1, V2) -> ISNATKIND(V2)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U215^1(tt, V2) -> U216^1(isNat(V2))
   U215^1(tt, V2) -> ISNAT(V2)
   U22^1(tt, M, N) -> U23^1(isNat(N), M, N)
   U22^1(tt, M, N) -> ISNAT(N)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U221^1(tt, V1, V2) -> ISNATKIND(V1)
   U222^1(tt, V1, V2) -> U223^1(isNatKind(V2), V1, V2)
   U222^1(tt, V1, V2) -> ISNATKIND(V2)
   U223^1(tt, V1, V2) -> U224^1(isNatKind(V2), V1, V2)
   U223^1(tt, V1, V2) -> ISNATKIND(V2)
   U224^1(tt, V1, V2) -> U225^1(isNat(V1), V2)
   U224^1(tt, V1, V2) -> ISNAT(V1)
   U225^1(tt, V2) -> U226^1(isNat(V2))
   U225^1(tt, V2) -> ISNAT(V2)
   U23^1(tt, M, N) -> U24^1(isNatKind(N), M, N)
   U23^1(tt, M, N) -> ISNATKIND(N)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U231^1(tt, V1) -> ISNATKIND(V1)
   U232^1(tt, V1) -> U233^1(isNzNat(V1))
   U232^1(tt, V1) -> ISNZNAT(V1)
   U24^1(tt, M, N) -> _+_^1(N, _+_(M, _*_(N, M)))
   U24^1(tt, M, N) -> _+_^1(M, _*_(N, M))
   U24^1(tt, M, N) -> _*_^1(N, M)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U241^1(tt, V1, V2) -> ISNATKIND(V1)
   U242^1(tt, V1, V2) -> U243^1(isNatKind(V2), V1, V2)
   U242^1(tt, V1, V2) -> ISNATKIND(V2)
   U243^1(tt, V1, V2) -> U244^1(isNatKind(V2), V1, V2)
   U243^1(tt, V1, V2) -> ISNATKIND(V2)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U245^1(tt, V2) -> U246^1(isNzNat(V2))
   U245^1(tt, V2) -> ISNZNAT(V2)
   U251^1(tt, V2) -> U252^1(isNatKind(V2))
   U251^1(tt, V2) -> ISNATKIND(V2)
   U261^1(tt, V2) -> U262^1(isNatKind(V2))
   U261^1(tt, V2) -> ISNATKIND(V2)
   U271^1(tt, V2) -> U272^1(isNatKind(V2))
   U271^1(tt, V2) -> ISNATKIND(V2)
   U281^1(tt, V2) -> U282^1(isNatKind(V2))
   U281^1(tt, V2) -> ISNATKIND(V2)
   U301^1(tt, V2) -> U302^1(isNatKind(V2))
   U301^1(tt, V2) -> ISNATKIND(V2)
   U31^1(tt, N) -> U32^1(isNatKind(N), N)
   U31^1(tt, N) -> ISNATKIND(N)
   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U321^1(tt, V1, V2) -> ISNATKIND(V1)
   U322^1(tt, V1, V2) -> U323^1(isNatKind(V2), V1, V2)
   U322^1(tt, V1, V2) -> ISNATKIND(V2)
   U323^1(tt, V1, V2) -> U324^1(isNatKind(V2), V1, V2)
   U323^1(tt, V1, V2) -> ISNATKIND(V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U324^1(tt, V1, V2) -> ISNZNAT(V1)
   U325^1(tt, V2) -> U326^1(isNzNat(V2))
   U325^1(tt, V2) -> ISNZNAT(V2)
   U331^1(tt, V1, V2) -> U332^1(isNatKind(V1), V1, V2)
   U331^1(tt, V1, V2) -> ISNATKIND(V1)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   U332^1(tt, V1, V2) -> ISNATKIND(V2)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U333^1(tt, V1, V2) -> ISNATKIND(V2)
   U334^1(tt, V1, V2) -> U335^1(isNzNat(V1), V2)
   U334^1(tt, V1, V2) -> ISNZNAT(V1)
   U335^1(tt, V2) -> U336^1(isNzNat(V2))
   U335^1(tt, V2) -> ISNZNAT(V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U341^1(tt, V1) -> ISNATKIND(V1)
   U342^1(tt, V1) -> U343^1(isNat(V1))
   U342^1(tt, V1) -> ISNAT(V1)
   U351^1(tt, N) -> U352^1(isNatKind(N), N)
   U351^1(tt, N) -> ISNATKIND(N)
   U361^1(tt, M') -> U362^1(isNatKind(M'))
   U361^1(tt, M') -> ISNATKIND(M')
   U371^1(tt, M', N) -> U372^1(isNatKind(M'), M', N)
   U371^1(tt, M', N) -> ISNATKIND(M')
   U372^1(tt, M', N) -> U373^1(isNat(N), M', N)
   U372^1(tt, M', N) -> ISNAT(N)
   U373^1(tt, M', N) -> U374^1(isNatKind(N), M', N)
   U373^1(tt, M', N) -> ISNATKIND(N)
   U374^1(tt, M', N) -> U375^1(equal(_>_(M', N), true))
   U374^1(tt, M', N) -> EQUAL(_>_(M', N), true)
   U374^1(tt, M', N) -> _>_^1(M', N)
   U381^1(tt, M', N) -> U382^1(isNatKind(M'), M', N)
   U381^1(tt, M', N) -> ISNATKIND(M')
   U382^1(tt, M', N) -> U383^1(isNat(N), M', N)
   U382^1(tt, M', N) -> ISNAT(N)
   U383^1(tt, M', N) -> U384^1(isNatKind(N), M', N)
   U383^1(tt, M', N) -> ISNATKIND(N)
   U384^1(tt, M', N) -> U385^1(equal(_>_(N, M'), true), M', N)
   U384^1(tt, M', N) -> EQUAL(_>_(N, M'), true)
   U384^1(tt, M', N) -> _>_^1(N, M')
   U385^1(tt, M', N) -> QUOT(d(N, M'), M')
   U385^1(tt, M', N) -> D(N, M')
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U41^1(tt, M, N) -> ISNATKIND(M)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U42^1(tt, M, N) -> ISNAT(N)
   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U43^1(tt, M, N) -> ISNATKIND(N)
   U44^1(tt, M, N) -> _+_^1(N, M)
   U51^1(tt, M, N) -> U52^1(isNatKind(M), M, N)
   U51^1(tt, M, N) -> ISNATKIND(M)
   U52^1(tt, M, N) -> U53^1(isNat(N), M, N)
   U52^1(tt, M, N) -> ISNAT(N)
   U53^1(tt, M, N) -> U54^1(isNatKind(N), M, N)
   U53^1(tt, M, N) -> ISNATKIND(N)
   U54^1(tt, M, N) -> _>_^1(M, N)
   U61^1(tt, M) -> U62^1(isNatKind(M))
   U61^1(tt, M) -> ISNATKIND(M)
   U71^1(tt, N') -> U72^1(isNatKind(N'))
   U71^1(tt, N') -> ISNATKIND(N')
   U81^1(tt, M, N) -> U82^1(isNatKind(M), M, N)
   U81^1(tt, M, N) -> ISNATKIND(M)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U82^1(tt, M, N) -> ISNAT(N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)
   U83^1(tt, M, N) -> ISNATKIND(N)
   U84^1(tt, M, N) -> _>_^1(N, M)
   U91^1(tt, N) -> U92^1(isNatKind(N), N)
   U91^1(tt, N) -> ISNATKIND(N)
   _*_^1(N, 0) -> U11^1(isNat(N), N)
   _*_^1(N, 0) -> ISNAT(N)
   _*_^1(s_(N), s_(M)) -> U21^1(isNat(M), M, N)
   _*_^1(s_(N), s_(M)) -> ISNAT(M)
   _+_^1(N, 0) -> U31^1(isNat(N), N)
   _+_^1(N, 0) -> ISNAT(N)
   _+_^1(s_(N), s_(M)) -> U41^1(isNat(M), M, N)
   _+_^1(s_(N), s_(M)) -> ISNAT(M)
   _<_^1(N, M) -> U51^1(isNat(M), M, N)
   _<_^1(N, M) -> ISNAT(M)
   _>_^1(0, M) -> U61^1(isNat(M), M)
   _>_^1(0, M) -> ISNAT(M)
   _>_^1(N', 0) -> U71^1(isNzNat(N'), N')
   _>_^1(N', 0) -> ISNZNAT(N')
   _>_^1(s_(N), s_(M)) -> U81^1(isNat(M), M, N)
   _>_^1(s_(N), s_(M)) -> ISNAT(M)
   D(0, N) -> U91^1(isNat(N), N)
   D(0, N) -> ISNAT(N)
   D(s_(N), s_(M)) -> U101^1(isNat(M), M, N)
   D(s_(N), s_(M)) -> ISNAT(M)
   GCD(0, N) -> U111^1(isNat(N), N)
   GCD(0, N) -> ISNAT(N)
   GCD(N', M') -> U121^1(isNzNat(M'), M', N')
   GCD(N', M') -> ISNZNAT(M')
   GCD(N', N') -> U131^1(isNzNat(N'), N')
   GCD(N', N') -> ISNZNAT(N')
   ISBOOLEAN(_<_(V1, V2)) -> U141^1(isNatKind(V1), V1, V2)
   ISBOOLEAN(_<_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEAN(_>_(V1, V2)) -> U151^1(isNatKind(V1), V1, V2)
   ISBOOLEAN(_>_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEANKIND(_<_(V1, V2)) -> U161^1(isNatKind(V1), V2)
   ISBOOLEANKIND(_<_(V1, V2)) -> ISNATKIND(V1)
   ISBOOLEANKIND(_>_(V1, V2)) -> U171^1(isNatKind(V1), V2)
   ISBOOLEANKIND(_>_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   ISNAT(V) -> ISNATKIND(V)
   ISNAT(_*_(V1, V2)) -> U191^1(isNatKind(V1), V1, V2)
   ISNAT(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(_+_(V1, V2)) -> U201^1(isNatKind(V1), V1, V2)
   ISNAT(_+_(V1, V2)) -> ISNATKIND(V1)
   ISNAT(d(V1, V2)) -> U211^1(isNatKind(V1), V1, V2)
   ISNAT(d(V1, V2)) -> ISNATKIND(V1)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   ISNAT(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNAT(p_(V1)) -> U231^1(isNatKind(V1), V1)
   ISNAT(p_(V1)) -> ISNATKIND(V1)
   ISNAT(quot(V1, V2)) -> U241^1(isNatKind(V1), V1, V2)
   ISNAT(quot(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_*_(V1, V2)) -> U251^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> U261^1(isNatKind(V1), V2)
   ISNATKIND(_+_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(d(V1, V2)) -> U271^1(isNatKind(V1), V2)
   ISNATKIND(d(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(gcd(V1, V2)) -> U281^1(isNatKind(V1), V2)
   ISNATKIND(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(p_(V1)) -> U291^1(isNatKind(V1))
   ISNATKIND(p_(V1)) -> ISNATKIND(V1)
   ISNATKIND(quot(V1, V2)) -> U301^1(isNatKind(V1), V2)
   ISNATKIND(quot(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s_(V1)) -> U311^1(isNatKind(V1))
   ISNATKIND(s_(V1)) -> ISNATKIND(V1)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   ISNZNAT(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   ISNZNAT(s_(V1)) -> ISNATKIND(V1)
   P_(s_(N)) -> U351^1(isNat(N), N)
   P_(s_(N)) -> ISNAT(N)
   QUOT(M', M') -> U361^1(isNzNat(M'), M')
   QUOT(M', M') -> ISNZNAT(M')
   QUOT(N, M') -> U371^1(isNzNat(M'), M', N)
   QUOT(N, M') -> ISNZNAT(M')
   QUOT(N, M') -> U381^1(isNzNat(M'), M', N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(3) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 8 SCCs with 170 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
The TRS P consists of the following rules:

   U281^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(quot(V1, V2)) -> ISNATKIND(V1)
   U271^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(s_(V1)) -> ISNATKIND(V1)
   ISNATKIND(gcd(V1, V2)) -> U281^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> U261^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> U251^1(isNatKind(V1), V2)
   ISNATKIND(d(V1, V2)) -> U271^1(isNatKind(V1), V2)
   U251^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> ISNATKIND(V1)
   U301^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(quot(V1, V2)) -> U301^1(isNatKind(V1), V2)
   U261^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(p_(V1)) -> ISNATKIND(V1)
   ISNATKIND(d(V1, V2)) -> ISNATKIND(V1)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(6) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(7)
Obligation:
The TRS P consists of the following rules:

   U281^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(quot(V1, V2)) -> ISNATKIND(V1)
   U271^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(s_(V1)) -> ISNATKIND(V1)
   ISNATKIND(gcd(V1, V2)) -> U281^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> U261^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> U251^1(isNatKind(V1), V2)
   ISNATKIND(d(V1, V2)) -> U271^1(isNatKind(V1), V2)
   U251^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> ISNATKIND(V1)
   U301^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(quot(V1, V2)) -> U301^1(isNatKind(V1), V2)
   U261^1(tt, V2) -> ISNATKIND(V2)
   ISNATKIND(p_(V1)) -> ISNATKIND(V1)
   ISNATKIND(d(V1, V2)) -> ISNATKIND(V1)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(8) EUsableRulesReductionPairsProof (EQUIVALENT)
By using the improved usable rules and equations with reduction pair processor [DA_STEIN] with a polynomial ordering [POLO], all dependency pairs and the corresponding improved usable rules can be oriented non-strictly, the improved  usable equations and the esharp equations can be oriented equivalently. All non-usable rules and equations are removed, and those dependency pairs and improved usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   ISNATKIND(quot(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(s_(V1)) -> ISNATKIND(V1)
   ISNATKIND(gcd(V1, V2)) -> U281^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> U261^1(isNatKind(V1), V2)
   ISNATKIND(_*_(V1, V2)) -> U251^1(isNatKind(V1), V2)
   ISNATKIND(d(V1, V2)) -> U271^1(isNatKind(V1), V2)
   ISNATKIND(gcd(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(_+_(V1, V2)) -> ISNATKIND(V1)
   ISNATKIND(quot(V1, V2)) -> U301^1(isNatKind(V1), V2)
   ISNATKIND(p_(V1)) -> ISNATKIND(V1)
   ISNATKIND(d(V1, V2)) -> ISNATKIND(V1)
The following rules are removed from R:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U271(tt, V2) -> U272(isNatKind(V2))
   U31(tt, N) -> U32(isNatKind(N), N)
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)
The following equations are removed from E:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(2) = 0
   POL(3) = 0
   POL(4) = 0
   POL(5) = 0
   POL(6) = 0
   POL(7) = 0
   POL(ISNATKIND(x_1)) = 2*x_1
   POL(U251(x_1, x_2)) = 2 + 2*x_1 + 3*x_2
   POL(U251^1(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U252(x_1)) = x_1
   POL(U261(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U261^1(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U262(x_1)) = x_1
   POL(U271(x_1, x_2)) = 2 + 2*x_1 + 3*x_2
   POL(U271^1(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U272(x_1)) = x_1
   POL(U281(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U281^1(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U282(x_1)) = x_1
   POL(U291(x_1)) = x_1
   POL(U301(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U301^1(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U302(x_1)) = x_1
   POL(U311(x_1)) = 2*x_1
   POL(_*_(x_1, x_2)) = 3 + 3*x_1 + 3*x_2
   POL(_+_(x_1, x_2)) = 3 + 3*x_1 + 3*x_2
   POL(d(x_1, x_2)) = 3 + 3*x_1 + 3*x_2
   POL(gcd(x_1, x_2)) = 3 + 3*x_1 + 3*x_2
   POL(isNatKind(x_1)) = 2*x_1
   POL(p_(x_1)) = 2 + 2*x_1
   POL(quot(x_1, x_2)) = 3*x_1 + 3*x_2
   POL(s_(x_1)) = 3 + 3*x_1
   POL(tt) = 0


----------------------------------------

(9)
Obligation:
The TRS P consists of the following rules:

   U281^1(tt, V2) -> ISNATKIND(V2)
   U271^1(tt, V2) -> ISNATKIND(V2)
   U251^1(tt, V2) -> ISNATKIND(V2)
   U301^1(tt, V2) -> ISNATKIND(V2)
   U261^1(tt, V2) -> ISNATKIND(V2)

The TRS R consists of the following rules:

   U301(tt, V2) -> U302(isNatKind(V2))
   U281(tt, V2) -> U282(isNatKind(V2))
   U311(tt) -> tt
   U272(tt) -> tt
   U282(tt) -> tt
   U302(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U291(tt) -> tt
   U252(tt) -> tt

E is empty.
E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(10) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 0 SCCs with 5 less nodes.
----------------------------------------

(11)
TRUE

----------------------------------------

(12)
Obligation:
The TRS P consists of the following rules:

   U324^1(tt, V1, V2) -> ISNZNAT(V1)
   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U242^1(tt, V1, V2) -> U243^1(isNatKind(V2), V1, V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   ISNAT(_+_(V1, V2)) -> U201^1(isNatKind(V1), V1, V2)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U222^1(tt, V1, V2) -> U223^1(isNatKind(V2), V1, V2)
   U342^1(tt, V1) -> ISNAT(V1)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U203^1(tt, V1, V2) -> U204^1(isNatKind(V2), V1, V2)
   U224^1(tt, V1, V2) -> ISNAT(V1)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U245^1(tt, V2) -> ISNZNAT(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   U204^1(tt, V1, V2) -> U205^1(isNat(V1), V2)
   ISNAT(p_(V1)) -> U231^1(isNatKind(V1), V1)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U192^1(tt, V1, V2) -> U193^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> U335^1(isNzNat(V1), V2)
   U232^1(tt, V1) -> ISNZNAT(V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(d(V1, V2)) -> U211^1(isNatKind(V1), V1, V2)
   U331^1(tt, V1, V2) -> U332^1(isNatKind(V1), V1, V2)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   U243^1(tt, V1, V2) -> U244^1(isNatKind(V2), V1, V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U201^1(tt, V1, V2) -> U202^1(isNatKind(V1), V1, V2)
   U323^1(tt, V1, V2) -> U324^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> ISNZNAT(V1)
   U204^1(tt, V1, V2) -> ISNAT(V1)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U225^1(tt, V2) -> ISNAT(V2)
   U195^1(tt, V2) -> ISNAT(V2)
   U322^1(tt, V1, V2) -> U323^1(isNatKind(V2), V1, V2)
   ISNAT(_*_(V1, V2)) -> U191^1(isNatKind(V1), V1, V2)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   U224^1(tt, V1, V2) -> U225^1(isNat(V1), V2)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   U335^1(tt, V2) -> ISNZNAT(V2)
   U325^1(tt, V2) -> ISNZNAT(V2)
   U205^1(tt, V2) -> ISNAT(V2)
   ISNAT(quot(V1, V2)) -> U241^1(isNatKind(V1), V1, V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U223^1(tt, V1, V2) -> U224^1(isNatKind(V2), V1, V2)
   U215^1(tt, V2) -> ISNAT(V2)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(13) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(14)
Obligation:
The TRS P consists of the following rules:

   U324^1(tt, V1, V2) -> ISNZNAT(V1)
   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U242^1(tt, V1, V2) -> U243^1(isNatKind(V2), V1, V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   ISNAT(_+_(V1, V2)) -> U201^1(isNatKind(V1), V1, V2)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U222^1(tt, V1, V2) -> U223^1(isNatKind(V2), V1, V2)
   U342^1(tt, V1) -> ISNAT(V1)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U203^1(tt, V1, V2) -> U204^1(isNatKind(V2), V1, V2)
   U224^1(tt, V1, V2) -> ISNAT(V1)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U245^1(tt, V2) -> ISNZNAT(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   U204^1(tt, V1, V2) -> U205^1(isNat(V1), V2)
   ISNAT(p_(V1)) -> U231^1(isNatKind(V1), V1)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U192^1(tt, V1, V2) -> U193^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> U335^1(isNzNat(V1), V2)
   U232^1(tt, V1) -> ISNZNAT(V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(d(V1, V2)) -> U211^1(isNatKind(V1), V1, V2)
   U331^1(tt, V1, V2) -> U332^1(isNatKind(V1), V1, V2)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   U243^1(tt, V1, V2) -> U244^1(isNatKind(V2), V1, V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U201^1(tt, V1, V2) -> U202^1(isNatKind(V1), V1, V2)
   U323^1(tt, V1, V2) -> U324^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> ISNZNAT(V1)
   U204^1(tt, V1, V2) -> ISNAT(V1)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U225^1(tt, V2) -> ISNAT(V2)
   U195^1(tt, V2) -> ISNAT(V2)
   U322^1(tt, V1, V2) -> U323^1(isNatKind(V2), V1, V2)
   ISNAT(_*_(V1, V2)) -> U191^1(isNatKind(V1), V1, V2)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   U224^1(tt, V1, V2) -> U225^1(isNat(V1), V2)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   U335^1(tt, V2) -> ISNZNAT(V2)
   U325^1(tt, V2) -> ISNZNAT(V2)
   U205^1(tt, V2) -> ISNAT(V2)
   ISNAT(quot(V1, V2)) -> U241^1(isNatKind(V1), V1, V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U223^1(tt, V1, V2) -> U224^1(isNatKind(V2), V1, V2)
   U215^1(tt, V2) -> ISNAT(V2)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(15) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. The following set of Dependency Pairs of this DP problem can be strictly oriented.


   U324^1(tt, V1, V2) -> ISNZNAT(V1)
   U242^1(tt, V1, V2) -> U243^1(isNatKind(V2), V1, V2)
   ISNAT(_+_(V1, V2)) -> U201^1(isNatKind(V1), V1, V2)
   U222^1(tt, V1, V2) -> U223^1(isNatKind(V2), V1, V2)
   U203^1(tt, V1, V2) -> U204^1(isNatKind(V2), V1, V2)
   U224^1(tt, V1, V2) -> ISNAT(V1)
   U204^1(tt, V1, V2) -> U205^1(isNat(V1), V2)
   ISNAT(p_(V1)) -> U231^1(isNatKind(V1), V1)
   U192^1(tt, V1, V2) -> U193^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> U335^1(isNzNat(V1), V2)
   ISNAT(d(V1, V2)) -> U211^1(isNatKind(V1), V1, V2)
   U331^1(tt, V1, V2) -> U332^1(isNatKind(V1), V1, V2)
   U243^1(tt, V1, V2) -> U244^1(isNatKind(V2), V1, V2)
   U201^1(tt, V1, V2) -> U202^1(isNatKind(V1), V1, V2)
   U323^1(tt, V1, V2) -> U324^1(isNatKind(V2), V1, V2)
   U334^1(tt, V1, V2) -> ISNZNAT(V1)
   U204^1(tt, V1, V2) -> ISNAT(V1)
   U225^1(tt, V2) -> ISNAT(V2)
   U322^1(tt, V1, V2) -> U323^1(isNatKind(V2), V1, V2)
   ISNAT(_*_(V1, V2)) -> U191^1(isNatKind(V1), V1, V2)
   U224^1(tt, V1, V2) -> U225^1(isNat(V1), V2)
   U335^1(tt, V2) -> ISNZNAT(V2)
   U325^1(tt, V2) -> ISNZNAT(V2)
   ISNAT(quot(V1, V2)) -> U241^1(isNatKind(V1), V1, V2)
   U223^1(tt, V1, V2) -> U224^1(isNatKind(V2), V1, V2)
The remaining Dependency Pairs were at least non-strictly oriented.


   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U342^1(tt, V1) -> ISNAT(V1)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U245^1(tt, V2) -> ISNZNAT(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U232^1(tt, V1) -> ISNZNAT(V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U195^1(tt, V2) -> ISNAT(V2)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   U205^1(tt, V2) -> ISNAT(V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U215^1(tt, V2) -> ISNAT(V2)
With the implicit AFS we had to orient the following set of usable rules of R non-strictly.


   U282(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U311(tt) -> tt
   U291(tt) -> tt
   U302(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U252(tt) -> tt
   U262(tt) -> tt
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(4) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(7) -> tt
   isNatKind(1) -> tt
   isNatKind(6) -> tt
   isNatKind(2) -> tt
   isNatKind(5) -> tt
   isNatKind(3) -> tt
   isNatKind(0) -> tt
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   U301(tt, V2) -> U302(isNatKind(V2))
   U272(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U251(tt, V2) -> U252(isNatKind(V2))
There is no equation of E#.


With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(1) = 1
   POL(2) = 1
   POL(3) = 2
   POL(4) = 1
   POL(5) = 2
   POL(6) = 1
   POL(7) = 2
   POL(ISNAT(x_1)) = x_1
   POL(ISNZNAT(x_1)) = x_1
   POL(U181(x_1, x_2)) = 3 + 3*x_2
   POL(U181^1(x_1, x_2)) = x_2
   POL(U182(x_1, x_2)) = 3 + 3*x_2
   POL(U182^1(x_1, x_2)) = x_2
   POL(U183(x_1)) = 3
   POL(U191(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U191^1(x_1, x_2, x_3)) = 3*x_2 + x_3
   POL(U192(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U192^1(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U193(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U193^1(x_1, x_2, x_3)) = x_2 + x_3
   POL(U194(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U194^1(x_1, x_2, x_3)) = x_2 + x_3
   POL(U195(x_1, x_2)) = 3 + 3*x_2
   POL(U195^1(x_1, x_2)) = x_2
   POL(U196(x_1)) = 3
   POL(U201(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U201^1(x_1, x_2, x_3)) = 1 + x_2 + 3*x_3
   POL(U202(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U202^1(x_1, x_2, x_3)) = x_2 + 3*x_3
   POL(U203(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U203^1(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U204(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U204^1(x_1, x_2, x_3)) = 1 + x_2 + x_3
   POL(U205(x_1, x_2)) = 3 + 3*x_2
   POL(U205^1(x_1, x_2)) = x_2
   POL(U206(x_1)) = 3
   POL(U211(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U211^1(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(U212(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U212^1(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(U213(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U213^1(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(U214(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U214^1(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(U215(x_1, x_2)) = 3 + 3*x_2
   POL(U215^1(x_1, x_2)) = 2*x_2
   POL(U216(x_1)) = 3
   POL(U221(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U221^1(x_1, x_2, x_3)) = 1 + 3*x_2 + 3*x_3
   POL(U222(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U222^1(x_1, x_2, x_3)) = 1 + x_1 + x_2 + 3*x_3
   POL(U223(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U223^1(x_1, x_2, x_3)) = 2 + x_2 + 3*x_3
   POL(U224(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U224^1(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U225(x_1, x_2)) = 3 + 3*x_2
   POL(U225^1(x_1, x_2)) = 1 + x_2
   POL(U226(x_1)) = 3
   POL(U231(x_1, x_2)) = 3 + 3*x_2
   POL(U231^1(x_1, x_2)) = x_2
   POL(U232(x_1, x_2)) = 3 + 3*x_2
   POL(U232^1(x_1, x_2)) = x_2
   POL(U233(x_1)) = 3
   POL(U241(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U241^1(x_1, x_2, x_3)) = 2 + 3*x_2 + 2*x_3
   POL(U242(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U242^1(x_1, x_2, x_3)) = 2 + x_1 + x_2 + 2*x_3
   POL(U243(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U243^1(x_1, x_2, x_3)) = 2 + x_2 + x_3
   POL(U244(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U244^1(x_1, x_2, x_3)) = x_2 + x_3
   POL(U245(x_1, x_2)) = 3 + 3*x_2
   POL(U245^1(x_1, x_2)) = x_2
   POL(U246(x_1)) = 3
   POL(U251(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U252(x_1)) = x_1
   POL(U261(x_1, x_2)) = 2*x_2
   POL(U262(x_1)) = x_1
   POL(U271(x_1, x_2)) = 2*x_2
   POL(U272(x_1)) = x_1
   POL(U281(x_1, x_2)) = 2 + 2*x_2
   POL(U282(x_1)) = 2 + x_1
   POL(U291(x_1)) = 2*x_1
   POL(U301(x_1, x_2)) = 2*x_2
   POL(U302(x_1)) = x_1
   POL(U311(x_1)) = x_1
   POL(U321(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U321^1(x_1, x_2, x_3)) = 3 + x_2 + x_3
   POL(U322(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U322^1(x_1, x_2, x_3)) = 3 + x_2 + x_3
   POL(U323(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U323^1(x_1, x_2, x_3)) = 2 + x_2 + x_3
   POL(U324(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U324^1(x_1, x_2, x_3)) = 1 + x_2 + x_3
   POL(U325(x_1, x_2)) = 3 + 3*x_2
   POL(U325^1(x_1, x_2)) = 1 + x_2
   POL(U326(x_1)) = 3
   POL(U331(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U331^1(x_1, x_2, x_3)) = 1 + x_2 + 3*x_3
   POL(U332(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U332^1(x_1, x_2, x_3)) = x_2 + 3*x_3
   POL(U333(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U333^1(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U334(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U334^1(x_1, x_2, x_3)) = 2 + x_2 + x_3
   POL(U335(x_1, x_2)) = 3 + 3*x_2
   POL(U335^1(x_1, x_2)) = 1 + x_2
   POL(U336(x_1)) = 3
   POL(U341(x_1, x_2)) = 3 + 3*x_2
   POL(U341^1(x_1, x_2)) = x_2
   POL(U342(x_1, x_2)) = 3 + 3*x_2
   POL(U342^1(x_1, x_2)) = x_2
   POL(U343(x_1)) = 3
   POL(_*_(x_1, x_2)) = 3 + 3*x_1 + x_2
   POL(_+_(x_1, x_2)) = 2 + 3*x_1 + 3*x_2
   POL(d(x_1, x_2)) = 3 + 2*x_1 + 2*x_2
   POL(gcd(x_1, x_2)) = 1 + 3*x_1 + 3*x_2
   POL(isNat(x_1)) = 0
   POL(isNatKind(x_1)) = 2*x_1
   POL(isNzNat(x_1)) = 0
   POL(p_(x_1)) = 3 + 3*x_1
   POL(quot(x_1, x_2)) = 3 + 3*x_1 + 2*x_2
   POL(s_(x_1)) = 2*x_1
   POL(tt) = 2


----------------------------------------

(16)
Obligation:
The TRS P consists of the following rules:

   U321^1(tt, V1, V2) -> U322^1(isNatKind(V1), V1, V2)
   U324^1(tt, V1, V2) -> U325^1(isNzNat(V1), V2)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   U333^1(tt, V1, V2) -> U334^1(isNatKind(V2), V1, V2)
   U241^1(tt, V1, V2) -> U242^1(isNatKind(V1), V1, V2)
   U342^1(tt, V1) -> ISNAT(V1)
   U244^1(tt, V1, V2) -> U245^1(isNat(V1), V2)
   U194^1(tt, V1, V2) -> ISNAT(V1)
   U221^1(tt, V1, V2) -> U222^1(isNatKind(V1), V1, V2)
   U332^1(tt, V1, V2) -> U333^1(isNatKind(V2), V1, V2)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U245^1(tt, V2) -> ISNZNAT(V2)
   U213^1(tt, V1, V2) -> U214^1(isNatKind(V2), V1, V2)
   U191^1(tt, V1, V2) -> U192^1(isNatKind(V1), V1, V2)
   U244^1(tt, V1, V2) -> ISNAT(V1)
   U212^1(tt, V1, V2) -> U213^1(isNatKind(V2), V1, V2)
   ISNZNAT(_*_(V1, V2)) -> U321^1(isNatKind(V1), V1, V2)
   U231^1(tt, V1) -> U232^1(isNatKind(V1), V1)
   U232^1(tt, V1) -> ISNZNAT(V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(gcd(V1, V2)) -> U221^1(isNatKind(V1), V1, V2)
   U194^1(tt, V1, V2) -> U195^1(isNat(V1), V2)
   U214^1(tt, V1, V2) -> U215^1(isNat(V1), V2)
   U202^1(tt, V1, V2) -> U203^1(isNatKind(V2), V1, V2)
   ISNZNAT(gcd(V1, V2)) -> U331^1(isNatKind(V1), V1, V2)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U214^1(tt, V1, V2) -> ISNAT(V1)
   U195^1(tt, V2) -> ISNAT(V2)
   U211^1(tt, V1, V2) -> U212^1(isNatKind(V1), V1, V2)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
   U205^1(tt, V2) -> ISNAT(V2)
   U193^1(tt, V1, V2) -> U194^1(isNatKind(V2), V1, V2)
   U215^1(tt, V2) -> ISNAT(V2)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(17) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 1 SCC with 27 less nodes.
----------------------------------------

(18)
Obligation:
The TRS P consists of the following rules:

   U342^1(tt, V1) -> ISNAT(V1)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(19) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. The following set of Dependency Pairs of this DP problem can be strictly oriented.


   ISNZNAT(s_(V1)) -> U341^1(isNatKind(V1), V1)
The remaining Dependency Pairs were at least non-strictly oriented.


   U342^1(tt, V1) -> ISNAT(V1)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)
With the implicit AFS there is no usable rule of R.


There is no equation of E#.


With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(2) = 0
   POL(3) = 0
   POL(4) = 0
   POL(5) = 0
   POL(6) = 0
   POL(7) = 0
   POL(ISNAT(x_1)) = 3*x_1
   POL(ISNZNAT(x_1)) = 3*x_1
   POL(U181^1(x_1, x_2)) = 3*x_2
   POL(U182^1(x_1, x_2)) = 3*x_2
   POL(U251(x_1, x_2)) = 3 + 3*x_2
   POL(U252(x_1)) = 3
   POL(U261(x_1, x_2)) = 3 + 3*x_2
   POL(U262(x_1)) = 3
   POL(U271(x_1, x_2)) = 3 + 3*x_2
   POL(U272(x_1)) = 3
   POL(U281(x_1, x_2)) = 3 + 3*x_2
   POL(U282(x_1)) = 3
   POL(U291(x_1)) = 3
   POL(U301(x_1, x_2)) = 3 + 3*x_2
   POL(U302(x_1)) = 3
   POL(U311(x_1)) = 3
   POL(U341^1(x_1, x_2)) = 3*x_2
   POL(U342^1(x_1, x_2)) = 3*x_2
   POL(_*_(x_1, x_2)) = 0
   POL(_+_(x_1, x_2)) = 0
   POL(d(x_1, x_2)) = 0
   POL(gcd(x_1, x_2)) = 0
   POL(isNatKind(x_1)) = 0
   POL(p_(x_1)) = 0
   POL(quot(x_1, x_2)) = 0
   POL(s_(x_1)) = 1 + 2*x_1
   POL(tt) = 0


----------------------------------------

(20)
Obligation:
The TRS P consists of the following rules:

   U342^1(tt, V1) -> ISNAT(V1)
   U341^1(tt, V1) -> U342^1(isNatKind(V1), V1)
   U182^1(tt, V) -> ISNZNAT(V)
   ISNAT(V) -> U181^1(isNatKind(V), V)
   U181^1(tt, V) -> U182^1(isNatKind(V), V)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(21) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 0 SCCs with 5 less nodes.
----------------------------------------

(22)
TRUE

----------------------------------------

(23)
Obligation:
The TRS P consists of the following rules:

   _>_^1(s_(N), s_(M)) -> U81^1(isNat(M), M, N)
   U84^1(tt, M, N) -> _>_^1(N, M)
   U81^1(tt, M, N) -> U82^1(isNatKind(M), M, N)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(24) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(25)
Obligation:
The TRS P consists of the following rules:

   _>_^1(s_(N), s_(M)) -> U81^1(isNat(M), M, N)
   U84^1(tt, M, N) -> _>_^1(N, M)
   U81^1(tt, M, N) -> U82^1(isNatKind(M), M, N)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(26) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. The following set of Dependency Pairs of this DP problem can be strictly oriented.


   _>_^1(s_(N), s_(M)) -> U81^1(isNat(M), M, N)
   U81^1(tt, M, N) -> U82^1(isNatKind(M), M, N)
The remaining Dependency Pairs were at least non-strictly oriented.


   U84^1(tt, M, N) -> _>_^1(N, M)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)
With the implicit AFS there is no usable rule of R.


There is no equation of E#.


With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(2) = 0
   POL(3) = 0
   POL(4) = 0
   POL(5) = 0
   POL(6) = 0
   POL(7) = 0
   POL(U181(x_1, x_2)) = 3 + 3*x_2
   POL(U182(x_1, x_2)) = 3 + 3*x_2
   POL(U183(x_1)) = 3
   POL(U191(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U192(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U193(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U194(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U195(x_1, x_2)) = 3 + 3*x_2
   POL(U196(x_1)) = 3
   POL(U201(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U202(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U203(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U204(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U205(x_1, x_2)) = 3 + 3*x_2
   POL(U206(x_1)) = 3
   POL(U211(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U212(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U213(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U214(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U215(x_1, x_2)) = 3 + 3*x_2
   POL(U216(x_1)) = 3
   POL(U221(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U222(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U223(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U224(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U225(x_1, x_2)) = 3 + 3*x_2
   POL(U226(x_1)) = 3
   POL(U231(x_1, x_2)) = 3 + 3*x_2
   POL(U232(x_1, x_2)) = 3 + 3*x_2
   POL(U233(x_1)) = 3
   POL(U241(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U242(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U243(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U244(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U245(x_1, x_2)) = 3 + 3*x_2
   POL(U246(x_1)) = 3
   POL(U251(x_1, x_2)) = 3 + 3*x_2
   POL(U252(x_1)) = 3
   POL(U261(x_1, x_2)) = 3 + 3*x_2
   POL(U262(x_1)) = 3
   POL(U271(x_1, x_2)) = 3 + 3*x_2
   POL(U272(x_1)) = 3
   POL(U281(x_1, x_2)) = 3 + 3*x_2
   POL(U282(x_1)) = 3
   POL(U291(x_1)) = 3
   POL(U301(x_1, x_2)) = 3 + 3*x_2
   POL(U302(x_1)) = 3
   POL(U311(x_1)) = 3
   POL(U321(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U322(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U323(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U324(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U325(x_1, x_2)) = 3 + 3*x_2
   POL(U326(x_1)) = 3
   POL(U331(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U332(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U333(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U334(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U335(x_1, x_2)) = 3 + 3*x_2
   POL(U336(x_1)) = 3
   POL(U341(x_1, x_2)) = 3 + 3*x_2
   POL(U342(x_1, x_2)) = 3 + 3*x_2
   POL(U343(x_1)) = 3
   POL(U81^1(x_1, x_2, x_3)) = 1 + 2*x_2
   POL(U82^1(x_1, x_2, x_3)) = 2*x_2
   POL(U83^1(x_1, x_2, x_3)) = 2*x_2
   POL(U84^1(x_1, x_2, x_3)) = 2*x_2
   POL(_*_(x_1, x_2)) = 0
   POL(_+_(x_1, x_2)) = 0
   POL(_>_^1(x_1, x_2)) = 2*x_2
   POL(d(x_1, x_2)) = 0
   POL(gcd(x_1, x_2)) = 0
   POL(isNat(x_1)) = 0
   POL(isNatKind(x_1)) = 0
   POL(isNzNat(x_1)) = 0
   POL(p_(x_1)) = 0
   POL(quot(x_1, x_2)) = 0
   POL(s_(x_1)) = 1 + 2*x_1
   POL(tt) = 0


----------------------------------------

(27)
Obligation:
The TRS P consists of the following rules:

   U84^1(tt, M, N) -> _>_^1(N, M)
   U82^1(tt, M, N) -> U83^1(isNat(N), M, N)
   U83^1(tt, M, N) -> U84^1(isNatKind(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(28) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 0 SCCs with 3 less nodes.
----------------------------------------

(29)
TRUE

----------------------------------------

(30)
Obligation:
The TRS P consists of the following rules:

   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U44^1(tt, M, N) -> _+_^1(N, M)
   _+_^1(s_(N), s_(M)) -> U41^1(isNat(M), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(31) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(32)
Obligation:
The TRS P consists of the following rules:

   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U44^1(tt, M, N) -> _+_^1(N, M)
   _+_^1(s_(N), s_(M)) -> U41^1(isNat(M), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _+_^1(x, y) == _+_^1(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(33) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. The following set of Dependency Pairs of this DP problem can be strictly oriented.


   _+_^1(s_(N), s_(M)) -> U41^1(isNat(M), M, N)
The remaining Dependency Pairs were at least non-strictly oriented.


   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U44^1(tt, M, N) -> _+_^1(N, M)
With the implicit AFS there is no usable rule of R.


We had to orient the following equations of E# equivalently.


   _+_^1(x, y) == _+_^1(y, x)
With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(2) = 0
   POL(3) = 0
   POL(4) = 0
   POL(5) = 0
   POL(6) = 0
   POL(7) = 0
   POL(U181(x_1, x_2)) = 3 + 3*x_2
   POL(U182(x_1, x_2)) = 3 + 3*x_2
   POL(U183(x_1)) = 3
   POL(U191(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U192(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U193(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U194(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U195(x_1, x_2)) = 3 + 3*x_2
   POL(U196(x_1)) = 3
   POL(U201(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U202(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U203(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U204(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U205(x_1, x_2)) = 3 + 3*x_2
   POL(U206(x_1)) = 3
   POL(U211(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U212(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U213(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U214(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U215(x_1, x_2)) = 3 + 3*x_2
   POL(U216(x_1)) = 3
   POL(U221(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U222(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U223(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U224(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U225(x_1, x_2)) = 3 + 3*x_2
   POL(U226(x_1)) = 3
   POL(U231(x_1, x_2)) = 3 + 3*x_2
   POL(U232(x_1, x_2)) = 3 + 3*x_2
   POL(U233(x_1)) = 3
   POL(U241(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U242(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U243(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U244(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U245(x_1, x_2)) = 3 + 3*x_2
   POL(U246(x_1)) = 3
   POL(U251(x_1, x_2)) = 2
   POL(U252(x_1)) = 0
   POL(U261(x_1, x_2)) = 0
   POL(U262(x_1)) = 0
   POL(U271(x_1, x_2)) = 2
   POL(U272(x_1)) = 0
   POL(U281(x_1, x_2)) = 2
   POL(U282(x_1)) = 0
   POL(U291(x_1)) = 0
   POL(U301(x_1, x_2)) = 2
   POL(U302(x_1)) = 0
   POL(U311(x_1)) = 2
   POL(U321(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U322(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U323(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U324(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U325(x_1, x_2)) = 3 + 3*x_2
   POL(U326(x_1)) = 3
   POL(U331(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U332(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U333(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U334(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U335(x_1, x_2)) = 3 + 3*x_2
   POL(U336(x_1)) = 3
   POL(U341(x_1, x_2)) = 3 + 3*x_2
   POL(U342(x_1, x_2)) = 3 + 3*x_2
   POL(U343(x_1)) = 3
   POL(U41^1(x_1, x_2, x_3)) = 2*x_2 + 3*x_3
   POL(U42^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(U43^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(U44^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(_*_(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(_+_(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(_+_^1(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(d(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(gcd(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(isNat(x_1)) = 0
   POL(isNatKind(x_1)) = 2 + x_1
   POL(isNzNat(x_1)) = 0
   POL(p_(x_1)) = 2 + 2*x_1
   POL(quot(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(s_(x_1)) = 2 + 2*x_1
   POL(tt) = 0


----------------------------------------

(34)
Obligation:
The TRS P consists of the following rules:

   U43^1(tt, M, N) -> U44^1(isNatKind(N), M, N)
   U42^1(tt, M, N) -> U43^1(isNat(N), M, N)
   U41^1(tt, M, N) -> U42^1(isNatKind(M), M, N)
   U44^1(tt, M, N) -> _+_^1(N, M)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _+_^1(x, y) == _+_^1(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(35) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 0 SCCs with 4 less nodes.
----------------------------------------

(36)
TRUE

----------------------------------------

(37)
Obligation:
The TRS P consists of the following rules:

   _*_^1(s_(N), s_(M)) -> U21^1(isNat(M), M, N)
   U24^1(tt, M, N) -> _*_^1(N, M)
   U21^1(tt, M, N) -> U22^1(isNatKind(M), M, N)
   U22^1(tt, M, N) -> U23^1(isNat(N), M, N)
   U23^1(tt, M, N) -> U24^1(isNatKind(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(38) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(39)
Obligation:
The TRS P consists of the following rules:

   _*_^1(s_(N), s_(M)) -> U21^1(isNat(M), M, N)
   U24^1(tt, M, N) -> _*_^1(N, M)
   U21^1(tt, M, N) -> U22^1(isNatKind(M), M, N)
   U22^1(tt, M, N) -> U23^1(isNat(N), M, N)
   U23^1(tt, M, N) -> U24^1(isNatKind(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(40) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. All Dependency Pairs of this DP problem can be strictly oriented.


   _*_^1(s_(N), s_(M)) -> U21^1(isNat(M), M, N)
   U24^1(tt, M, N) -> _*_^1(N, M)
   U21^1(tt, M, N) -> U22^1(isNatKind(M), M, N)
   U22^1(tt, M, N) -> U23^1(isNat(N), M, N)
   U23^1(tt, M, N) -> U24^1(isNatKind(N), M, N)
With the implicit AFS we had to orient the following set of usable rules of R non-strictly.


   U262(tt) -> tt
   U252(tt) -> tt
   U302(tt) -> tt
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(4) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(7) -> tt
   isNatKind(1) -> tt
   isNatKind(6) -> tt
   isNatKind(2) -> tt
   isNatKind(5) -> tt
   isNatKind(3) -> tt
   isNatKind(0) -> tt
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   U291(tt) -> tt
   U311(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U251(tt, V2) -> U252(isNatKind(V2))
   U281(tt, V2) -> U282(isNatKind(V2))
   U272(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U282(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
We had to orient the following equations of E# equivalently.


   _*_^1(x, y) == _*_^1(y, x)
With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 3
   POL(1) = 3
   POL(2) = 3
   POL(3) = 3
   POL(4) = 3
   POL(5) = 3
   POL(6) = 3
   POL(7) = 3
   POL(U181(x_1, x_2)) = 3 + 3*x_2
   POL(U182(x_1, x_2)) = 3 + 3*x_2
   POL(U183(x_1)) = 3
   POL(U191(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U192(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U193(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U194(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U195(x_1, x_2)) = 3 + 3*x_2
   POL(U196(x_1)) = 3
   POL(U201(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U202(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U203(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U204(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U205(x_1, x_2)) = 3 + 3*x_2
   POL(U206(x_1)) = 3
   POL(U211(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U212(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U213(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U214(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U215(x_1, x_2)) = 3 + 3*x_2
   POL(U216(x_1)) = 3
   POL(U21^1(x_1, x_2, x_3)) = 2 + 3*x_2 + 3*x_3
   POL(U221(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U222(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U223(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U224(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U225(x_1, x_2)) = 3 + 3*x_2
   POL(U226(x_1)) = 3
   POL(U22^1(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + 3*x_3
   POL(U231(x_1, x_2)) = 3 + 3*x_2
   POL(U232(x_1, x_2)) = 3 + 3*x_2
   POL(U233(x_1)) = 3
   POL(U23^1(x_1, x_2, x_3)) = 3 + 2*x_2 + 3*x_3
   POL(U241(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U242(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U243(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U244(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U245(x_1, x_2)) = 3 + 3*x_2
   POL(U246(x_1)) = 3
   POL(U24^1(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(U251(x_1, x_2)) = 2*x_1 + x_2
   POL(U252(x_1)) = x_1
   POL(U261(x_1, x_2)) = 2*x_1 + x_2
   POL(U262(x_1)) = x_1
   POL(U271(x_1, x_2)) = 2*x_1 + 3*x_2
   POL(U272(x_1)) = 3*x_1
   POL(U281(x_1, x_2)) = 1 + 3*x_1 + 3*x_2
   POL(U282(x_1)) = 3*x_1
   POL(U291(x_1)) = 3*x_1
   POL(U301(x_1, x_2)) = 1 + 3*x_1 + x_2
   POL(U302(x_1)) = x_1
   POL(U311(x_1)) = 2 + x_1
   POL(U321(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U322(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U323(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U324(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U325(x_1, x_2)) = 3 + 3*x_2
   POL(U326(x_1)) = 3
   POL(U331(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U332(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U333(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U334(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U335(x_1, x_2)) = 3 + 3*x_2
   POL(U336(x_1)) = 3
   POL(U341(x_1, x_2)) = 3 + 3*x_2
   POL(U342(x_1, x_2)) = 3 + 3*x_2
   POL(U343(x_1)) = 3
   POL(_*_(x_1, x_2)) = 2 + 3*x_1 + 2*x_2
   POL(_*_^1(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(_+_(x_1, x_2)) = 2 + 3*x_1 + 2*x_2
   POL(d(x_1, x_2)) = 3*x_1 + 3*x_2
   POL(gcd(x_1, x_2)) = 2 + 3*x_1 + 3*x_2
   POL(isNat(x_1)) = 0
   POL(isNatKind(x_1)) = x_1
   POL(isNzNat(x_1)) = 0
   POL(p_(x_1)) = 3*x_1
   POL(quot(x_1, x_2)) = 2 + 3*x_1 + 2*x_2
   POL(s_(x_1)) = 2 + 2*x_1
   POL(tt) = 3


----------------------------------------

(41)
Obligation:
P is empty.
The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(42) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,E#,R,E) chain.
----------------------------------------

(43)
YES

----------------------------------------

(44)
Obligation:
The TRS P consists of the following rules:

   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U101^1(tt, M, N) -> U102^1(isNatKind(M), M, N)
   U104^1(tt, M, N) -> D(N, M)
   D(s_(N), s_(M)) -> U101^1(isNat(M), M, N)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(45) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(46)
Obligation:
The TRS P consists of the following rules:

   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U101^1(tt, M, N) -> U102^1(isNatKind(M), M, N)
   U104^1(tt, M, N) -> D(N, M)
   D(s_(N), s_(M)) -> U101^1(isNat(M), M, N)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   D(x, y) == D(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(47) EDPPoloProof (EQUIVALENT)
We use the reduction pair processor [DA_STEIN] with a polynomial ordering [POLO]. The following set of Dependency Pairs of this DP problem can be strictly oriented.


   U101^1(tt, M, N) -> U102^1(isNatKind(M), M, N)
   D(s_(N), s_(M)) -> U101^1(isNat(M), M, N)
The remaining Dependency Pairs were at least non-strictly oriented.


   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U104^1(tt, M, N) -> D(N, M)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)
With the implicit AFS there is no usable rule of R.


We had to orient the following equations of E# equivalently.


   D(x, y) == D(y, x)
With the implicit AFS there is no usable equation of E.


Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(2) = 0
   POL(3) = 0
   POL(4) = 0
   POL(5) = 0
   POL(6) = 0
   POL(7) = 0
   POL(D(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U101^1(x_1, x_2, x_3)) = 3 + 2*x_2 + 2*x_3
   POL(U102^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(U103^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(U104^1(x_1, x_2, x_3)) = 2*x_2 + 2*x_3
   POL(U181(x_1, x_2)) = 3 + 3*x_2
   POL(U182(x_1, x_2)) = 3 + 3*x_2
   POL(U183(x_1)) = 3
   POL(U191(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U192(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U193(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U194(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U195(x_1, x_2)) = 3 + 3*x_2
   POL(U196(x_1)) = 3
   POL(U201(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U202(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U203(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U204(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U205(x_1, x_2)) = 3 + 3*x_2
   POL(U206(x_1)) = 3
   POL(U211(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U212(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U213(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U214(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U215(x_1, x_2)) = 3 + 3*x_2
   POL(U216(x_1)) = 3
   POL(U221(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U222(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U223(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U224(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U225(x_1, x_2)) = 3 + 3*x_2
   POL(U226(x_1)) = 3
   POL(U231(x_1, x_2)) = 3 + 3*x_2
   POL(U232(x_1, x_2)) = 3 + 3*x_2
   POL(U233(x_1)) = 3
   POL(U241(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U242(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U243(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U244(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U245(x_1, x_2)) = 3 + 3*x_2
   POL(U246(x_1)) = 3
   POL(U251(x_1, x_2)) = 3 + 3*x_2
   POL(U252(x_1)) = 3
   POL(U261(x_1, x_2)) = 3 + 3*x_2
   POL(U262(x_1)) = 3
   POL(U271(x_1, x_2)) = 3 + 3*x_2
   POL(U272(x_1)) = 3
   POL(U281(x_1, x_2)) = 3 + 3*x_2
   POL(U282(x_1)) = 3
   POL(U291(x_1)) = 3
   POL(U301(x_1, x_2)) = 3 + 3*x_2
   POL(U302(x_1)) = 3
   POL(U311(x_1)) = 3
   POL(U321(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U322(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U323(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U324(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U325(x_1, x_2)) = 3 + 3*x_2
   POL(U326(x_1)) = 3
   POL(U331(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U332(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U333(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U334(x_1, x_2, x_3)) = 3 + 3*x_2 + 3*x_3
   POL(U335(x_1, x_2)) = 3 + 3*x_2
   POL(U336(x_1)) = 3
   POL(U341(x_1, x_2)) = 3 + 3*x_2
   POL(U342(x_1, x_2)) = 3 + 3*x_2
   POL(U343(x_1)) = 3
   POL(_*_(x_1, x_2)) = 0
   POL(_+_(x_1, x_2)) = 0
   POL(d(x_1, x_2)) = 0
   POL(gcd(x_1, x_2)) = 0
   POL(isNat(x_1)) = 0
   POL(isNatKind(x_1)) = 0
   POL(isNzNat(x_1)) = 0
   POL(p_(x_1)) = 0
   POL(quot(x_1, x_2)) = 0
   POL(s_(x_1)) = 2 + x_1
   POL(tt) = 0


----------------------------------------

(48)
Obligation:
The TRS P consists of the following rules:

   U103^1(tt, M, N) -> U104^1(isNatKind(N), M, N)
   U104^1(tt, M, N) -> D(N, M)
   U102^1(tt, M, N) -> U103^1(isNat(N), M, N)

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   D(x, y) == D(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(49) EDependencyGraphProof (EQUIVALENT)
The approximation of the Equational Dependency Graph [DA_STEIN] contains 0 SCCs with 3 less nodes.
----------------------------------------

(50)
TRUE

----------------------------------------

(51)
Obligation:
The TRS P consists of the following rules:

   U381^1(tt, M', N) -> U382^1(isNatKind(M'), M', N)
   U384^1(tt, M', N) -> U385^1(equal(_>_(N, M'), true), M', N)
   U383^1(tt, M', N) -> U384^1(isNatKind(N), M', N)
   U382^1(tt, M', N) -> U383^1(isNat(N), M', N)
   QUOT(N, M') -> U381^1(isNzNat(M'), M', N)
   U385^1(tt, M', N) -> QUOT(d(N, M'), M')

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(52) ESharpUsableEquationsProof (EQUIVALENT)
We can delete the following equations of E# with the esharp usable equations processor[DA_STEIN]:
   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

----------------------------------------

(53)
Obligation:
The TRS P consists of the following rules:

   U381^1(tt, M', N) -> U382^1(isNatKind(M'), M', N)
   U384^1(tt, M', N) -> U385^1(equal(_>_(N, M'), true), M', N)
   U383^1(tt, M', N) -> U384^1(isNatKind(N), M', N)
   U382^1(tt, M', N) -> U383^1(isNat(N), M', N)
   QUOT(N, M') -> U381^1(isNzNat(M'), M', N)
   U385^1(tt, M', N) -> QUOT(d(N, M'), M')

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

E# is empty.
We have to consider all minimal (P,E#,R,E)-chains
----------------------------------------

(54) EUsableRulesProof (EQUIVALENT)
We use the improved usable rules and equations processor [DA_STEIN] to delete all non-usable rules from R and all non-usable equations from E, but we lose minimality and add the following 2 Ce-rules:
   c(x, y) -> x
   c(x, y) -> y

----------------------------------------

(55)
Obligation:
The TRS P consists of the following rules:

   U381^1(tt, M', N) -> U382^1(isNatKind(M'), M', N)
   U384^1(tt, M', N) -> U385^1(equal(_>_(N, M'), true), M', N)
   U383^1(tt, M', N) -> U384^1(isNatKind(N), M', N)
   U382^1(tt, M', N) -> U383^1(isNat(N), M', N)
   QUOT(N, M') -> U381^1(isNzNat(M'), M', N)
   U385^1(tt, M', N) -> QUOT(d(N, M'), M')

The TRS R consists of the following rules:

   isNzNat(6) -> tt
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNat(0) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U91(tt, N) -> U92(isNatKind(N), N)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U206(tt) -> tt
   U61(tt, M) -> U62(isNatKind(M))
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   U282(tt) -> tt
   U215(tt, V2) -> U216(isNat(V2))
   U72(tt) -> true
   isNatKind(4) -> tt
   U302(tt) -> tt
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U196(tt) -> tt
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   U291(tt) -> tt
   _>_(0, M) -> U61(isNat(M), M)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U252(tt) -> tt
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   U92(tt, N) -> N
   U246(tt) -> tt
   isNzNat(1) -> tt
   isNzNat(4) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   U281(tt, V2) -> U282(isNatKind(V2))
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U342(tt, V1) -> U343(isNat(V1))
   U84(tt, M, N) -> _>_(N, M)
   U311(tt) -> tt
   U326(tt) -> tt
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U195(tt, V2) -> U196(isNat(V2))
   isNatKind(7) -> tt
   isNatKind(1) -> tt
   isNatKind(6) -> tt
   isNatKind(2) -> tt
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U343(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   U205(tt, V2) -> U206(isNat(V2))
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U233(tt) -> tt
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U226(tt) -> tt
   equal(X, X) -> tt
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U182(tt, V) -> U183(isNzNat(V))
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   isNatKind(5) -> tt
   U336(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   isNatKind(3) -> tt
   U183(tt) -> tt
   U104(tt, M, N) -> d(N, M)
   isNatKind(0) -> tt
   U225(tt, V2) -> U226(isNat(V2))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U262(tt) -> tt
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U62(tt) -> false
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   isNzNat(7) -> tt
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   U71(tt, N') -> U72(isNatKind(N'))
   isNzNat(5) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   U216(tt) -> tt
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U325(tt, V2) -> U326(isNzNat(V2))
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U261(tt, V2) -> U262(isNatKind(V2))
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U251(tt, V2) -> U252(isNatKind(V2))
   U335(tt, V2) -> U336(isNzNat(V2))
   d(0, N) -> U91(isNat(N), N)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNat(V) -> U181(isNatKind(V), V)
   c(x, y) -> x
   c(x, y) -> y

The set E consists of the following equations:

   d(x, y) == d(y, x)

E# is empty.
We have to consider all (P,E#,R,E)-chains
----------------------------------------

(56)
Obligation:
The TRS P consists of the following rules:

   U123^1(tt, M', N') -> U124^1(isNatKind(N'), M', N')
   U122^1(tt, M', N') -> U123^1(isNzNat(N'), M', N')
   GCD(N', M') -> U121^1(isNzNat(M'), M', N')
   U125^1(tt, M', N') -> GCD(d(N', M'), M')
   U121^1(tt, M', N') -> U122^1(isNatKind(M'), M', N')
   U124^1(tt, M', N') -> U125^1(equal(_>_(N', M'), true), M', N')

The TRS R consists of the following rules:

   1 -> s_(0)
   2 -> s_(s_(0))
   3 -> s_(s_(s_(0)))
   4 -> s_(s_(s_(s_(0))))
   5 -> s_(s_(s_(s_(s_(0)))))
   6 -> s_(s_(s_(s_(s_(s_(0))))))
   7 -> s_(s_(s_(s_(s_(s_(s_(0)))))))
   U101(tt, M, N) -> U102(isNatKind(M), M, N)
   U102(tt, M, N) -> U103(isNat(N), M, N)
   U103(tt, M, N) -> U104(isNatKind(N), M, N)
   U104(tt, M, N) -> d(N, M)
   U11(tt, N) -> U12(isNatKind(N))
   U111(tt, N) -> U112(isNatKind(N))
   U112(tt) -> 0
   U12(tt) -> 0
   U121(tt, M', N') -> U122(isNatKind(M'), M', N')
   U122(tt, M', N') -> U123(isNzNat(N'), M', N')
   U123(tt, M', N') -> U124(isNatKind(N'), M', N')
   U124(tt, M', N') -> U125(equal(_>_(N', M'), true), M', N')
   U125(tt, M', N') -> gcd(d(N', M'), M')
   U131(tt, N') -> U132(isNatKind(N'), N')
   U132(tt, N') -> N'
   U141(tt, V1, V2) -> U142(isNatKind(V1), V1, V2)
   U142(tt, V1, V2) -> U143(isNatKind(V2), V1, V2)
   U143(tt, V1, V2) -> U144(isNatKind(V2), V1, V2)
   U144(tt, V1, V2) -> U145(isNat(V1), V2)
   U145(tt, V2) -> U146(isNat(V2))
   U146(tt) -> tt
   U151(tt, V1, V2) -> U152(isNatKind(V1), V1, V2)
   U152(tt, V1, V2) -> U153(isNatKind(V2), V1, V2)
   U153(tt, V1, V2) -> U154(isNatKind(V2), V1, V2)
   U154(tt, V1, V2) -> U155(isNat(V1), V2)
   U155(tt, V2) -> U156(isNat(V2))
   U156(tt) -> tt
   U161(tt, V2) -> U162(isNatKind(V2))
   U162(tt) -> tt
   U171(tt, V2) -> U172(isNatKind(V2))
   U172(tt) -> tt
   U181(tt, V) -> U182(isNatKind(V), V)
   U182(tt, V) -> U183(isNzNat(V))
   U183(tt) -> tt
   U191(tt, V1, V2) -> U192(isNatKind(V1), V1, V2)
   U192(tt, V1, V2) -> U193(isNatKind(V2), V1, V2)
   U193(tt, V1, V2) -> U194(isNatKind(V2), V1, V2)
   U194(tt, V1, V2) -> U195(isNat(V1), V2)
   U195(tt, V2) -> U196(isNat(V2))
   U196(tt) -> tt
   U201(tt, V1, V2) -> U202(isNatKind(V1), V1, V2)
   U202(tt, V1, V2) -> U203(isNatKind(V2), V1, V2)
   U203(tt, V1, V2) -> U204(isNatKind(V2), V1, V2)
   U204(tt, V1, V2) -> U205(isNat(V1), V2)
   U205(tt, V2) -> U206(isNat(V2))
   U206(tt) -> tt
   U21(tt, M, N) -> U22(isNatKind(M), M, N)
   U211(tt, V1, V2) -> U212(isNatKind(V1), V1, V2)
   U212(tt, V1, V2) -> U213(isNatKind(V2), V1, V2)
   U213(tt, V1, V2) -> U214(isNatKind(V2), V1, V2)
   U214(tt, V1, V2) -> U215(isNat(V1), V2)
   U215(tt, V2) -> U216(isNat(V2))
   U216(tt) -> tt
   U22(tt, M, N) -> U23(isNat(N), M, N)
   U221(tt, V1, V2) -> U222(isNatKind(V1), V1, V2)
   U222(tt, V1, V2) -> U223(isNatKind(V2), V1, V2)
   U223(tt, V1, V2) -> U224(isNatKind(V2), V1, V2)
   U224(tt, V1, V2) -> U225(isNat(V1), V2)
   U225(tt, V2) -> U226(isNat(V2))
   U226(tt) -> tt
   U23(tt, M, N) -> U24(isNatKind(N), M, N)
   U231(tt, V1) -> U232(isNatKind(V1), V1)
   U232(tt, V1) -> U233(isNzNat(V1))
   U233(tt) -> tt
   U24(tt, M, N) -> s_(_+_(N, _+_(M, _*_(N, M))))
   U241(tt, V1, V2) -> U242(isNatKind(V1), V1, V2)
   U242(tt, V1, V2) -> U243(isNatKind(V2), V1, V2)
   U243(tt, V1, V2) -> U244(isNatKind(V2), V1, V2)
   U244(tt, V1, V2) -> U245(isNat(V1), V2)
   U245(tt, V2) -> U246(isNzNat(V2))
   U246(tt) -> tt
   U251(tt, V2) -> U252(isNatKind(V2))
   U252(tt) -> tt
   U261(tt, V2) -> U262(isNatKind(V2))
   U262(tt) -> tt
   U271(tt, V2) -> U272(isNatKind(V2))
   U272(tt) -> tt
   U281(tt, V2) -> U282(isNatKind(V2))
   U282(tt) -> tt
   U291(tt) -> tt
   U301(tt, V2) -> U302(isNatKind(V2))
   U302(tt) -> tt
   U31(tt, N) -> U32(isNatKind(N), N)
   U311(tt) -> tt
   U32(tt, N) -> N
   U321(tt, V1, V2) -> U322(isNatKind(V1), V1, V2)
   U322(tt, V1, V2) -> U323(isNatKind(V2), V1, V2)
   U323(tt, V1, V2) -> U324(isNatKind(V2), V1, V2)
   U324(tt, V1, V2) -> U325(isNzNat(V1), V2)
   U325(tt, V2) -> U326(isNzNat(V2))
   U326(tt) -> tt
   U331(tt, V1, V2) -> U332(isNatKind(V1), V1, V2)
   U332(tt, V1, V2) -> U333(isNatKind(V2), V1, V2)
   U333(tt, V1, V2) -> U334(isNatKind(V2), V1, V2)
   U334(tt, V1, V2) -> U335(isNzNat(V1), V2)
   U335(tt, V2) -> U336(isNzNat(V2))
   U336(tt) -> tt
   U341(tt, V1) -> U342(isNatKind(V1), V1)
   U342(tt, V1) -> U343(isNat(V1))
   U343(tt) -> tt
   U351(tt, N) -> U352(isNatKind(N), N)
   U352(tt, N) -> N
   U361(tt, M') -> U362(isNatKind(M'))
   U362(tt) -> s_(0)
   U371(tt, M', N) -> U372(isNatKind(M'), M', N)
   U372(tt, M', N) -> U373(isNat(N), M', N)
   U373(tt, M', N) -> U374(isNatKind(N), M', N)
   U374(tt, M', N) -> U375(equal(_>_(M', N), true))
   U375(tt) -> 0
   U381(tt, M', N) -> U382(isNatKind(M'), M', N)
   U382(tt, M', N) -> U383(isNat(N), M', N)
   U383(tt, M', N) -> U384(isNatKind(N), M', N)
   U384(tt, M', N) -> U385(equal(_>_(N, M'), true), M', N)
   U385(tt, M', N) -> s_(quot(d(N, M'), M'))
   U41(tt, M, N) -> U42(isNatKind(M), M, N)
   U42(tt, M, N) -> U43(isNat(N), M, N)
   U43(tt, M, N) -> U44(isNatKind(N), M, N)
   U44(tt, M, N) -> s_(s_(_+_(N, M)))
   U51(tt, M, N) -> U52(isNatKind(M), M, N)
   U52(tt, M, N) -> U53(isNat(N), M, N)
   U53(tt, M, N) -> U54(isNatKind(N), M, N)
   U54(tt, M, N) -> _>_(M, N)
   U61(tt, M) -> U62(isNatKind(M))
   U62(tt) -> false
   U71(tt, N') -> U72(isNatKind(N'))
   U72(tt) -> true
   U81(tt, M, N) -> U82(isNatKind(M), M, N)
   U82(tt, M, N) -> U83(isNat(N), M, N)
   U83(tt, M, N) -> U84(isNatKind(N), M, N)
   U84(tt, M, N) -> _>_(N, M)
   U91(tt, N) -> U92(isNatKind(N), N)
   U92(tt, N) -> N
   _*_(N, 0) -> U11(isNat(N), N)
   _*_(s_(N), s_(M)) -> U21(isNat(M), M, N)
   _+_(N, 0) -> U31(isNat(N), N)
   _+_(s_(N), s_(M)) -> U41(isNat(M), M, N)
   _<_(N, M) -> U51(isNat(M), M, N)
   _>_(0, M) -> U61(isNat(M), M)
   _>_(N', 0) -> U71(isNzNat(N'), N')
   _>_(s_(N), s_(M)) -> U81(isNat(M), M, N)
   d(0, N) -> U91(isNat(N), N)
   d(s_(N), s_(M)) -> U101(isNat(M), M, N)
   equal(X, X) -> tt
   gcd(0, N) -> U111(isNat(N), N)
   gcd(N', M') -> U121(isNzNat(M'), M', N')
   gcd(N', N') -> U131(isNzNat(N'), N')
   isBoolean(false) -> tt
   isBoolean(true) -> tt
   isBoolean(_<_(V1, V2)) -> U141(isNatKind(V1), V1, V2)
   isBoolean(_>_(V1, V2)) -> U151(isNatKind(V1), V1, V2)
   isBooleanKind(false) -> tt
   isBooleanKind(true) -> tt
   isBooleanKind(_<_(V1, V2)) -> U161(isNatKind(V1), V2)
   isBooleanKind(_>_(V1, V2)) -> U171(isNatKind(V1), V2)
   isNat(0) -> tt
   isNat(V) -> U181(isNatKind(V), V)
   isNat(_*_(V1, V2)) -> U191(isNatKind(V1), V1, V2)
   isNat(_+_(V1, V2)) -> U201(isNatKind(V1), V1, V2)
   isNat(d(V1, V2)) -> U211(isNatKind(V1), V1, V2)
   isNat(gcd(V1, V2)) -> U221(isNatKind(V1), V1, V2)
   isNat(p_(V1)) -> U231(isNatKind(V1), V1)
   isNat(quot(V1, V2)) -> U241(isNatKind(V1), V1, V2)
   isNatKind(0) -> tt
   isNatKind(1) -> tt
   isNatKind(2) -> tt
   isNatKind(3) -> tt
   isNatKind(4) -> tt
   isNatKind(5) -> tt
   isNatKind(6) -> tt
   isNatKind(7) -> tt
   isNatKind(_*_(V1, V2)) -> U251(isNatKind(V1), V2)
   isNatKind(_+_(V1, V2)) -> U261(isNatKind(V1), V2)
   isNatKind(d(V1, V2)) -> U271(isNatKind(V1), V2)
   isNatKind(gcd(V1, V2)) -> U281(isNatKind(V1), V2)
   isNatKind(p_(V1)) -> U291(isNatKind(V1))
   isNatKind(quot(V1, V2)) -> U301(isNatKind(V1), V2)
   isNatKind(s_(V1)) -> U311(isNatKind(V1))
   isNzNat(1) -> tt
   isNzNat(2) -> tt
   isNzNat(3) -> tt
   isNzNat(4) -> tt
   isNzNat(5) -> tt
   isNzNat(6) -> tt
   isNzNat(7) -> tt
   isNzNat(_*_(V1, V2)) -> U321(isNatKind(V1), V1, V2)
   isNzNat(gcd(V1, V2)) -> U331(isNatKind(V1), V1, V2)
   isNzNat(s_(V1)) -> U341(isNatKind(V1), V1)
   p_(s_(N)) -> U351(isNat(N), N)
   quot(M', M') -> U361(isNzNat(M'), M')
   quot(N, M') -> U371(isNzNat(M'), M', N)
   quot(N, M') -> U381(isNzNat(M'), M', N)

The set E consists of the following equations:

   _*_(x, y) == _*_(y, x)
   _+_(x, y) == _+_(y, x)
   d(x, y) == d(y, x)
   gcd(x, y) == gcd(y, x)

The set E# consists of the following equations:

   _*_^1(x, y) == _*_^1(y, x)
   _+_^1(x, y) == _+_^1(y, x)
   D(x, y) == D(y, x)
   GCD(x, y) == GCD(y, x)

We have to consider all minimal (P,E#,R,E)-chains