YES

Problem 1: 

(VAR vu95NonEmpty m n x y)
(THEORY 
(C eq))
(RULES
eq(num0,num0) -> ftrue
eq(num0,s(x)) -> ffalse
eq(s(x),num0) -> ffalse
eq(s(x),s(y)) -> eq(x,y)
ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
purge(add(n,x)) -> add(n,purge(rm(n,x)))
purge(nil) -> nil
rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
rm(n,nil) -> nil
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 EQ(x5,x6) = EQ(x6,x5)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95RM(ffalse,n,add(m,x)) -> RM(n,x)
 IFU95RM(ftrue,n,add(m,x)) -> RM(n,x)
 PURGE(add(n,x)) -> PURGE(rm(n,x))
 PURGE(add(n,x)) -> RM(n,x)
 RM(n,add(m,x)) -> EQ(n,m)
 RM(n,add(m,x)) -> IFU95RM(eq(n,m),n,add(m,x))
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty

Problem 1: 

SCC Processor:
-> FAxioms:
 EQ(x5,x6) = EQ(x6,x5)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95RM(ffalse,n,add(m,x)) -> RM(n,x)
 IFU95RM(ftrue,n,add(m,x)) -> RM(n,x)
 PURGE(add(n,x)) -> PURGE(rm(n,x))
 PURGE(add(n,x)) -> RM(n,x)
 RM(n,add(m,x)) -> EQ(n,m)
 RM(n,add(m,x)) -> IFU95RM(eq(n,m),n,add(m,x))
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> FAxioms:
 eq(x5,x6) -> eq(x6,x5)
 EQ(x5,x6) -> EQ(x6,x5)
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 IFU95RM(ffalse,n,add(m,x)) -> RM(n,x)
 IFU95RM(ftrue,n,add(m,x)) -> RM(n,x)
 RM(n,add(m,x)) -> IFU95RM(eq(n,m),n,add(m,x))
-> FAxioms:
 eq(x5,x6) -> eq(x6,x5)
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 PURGE(add(n,x)) -> PURGE(rm(n,x))
-> FAxioms:
 eq(x5,x6) -> eq(x6,x5)
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> FAxioms:
 EQ(x5,x6) = EQ(x6,x5)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Projection:
 pi(EQ) = [1,2]

Problem 1.1: 

SCC Processor:
-> FAxioms:
 EQ(x5,x6) = EQ(x6,x5)
-> Pairs:
 Empty
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 IFU95RM(ffalse,n,add(m,x)) -> RM(n,x)
 IFU95RM(ftrue,n,add(m,x)) -> RM(n,x)
 RM(n,add(m,x)) -> IFU95RM(eq(n,m),n,add(m,x))
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Projection:
 pi(IFU95RM) = [3]
 pi(RM) = [2]

Problem 1.2: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 RM(n,add(m,x)) -> IFU95RM(eq(n,m),n,add(m,x))
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 Empty
-> Pairs:
 PURGE(add(n,x)) -> PURGE(rm(n,x))
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Usable Equations:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 1
[ifu95rm](X1,X2,X3) = X1 + 2.X3
[purge](X) = 0
[rm](X1,X2) = 2.X2 + 1
[num0] = 2
[add](X1,X2) = X1 + 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 1
[nil] = 2
[s](X) = 0
[ftrue] = 1
[EQ](X1,X2) = 0
[IFU95RM](X1,X2,X3) = 0
[PURGE](X) = 2.X
[RM](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 eq(x5,x6) = eq(x6,x5)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95rm(ffalse,n,add(m,x)) -> add(m,rm(n,x))
 ifu95rm(ftrue,n,add(m,x)) -> rm(n,x)
 purge(add(n,x)) -> add(n,purge(rm(n,x)))
 purge(nil) -> nil
 rm(n,add(m,x)) -> ifu95rm(eq(n,m),n,add(m,x))
 rm(n,nil) -> nil
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
