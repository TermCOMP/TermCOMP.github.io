YES

Problem 1: 

(VAR vu95NonEmpty A B X Y)
(THEORY 
(AC mult plus union))
(RULES
num0(z) -> z
and(tt,X) -> X
mult(num0(X),Y) -> num0(mult(X,Y))
mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
mult(z,X) -> z
plus(num0(X),num0(Y)) -> num0(plus(X,Y))
plus(num0(X),num1(Y)) -> num1(plus(X,Y))
plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
plus(z,X) -> X
prod(union(A,B)) -> mult(prod(A),prod(B))
prod(empty) -> num1(z)
prod(singl(X)) -> X
sum(union(A,B)) -> plus(sum(A),sum(B))
sum(empty) -> num0(z)
sum(singl(X)) -> X
union(empty,X) -> X
union(X,empty) -> X
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 MULT(num0(X),Y) -> NUM0(mult(X,Y))
 MULT(num0(X),Y) -> MULT(X,Y)
 MULT(mult(num0(X),Y),x5) -> NUM0(mult(X,Y))
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> NUM0(mult(X,Y))
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> PLUS(num0(mult(X,Y)),Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> NUM0(mult(X,Y))
 MULT(num1(X),Y) -> MULT(X,Y)
 MULT(num1(X),Y) -> PLUS(num0(mult(X,Y)),Y)
 PLUS(num0(X),num0(Y)) -> NUM0(plus(X,Y))
 PLUS(num0(X),num0(Y)) -> PLUS(X,Y)
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> NUM0(plus(X,Y))
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> NUM0(plus(plus(X,Y),num1(z)))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> NUM0(plus(plus(X,Y),num1(z)))
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
 PROD(union(A,B)) -> MULT(prod(A),prod(B))
 PROD(union(A,B)) -> PROD(A)
 PROD(union(A,B)) -> PROD(B)
 SUM(union(A,B)) -> PLUS(sum(A),sum(B))
 SUM(union(A,B)) -> SUM(A)
 SUM(union(A,B)) -> SUM(B)
 SUM(empty) -> NUM0(z)
 UNION(union(empty,X),x5) -> UNION(X,x5)
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)

Problem 1: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 MULT(num0(X),Y) -> NUM0(mult(X,Y))
 MULT(num0(X),Y) -> MULT(X,Y)
 MULT(mult(num0(X),Y),x5) -> NUM0(mult(X,Y))
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> NUM0(mult(X,Y))
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> PLUS(num0(mult(X,Y)),Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> NUM0(mult(X,Y))
 MULT(num1(X),Y) -> MULT(X,Y)
 MULT(num1(X),Y) -> PLUS(num0(mult(X,Y)),Y)
 PLUS(num0(X),num0(Y)) -> NUM0(plus(X,Y))
 PLUS(num0(X),num0(Y)) -> PLUS(X,Y)
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> NUM0(plus(X,Y))
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> NUM0(plus(plus(X,Y),num1(z)))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> NUM0(plus(plus(X,Y),num1(z)))
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
 PROD(union(A,B)) -> MULT(prod(A),prod(B))
 PROD(union(A,B)) -> PROD(A)
 PROD(union(A,B)) -> PROD(B)
 SUM(union(A,B)) -> PLUS(sum(A),sum(B))
 SUM(union(A,B)) -> SUM(A)
 SUM(union(A,B)) -> SUM(B)
 SUM(empty) -> NUM0(z)
 UNION(union(empty,X),x5) -> UNION(X,x5)
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UNION(union(empty,X),x5) -> UNION(X,x5)
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 UNION(union(x5,x6),x7) -> UNION(x5,union(x6,x7))
 UNION(x5,x6) -> UNION(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->->Cycle:
->->-> Pairs:
 PLUS(num0(X),num0(Y)) -> PLUS(X,Y)
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->->Cycle:
->->-> Pairs:
 SUM(union(A,B)) -> SUM(A)
 SUM(union(A,B)) -> SUM(B)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 MULT(num0(X),Y) -> MULT(X,Y)
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->->Cycle:
->->-> Pairs:
 PROD(union(A,B)) -> PROD(A)
 PROD(union(A,B)) -> PROD(B)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 UNION(union(empty,X),x5) -> UNION(X,x5)
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 0
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = 0
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = X1 + X2
[num1](X) = 0
[empty] = 2
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 2.X1 + 2.X2

Problem 1.1: 

SCC Processor:
-> FAxioms:
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 UNION(union(x5,x6),x7) -> UNION(x5,union(x6,x7))
 UNION(x5,x6) -> UNION(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 UNION(union(X,empty),x5) -> UNION(X,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 0
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = 0
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = X1 + X2 + 2
[num1](X) = 0
[empty] = 2
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 2.X1 + 2.X2

Problem 1.1: 

SCC Processor:
-> FAxioms:
 UNION(union(x5,x6),x7) = UNION(x5,union(x6,x7))
 UNION(x5,x6) = UNION(x6,x5)
-> Pairs:
 Empty
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 UNION(union(x5,x6),x7) -> UNION(x5,x6)
 UNION(x5,union(x6,x7)) -> UNION(x6,x7)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num0(X),num0(Y)) -> PLUS(X,Y)
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X + 1
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num0(X),num1(Y)) -> PLUS(X,Y)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 2.X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = 2.X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = X1 + X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(num0(plus(X,Y)),x5)
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X + 2
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num0(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X + 1
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(num1(plus(X,Y)),x5)
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X + 2
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num0(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 2.X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = 2.X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(num0(plus(plus(X,Y),num1(z))),x5)
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(plus(X,Y),num1(z))
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 1
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = X1 + X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(num1(X),num1(Y)),x5) -> PLUS(X,Y)
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(plus(z,X),x5) -> PLUS(X,x5)
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 1
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = X1 + X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(plus(x5,x6),x7) -> PLUS(x5,x6)
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 1
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = X1 + X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(plus(X,Y),num1(z))
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 2.X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = 2.X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 PLUS(plus(x5,x6),x7) -> PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) -> PLUS(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 PLUS(num1(X),num1(Y)) -> PLUS(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x5,x6),x7) = PLUS(x5,plus(x6,x7))
 PLUS(x5,x6) = PLUS(x6,x5)
-> Pairs:
 Empty
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 PLUS(x5,plus(x6,x7)) -> PLUS(x6,x7)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 SUM(union(A,B)) -> SUM(A)
 SUM(union(A,B)) -> SUM(B)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty
->Projection:
 pi(SUM) = [1]

Problem 1.3: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(num0(X),Y) -> MULT(X,Y)
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[num0](X) = X + 1
[and](X1,X2) = 0
[mult](X1,X2) = X1.X2 + X1 + X2
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = X1.X2 + X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num0(X),Y),x5) -> MULT(X,Y)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[num0](X) = X + 1
[and](X1,X2) = 0
[mult](X1,X2) = X1.X2 + X1 + X2
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = X1.X2 + X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(plus(num0(mult(X,Y)),Y),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = X1.X2 + X1 + X2
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 1
[NUM0](X) = 0
[MULT](X1,X2) = X1.X2 + X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(num1(X),Y),x5) -> MULT(X,Y)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = X1.X2 + X1 + X2
[plus](X1,X2) = X1 + X2
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 1
[NUM0](X) = 0
[MULT](X1,X2) = X1.X2 + X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
 MULT(num1(X),Y) -> MULT(X,Y)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[num0](X) = X
[and](X1,X2) = 0
[mult](X1,X2) = X1.X2 + X1 + X2
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = X + 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 0
[NUM0](X) = 0
[MULT](X1,X2) = X1.X2 + X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(num0(X),Y),x5) -> MULT(num0(mult(X,Y)),x5)
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 2
[and](X1,X2) = 0
[mult](X1,X2) = X1 + X2 + 2
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = 1
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 2
[NUM0](X) = 0
[MULT](X1,X2) = X1 + X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> FAxioms:
 mult(mult(x5,x6),x7) -> mult(x5,mult(x6,x7))
 mult(x5,x6) -> mult(x6,x5)
 plus(plus(x5,x6),x7) -> plus(x5,plus(x6,x7))
 plus(x5,x6) -> plus(x6,x5)
 union(union(x5,x6),x7) -> union(x5,union(x6,x7))
 union(x5,x6) -> union(x6,x5)
 MULT(mult(x5,x6),x7) -> MULT(x5,mult(x6,x7))
 MULT(x5,x6) -> MULT(x6,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
->->-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 MULT(mult(z,X),x5) -> MULT(z,x5)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Usable Equations:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> Usable Rules:
 num0(z) -> z
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0](X) = 2
[and](X1,X2) = 0
[mult](X1,X2) = X1 + X2 + 2
[plus](X1,X2) = X1 + X2 + 1
[prod](X) = 0
[sum](X) = 0
[union](X1,X2) = 0
[num1](X) = 2
[empty] = 0
[fSNonEmpty] = 0
[singl](X) = 0
[tt] = 0
[z] = 2
[NUM0](X) = 0
[MULT](X1,X2) = 2.X1 + 2.X2
[PLUS](X1,X2) = 0
[PROD](X) = 0
[SUM](X) = 0
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 MULT(mult(x5,x6),x7) = MULT(x5,mult(x6,x7))
 MULT(x5,x6) = MULT(x6,x5)
-> Pairs:
 Empty
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 MULT(mult(x5,x6),x7) -> MULT(x5,x6)
 MULT(x5,mult(x6,x7)) -> MULT(x6,x7)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 PROD(union(A,B)) -> PROD(A)
 PROD(union(A,B)) -> PROD(B)
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty
->Projection:
 pi(PROD) = [1]

Problem 1.5: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 mult(mult(x5,x6),x7) = mult(x5,mult(x6,x7))
 mult(x5,x6) = mult(x6,x5)
 plus(plus(x5,x6),x7) = plus(x5,plus(x6,x7))
 plus(x5,x6) = plus(x6,x5)
 union(union(x5,x6),x7) = union(x5,union(x6,x7))
 union(x5,x6) = union(x6,x5)
-> Rules:
 num0(z) -> z
 and(tt,X) -> X
 mult(num0(X),Y) -> num0(mult(X,Y))
 mult(num1(X),Y) -> plus(num0(mult(X,Y)),Y)
 mult(z,X) -> z
 plus(num0(X),num0(Y)) -> num0(plus(X,Y))
 plus(num0(X),num1(Y)) -> num1(plus(X,Y))
 plus(num1(X),num1(Y)) -> num0(plus(plus(X,Y),num1(z)))
 plus(z,X) -> X
 prod(union(A,B)) -> mult(prod(A),prod(B))
 prod(empty) -> num1(z)
 prod(singl(X)) -> X
 sum(union(A,B)) -> plus(sum(A),sum(B))
 sum(empty) -> num0(z)
 sum(singl(X)) -> X
 union(empty,X) -> X
 union(X,empty) -> X
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
