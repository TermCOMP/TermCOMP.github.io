YES

Problem 1: 

(VAR vu95NonEmpty h i u v x y)
(THEORY 
(AC or)
(C eq))
(RULES
eq(num0,num0) -> ftrue
eq(num0,s(x)) -> ffalse
eq(s(x),num0) -> ffalse
eq(s(x),s(y)) -> eq(x,y)
ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
or(ffalse,y) -> y
or(ftrue,y) -> ftrue
reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
reach(x,y,empty,h) -> ffalse
union(edge(x,y,i),h) -> edge(x,y,union(i,h))
union(empty,h) -> h
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 EQ(x7,x8) = EQ(x8,x7)
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> EQ(y,v)
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> OR(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> UNION(i,h)
 OR(or(ffalse,y),x7) -> OR(y,x7)
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
 REACH(x,y,edge(u,v,i),h) -> EQ(x,u)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)

Problem 1: 

SCC Processor:
-> FAxioms:
 EQ(x7,x8) = EQ(x8,x7)
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> EQ(y,v)
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> OR(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> UNION(i,h)
 OR(or(ffalse,y),x7) -> OR(y,x7)
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
 REACH(x,y,edge(u,v,i),h) -> EQ(x,u)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 OR(or(ffalse,y),x7) -> OR(y,x7)
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
 OR(or(x7,x8),x9) -> OR(x7,or(x8,x9))
 OR(x7,x8) -> OR(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->->Cycle:
->->-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
 EQ(x7,x8) -> EQ(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Projection:
 pi(UNION) = [1]

Problem 1.1: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 OR(or(ffalse,y),x7) -> OR(y,x7)
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Usable Equations:
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> Usable Rules:
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 0
[ifu95reachu951](X1,X2,X3,X4,X5) = 0
[ifu95reachu952](X1,X2,X3,X4,X5) = 0
[or](X1,X2) = X1 + X2 + 1
[reach](X1,X2,X3,X4) = 0
[union](X1,X2) = 0
[num0] = 0
[edge](X1,X2,X3) = 0
[empty] = 0
[fSNonEmpty] = 0
[ffalse] = 1
[s](X) = 0
[ftrue] = 1
[EQ](X1,X2) = 0
[IFU95REACHU951](X1,X2,X3,X4,X5) = 0
[IFU95REACHU952](X1,X2,X3,X4,X5) = 0
[OR](X1,X2) = X1 + X2
[REACH](X1,X2,X3,X4) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
 OR(or(x7,x8),x9) -> OR(x7,or(x8,x9))
 OR(x7,x8) -> OR(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 OR(or(ftrue,y),x7) -> OR(ftrue,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Usable Equations:
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> Usable Rules:
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 0
[ifu95reachu951](X1,X2,X3,X4,X5) = 0
[ifu95reachu952](X1,X2,X3,X4,X5) = 0
[or](X1,X2) = X1 + X2 + 2
[reach](X1,X2,X3,X4) = 0
[union](X1,X2) = 0
[num0] = 0
[edge](X1,X2,X3) = 0
[empty] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 0
[ftrue] = 2
[EQ](X1,X2) = 0
[IFU95REACHU951](X1,X2,X3,X4,X5) = 0
[IFU95REACHU952](X1,X2,X3,X4,X5) = 0
[OR](X1,X2) = 2.X1 + 2.X2
[REACH](X1,X2,X3,X4) = 0
[UNION](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x7,x8),x9) = OR(x7,or(x8,x9))
 OR(x7,x8) = OR(x8,x7)
-> Pairs:
 Empty
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 OR(or(x7,x8),x9) -> OR(x7,x8)
 OR(x7,or(x8,x9)) -> OR(x8,x9)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> FAxioms:
 EQ(x7,x8) = EQ(x8,x7)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Projection:
 pi(EQ) = [1,2]

Problem 1.3: 

SCC Processor:
-> FAxioms:
 EQ(x7,x8) = EQ(x8,x7)
-> Pairs:
 Empty
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 Empty
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Usable Equations:
 eq(x7,x8) = eq(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 2.X1 + 2.X2 + 2
[ifu95reachu951](X1,X2,X3,X4,X5) = 0
[ifu95reachu952](X1,X2,X3,X4,X5) = 0
[or](X1,X2) = 0
[reach](X1,X2,X3,X4) = 0
[union](X1,X2) = X1 + X2
[num0] = 2
[edge](X1,X2,X3) = X3 + 2
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 2
[s](X) = 2.X + 1
[ftrue] = 1
[EQ](X1,X2) = 0
[IFU95REACHU951](X1,X2,X3,X4,X5) = 2.X3 + 2.X4 + 2.X5 + 2
[IFU95REACHU952](X1,X2,X3,X4,X5) = 2.X3 + 2.X4 + 2.X5 + 1
[OR](X1,X2) = 0
[REACH](X1,X2,X3,X4) = 2.X2 + 2.X3 + 2.X4 + 2
[UNION](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> FAxioms:
 eq(x7,x8) -> eq(x8,x7)
 or(or(x7,x8),x9) -> or(x7,or(x8,x9))
 or(x7,x8) -> or(x8,x7)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty

Problem 1.4: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Projection:
 pi(IFU95REACHU951) = [4]
 pi(REACH) = [3]

Problem 1.4: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> EAxioms:
 eq(x7,x8) = eq(x8,x7)
 or(or(x7,x8),x9) = or(x7,or(x8,x9))
 or(x7,x8) = or(x8,x7)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
