YES

Problem 1: 

(VAR vu95NonEmpty x xs y)
(THEORY 
(AC plus))
(RULES
S(cons(x,xs)) -> plus(x,S(xs))
S(nil) -> num0
int(num0,num0) -> cons(num0,nil)
int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
int(s(x),num0) -> nil
int(s(x),s(y)) -> intlist(int(x,y))
intlist(cons(x,y)) -> cons(s(x),intlist(y))
intlist(nil) -> nil
plus(x,num0) -> x
plus(x,s(y)) -> s(plus(x,y))
sum(x,y) -> S(int(x,y))
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 SSharp(cons(x,xs)) -> SSharp(xs)
 SSharp(cons(x,xs)) -> PLUS(x,S(xs))
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
 INT(s(x),s(y)) -> INTLIST(int(x,y))
 INTLIST(cons(x,y)) -> INTLIST(y)
 PLUS(plus(x,num0),x4) -> PLUS(x,x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
 SUM(x,y) -> SSharp(int(x,y))
 SUM(x,y) -> INT(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)

Problem 1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 SSharp(cons(x,xs)) -> SSharp(xs)
 SSharp(cons(x,xs)) -> PLUS(x,S(xs))
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
 INT(s(x),s(y)) -> INTLIST(int(x,y))
 INTLIST(cons(x,y)) -> INTLIST(y)
 PLUS(plus(x,num0),x4) -> PLUS(x,x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
 SUM(x,y) -> SSharp(int(x,y))
 SUM(x,y) -> INT(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(x,num0),x4) -> PLUS(x,x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
 PLUS(plus(x4,x5),x6) -> PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) -> PLUS(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->->Cycle:
->->-> Pairs:
 INTLIST(cons(x,y)) -> INTLIST(y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 SSharp(cons(x,xs)) -> SSharp(xs)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,num0),x4) -> PLUS(x,x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Usable Equations:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> Usable Rules:
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[S](X) = 0
[int](X1,X2) = 0
[intlist](X) = 0
[plus](X1,X2) = X1 + X2 + 2
[sum](X1,X2) = 0
[num0] = 2
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[SSharp](X) = 0
[INT](X1,X2) = 0
[INTLIST](X) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[SUM](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
 PLUS(plus(x4,x5),x6) -> PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) -> PLUS(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(plus(x,s(y)),x4) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Usable Equations:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> Usable Rules:
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[S](X) = 0
[int](X1,X2) = 0
[intlist](X) = 0
[plus](X1,X2) = X1 + X2 + 2
[sum](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[SSharp](X) = 0
[INT](X1,X2) = 0
[INTLIST](X) = 0
[PLUS](X1,X2) = X1 + X2
[SUM](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
 PLUS(plus(x4,x5),x6) -> PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) -> PLUS(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Usable Equations:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> Usable Rules:
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x4,x5),x6) -> PLUS(x4,x5)
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[S](X) = 0
[int](X1,X2) = 0
[intlist](X) = 0
[plus](X1,X2) = X1 + X2 + 2
[sum](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[SSharp](X) = 0
[INT](X1,X2) = 0
[INTLIST](X) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[SUM](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
 PLUS(plus(x4,x5),x6) -> PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) -> PLUS(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
 PLUS(x,s(y)) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Usable Equations:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> Usable Rules:
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[S](X) = 0
[int](X1,X2) = 0
[intlist](X) = 0
[plus](X1,X2) = X1 + X2 + 2
[sum](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[SSharp](X) = 0
[INT](X1,X2) = 0
[INTLIST](X) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[SUM](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
-> FAxioms:
 plus(plus(x4,x5),x6) -> plus(x4,plus(x5,x6))
 plus(x4,x5) -> plus(x5,x4)
 PLUS(plus(x4,x5),x6) -> PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) -> PLUS(x5,x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
->->-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 PLUS(plus(x,s(y)),x4) -> PLUS(s(plus(x,y)),x4)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Usable Equations:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> Usable Rules:
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[S](X) = 0
[int](X1,X2) = 0
[intlist](X) = 0
[plus](X1,X2) = X1 + X2 + 1
[sum](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2
[SSharp](X) = 0
[INT](X1,X2) = 0
[INTLIST](X) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[SUM](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x4,x5),x6) = PLUS(x4,plus(x5,x6))
 PLUS(x4,x5) = PLUS(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 PLUS(x4,plus(x5,x6)) -> PLUS(x5,x6)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 INTLIST(cons(x,y)) -> INTLIST(y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Projection:
 pi(INTLIST) = [1]

Problem 1.2: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Projection:
 pi(INT) = [2]

Problem 1.3: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 SSharp(cons(x,xs)) -> SSharp(xs)
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Projection:
 pi(SSharp) = [1]

Problem 1.4: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x4,x5),x6) = plus(x4,plus(x5,x6))
 plus(x4,x5) = plus(x5,x4)
-> Rules:
 S(cons(x,xs)) -> plus(x,S(xs))
 S(nil) -> num0
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 sum(x,y) -> S(int(x,y))
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
