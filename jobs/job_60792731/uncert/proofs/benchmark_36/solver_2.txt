YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(THEORY 
(AC and or)
(C eq neq))
(RULES
and(x,or(x,y)) -> x
and(x,ffalse) -> ffalse
and(x,ftrue) -> x
and(x,x) -> x
eq(x,x) -> ftrue
neq(x,x) -> ffalse
not(and(x,y)) -> or(not(x),not(y))
not(eq(x,y)) -> neq(x,y)
not(neq(x,y)) -> eq(x,y)
not(not(x)) -> x
not(or(x,y)) -> and(not(x),not(y))
not(ffalse) -> ftrue
not(ftrue) -> ffalse
or(and(x,y),z) -> and(or(x,z),or(y,z))
or(x,ffalse) -> x
or(x,ftrue) -> ftrue
or(x,x) -> x
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
 EQ(x4,x5) = EQ(x5,x4)
 NEQ(x4,x5) = NEQ(x5,x4)
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 AND(and(x,or(x,y)),x4) -> AND(x,x4)
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(and(x,y)) -> OR(not(x),not(y))
 NOT(eq(x,y)) -> NEQ(x,y)
 NOT(neq(x,y)) -> EQ(x,y)
 NOT(or(x,y)) -> AND(not(x),not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
 OR(and(x,y),z) -> AND(or(x,z),or(y,z))
 OR(and(x,y),z) -> OR(x,z)
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> AND(or(x,z),or(y,z))
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1: 

SCC Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
 EQ(x4,x5) = EQ(x5,x4)
 NEQ(x4,x5) = NEQ(x5,x4)
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 AND(and(x,or(x,y)),x4) -> AND(x,x4)
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(and(x,y)) -> OR(not(x),not(y))
 NOT(eq(x,y)) -> NEQ(x,y)
 NOT(neq(x,y)) -> EQ(x,y)
 NOT(or(x,y)) -> AND(not(x),not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
 OR(and(x,y),z) -> AND(or(x,z),or(y,z))
 OR(and(x,y),z) -> OR(x,z)
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> AND(or(x,z),or(y,z))
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(and(x,or(x,y)),x4) -> AND(x,x4)
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 AND(and(x4,x5),x6) -> AND(x4,and(x5,x6))
 AND(x4,x5) -> AND(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->->Cycle:
->->-> Pairs:
 OR(and(x,y),z) -> OR(x,z)
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 Empty


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,or(x,y)),x4) -> AND(x,x4)
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 2.X1 + 2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 0
[AND](X1,X2) = 2.X1 + 2.X2
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 AND(and(x4,x5),x6) -> AND(x4,and(x5,x6))
 AND(x4,x5) -> AND(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,ffalse),x4) -> AND(ffalse,x4)
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 2
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 2.X1
[fSNonEmpty] = 0
[ffalse] = 2
[ftrue] = 0
[AND](X1,X2) = 2.X1 + 2.X2
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 AND(and(x4,x5),x6) -> AND(x4,and(x5,x6))
 AND(x4,x5) -> AND(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,ftrue),x4) -> AND(x,x4)
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[and](X1,X2) = X1 + X2
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 2.X1
[fSNonEmpty] = 0
[ffalse] = 2
[ftrue] = 2
[AND](X1,X2) = 2.X1 + 2.X2
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(and(x,x),x4) -> AND(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 AND(and(x4,x5),x6) -> AND(x4,and(x5,x6))
 AND(x4,x5) -> AND(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 AND(and(x,x),x4) -> AND(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 2
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 2.X1
[fSNonEmpty] = 0
[ffalse] = 2
[ftrue] = 0
[AND](X1,X2) = 2.X1 + 2.X2
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 AND(and(x4,x5),x6) = AND(x4,and(x5,x6))
 AND(x4,x5) = AND(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 AND(and(x4,x5),x6) -> AND(x4,x5)
 AND(x4,and(x5,x6)) -> AND(x5,x6)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(and(x,y),z) -> OR(x,z)
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = X1.X2 + X1 + X2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 1
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = X1.X2 + X1 + X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(and(x,y),z) -> OR(y,z)
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = X1.X2 + X1 + X2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 1
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = X1.X2 + X1 + X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(x,z)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = X1.X2 + X1 + X2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 1
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = X1.X2 + X1 + X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(and(x,y),z),x4) -> OR(y,z)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = X1.X2 + X1 + X2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 1
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = X1.X2 + X1 + X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ffalse),x4) -> OR(x,x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 1
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = X1.X2 + X1 + X2
[fSNonEmpty] = 0
[ffalse] = 1
[ftrue] = 1
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = X1.X2 + X1 + X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(and(x,y),z),x4) -> OR(and(or(x,z),or(y,z)),x4)
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 3
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 2
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 1
[fSNonEmpty] = 0
[ffalse] = 3/2
[ftrue] = 0
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(x,ftrue),x4) -> OR(ftrue,x4)
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 3
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 3
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 3/2.X1.X2 + 3/2.X1 + 3/2.X2 + 1/2
[fSNonEmpty] = 0
[ffalse] = 1/3
[ftrue] = 2
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 1/3.X1.X2 + 1/3.X1 + 1/3.X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 OR(or(x,x),x4) -> OR(x,x4)
-> FAxioms:
 and(and(x4,x5),x6) -> and(x4,and(x5,x6))
 and(x4,x5) -> and(x5,x4)
 eq(x4,x5) -> eq(x5,x4)
 neq(x4,x5) -> neq(x5,x4)
 or(or(x4,x5),x6) -> or(x4,or(x5,x6))
 or(x4,x5) -> or(x5,x4)
 OR(or(x4,x5),x6) -> OR(x4,or(x5,x6))
 OR(x4,x5) -> OR(x5,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
->->-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 OR(or(x,x),x4) -> OR(x,x4)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Usable Equations:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> Usable Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 3
->Interpretation:
 
[and](X1,X2) = X1 + X2 + 3/2
[eq](X1,X2) = 0
[neq](X1,X2) = 0
[not](X) = 0
[or](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 2
[ftrue] = 3/2
[AND](X1,X2) = 0
[EQ](X1,X2) = 0
[NEQ](X1,X2) = 0
[NOT](X) = 0
[OR](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2

Problem 1.2: 

SCC Processor:
-> FAxioms:
 OR(or(x4,x5),x6) = OR(x4,or(x5,x6))
 OR(x4,x5) = OR(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 OR(or(x4,x5),x6) -> OR(x4,x5)
 OR(x4,or(x5,x6)) -> OR(x5,x6)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 Empty
->Projection:
 pi(NOT) = [1]

Problem 1.3: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 and(and(x4,x5),x6) = and(x4,and(x5,x6))
 and(x4,x5) = and(x5,x4)
 eq(x4,x5) = eq(x5,x4)
 neq(x4,x5) = neq(x5,x4)
 or(or(x4,x5),x6) = or(x4,or(x5,x6))
 or(x4,x5) = or(x5,x4)
-> Rules:
 and(x,or(x,y)) -> x
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 eq(x,x) -> ftrue
 neq(x,x) -> ffalse
 not(and(x,y)) -> or(not(x),not(y))
 not(eq(x,y)) -> neq(x,y)
 not(neq(x,y)) -> eq(x,y)
 not(not(x)) -> x
 not(or(x,y)) -> and(not(x),not(y))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 or(and(x,y),z) -> and(or(x,z),or(y,z))
 or(x,ffalse) -> x
 or(x,ftrue) -> ftrue
 or(x,x) -> x
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
