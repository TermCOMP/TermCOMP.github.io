YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(THEORY 
(AC inter union)
(C eq))
(RULES
eq(num0,num0) -> ftrue
eq(num0,s(x)) -> ffalse
eq(s(x),s(y)) -> eq(x,y)
if(ffalse,x,y) -> y
if(ftrue,x,y) -> x
inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
inter(empty,x) -> empty
inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
union(empty,x) -> x
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 EQ(x4,x5) = EQ(x5,x4)
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
 UNION(union(x4,x5),x6) = UNION(x4,union(x5,x6))
 UNION(x4,x5) = UNION(x5,x4)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(union(y,z),x),x4) -> UNION(inter(x,y),inter(x,z))
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> EQ(x,y)
 INTER(inter(singl(x),singl(y)),x4) -> IF(eq(x,y),singl(x),empty)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
 INTER(union(y,z),x) -> UNION(inter(x,y),inter(x,z))
 INTER(singl(x),singl(y)) -> EQ(x,y)
 INTER(singl(x),singl(y)) -> IF(eq(x,y),singl(x),empty)
 UNION(union(empty,x),x4) -> UNION(x,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
 UNION(union(x4,x5),x6) -> UNION(x4,x5)
 UNION(x4,union(x5,x6)) -> UNION(x5,x6)

Problem 1: 

SCC Processor:
-> FAxioms:
 EQ(x4,x5) = EQ(x5,x4)
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
 UNION(union(x4,x5),x6) = UNION(x4,union(x5,x6))
 UNION(x4,x5) = UNION(x5,x4)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(union(y,z),x),x4) -> UNION(inter(x,y),inter(x,z))
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> EQ(x,y)
 INTER(inter(singl(x),singl(y)),x4) -> IF(eq(x,y),singl(x),empty)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
 INTER(union(y,z),x) -> UNION(inter(x,y),inter(x,z))
 INTER(singl(x),singl(y)) -> EQ(x,y)
 INTER(singl(x),singl(y)) -> IF(eq(x,y),singl(x),empty)
 UNION(union(empty,x),x4) -> UNION(x,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
 UNION(union(x4,x5),x6) -> UNION(x4,x5)
 UNION(x4,union(x5,x6)) -> UNION(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UNION(union(empty,x),x4) -> UNION(x,x4)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 UNION(union(x4,x5),x6) -> UNION(x4,union(x5,x6))
 UNION(x4,x5) -> UNION(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 UNION(union(x4,x5),x6) -> UNION(x4,x5)
 UNION(x4,union(x5,x6)) -> UNION(x5,x6)
->->Cycle:
->->-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 EQ(x4,x5) -> EQ(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 UNION(union(x4,x5),x6) = UNION(x4,union(x5,x6))
 UNION(x4,x5) = UNION(x5,x4)
-> Pairs:
 UNION(union(empty,x),x4) -> UNION(x,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 union(empty,x) -> x
-> SRules:
 UNION(union(x4,x5),x6) -> UNION(x4,x5)
 UNION(x4,union(x5,x6)) -> UNION(x5,x6)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 0
[if](X1,X2,X3) = 0
[inter](X1,X2) = 0
[union](X1,X2) = X1 + X2
[num0] = 0
[empty] = 2
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 0
[singl](X) = 0
[ftrue] = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = 0
[UNION](X1,X2) = 2.X1 + 2.X2

Problem 1.1: 

SCC Processor:
-> FAxioms:
 UNION(union(x4,x5),x6) = UNION(x4,union(x5,x6))
 UNION(x4,x5) = UNION(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 UNION(union(x4,x5),x6) -> UNION(x4,x5)
 UNION(x4,union(x5,x6)) -> UNION(x5,x6)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> FAxioms:
 EQ(x4,x5) = EQ(x5,x4)
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 Empty
->Projection:
 pi(EQ) = [1,2]

Problem 1.2: 

SCC Processor:
-> FAxioms:
 EQ(x4,x5) = EQ(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,y)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[eq](X1,X2) = 1
[if](X1,X2,X3) = X1.X2.X3 + X1.X2 + X1.X3
[inter](X1,X2) = X1.X2 + X1 + X2
[union](X1,X2) = X1 + X2 + 1
[num0] = 0
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 1
[s](X) = X + 1
[singl](X) = X.X + X + 1
[ftrue] = 1
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = X1.X2 + X1 + X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(union(y,z),x),x4) -> INTER(x,z)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[eq](X1,X2) = 1
[if](X1,X2,X3) = X1.X2 + X2.X3 + X3
[inter](X1,X2) = X1.X2 + X1 + X2
[union](X1,X2) = X1 + X2 + 1
[num0] = 1
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = X + 1
[singl](X) = X.X + X + 1
[ftrue] = 1
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = X1.X2 + X1 + X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(inter(singl(x),singl(y)),x4) -> INTER(if(eq(x,y),singl(x),empty),x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[eq](X1,X2) = X1.X2 + 1
[if](X1,X2,X3) = X1.X3 + X2
[inter](X1,X2) = X1.X2 + X1 + X2
[union](X1,X2) = X1 + X2 + 1
[num0] = 1
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 1
[s](X) = X + 1
[singl](X) = X.X + X + 1
[ftrue] = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = X1.X2 + X1 + X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,y)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[eq](X1,X2) = X1.X2 + X1 + X2 + 1
[if](X1,X2,X3) = X1 + X2 + X3
[inter](X1,X2) = X1.X2 + X1 + X2
[union](X1,X2) = X1 + X2 + 1
[num0] = 1
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 1
[s](X) = X + 1
[singl](X) = X.X + X + 1
[ftrue] = 1
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = X1.X2 + X1 + X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,z)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
 INTER(union(y,z),x) -> INTER(x,z)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 1
->Interpretation:
 
[eq](X1,X2) = X1.X2 + X1 + X2 + 1
[if](X1,X2,X3) = X1 + X2 + X3
[inter](X1,X2) = X1.X2 + X1 + X2
[union](X1,X2) = X1 + X2 + 1
[num0] = 1
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 1
[s](X) = X + 1
[singl](X) = X.X + X + 1
[ftrue] = 1
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = X1.X2 + X1 + X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(union(y,z),x),x4) -> INTER(union(inter(x,y),inter(x,z)),x4)
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 3
->Interpretation:
 
[eq](X1,X2) = 3
[if](X1,X2,X3) = 1/2.X1.X2.X3 + 2/3.X1.X2 + 2/3.X1.X3 + 2.X2.X3 + 3.X1 + 3.X3
[inter](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2 + 2
[union](X1,X2) = X1 + X2 + 3
[num0] = 0
[empty] = 0
[fSNonEmpty] = 0
[ffalse] = 3
[s](X) = 1
[singl](X) = 1
[ftrue] = 3/2
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> FAxioms:
 eq(x4,x5) -> eq(x5,x4)
 inter(inter(x4,x5),x6) -> inter(x4,inter(x5,x6))
 inter(x4,x5) -> inter(x5,x4)
 union(union(x4,x5),x6) -> union(x4,union(x5,x6))
 union(x4,x5) -> union(x5,x4)
 INTER(inter(x4,x5),x6) -> INTER(x4,inter(x5,x6))
 INTER(x4,x5) -> INTER(x5,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)

Problem 1.3: 

Reduction Pairs Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 INTER(inter(empty,x),x4) -> INTER(empty,x4)
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Usable Equations:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> Usable Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 3
->Interpretation:
 
[eq](X1,X2) = 3.X1 + 3.X2 + 2/3
[if](X1,X2,X3) = 2.X1.X3 + 1/2.X2.X3 + X2
[inter](X1,X2) = 3/2.X1.X2 + 3/2.X1 + 3/2.X2 + 1/2
[union](X1,X2) = X1 + X2 + 3
[num0] = 1
[empty] = 2
[fSNonEmpty] = 0
[ffalse] = 3
[s](X) = 3.X + 1/2
[singl](X) = 3.X + 3
[ftrue] = 3
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[INTER](X1,X2) = 3.X1.X2 + 3.X1 + 3.X2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> FAxioms:
 INTER(inter(x4,x5),x6) = INTER(x4,inter(x5,x6))
 INTER(x4,x5) = INTER(x5,x4)
-> Pairs:
 Empty
-> EAxioms:
 eq(x4,x5) = eq(x5,x4)
 inter(inter(x4,x5),x6) = inter(x4,inter(x5,x6))
 inter(x4,x5) = inter(x5,x4)
 union(union(x4,x5),x6) = union(x4,union(x5,x6))
 union(x4,x5) = union(x5,x4)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 inter(union(y,z),x) -> union(inter(x,y),inter(x,z))
 inter(empty,x) -> empty
 inter(singl(x),singl(y)) -> if(eq(x,y),singl(x),empty)
 union(empty,x) -> x
-> SRules:
 INTER(inter(x4,x5),x6) -> INTER(x4,x5)
 INTER(x4,inter(x5,x6)) -> INTER(x5,x6)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
