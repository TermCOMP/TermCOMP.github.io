YES

Problem 1: 

(VAR vu95NonEmpty k l x y z)
(THEORY 
(AC plus))
(RULES
app(cons(x,l),k) -> cons(x,app(l,k))
app(nil,k) -> k
app(l,nil) -> l
minus(minus(x,y),z) -> minus(x,plus(y,z))
minus(s(x),s(y)) -> minus(x,y)
minus(x,num0) -> x
plus(num0,y) -> y
plus(s(x),y) -> s(plus(x,y))
quot(num0,s(y)) -> num0
quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
sum(cons(x,nil)) -> cons(x,nil)
)


Problem 1: 

Dependency Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(minus(x,y),z) -> PLUS(y,z)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PLUS(plus(num0,y),x6) -> PLUS(y,x6)
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y)) -> MINUS(x,y)
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
 SUM(app(l,cons(x,cons(y,k)))) -> APP(l,sum(cons(x,cons(y,k))))
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(app(l,sum(cons(x,cons(y,k)))))
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(cons(x,cons(y,k)))
 SUM(cons(x,cons(y,l))) -> PLUS(x,y)
 SUM(cons(x,cons(y,l))) -> SUM(cons(plus(x,y),l))
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)

Problem 1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(minus(x,y),z) -> PLUS(y,z)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PLUS(plus(num0,y),x6) -> PLUS(y,x6)
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y)) -> MINUS(x,y)
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
 SUM(app(l,cons(x,cons(y,k)))) -> APP(l,sum(cons(x,cons(y,k))))
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(app(l,sum(cons(x,cons(y,k)))))
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(cons(x,cons(y,k)))
 SUM(cons(x,cons(y,l))) -> PLUS(x,y)
 SUM(cons(x,cons(y,l))) -> SUM(cons(plus(x,y),l))
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(num0,y),x6) -> PLUS(y,x6)
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
 PLUS(plus(x6,x7),x8) -> PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) -> PLUS(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->->Cycle:
->->-> Pairs:
 SUM(cons(x,cons(y,l))) -> SUM(cons(plus(x,y),l))
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(s(x),s(y)) -> MINUS(x,y)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->->Cycle:
->->-> Pairs:
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(app(l,sum(cons(x,cons(y,k)))))
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty


The problem is decomposed in 6 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(num0,y),x6) -> PLUS(y,x6)
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 2
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = X1 + X2
[QUOT](X1,X2) = 0
[SUM](X) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
 PLUS(plus(x6,x7),x8) -> PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) -> PLUS(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(plus(s(x),y),x6) -> PLUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[QUOT](X1,X2) = 0
[SUM](X) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
 PLUS(plus(x6,x7),x8) -> PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) -> PLUS(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 PLUS(plus(x6,x7),x8) -> PLUS(x6,x7)
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[QUOT](X1,X2) = 0
[SUM](X) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
 PLUS(plus(x6,x7),x8) -> PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) -> PLUS(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
 PLUS(s(x),y) -> PLUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 1
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[QUOT](X1,X2) = 0
[SUM](X) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
-> FAxioms:
 plus(plus(x6,x7),x8) -> plus(x6,plus(x7,x8))
 plus(x6,x7) -> plus(x7,x6)
 PLUS(plus(x6,x7),x8) -> PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) -> PLUS(x7,x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
->->-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)

Problem 1.1: 

Reduction Pairs Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 PLUS(plus(s(x),y),x6) -> PLUS(s(plus(x,y)),x6)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 2
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2
[QUOT](X1,X2) = 0
[SUM](X) = 0

Problem 1.1: 

SCC Processor:
-> FAxioms:
 PLUS(plus(x6,x7),x8) = PLUS(x6,plus(x7,x8))
 PLUS(x6,x7) = PLUS(x7,x6)
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 PLUS(x6,plus(x7,x8)) -> PLUS(x7,x8)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> FAxioms:
 Empty
-> Pairs:
 SUM(cons(x,cons(y,l))) -> SUM(cons(plus(x,y),l))
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[SUM](X) = X

Problem 1.2: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(s(x),s(y)) -> MINUS(x,y)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Projection:
 pi(MINUS) = [1]

Problem 1.3: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pairs Processor:
-> FAxioms:
 Empty
-> Pairs:
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
-> SRules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = 0
[minus](X1,X2) = X1 + 1
[plus](X1,X2) = X1 + X2 + 1
[quot](X1,X2) = 0
[sum](X) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nil] = 0
[s](X) = X + 2
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2) = 2.X1
[SUM](X) = 0

Problem 1.4: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> FAxioms:
 Empty
-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Projection:
 pi(APP) = [1]

Problem 1.5: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Reduction Pairs Processor:
-> FAxioms:
 Empty
-> Pairs:
 SUM(app(l,cons(x,cons(y,k)))) -> SUM(app(l,sum(cons(x,cons(y,k)))))
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Usable Equations:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[app](X1,X2) = X1 + 2.X2
[minus](X1,X2) = 0
[plus](X1,X2) = X1 + X2 + 2
[quot](X1,X2) = 0
[sum](X) = 2
[num0] = 0
[cons](X1,X2) = X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 1
[APP](X1,X2) = 0
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[SUM](X) = 2.X

Problem 1.6: 

SCC Processor:
-> FAxioms:
 Empty
-> Pairs:
 Empty
-> EAxioms:
 plus(plus(x6,x7),x8) = plus(x6,plus(x7,x8))
 plus(x6,x7) = plus(x7,x6)
-> Rules:
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
 sum(app(l,cons(x,cons(y,k)))) -> sum(app(l,sum(cons(x,cons(y,k)))))
 sum(cons(x,cons(y,l))) -> sum(cons(plus(x,y),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> SRules:
 Empty
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
