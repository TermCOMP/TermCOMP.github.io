YES

Problem 1: 

(VAR vu95NonEmpty x)
(RULES
A -> h(f(a),f(b))
a -> d
a -> e
b -> d
b -> e
f(x) -> x | x ->* d
g(d,e) -> A
h(x,x) -> g(x,x)
)


Problem 1: 
Valid CTRS Processor:
-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)
-> The system is a 2-CTRS.

Problem 1: 
-> Pairs:
 ASharp -> aSharp
 ASharp -> B
 ASharp -> F(a)
 ASharp -> F(b)
 ASharp -> H(f(a),f(b))
 G(d,e) -> ASharp
 H(x,x) -> G(x,x)
-> QPairs:
 Empty
-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)

Problem 1: 

SCC Processor:
-> Pairs:
 ASharp -> aSharp
 ASharp -> B
 ASharp -> F(a)
 ASharp -> F(b)
 ASharp -> H(f(a),f(b))
 G(d,e) -> ASharp
 H(x,x) -> G(x,x)
-> QPairs:
 Empty
-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ASharp -> H(f(a),f(b))
 G(d,e) -> ASharp
 H(x,x) -> G(x,x)
-> QPairs:
 Empty
->->-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)

Problem 1: 

Semantic Removal Triple Processor:
-> Pairs:
 ASharp -> H(f(a),f(b))
 G(d,e) -> ASharp
 H(x,x) -> G(x,x)
-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)
-> Needed rules:
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
-> Usable rules:
 Empty
->Mace4 Output:
 ============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 64 was started by ff862203 on n23m0003.hpc.itc.rwth-aachen.de,
Mon Aug 18 14:16:20 2025
The command was "./mace4 -c -f /tmp/mace421-11.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /tmp/mace421-11.in

assign(max_seconds,20).

formulas(assumptions).
arrowStar_s0(x,x) # label(reflexivity).
arrow_s0(x,y) & arrowStar_s0(y,z) -> arrowStar_s0(x,z) # label(compatibility).
gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility).
arrow_s0(x1,y) -> arrow_s0(f5(x1),f5(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f6(x1,x2),f6(y,x2)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f6(x1,x2),f6(x1,y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f7(x1,x2),f7(y,x2)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f7(x1,x2),f7(x1,y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f19(x1,x2),f19(y,x2)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f19(x1,x2),f19(x1,y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f5(x1),f5(y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f6(x1,x2),f6(y,x2)) # label(congruence).
arrowN_s0(x2,y) -> arrowN_s0(f6(x1,x2),f6(x1,y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f7(x1,x2),f7(y,x2)) # label(congruence).
arrowN_s0(x2,y) -> arrowN_s0(f7(x1,x2),f7(x1,y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f16(x1),f16(y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f17(x1,x2),f17(y,x2)) # label(congruence).
arrowN_s0(x2,y) -> arrowN_s0(f17(x1,x2),f17(x1,y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f18(x1,x2),f18(y,x2)) # label(congruence).
arrowN_s0(x2,y) -> arrowN_s0(f18(x1,x2),f18(x1,y)) # label(congruence).
arrowN_s0(x1,y) -> arrowN_s0(f19(x1,x2),f19(y,x2)) # label(congruence).
arrowN_s0(x2,y) -> arrowN_s0(f19(x1,x2),f19(x1,y)) # label(congruence).
arrow_s0(f19(x2,x3),x2) # label(replacement).
arrow_s0(f19(x2,x3),x3) # label(replacement).
arrowN_s0(f3,f8) # label(replacement).
arrowN_s0(f3,f9) # label(replacement).
arrowN_s0(f4,f8) # label(replacement).
arrowN_s0(f4,f9) # label(replacement).
arrowStar_s0(x1,f8) -> arrowN_s0(f5(x1),x1) # label(replacement).
arrowN_s0(f19(x2,x3),x2) # label(replacement).
arrowN_s0(f19(x2,x3),x3) # label(replacement).
arrowN_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f13,f18(f5(f3),f5(f4))) # label(replacement).
succeq_s0(f17(f8,f9),f13) # label(replacement).
succeq_s0(f18(x1,x1),f17(x1,x1)) # label(replacement).
sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion).
sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility).
end_of_list.

formulas(goals).
(exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 arrow_s0(x,y) & arrowStar_s0(y,z) -> arrowStar_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
2 gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
3 succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
4 gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
5 arrow_s0(x1,y) -> arrow_s0(f5(x1),f5(y)) # label(congruence) # label(non_clause).  [assumption].
6 arrow_s0(x1,y) -> arrow_s0(f6(x1,x2),f6(y,x2)) # label(congruence) # label(non_clause).  [assumption].
7 arrow_s0(x2,y) -> arrow_s0(f6(x1,x2),f6(x1,y)) # label(congruence) # label(non_clause).  [assumption].
8 arrow_s0(x1,y) -> arrow_s0(f7(x1,x2),f7(y,x2)) # label(congruence) # label(non_clause).  [assumption].
9 arrow_s0(x2,y) -> arrow_s0(f7(x1,x2),f7(x1,y)) # label(congruence) # label(non_clause).  [assumption].
10 arrow_s0(x1,y) -> arrow_s0(f19(x1,x2),f19(y,x2)) # label(congruence) # label(non_clause).  [assumption].
11 arrow_s0(x2,y) -> arrow_s0(f19(x1,x2),f19(x1,y)) # label(congruence) # label(non_clause).  [assumption].
12 arrowN_s0(x1,y) -> arrowN_s0(f5(x1),f5(y)) # label(congruence) # label(non_clause).  [assumption].
13 arrowN_s0(x1,y) -> arrowN_s0(f6(x1,x2),f6(y,x2)) # label(congruence) # label(non_clause).  [assumption].
14 arrowN_s0(x2,y) -> arrowN_s0(f6(x1,x2),f6(x1,y)) # label(congruence) # label(non_clause).  [assumption].
15 arrowN_s0(x1,y) -> arrowN_s0(f7(x1,x2),f7(y,x2)) # label(congruence) # label(non_clause).  [assumption].
16 arrowN_s0(x2,y) -> arrowN_s0(f7(x1,x2),f7(x1,y)) # label(congruence) # label(non_clause).  [assumption].
17 arrowN_s0(x1,y) -> arrowN_s0(f16(x1),f16(y)) # label(congruence) # label(non_clause).  [assumption].
18 arrowN_s0(x1,y) -> arrowN_s0(f17(x1,x2),f17(y,x2)) # label(congruence) # label(non_clause).  [assumption].
19 arrowN_s0(x2,y) -> arrowN_s0(f17(x1,x2),f17(x1,y)) # label(congruence) # label(non_clause).  [assumption].
20 arrowN_s0(x1,y) -> arrowN_s0(f18(x1,x2),f18(y,x2)) # label(congruence) # label(non_clause).  [assumption].
21 arrowN_s0(x2,y) -> arrowN_s0(f18(x1,x2),f18(x1,y)) # label(congruence) # label(non_clause).  [assumption].
22 arrowN_s0(x1,y) -> arrowN_s0(f19(x1,x2),f19(y,x2)) # label(congruence) # label(non_clause).  [assumption].
23 arrowN_s0(x2,y) -> arrowN_s0(f19(x1,x2),f19(x1,y)) # label(congruence) # label(non_clause).  [assumption].
24 arrowStar_s0(x1,f8) -> arrowN_s0(f5(x1),x1) # label(replacement) # label(non_clause).  [assumption].
25 arrowN_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
26 sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
27 sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
28 (exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
arrowStar_s0(x,x) # label(reflexivity).
-arrow_s0(x,y) | -arrowStar_s0(y,z) | arrowStar_s0(x,z) # label(compatibility).
-gtrsim_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-succeq_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-gtrsim_s0(x,y) | -succeq_s0(y,z) | gtrsim_s0(x,z) # label(compatibility).
-arrow_s0(x,y) | arrow_s0(f5(x),f5(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f6(x,z),f6(y,z)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f6(z,x),f6(z,y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f7(x,z),f7(y,z)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f7(z,x),f7(z,y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f19(x,z),f19(y,z)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f19(z,x),f19(z,y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f5(x),f5(y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f6(x,z),f6(y,z)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f6(z,x),f6(z,y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f7(x,z),f7(y,z)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f7(z,x),f7(z,y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f16(x),f16(y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f17(x,z),f17(y,z)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f17(z,x),f17(z,y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f18(x,z),f18(y,z)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f18(z,x),f18(z,y)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f19(x,z),f19(y,z)) # label(congruence).
-arrowN_s0(x,y) | arrowN_s0(f19(z,x),f19(z,y)) # label(congruence).
arrow_s0(f19(x,y),x) # label(replacement).
arrow_s0(f19(x,y),y) # label(replacement).
arrowN_s0(f3,f8) # label(replacement).
arrowN_s0(f3,f9) # label(replacement).
arrowN_s0(f4,f8) # label(replacement).
arrowN_s0(f4,f9) # label(replacement).
-arrowStar_s0(x,f8) | arrowN_s0(f5(x),x) # label(replacement).
arrowN_s0(f19(x,y),x) # label(replacement).
arrowN_s0(f19(x,y),y) # label(replacement).
-arrowN_s0(x,y) | gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f13,f18(f5(f3),f5(f4))) # label(replacement).
succeq_s0(f17(f8,f9),f13) # label(replacement).
succeq_s0(f18(x,x),f17(x,x)) # label(replacement).
-sqsupset_s0(x,y) | sqsupsetStar_s0(x,y) # label(inclusion).
-sqsupset_s0(x,y) | -sqsupsetStar_s0(y,z) | sqsupsetStar_s0(x,z) # label(compatibility).
-sqsupsetStar_s0(x,x) # label(wellfoundedness).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.04 seconds).
Ground clauses: seen=218, kept=214.
Selections=15816, assignments=31631, propagations=31961, current_models=0.
Rewrite_terms=269036, rewrite_bools=290739, indexes=31506.
Rules_from_neg_clauses=18996, cross_offs=18996.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== MODEL =================================

interpretation( 3, [number=1, seconds=0], [

        function(f13, [ 0 ]),

        function(f3, [ 0 ]),

        function(f4, [ 0 ]),

        function(f8, [ 1 ]),

        function(f9, [ 0 ]),

        function(f16(_), [ 0, 0, 0 ]),

        function(f5(_), [ 1, 1, 2 ]),

        function(f17(_,_), [
			   0, 0, 0,
			   0, 1, 0,
			   0, 0, 0 ]),

        function(f18(_,_), [
			   0, 0, 0,
			   0, 1, 0,
			   0, 0, 0 ]),

        function(f19(_,_), [
			   2, 2, 2,
			   2, 1, 2,
			   2, 2, 2 ]),

        function(f6(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        function(f7(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        relation(arrowN_s0(_,_), [
			   1, 1, 0,
			   0, 1, 0,
			   1, 1, 1 ]),

        relation(arrowStar_s0(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   1, 1, 1 ]),

        relation(arrow_s0(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   1, 1, 1 ]),

        relation(gtrsim_s0(_,_), [
			   1, 1, 0,
			   0, 1, 0,
			   1, 1, 1 ]),

        relation(sqsupsetStar_s0(_,_), [
			   0, 1, 0,
			   0, 0, 0,
			   0, 1, 0 ]),

        relation(sqsupset_s0(_,_), [
			   0, 1, 0,
			   0, 0, 0,
			   0, 1, 0 ]),

        relation(succeq_s0(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.04 seconds).
Ground clauses: seen=666, kept=657.
Selections=69, assignments=113, propagations=599, current_models=1.
Rewrite_terms=2496, rewrite_bools=5851, indexes=191.
Rules_from_neg_clauses=152, cross_offs=404.

============================== end of statistics =====================

User_CPU=0.04, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 64 exit (max_models) Mon Aug 18 14:16:20 2025
The process finished Mon Aug 18 14:16:20 2025


Mace4 cooked interpretation:

% number = 1
% seconds = 0

% Interpretation of size 3

f13 = 0.

f3 = 0.

f4 = 0.

f8 = 1.

f9 = 0.

f16(0) = 0.
f16(1) = 0.
f16(2) = 0.

f5(0) = 1.
f5(1) = 1.
f5(2) = 2.

f17(0,0) = 0.
f17(0,1) = 0.
f17(0,2) = 0.
f17(1,0) = 0.
f17(1,1) = 1.
f17(1,2) = 0.
f17(2,0) = 0.
f17(2,1) = 0.
f17(2,2) = 0.

f18(0,0) = 0.
f18(0,1) = 0.
f18(0,2) = 0.
f18(1,0) = 0.
f18(1,1) = 1.
f18(1,2) = 0.
f18(2,0) = 0.
f18(2,1) = 0.
f18(2,2) = 0.

f19(0,0) = 2.
f19(0,1) = 2.
f19(0,2) = 2.
f19(1,0) = 2.
f19(1,1) = 1.
f19(1,2) = 2.
f19(2,0) = 2.
f19(2,1) = 2.
f19(2,2) = 2.

f6(0,0) = 0.
f6(0,1) = 0.
f6(0,2) = 0.
f6(1,0) = 0.
f6(1,1) = 0.
f6(1,2) = 0.
f6(2,0) = 0.
f6(2,1) = 0.
f6(2,2) = 0.

f7(0,0) = 0.
f7(0,1) = 0.
f7(0,2) = 0.
f7(1,0) = 0.
f7(1,1) = 0.
f7(1,2) = 0.
f7(2,0) = 0.
f7(2,1) = 0.
f7(2,2) = 0.

  arrowN_s0(0,0).
  arrowN_s0(0,1).
- arrowN_s0(0,2).
- arrowN_s0(1,0).
  arrowN_s0(1,1).
- arrowN_s0(1,2).
  arrowN_s0(2,0).
  arrowN_s0(2,1).
  arrowN_s0(2,2).

  arrowStar_s0(0,0).
- arrowStar_s0(0,1).
- arrowStar_s0(0,2).
- arrowStar_s0(1,0).
  arrowStar_s0(1,1).
- arrowStar_s0(1,2).
  arrowStar_s0(2,0).
  arrowStar_s0(2,1).
  arrowStar_s0(2,2).

  arrow_s0(0,0).
- arrow_s0(0,1).
- arrow_s0(0,2).
- arrow_s0(1,0).
  arrow_s0(1,1).
- arrow_s0(1,2).
  arrow_s0(2,0).
  arrow_s0(2,1).
  arrow_s0(2,2).

  gtrsim_s0(0,0).
  gtrsim_s0(0,1).
- gtrsim_s0(0,2).
- gtrsim_s0(1,0).
  gtrsim_s0(1,1).
- gtrsim_s0(1,2).
  gtrsim_s0(2,0).
  gtrsim_s0(2,1).
  gtrsim_s0(2,2).

- sqsupsetStar_s0(0,0).
  sqsupsetStar_s0(0,1).
- sqsupsetStar_s0(0,2).
- sqsupsetStar_s0(1,0).
- sqsupsetStar_s0(1,1).
- sqsupsetStar_s0(1,2).
- sqsupsetStar_s0(2,0).
  sqsupsetStar_s0(2,1).
- sqsupsetStar_s0(2,2).

- sqsupset_s0(0,0).
  sqsupset_s0(0,1).
- sqsupset_s0(0,2).
- sqsupset_s0(1,0).
- sqsupset_s0(1,1).
- sqsupset_s0(1,2).
- sqsupset_s0(2,0).
  sqsupset_s0(2,1).
- sqsupset_s0(2,2).

  succeq_s0(0,0).
- succeq_s0(0,1).
- succeq_s0(0,2).
- succeq_s0(1,0).
  succeq_s0(1,1).
- succeq_s0(1,2).
- succeq_s0(2,0).
- succeq_s0(2,1).
- succeq_s0(2,2).


Problem 1: 

SCC Processor:
-> Pairs:
 G(d,e) -> ASharp
 H(x,x) -> G(x,x)
-> QPairs:
 Empty
-> Rules:
 A -> h(f(a),f(b))
 a -> d
 a -> e
 b -> d
 b -> e
 f(x) -> x | x ->* d
 g(d,e) -> A
 h(x,x) -> g(x,x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
