NO

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
down(s(x)) -> down(x)
down(x) -> x
up(x) -> up(s(x))
up(x) -> x
)


Problem 1: 
Valid CTRS Processor:
-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x
-> The system is a 2-CTRS.

Problem 1: 
-> Pairs:
 DOWN(s(x)) -> DOWN(x)
 UP(x) -> UP(s(x))
-> QPairs:
 Empty
-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x

Problem 1: 

SCC Processor:
-> Pairs:
 DOWN(s(x)) -> DOWN(x)
 UP(x) -> UP(s(x))
-> QPairs:
 Empty
-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UP(x) -> UP(s(x))
-> QPairs:
 Empty
->->-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x
->->Cycle:
->->-> Pairs:
 DOWN(s(x)) -> DOWN(x)
-> QPairs:
 Empty
->->-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x

Problem 1: 

Infiniteness Processor:
-> Pairs:
 UP(x) -> UP(s(x))
-> QPairs:
 Empty
-> Rules:
 between(x,y,z) -> ftrue | up(x) ->* y, down(z) ->* y
 down(s(x)) -> down(x)
 down(x) -> x
 up(x) -> up(s(x))
 up(x) -> x
-> Pairs in cycle:
 UP(x) -> UP(s(x))

The problem is infinite.
