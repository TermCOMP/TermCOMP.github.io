YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
minus(x,num0) -> x
minus(x,s(y)) -> z | minus(x,y) ->* s(z)
)


Problem 1: 

Well-founded Relation Processor:
-> Rules:
 minus(x,num0) -> x
 minus(x,s(y)) -> z | minus(x,y) ->* s(z)
->AGES Output:
 
Model Results

System:
mod InTheory is
sort S .
sort Bool .


op _->*_ : S S -> Bool [m = 2] .
op _->_ : S S -> Bool [m = 2] .
op minus : S S -> S .
op num0 :  -> S .
op fSNonEmpty :  -> S .
op s : S -> S .
op sqsupset : S S -> Bool [wellfounded m = 1] .

endm


Property:
x ->R* x
x ->R y /\ y ->R* z => x ->R* z
x1 ->R y1 => minus(x1,x2) ->R minus(y1,x2)
x2 ->R y2 => minus(x1,x2) ->R minus(x1,y2)
x1 ->R y1 => s(x1) ->R s(y1)
minus(x,num0) ->R x
minus(x,y) ->R* s(z) => minus(x,s(y)) ->R z
x ->R y => sqsupset(x,y)

Results:


Domains:
S: |N

Function Interpretations:
|[fSNonEmpty]| = 1
|[minus(x_1_1:S,x_2_1:S)]| = 2.x_1_1:S + x_2_1:S
|[num0]| = 1
|[s(x_1_1:S)]| = 1 + x_1_1:S

Predicate Interpretations:
 x_1_1:S ->* x_2_1:S <=> ((1 + x_1_1:S >= x_2_1:S) /\ (x_1_1:S >= x_2_1:S))
 x_1_1:S -> x_2_1:S <=> ((x_1_1:S >= 1 + x_2_1:S) /\ (x_2_1:S >= 0))
sqsupset(x_1_1:S,x_2_1:S) <=> (2.x_1_1:S >= 1 + 2.x_2_1:S)

The problem is finite.
